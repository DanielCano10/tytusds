{"version":3,"sources":["Componentes/MenuItemsLineales.js","Componentes/MenuItemsOrdenamientos.js","Componentes/MenuItemsArboreas.js","Componentes/MenuItemsCompuesta.js","Componentes/MenuItemsNoLineales.js","Componentes/MenuItemsCodificacion.js","Componentes/Navbar.js","Componentes/Paginas/Home.js","Componentes/Paginas/Modelo/Lineales/ListaSimple/Nodo.js","Componentes/Paginas/Modelo/Lineales/ListaSimple/ListaSimple.js","Componentes/Paginas/ListaSE.js","Componentes/Paginas/Modelo/Lineales/ListaDoble/Nodo.js","Componentes/Paginas/Modelo/Lineales/ListaDoble/ListaDoble.js","Componentes/Paginas/ListaDE.js","Componentes/Paginas/Modelo/Lineales/ListaCircular/Nodo.js","Componentes/Paginas/Modelo/Lineales/ListaCircular/ListaCircular.js","Componentes/Paginas/ListaCSE.js","Componentes/Paginas/Modelo/Lineales/ListaCircularDoble/Nodo.js","Componentes/Paginas/Modelo/Lineales/ListaCircularDoble/ListaCDE.js","Componentes/Paginas/ListaCDE.js","Componentes/Paginas/Modelo/Lineales/Pila/Nodo.js","Componentes/Paginas/Modelo/Lineales/Pila/Stack.js","Componentes/Paginas/Pila.js","Componentes/Paginas/Modelo/Lineales/Cola/Nodo.js","Componentes/Paginas/Modelo/Lineales/Cola/EstructuraCola.js","Componentes/Paginas/Cola.js","Componentes/Paginas/Modelo/Lineales/ColaPrioridad/Nodo.js","Componentes/Paginas/ColaPrioridad.js","Componentes/Paginas/Modelo/Lineales/ColaPrioridad/ColaPrioridad.js","Componentes/Paginas/Burbuja.js","Componentes/Paginas/Modelo/Ordenamientos/OrBurbuja.js","Componentes/Paginas/Seleccion.js","Componentes/Paginas/Modelo/Ordenamientos/OrSeleccion.js","Componentes/Paginas/Insercion.js","Componentes/Paginas/Modelo/Ordenamientos/OrInsercion.js","Componentes/Paginas/Rapido.js","Componentes/Paginas/AVL.js","Componentes/Paginas/Arbolb.js","Componentes/Paginas/Arbolbplus.js","Componentes/Paginas/Arbolmerkle.js","Componentes/Paginas/Modelo/Compuesta/Major/RowColumnMajor.js","Componentes/Paginas/ColumnMajor.js","Componentes/Paginas/RowMajor.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/ListaCabeceraFilas.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/ListaCabeceraColumnas.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/ListaHorizontal.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/NodoCabeceraFila.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/ListaVertical.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/NodoCabeceraColumna.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/NodoOrtogonal.js","Componentes/Paginas/MatrizDispersa.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/MatrizOrtogonal.js","Componentes/Paginas/HashAbierta.js","Componentes/Paginas/Modelo/NoLineal/HashAbierta.js","Componentes/Paginas/HashCerrada.js","Componentes/Paginas/Modelo/NoLineal/HashCerrada.js","Componentes/Paginas/Modelo/Compuesta/EstructuraCompuesta/Nodo.js","Componentes/Paginas/Compuesta.js","Componentes/Paginas/Modelo/Compuesta/EstructuraCompuesta/Compuesta.js","Componentes/Paginas/Hamming.js","Componentes/Paginas/Modelo/Codificacion/Hamming/Hamming.js","Componentes/Paginas/Modelo/NoLineal/Grafo.js","Componentes/Paginas/GrafoProfundidad.js","Componentes/Paginas/GrafoAnchura.js","App.js","reportWebVitals.js","index.js"],"names":["MenuItemsLineales","title","path","cName","MenuItemsOrdenamientos","MenuItemsArboreas","MenuItemsCompuesta","MenuItemsNoLineales","MenuItemsCodificacion","Navbar","useState","setClick","className","href","id","data-bs-toggle","role","aria-haspopup","aria-expanded","map","item","index","to","onClick","Home","scope","Nodo","dato","this","siguiente","ListaSimple","cabeza","insertar","nodo_nuevo","get_vacia","set_cabeza","set_ultimo","get_ultimo","set_siguiente","insertar_inicio","get_cabeza","insertar_ultimo","eliminar","console","log","nodo_actual","get_siguiente","anterior","get_dato","update","cambio","set_dato","search","i","mostrar","setNodesDataSet","dot","push","label","setEdgesDataSet","nodoUno","parseInt","nodoDos","from","arrows","generateJSON","dic","toString","valores","dictstring","JSON","stringify","ultimo","listaSimple","getNodes","DataSet","getEdges","data","nodes","edge","options","physics","stabilization","barnesHut","springLength","borderWidth","color","background","border","highlight","ListaSE","props","handleFileChange","e","file","target","files","reader","FileReader","readAsText","onload","setState","fileName","name","fileContent","result","handleAdd","state","text","edges","network","Network","appRef","current","handleDelete","handleUpdate","dato_actualizado","handleAddTop","handleAddLower","handleSearch","add","value","handleOpenFile","dataJson","parse","categoria","nombre","length","alert","handleSaveFile","element","document","createElement","contenido","blob","Blob","URL","createObjectURL","download","body","appendChild","click","createRef","handleInputChange","bind","style","marginLeft","type","placeholder","onChange","class","min","max","step","defaultValue","height","ref","Component","ListaDoble","vacia","set_primero","set_anterior","get_primero","temp","get_anterior","print","primero","listaDoble","ListaDE","ListaCircular","size","listaCircular","ListaCSE","ListaCircularDE","valor","aux","Imprimir","etiqueta","listacde","ListaCDE","Stack","empty","pop","pila","Pila","nuevonodo","EstructuraCola","nodo","Desencolar","get_valor","set_valor","nodoactual","nodosiguiente","estructuracola","nodos","flechas","datos","Cola","AgregarDato","agregar","EliminarDato","ActualizarDato","BuscarDato","valoreliminar","valorbuscar","rango","prioridad","colaprioridad","Encolar","set_prioridad","salir","get_prioridad","Buscar","GenerarNodosDOT","GenerarEdgesDOT","ColaPrioridad","burbuja","array","ordenamiento_burbuja","j","Burbuja","handleOrdenamiento","marginRight","seleccion","ordenamiento_seleccion","Seleccion","insercion","ordenamiento_insercion","Insercion","Rapido","setRango","AVL","ArbolB","ArbolBPlus","ArbolMerkle","Major","matriz","arrreglo","get_i","set_i","get_j","set_j","InicializarMatriz","filas","columnas","auxfila","InsertarDato","ConvertirRowMajor","ConvertirColumnMajor","BuscarDatoRowMajor","fila","columna","indice","BuscarDatoColumnMajor","setData","dotNode","dotEdges","setDataNodes","contador","level","opacity","columnmajor","getNodes2","getEdges2","data2","shape","margin","widthConstraint","maximum","layout","hierarchical","direction","sortMethod","options2","MatrizColumnMajor","handleGenerate","filaingresar","columnaingresar","handleGenerar","appRef2","m","indices","opcion","tamanio","network2","rowmajor","MatrizRowMajor","ListaCabeceraFilas","nodoNuevo","setPrimero","setUltimo","getY","getPrimero","insertarInicio","getUltimo","insertarFinal","insertarMedio","setAnterior","setSiguiente","tmp1","tmp2","getSiguiente","getAnterior","delete","y","tmp","busqueda","ListaCabeceraColumnas","getX","x","ListaHorizontal","setIzquierda","setDerecha","getDerecha","getIzquierda","getDato","NodoCabeceraFila","antertior","ListaVertical","setArriba","setAbajo","getAbajo","getArriba","NodoCabeceraColumna","NodoOrtogonal","setDato","arriba","abajo","izquierda","derecha","matrizDispersa","getColumna","getFila","nodo_cabecera","getData","estado","String","getNodesDataSet","tempContador","auxNodoUno","auxNodoDos","desactivarEncabezado","json","setColumna","setFila","MatrizDispersa","textX","textY","posicionX","posicionY","forEach","posicion","handleCabecera","tablahash","insertados","ConvertirString","cadena","charCodeAt","ConvertirArreglo","arreglo","nuevoarreglo","InicializarArreglo","get_m","Capacidad","raro","get_sizearreglo","set_m","set_min","get_min","set_max","get_max","get_numarreglo","linea","FuncionDivision","k","FuncionSimple","reducido","retorno","Math","round","FuncionMultiplicacion","Rehashing","tipo","m_anterior","esono","InsertarDivision","InsertarMultiplicacion","InsertarSimple","valordivision","valorsimple","valormultiplicacion","EliminarSimple","auxarreglo","splice","EliminarDivision","EliminarMultiplicacion","BuscarSimple","segundoindice","BuscarDivision","BuscarMultiplicacion","Actualizar","nuevo","setDataSet","setDataSetBuscar","indicei","indicej","TablaHashAbierta","minimo","maximo","esentero","entero","isNaN","esentero2","entero2","funcion","FuncionAcomodarLineal","FuncionAcomodarCuadratica","FuncionAcomodarDoble","h1","h2","modo","nuevovalor","eliminado","encontrado","actualizado","TablaHashCerrada","prueba","getPrincipal","principal","setPrincipal","getSecundaria","secundaria","setSecundaria","compuesta","primaria","dato1","dato2","getPrimaria","setPrimaria","creatorPrimaria","creatorSecundaria","getLista","nodo_principal","getEstructuraPrimaria","nodo_secundario","getEstructuraSecundaria","lista","valor1","valor2","nodo1","nodo2","update1","update2","estructuraPrimaria","ListaCircularDoble","estructuraSecundaria","setEstructuraPrimaria","setEstructuraSecundaria","Compuesta","estructura1","estructura2","secundario","encodeHamming","encode","listaDatos","charAt","tempSize","tabla","Nivel","nivel","resultado","potencia","filaEncode","llenarTabla","saltos","moverse","nodoId","getNodeDataSet","Hamming","encodeText","handleEncode","Grafo","set_comienzo","comienzo","set_fin","fin","get_comienzo","get_fin","AgregarArista","inicio","distancia","vertices","Insertar","aristas","datoviejo","datonuevo","aristasnuevas","Eliminar","getDataSetNoDirigido","getDataSetDirigido","GenerarMatriz","ingreso","getDataSetMatriz","getDataSetLista","RecorridoProfundidad","ordencorrecto","auxiliar","shift","grafo","GrafoProfundidad","handleAgregarArista","origen","donde","handleRecorrer","handleBusqueda","handleLista","handleMatriz","actualizar","arista","aux1","aux2","vertice","almacenamiento","buscar","GrafoAnchura","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"uKAAaA,EAAoB,CAChC,CACCC,MAAM,6BACNC,KAAK,4BACLC,MAAM,iBAEP,CACCF,MAAM,4BACNC,KAAK,2BACLC,MAAM,iBAEP,CACCF,MAAM,sCACNC,KAAK,oCACLC,MAAM,iBAEP,CACCF,MAAM,qCACNC,KAAK,mCACLC,MAAM,iBAEP,CACCF,MAAM,OACNC,KAAK,QACLC,MAAM,iBAEP,CACCF,MAAM,OACNC,KAAK,QACLC,MAAM,iBAEP,CACCF,MAAM,oBACNC,KAAK,iBACLC,MAAM,kBClCKC,EAAyB,CACrC,CACCH,MAAM,UACNC,KAAK,WACLC,MAAM,iBAEP,CACCF,MAAM,YACNC,KAAK,aACLC,MAAM,iBAEP,CACCF,MAAM,YACNC,KAAK,aACLC,MAAM,iBAEP,CACCF,MAAM,SACNC,KAAK,UACLC,MAAM,kBCnBKE,EAAoB,CAChC,CACCJ,MAAM,4BACNC,KAAK,gBACLC,MAAM,iBAEP,CACCF,MAAM,MACNC,KAAK,OACLC,MAAM,iBAEP,CACCF,MAAM,UACNC,KAAK,UACLC,MAAM,iBAEP,CACCF,MAAM,WACNC,KAAK,cACLC,MAAM,iBAEP,CACCF,MAAM,kBACNC,KAAK,eACLC,MAAM,kBCxBKG,EAAqB,CACjC,CACCL,MAAM,kBACNC,KAAK,kBACLC,MAAM,iBAEP,CACCF,MAAM,qBACNC,KAAK,YACLC,MAAM,iBAEP,CACCF,MAAM,qBACNC,KAAK,eACLC,MAAM,iBAEP,CACCF,MAAM,yBACNC,KAAK,aACLC,MAAM,kBCnBKI,EAAsB,CAClC,CACCN,MAAM,qBACNC,KAAK,eACLC,MAAM,iBAEP,CACCF,MAAM,qBACNC,KAAK,eACLC,MAAM,iBAEP,CACCF,MAAM,6CACNC,KAAK,gBACLC,MAAM,iBAEP,CACCF,MAAM,iDACNC,KAAK,oBACLC,MAAM,iBAEP,CACCF,MAAM,8BACNC,KAAK,IACLC,MAAM,iBAEP,CACCF,MAAM,gCACNC,KAAK,IACLC,MAAM,kBC7BKK,EAAwB,CACpC,CACCP,MAAM,iBACNC,KAAK,WACLC,MAAM,iBAEP,CACCF,MAAM,uBACNC,KAAK,IACLC,MAAM,iBAEP,CACCF,MAAM,gBACNC,KAAK,IACLC,MAAM,iBAEP,CACCF,MAAM,kBACNC,KAAK,IACLC,MAAM,kB,qBCgGOM,MAxGf,WACC,MAA0BC,oBAAS,GAAnC,mBAAcC,GAAd,WACA,OACC,mCACC,qBAAKC,UAAU,8CAAf,SACM,sBAAKA,UAAU,kBAAf,UACC,mBAAGA,UAAU,eAAeC,KAAK,KAAjC,iCACA,qBAAKD,UAAU,2BAA2BE,GAAG,gBAA7C,SACG,qBAAIF,UAAU,qBAAd,UACE,qBAAIA,UAAU,oBAAd,UACG,mBAAGA,UAAU,2BAA2BG,iBAAe,WAAWC,KAAK,SAASC,gBAAc,OAAOC,gBAAc,QAAnH,kCACA,qBAAKN,UAAU,gBAAf,SACGZ,EAAkBmB,KAAI,SAACC,EAAMC,GAC7B,OACC,6BACC,cAAC,IAAD,CAAMT,UAAWQ,EAAKjB,MAAOmB,GAAIF,EAAKlB,KAAMqB,QAAS,kBAAMZ,GAAS,IAApE,SACES,EAAKnB,SAFCoB,WAShB,qBAAIT,UAAU,oBAAd,UACE,mBAAGA,UAAU,2BAA2BG,iBAAe,WAAWC,KAAK,SAASC,gBAAc,OAAOC,gBAAc,QAAnH,2BACA,qBAAKN,UAAU,gBAAf,SACGR,EAAuBe,KAAI,SAACC,EAAMC,GACjC,OACC,6BACC,cAAC,IAAD,CAAMT,UAAWQ,EAAKjB,MAAOmB,GAAIF,EAAKlB,KAAMqB,QAAS,kBAAMZ,GAAS,IAApE,SACES,EAAKnB,SAFCoB,WAShB,qBAAIT,UAAU,oBAAd,UACE,mBAAGA,UAAU,2BAA2BG,iBAAe,WAAWC,KAAK,SAASC,gBAAc,OAAOC,gBAAc,QAAnH,iCACA,qBAAKN,UAAU,gBAAf,SACGP,EAAkBc,KAAI,SAACC,EAAMC,GAC5B,OACC,6BACC,cAAC,IAAD,CAAMT,UAAWQ,EAAKjB,MAAOmB,GAAIF,EAAKlB,KAAMqB,QAAS,kBAAMZ,GAAS,IAApE,SACES,EAAKnB,SAFCoB,WAUhB,qBAAIT,UAAU,oBAAd,UACE,mBAAGA,UAAU,2BAA2BG,iBAAe,WAAWC,KAAK,SAASC,gBAAc,OAAOC,gBAAc,QAAnH,yBACA,qBAAKN,UAAU,gBAAf,SACGL,EAAoBY,KAAI,SAACC,EAAMC,GAC9B,OACC,6BACC,cAAC,IAAD,CAAMT,UAAWQ,EAAKjB,MAAOmB,GAAIF,EAAKlB,KAAMqB,QAAS,kBAAMZ,GAAS,IAApE,SACES,EAAKnB,SAFCoB,WAUhB,qBAAIT,UAAU,oBAAd,UACE,mBAAGA,UAAU,2BAA2BG,iBAAe,WAAWC,KAAK,SAASC,gBAAc,OAAOC,gBAAc,QAAnH,0BACA,qBAAKN,UAAU,gBAAf,SACGJ,EAAsBW,KAAI,SAACC,EAAMC,GAChC,OACC,6BACC,cAAC,IAAD,CAAMT,UAAWQ,EAAKjB,MAAOmB,GAAIF,EAAKlB,KAAMqB,QAAS,kBAAMZ,GAAS,IAApE,SACES,EAAKnB,SAFCoB,WAUhB,qBAAIT,UAAU,oBAAd,UACE,mBAAGA,UAAU,2BAA2BG,iBAAe,WAAWC,KAAK,SAASC,gBAAc,OAAOC,gBAAc,QAAnH,uBACA,qBAAKN,UAAU,gBAAf,SACGN,EAAmBa,KAAI,SAACC,EAAMC,GAC7B,OACC,6BACC,cAAC,IAAD,CAAMT,UAAWQ,EAAKjB,MAAOmB,GAAIF,EAAKlB,KAAMqB,QAAS,kBAAMZ,GAAS,IAApE,SACES,EAAKnB,SAFCoB,wBC9FhB,SAASG,IACvB,OACC,mCACC,uBAAOZ,UAAU,oBAAjB,SACG,gCACE,+BACC,oBAAIa,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACT,oBAAIA,MAAM,MAAV,SACC,sBAAKb,UAAU,yBAAf,UACF,qBAAKA,UAAU,YAAf,SAA2B,qBAAKA,UAAU,cAAf,SAA6B,mEACxD,qBAAKA,UAAU,YAAf,SACE,+BACK,6BAAI,sDACJ,+BACE,6BAAI,mBAAGC,KAAK,6BAAR,SAAqC,gEACzC,6BAAI,mBAAGA,KAAK,4BAAR,SAAoC,+DACxC,6BAAI,mBAAGA,KAAK,qCAAR,SAA6C,yEACjD,6BAAI,mBAAGA,KAAK,oCAAR,SAA4C,wEAChD,6BAAI,mBAAGA,KAAK,SAAR,SAAiB,0CACrB,6BAAI,mBAAGA,KAAK,SAAR,SAAiB,0CACrB,6BAAI,mBAAGA,KAAK,kBAAR,SAA0B,0DAEhC,6BAAI,iDACJ,+BACE,6BAAI,mBAAGA,KAAK,YAAR,SAAoB,6CACxB,6BAAI,mBAAGA,KAAK,cAAR,SAAsB,kDAC1B,6BAAI,mBAAGA,KAAK,cAAR,SAAsB,kDAC1B,6BAAI,mBAAGA,KAAK,WAAR,SAAmB,kDAEzB,6BAAI,2DACJ,+BACE,6BAAI,mBAAGA,KAAK,iBAAR,SAAyB,qEAC7B,6BAAI,mBAAGA,KAAK,QAAR,SAAgB,yCACpB,6BAAI,mBAAGA,KAAK,WAAR,SAAmB,gDACvB,6BAAI,mBAAGA,KAAK,eAAR,SAAuB,iDAC3B,6BAAI,mBAAGA,KAAK,gBAAR,SAAwB,qEAMpC,oBAAIY,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACX,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,iB,qDC/BJC,E,WAzBX,WAAYC,GAAO,oBACfC,KAAKC,UAAY,KACjBD,KAAKD,KAAOA,E,iDAKhB,WAEI,OAAOC,KAAKC,Y,2BAGhB,SAAcA,GACVD,KAAKC,UAAYA,I,sBAGrB,WACI,OAAOD,KAAKD,O,sBAGhB,SAASA,GACLC,KAAKD,KAAOA,M,KCoMLG,EArNX,aAAc,IAAD,gCAFbC,OAAS,KAEI,KAMbC,SAAW,SAACL,GACR,IAAIM,EAAa,IAAIP,EAAKC,GACF,GAApB,EAAKO,aACL,EAAKC,WAAWF,GAChB,EAAKG,WAAWH,KAGhB,EAAKI,aAAaC,cAAcL,GAChC,EAAKG,WAAWH,KAdX,KAoBbM,gBAAkB,SAACZ,GACf,IAAIM,EAAa,IAAIP,EAAKC,GAE1BM,EAAWK,cAAc,EAAKE,cAC9B,EAAKL,WAAWF,IAxBP,KA2BbQ,gBAAkB,SAACd,GACf,IAAIM,EAAa,IAAIP,EAAKC,GAC1B,EAAKU,aAAaC,cAAcL,GAChC,EAAKG,WAAWH,IA9BP,KAkCbS,SAAW,SAACf,GAER,GAAwB,GAApB,EAAKO,YAyBF,OAAOS,QAAQC,IAAI,UAvBtB,IAAIC,EAAc,EAAKL,aAAaM,gBAChCC,EAAW,EAAKP,aACpB,GAAI,EAAKA,aAAaQ,YAAcrB,EAEhC,OADA,EAAKQ,WAAW,EAAKK,aAAaM,iBAC3BH,QAAQC,IAAI,WAEnB,EAAG,CACC,GAAIC,EAAYG,YAAcrB,EAC1B,OAAIkB,EAAYG,YAAc,EAAKX,aAAaW,YAC5CD,EAAST,cAAc,MACvB,EAAKF,WAAWW,GACTJ,QAAQC,IAAI,aAEnBG,EAAST,cAAcO,EAAYC,iBAC5BH,QAAQC,IAAI,YAG3BC,EAAcA,EAAYC,gBAC1BC,EAAWA,EAASD,sBAEA,MAAfD,GAKjB,OAAOF,QAAQC,IAAI,oBA/DV,KAkEbK,OAAS,SAACtB,EAAMuB,GACZ,IAAIL,EAAc,EAAKL,aAEvB,GAAwB,GAApB,EAAKN,YAEL,EAAE,CACE,GAAIW,EAAYG,YAAcrB,EAE1B,OADAkB,EAAYM,SAASD,GACdP,QAAQC,IAAI,gBAEvBC,EAAcA,EAAYC,sBACR,MAAfD,GAEX,OAAOF,QAAQC,IAAI,oBA/EV,KAmFbQ,OAAS,SAACzB,GACN,IAAIkB,EAAc,EAAKL,aAEvB,GAAwB,GAApB,EAAKN,YAeL,OADAS,QAAQC,IAAI,WACL,EAdP,IAAIS,EAAI,EACR,EAAE,CAEE,GAAIR,EAAYG,YAAcrB,EAE1B,OADAgB,QAAQC,IAAI,eAAiBC,EAAYG,WAAW,cAAcK,GAC3DA,EAEXA,IACAR,EAAcA,EAAYC,sBAER,MAAfD,GASX,OADAF,QAAQC,IAAI,oBACL,GA1GE,KA6GbU,QAAU,WACN,IAAIT,EAAc,EAAKL,aACvB,GAAwB,GAApB,EAAKN,YAEL,GACIS,QAAQC,IAAIC,EAAYG,YACxBH,EAAcA,EAAYC,sBACN,MAAfD,IApHJ,KAwHbX,UAAY,WACR,OAAyB,MAArB,EAAKM,cAzHA,KAgIbe,gBAAkB,WAEd,IAAIV,EAAc,EAAKL,aACnBgB,EAAM,GACV,GAAwB,GAApB,EAAKtB,YAAqB,CAC1B,IAAImB,EAAI,EACR,GACRG,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOb,EAAYG,aACvBH,EAAcA,EAAYC,gBAC1BO,UACoB,MAAfR,GAGb,OAAOW,GA7IE,KAiJbG,gBAAkB,WAEd,IAAId,EAAc,EAAKL,aACnBgB,EAAM,GACV,GAAwB,GAApB,EAAKtB,YAAqB,CAC1B,IAAImB,EAAI,EACR,EAAG,CACC,GAAmC,MAA/BR,EAAYC,gBAAwB,CAEpC,IAAIc,EAAUC,SAASR,GACnBS,EAAUD,SAASD,GAAWC,SAAS,GACpC,GAAHR,GACAG,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG,EAAG0C,OAAQ,OAErB,GAAVJ,GAA8B,GAAXE,GACpBN,EAAIC,KAAK,CAACM,KAAKF,SAASD,GAAUtC,GAAGuC,SAASC,GAAUE,OAAQ,OAGxEnB,EAAcA,EAAYC,gBAC1BO,UACoB,MAAfR,GAGb,OAAOW,GAxKE,KA6KbS,aAAe,WAEX,IAAIC,EAAM,CAEVA,UAAgB,oBAChBA,OAAa,kFACTV,EAAM,GACV,GAAwB,GAApB,EAAKtB,YAAqB,CAC1B,IAAIW,EAAc,EAAKL,aACvB,GACmD,iBAArCqB,SAAShB,EAAYG,aAA6B,GAAKa,SAAShB,EAAYG,YAElFQ,EAAIC,KAAKI,SAAShB,EAAYG,aAEU,iBAA3BH,EAAYG,YAEzBQ,EAAIC,KAAKZ,EAAYG,WAAWmB,YAIpCtB,EAAcA,EAAYC,sBACR,MAAfD,GAEXqB,EAAIE,QAAUZ,EACdb,QAAQC,IAAIsB,GACZ,IAAIG,EAAaC,KAAKC,UAAUL,GAEhC,OADAvB,QAAQC,IAAIyB,GACLA,GAxME,KA+Mb7B,WAAa,WAAO,OAAO,EAAKT,QA/MnB,KAgNbI,WAAa,SAACJ,GAAY,EAAKA,OAASA,GAhN3B,KAiNbM,WAAa,WAAQ,OAAO,EAAKmC,QAjNpB,KAkNbpC,WAAa,SAACoC,GAAa,EAAKA,OAASA,GAjNrC5C,KAAKG,OAAS,KACdH,KAAK4C,OAAS,MCLlBC,EAAc,IAAI3C,EAClB4C,EAAW,IAAIC,UAAQF,EAAYlB,mBACnCqB,EAAW,IAAID,UAAQF,EAAYd,mBAGnCkB,EAAO,CACVC,MAAOJ,EACPK,KAAMH,GAGHI,EAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cA8PXG,E,kDArPhB,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAyBPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA/BvC,EAsCnBC,UAAY,WACXjC,EAAYzC,SAAS,EAAK2E,MAAMC,MAChClC,EAAW,IAAIC,UAAQF,EAAYlB,mBACnCqB,EAAW,IAAID,UAAQF,EAAYd,mBACnCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IA/CpC,EAkDnBkC,aAAe,WACdzC,EAAY/B,SAAS,EAAKiE,MAAMC,MAChClC,EAAW,IAAIC,UAAQF,EAAYlB,mBACnCqB,EAAW,IAAID,UAAQF,EAAYd,mBACnCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IA3DpC,EA8DnBmC,aAAe,WACd1C,EAAYxB,OAAO,EAAK0D,MAAMC,KAAM,EAAKD,MAAMS,kBAC/C1C,EAAW,IAAIC,UAAQF,EAAYlB,mBACnCqB,EAAW,IAAID,UAAQF,EAAYd,mBACnCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IAvEpC,EA0EnBqC,aAAe,WACd5C,EAAYlC,gBAAgB,EAAKoE,MAAMC,MACvClC,EAAW,IAAIC,UAAQF,EAAYlB,mBACnCqB,EAAW,IAAID,UAAQF,EAAYd,mBACnCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IAnFpC,EAsFnBsC,eAAiB,WAChB7C,EAAYhC,gBAAgB,EAAKkE,MAAMC,MACvClC,EAAW,IAAIC,UAAQF,EAAYlB,mBACnCqB,EAAW,IAAID,UAAQF,EAAYd,mBACnCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IA/FpC,EAkGnBuC,aAAe,WACd,IAAI5F,EAAO8C,EAAYrB,OAAO,EAAKuD,MAAMC,MACrC,GAAK/C,SAASlC,IACjBgB,QAAQC,IAAIjB,EAAK,eACjB+C,EAAW,IAAIC,UAAQF,EAAYlB,mBACnCqB,EAAW,IAAID,UAAQF,EAAYd,mBACnCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAERA,EAAS4C,IAAI,CAACzD,KAAMF,SAASlC,GAAOL,GAAIuC,SAASlC,GAAO8F,MAAM5D,SAASlC,GAAM2D,MAAM,CAACA,MAAM,cAG1F3C,QAAQC,IAAIjB,GAIb,EAAKmF,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IAnHpC,EAsHnB0C,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,qBAAtBmB,EAASE,WADA,kFACoCF,EAASG,OAAiB,CAG1E,IAAK,IAAIzE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAC1CV,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7BoB,EAAYzC,SAAS2F,EAASvD,QAAQf,GAAGc,YAG1CO,EAAW,IAAIC,UAAQF,EAAYlB,mBACnCqB,EAAW,IAAID,UAAQF,EAAYd,mBACnCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,QAKtDgD,MAAM,6CA9IW,EAmJnBC,eAAiB,WAChB,IAAMC,EAAUC,SAASC,cAAc,KACnCC,EAAY5D,EAAYR,eACtBqE,EAAO,IAAIC,KAAK,CAACF,IACvBH,EAAQrH,KAAO2H,IAAIC,gBAAgBH,GAChCJ,EAAQQ,SAAW,mBACnBP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAQW,QACRb,MAAM,oBAzJT,EAAKrB,MAAQ,CAEZC,KAAM,GACNQ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAXP,E,qDAcnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,EAAMG,K,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAyIX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,4BAED,qBAAK9F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,mBAAmB3F,UAAU,eAAewI,YAAY,oBAAoBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMS,iBAAkBiC,SAAUzH,KAAKmH,sBAEvK,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4F,gBAAtE,+BAED,qBAAKvG,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,wBAG7D,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK8F,gBAAtE,iCAED,qBAAKzG,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+F,kBAAtE,gCAED,qBAAK1G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,2BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAMF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAhPxB6C,aClBPnI,E,WAfX,WAAYC,GAAM,oBACdC,KAAKD,KAAOA,EACZC,KAAKC,UAAY,KACjBD,KAAKmB,SAAW,K,4CAGpB,WAAY,OAAOnB,KAAKD,O,sBACxB,SAASA,GAAOC,KAAKD,KAAOA,I,2BAE5B,WAAiB,OAAOC,KAAKC,Y,2BAC7B,SAAcA,GAAYD,KAAKC,UAAYA,I,0BAE3C,WAAgB,OAAOD,KAAKmB,W,0BAC5B,SAAaA,GAAWnB,KAAKmB,SAAWA,M,KC+N7B+G,EA1OX,aAAc,IAAD,gCAKb9H,SAAW,SAACL,GAER,IAAIM,EAAa,IAAIP,EAAKC,GAEN,GAAhB,EAAKoI,SACL,EAAKC,YAAY/H,GACjB,EAAKG,WAAWH,KAGhB,EAAKI,aAAaC,cAAcL,GAChCA,EAAWgI,aAAa,EAAK5H,cAC7B,EAAKD,WAAWH,KAhBX,KAqBbM,gBAAkB,SAACZ,GACf,IAAIM,EAAa,IAAIP,EAAKC,GAE1BM,EAAWK,cAAc,EAAK4H,eAC9B,EAAKA,cAAcD,aAAahI,GAChC,EAAK+H,YAAY/H,IA1BR,KA6BbQ,gBAAkB,SAACd,GACf,IAAIM,EAAa,IAAIP,EAAKC,GAE1B,EAAKU,aAAaC,cAAcL,GAChCA,EAAWgI,aAAa,EAAK5H,cAC7B,EAAKD,WAAWH,IAlCP,KAsCbS,SAAW,SAACf,GAER,GAAoB,GAAhB,EAAKoI,QA2DF,OAAOpH,QAAQC,IAAI,UAxDtB,GAAI,EAAKsH,cAAclH,YAAcrB,EAAK,CAEtC,GAA0C,MAAtC,EAAKuI,cAAcpH,gBAAwB,CAE3C,IAAIqH,EAAO,EAAKD,cAAcpH,gBAK9B,OAJA,EAAKoH,cAAcpH,gBAAgBmH,aAAa,MAChD,EAAKC,cAAc5H,cAAc,MACjC,EAAK0H,YAAYG,GAEVxH,QAAQC,IAAI,WAEnB,EAAKoH,YAAY,MACjB,EAAK5H,WAAW,UAGlB,IAAI,EAAKC,aAAaW,YAAcrB,EAAK,CAE3C,GAAwC,MAApC,EAAKU,aAAa+H,eAAuB,CAEzC,IAAID,EAAO,EAAK9H,aAAa+H,eAK7B,OAJA,EAAK/H,aAAa+H,eAAe9H,cAAc,MAC/C,EAAKD,aAAa4H,aAAa,MAC/B,EAAK7H,WAAW+H,GAETxH,QAAQC,IAAI,WAKnB,OAHA,EAAKoH,YAAY,MACjB,EAAK5H,WAAW,MAETO,QAAQC,IAAI,WAKvB,IAAIC,EAAc,EAAKqH,cAAcpH,gBACjCC,EAAW,EAAKmH,cACpB,EAAG,CAEC,GAAIrH,EAAYG,YAAcrB,EAAK,CAE/B,IAAIE,EAAYgB,EAAYC,gBAO5B,OALAD,EAAYP,cAAc,MAC1BO,EAAYoH,aAAa,MACzBlH,EAAST,cAAcT,GACvBA,EAAUoI,aAAalH,GAEhBJ,QAAQC,IAAI,WAGvBC,EAAcA,EAAYC,gBAC1BC,EAAWA,EAASD,sBAEA,MAAfD,GAKjB,OAAOF,QAAQC,IAAI,oBArGV,KAwGbK,OAAS,SAACtB,EAAMuB,GACZ,IAAIL,EAAc,EAAKqH,cAEvB,GAAoB,GAAhB,EAAKH,QAEL,EAAE,CACE,GAAIlH,EAAYG,YAAcrB,EAE1B,OADAkB,EAAYM,SAASD,GACdP,QAAQC,IAAI,gBAEvBC,EAAcA,EAAYC,sBACR,MAAfD,GAEX,OAAOF,QAAQC,IAAI,oBArHV,KAyHbQ,OAAS,SAACzB,GACN,IAAIkB,EAAc,EAAKqH,cACnB7G,EAAI,EACR,GAAoB,GAAhB,EAAK0G,QAaL,OADApH,QAAQC,IAAI,WACL,EAXP,EAAE,CACE,GAAIC,EAAYG,YAAcrB,EAE1B,OADAgB,QAAQC,IAAI,eAAiBC,EAAYG,YAClCK,EAEXA,IACAR,EAAcA,EAAYC,sBACR,MAAfD,GASX,OADAF,QAAQC,IAAI,oBACL,GA9IE,KAmJbyH,MAAQ,WACJ1H,QAAQC,IAAI,SACZ,IAAIC,EAAc,EAAKqH,cACvB,GAAoB,GAAhB,EAAKH,QAAiB,CACtB,GACIpH,QAAQC,IAAIC,EAAYG,YACxBH,EAAcA,EAAYC,sBACR,MAAfD,GAEPF,QAAQC,IAAI,SACZC,EAAc,EAAKR,aACnB,GACIM,QAAQC,IAAIC,EAAYG,YACxBH,EAAcA,EAAYuH,qBACR,MAAfvH,QAEPF,QAAQC,IAAI,WAnKP,KAwKbmH,MAAQ,WACJ,OAA0B,MAAtB,EAAKG,eAzKA,KAgLb3G,gBAAkB,WAEd,IAAIV,EAAc,EAAKqH,cACnB1G,EAAM,GACV,GAAoB,GAAhB,EAAKuG,QAAiB,CACtB,IAAI1G,EAAI,EACR,GACRG,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOb,EAAYG,aACvBH,EAAcA,EAAYC,gBAC1BO,UACoB,MAAfR,GAGb,OAAOW,GA7LE,KAiMbG,gBAAkB,WAEd,IAAId,EAAc,EAAKqH,cACnB1G,EAAM,GACV,GAAoB,GAAhB,EAAKuG,QAAiB,CACtB,IAAI1G,EAAI,EACR,EAAG,CACC,GAAmC,MAA/BR,EAAYC,gBAAwB,CAEpC,IAAIc,EAAUC,SAASR,GACnBS,EAAUD,SAASD,GAAWC,SAAS,GACpC,GAAHR,IACAG,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG,EAAG0C,OAAQ,OAChCR,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG,EAAG0C,OAAQ,QAErB,GAAVJ,GAA8B,GAAXE,IACpBN,EAAIC,KAAK,CAACM,KAAKF,SAASD,GAAUtC,GAAGuC,SAASC,GAAUE,OAAQ,OAChER,EAAIC,KAAK,CAACM,KAAKF,SAASC,GAAUxC,GAAGuC,SAASD,GAAUI,OAAQ,QAGxEnB,EAAcA,EAAYC,gBAC1BO,UACoB,MAAfR,GAIb,OAAOW,GA3NE,KAiOb0G,YAAc,WAAQ,OAAO,EAAKI,SAjOrB,KAkObN,YAAc,SAACM,GAAa,EAAKA,QAAUA,GAlO9B,KAmObjI,WAAa,WAAQ,OAAO,EAAKmC,QAnOpB,KAoObpC,WAAa,SAACoC,GAAa,EAAKA,OAASA,GAnOrC5C,KAAK0I,QAAU,KACf1I,KAAK4C,OAAS,MCFlB+F,EAAa,IAAIT,EAEjBpF,EAAW,IAAIC,UAAQ4F,EAAWhH,mBAClCqB,EAAW,IAAID,UAAQ4F,EAAW5G,mBAElCkB,EAAO,CACVC,MAAOJ,EACPK,KAAMH,GAGHI,EAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACTC,aAAc,MAGdN,MAAM,CACFO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cA4OXiF,E,kDArOhB,WAAY7E,GAAQ,IAAD,8BAClB,cAAMA,IA0BPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WAhCvC,EAsCnBC,UAAY,WACX6D,EAAWvI,SAAS,EAAK2E,MAAMC,MAC/BlC,EAAW,IAAIC,UAAQ4F,EAAWhH,mBAClCqB,EAAW,IAAID,UAAQ4F,EAAW5G,mBAClCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IA/CpC,EAkDnBkC,aAAe,WACdqD,EAAW7H,SAAS,EAAKiE,MAAMC,MAC/BlC,EAAW,IAAIC,UAAQ4F,EAAWhH,mBAClCqB,EAAW,IAAID,UAAQ4F,EAAW5G,mBAClCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IA3DpC,EA8DnBmC,aAAe,WACdoD,EAAWtH,OAAO,EAAK0D,MAAMC,KAAM,EAAKD,MAAMS,kBAC9C1C,EAAW,IAAIC,UAAQ4F,EAAWhH,mBAClCqB,EAAW,IAAID,UAAQ4F,EAAW5G,mBAClCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IAvEpC,EA0EnBqC,aAAe,WACdkD,EAAWhI,gBAAgB,EAAKoE,MAAMC,MACtClC,EAAW,IAAIC,UAAQ4F,EAAWhH,mBAClCqB,EAAW,IAAID,UAAQ4F,EAAW5G,mBAClCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IAnFpC,EAsFnBsC,eAAiB,WAChBiD,EAAW9H,gBAAgB,EAAKkE,MAAMC,MACtClC,EAAW,IAAIC,UAAQ4F,EAAWhH,mBAClCqB,EAAW,IAAID,UAAQ4F,EAAW5G,mBAClCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IA/FpC,EAkGnBuC,aAAe,WACd,IAAI5F,EAAO4I,EAAWnH,OAAO,EAAKuD,MAAMC,MACpC,GAAK/C,SAASlC,KACjBgB,QAAQC,IAAIjB,EAAK,eACR+C,EAAW,IAAIC,UAAQ4F,EAAWhH,mBAClCqB,EAAW,IAAID,UAAQ4F,EAAW5G,mBAC3CkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAERA,EAAS4C,IAAI,CAACzD,KAAMF,SAASlC,GAAOL,GAAIuC,SAASlC,GAAO8F,MAAM5D,SAASlC,GAAM2D,MAAM,CAACA,MAAM,cAI3F,EAAKwB,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IAhHpC,EAmHnB0C,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,qBAAtBmB,EAASE,WADA,kFACoCF,EAASG,OAAiB,CAG1E,IAAK,IAAIzE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAC1CV,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7BkH,EAAWvI,SAAS2F,EAASvD,QAAQf,GAAGc,YAGzCO,EAAW,IAAIC,UAAQ4F,EAAWhH,mBAClCqB,EAAW,IAAID,UAAQ4F,EAAW5G,mBAClCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,QAItDgD,MAAM,6CAxIP,EAAKrB,MAAQ,CAEZC,KAAM,GACNQ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAXP,E,qDAcnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,EAAMG,K,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBA4HX,WAAU,IAAD,OACP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,uBAGD,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,mBAAmB3F,UAAU,eAAewI,YAAY,oBAAoBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMS,iBAAkBiC,SAAUzH,KAAKmH,sBAEvK,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4F,gBAAtE,0BAED,qBAAKvG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAeW,QAAS,kBAAM,EAAKgG,gBAAnE,sBAED,qBAAK3G,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,WAAWuI,SAAUzH,KAAKgE,wBAG3E,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK8F,gBAAtE,sCAED,qBAAKzG,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+F,kBAAtE,qCAED,qBAAK1G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAeW,QAAS,kBAAM,EAAKmG,kBAAnE,sCAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,gCAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAhOxB6C,aCpBPnI,E,WAXX,WAAYC,GAAM,oBACdC,KAAKD,KAAOA,EACZC,KAAKC,UAAY,K,4CAGrB,WAAY,OAAOD,KAAKD,O,sBACxB,SAASA,GAAOC,KAAKD,KAAOA,I,2BAE5B,WAAiB,OAAOC,KAAKC,Y,2BAC7B,SAAcA,GAAYD,KAAKC,UAAYA,M,KC8RhC4I,EArSX,aAAc,IAAD,gCAObzI,SAAW,SAACL,GACR,IAAIM,EAAa,IAAIP,EAAKC,GACN,GAAhB,EAAKoI,SACL,EAAKC,YAAY/H,GACjB,EAAKG,WAAWH,GAChB,EAAKiI,cAAc5H,cAAc,EAAKD,cACtC,EAAKA,aAAaC,cAAc,EAAK4H,iBAGrC,EAAK7H,aAAaC,cAAcL,GAChCA,EAAWK,cAAc,EAAK4H,eAC9B,EAAK9H,WAAWH,IAGpB,EAAKyI,QArBI,KAyBbnI,gBAAkB,SAACZ,GACf,IAAIM,EAAa,IAAIP,EAAKC,GAE1BM,EAAWK,cAAc,EAAK4H,eAC9B,EAAK7H,aAAaC,cAAcL,GAChC,EAAK+H,YAAY/H,GACjB,EAAKyI,QA/BI,KAkCbjI,gBAAkB,SAACd,GACf,IAAIM,EAAa,IAAIP,EAAKC,GAE1B,EAAKU,aAAaC,cAAcL,GAChCA,EAAWK,cAAc,EAAK4H,eAC9B,EAAK9H,WAAWH,GAChB,EAAKyI,QAxCI,KA4CbhI,SAAW,SAACf,GACR,GAAmB,GAAhB,EAAKoI,QAgHD,OAAOpH,QAAQC,IAAI,UA9GrB,GAAI,EAAKsH,cAAclH,YAAcrB,EAAK,CAEvC,GAA0C,MAAtC,EAAKuI,cAAcpH,gBAAwB,CAE3C,IAAIqH,EAAO,EAAKD,cAAcpH,gBAK9B,OAJA,EAAKoH,cAAc5H,cAAc,MACjC,EAAKD,aAAaC,cAAc6H,GAChC,EAAKH,YAAYG,GACjB,EAAKO,OACE/H,QAAQC,IAAI,WAOnB,OALA,EAAKoH,YAAY1H,cAAc,MAC/B,EAAKF,WAAWE,cAAc,MAC9B,EAAK0H,YAAY,MACjB,EAAK5H,WAAW,MAChB,EAAKsI,OACE/H,QAAQC,IAAI,WAGrB,GAAI,EAAKP,aAAaW,YAAcrB,EAAK,CAE3C,GAAyC,MAArC,EAAKuI,cAAcpH,gBAAuB,CAM1C,IALA,IAAID,EAAc,EAAKqH,cAAcpH,gBACjCC,EAAW,EAAKmH,cAEhB7G,EAAI,EAEDA,EAAI,EAAKqH,MAAK,CACjB,GAAG7H,EAAYG,YAAYrB,EAAK,CAC5B,GAAK0B,EAAE,GAAM,EAAKqH,KAAK,CAEnB,IAAIP,EAAO,EAAK9H,aAAaS,gBAK7B,OAJA,EAAKT,aAAaC,cAAc,MAChCS,EAAST,cAAc6H,GACvB,EAAK/H,WAAWW,GAChB,EAAK2H,OACE/H,QAAQC,IAAI,WAInB,IAAIuH,EAAOtH,EAAYC,gBAKvB,OAJAD,EAAYP,cAAc,MAC1BS,EAAST,cAAc6H,GACvB,EAAK/H,WAAWW,GAChB,EAAK2H,OACE/H,QAAQC,IAAI,WAK3BC,EAAcA,EAAYC,gBAC1BC,EAAWA,EAASD,gBAEpBO,IAKJ,OAAOV,QAAQC,IAAI,WAOnB,OALA,EAAKoH,YAAY1H,cAAc,MAC/B,EAAKF,WAAWE,cAAc,MAC9B,EAAK0H,YAAY,MACjB,EAAK5H,WAAW,MAChB,EAAKsI,OACE/H,QAAQC,IAAI,WAKvB,GAAyC,MAArC,EAAKsH,cAAcpH,gBAAuB,CAM1C,IALA,IAAID,EAAc,EAAKqH,cAAcpH,gBACjCC,EAAW,EAAKmH,cAEhB7G,EAAI,EAEDA,EAAI,EAAKqH,MAAK,CACjB,GAAG7H,EAAYG,YAAYrB,EAAK,CAC5B,GAAK0B,EAAE,GAAM,EAAKqH,KAAK,CAEnB,IAAIP,EAAO,EAAK9H,aAAaS,gBAK7B,OAJA,EAAKT,aAAaC,cAAc,MAChCS,EAAST,cAAc6H,GACvB,EAAK/H,WAAWW,GAChB,EAAK2H,OACE/H,QAAQC,IAAI,WAInB,IAAIuH,EAAOtH,EAAYC,gBAKvB,OAJAD,EAAYP,cAAc,MAC1BS,EAAST,cAAc6H,GACvB,EAAK/H,WAAWW,GAChB,EAAK2H,OACE/H,QAAQC,IAAI,WAK3BC,EAAcA,EAAYC,gBAC1BC,EAAWA,EAASD,gBAEpBO,IAIJ,OAAOV,QAAQC,IAAI,WAM/B,OAAOD,QAAQC,IAAI,oBA/JV,KAqKbK,OAAS,SAACtB,EAAMuB,GACZ,IAAIL,EAAc,EAAKqH,cAEvB,GAAoB,GAAhB,EAAKH,QAGL,IADA,IAAI1G,EAAI,EACFA,EAAE,EAAKqH,MAAK,CAEd,GAAI7H,EAAYG,YAAcrB,EAE1B,OADAkB,EAAYM,SAASD,GACdP,QAAQC,IAAI,gBAEvBC,EAAcA,EAAYC,gBAC1BO,IAGR,OAAOV,QAAQC,IAAI,oBArLV,KAyLbQ,OAAS,SAACzB,GACN,IAAIkB,EAAc,EAAKqH,cAEvB,GAAoB,GAAhB,EAAKH,QAeL,OADApH,QAAQC,IAAI,WACL,EAZP,IADA,IAAIS,EAAI,EACFA,EAAE,EAAKqH,MAAK,CAEd,GAAI7H,EAAYG,YAAcrB,EAE1B,OADAgB,QAAQC,IAAI,eAAiBC,EAAYG,YAClCK,EAEXR,EAAcA,EAAYC,gBAC1BO,IAUR,OADAV,QAAQC,IAAI,oBACL,GAhNE,KAmNbyH,MAAQ,WAIJ,IAFA,IAAIhH,EAAI,EACJR,EAAc,EAAKqH,cACjB7G,EAAE,EAAKqH,MACT/H,QAAQC,IAAIC,EAAYG,YACxBH,EAAcA,EAAYC,gBAC1BO,IAGJV,QAAQC,IAAI,mBACZD,QAAQC,IAAIC,EAAYG,YACxBL,QAAQC,IAAI,wBAAwB,EAAKsH,cAAclH,YACvDL,QAAQC,IAAIC,EAAYC,gBAAgBE,YACxCL,QAAQC,IAAI,UACZD,QAAQC,IAAI,EAAKP,aAAaW,YAC9BL,QAAQC,IAAI,EAAKP,aAAaS,gBAAgBE,aAnOrC,KAsOb+G,MAAQ,WACJ,OAA0B,MAAtB,EAAKG,eAvOA,KA8Ob3G,gBAAkB,WAEd,IAAIV,EAAc,EAAKqH,cACnB1G,EAAM,GACV,GAAoB,GAAhB,EAAKuG,QAEL,IADA,IAAI1G,EAAI,EACFA,EAAE,EAAKqH,MACrBlH,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOb,EAAYG,aACvBH,EAAcA,EAAYC,gBAC1BO,IAIR,OAAOG,GA3PE,KA+PbG,gBAAkB,WAEd,IAAId,EAAc,EAAKqH,cACnB1G,EAAM,GACV,GAAoB,GAAhB,EAAKuG,QAEL,IADA,IAAI1G,EAAI,EACFA,EAAE,EAAKqH,MAAK,CAEd,IAAI9G,EAAUC,SAASR,GACnBS,EAAUD,SAASD,GAAWC,SAAS,GACpC,GAAHR,GACAG,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG,EAAG0C,OAAQ,OAErB,GAAVJ,GAA8B,GAAXE,GACpBN,EAAIC,KAAK,CAACM,KAAKF,SAASD,GAAUtC,GAAGuC,SAASC,GAAUE,OAAQ,OAE/DX,EAAE,GAAI,EAAKqH,MACZlH,EAAIC,KAAK,CAACM,KAAKV,EAAG/B,GAAG,EAAG0C,OAAQ,OAEpCnB,EAAcA,EAAYC,gBAC1BO,IAIR,OAAOG,GAvRE,KA6Rb0G,YAAc,WAAQ,OAAO,EAAKI,SA7RrB,KA8RbN,YAAc,SAACM,GAAa,EAAKA,QAAUA,GA9R9B,KAgSbjI,WAAa,WAAQ,OAAO,EAAKmC,QAhSpB,KAiSbpC,WAAa,SAACoC,GAAa,EAAKA,OAASA,GAhSrC5C,KAAK0I,QAAU,KACf1I,KAAK4C,OAAS,KACd5C,KAAK8I,KAAO,GCHhBC,EAAgB,IAAIF,EAEpB/F,EAAW,IAAIC,UAAQgG,EAAcpH,mBACrCqB,EAAW,IAAID,UAAQgG,EAAchH,mBAErCkB,EAAO,CACVC,MAAOJ,EACPK,KAAMH,GAGHI,EAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACTC,aAAc,MAGdN,MAAM,CACFO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cAkPXqF,E,kDA3OhB,WAAYjF,GAAQ,IAAD,8BAClB,cAAMA,IA0BPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WAhCvC,EAqCnBC,UAAY,WACXiE,EAAc3I,SAAS,EAAK2E,MAAMC,MAClClC,EAAW,IAAIC,UAAQgG,EAAcpH,mBACrCqB,EAAW,IAAID,UAAQgG,EAAchH,mBACrCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IA9CpC,EAiDnBkC,aAAe,WACdyD,EAAcjI,SAAS,EAAKiE,MAAMC,MAClClC,EAAW,IAAIC,UAAQgG,EAAcpH,mBACrCqB,EAAW,IAAID,UAAQgG,EAAchH,mBACrCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IA1DpC,EA6DnBmC,aAAe,WACdwD,EAAc1H,OAAO,EAAK0D,MAAMC,KAAM,EAAKD,MAAMS,kBACjD1C,EAAW,IAAIC,UAAQgG,EAAcpH,mBACrCqB,EAAW,IAAID,UAAQgG,EAAchH,mBACrCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IAtEpC,EAyEnBqC,aAAe,WACdsD,EAAcpI,gBAAgB,EAAKoE,MAAMC,MACzClC,EAAW,IAAIC,UAAQgG,EAAcpH,mBACrCqB,EAAW,IAAID,UAAQgG,EAAchH,mBACrCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IAlFpC,EAqFnBsC,eAAiB,WAChBqD,EAAclI,gBAAgB,EAAKkE,MAAMC,MACzClC,EAAW,IAAIC,UAAQgG,EAAcpH,mBACrCqB,EAAW,IAAID,UAAQgG,EAAchH,mBACrCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IA9FpC,EAiGnBuC,aAAe,WACd,IAAI5F,EAAOgJ,EAAcvH,OAAO,EAAKuD,MAAMC,MAEvC,GAAK/C,SAASlC,KACjBgB,QAAQC,IAAIjB,EAAK,eACR+C,EAAW,IAAIC,UAAQgG,EAAcpH,mBACrCqB,EAAW,IAAID,UAAQgG,EAAchH,mBAC9CkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAERA,EAAS4C,IAAI,CAACzD,KAAMF,SAASlC,GAAOL,GAAIuC,SAASlC,GAAO8F,MAAM5D,SAASlC,GAAM2D,MAAM,CAACA,MAAM,cAI3F,EAAKwB,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IAhHpC,EAmHnB0C,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,qBAAtBmB,EAASE,WADA,kFACoCF,EAASG,OAAiB,CAG1E,IAAK,IAAIzE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAC1CV,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7BsH,EAAc3I,SAAS2F,EAASvD,QAAQf,GAAGc,YAG5CO,EAAW,IAAIC,UAAQgG,EAAcpH,mBACrCqB,EAAW,IAAID,UAAQgG,EAAchH,mBACrCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,QAItDgD,MAAM,6CAxIP,EAAKrB,MAAQ,CAEZC,KAAM,GACNQ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAXP,E,qDAcnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,EAAMG,K,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBA4HX,WAAU,IAAD,OACP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,uBAGD,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,mBAAmB3F,UAAU,eAAewI,YAAY,oBAAoBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMS,iBAAkBiC,SAAUzH,KAAKmH,sBAEvK,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4F,gBAAtE,0BAED,qBAAKvG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAeW,QAAS,kBAAM,EAAKgG,gBAAnE,sBAED,qBAAK3G,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,WAAWuI,SAAUzH,KAAKgE,wBAG3E,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAKnB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK8F,gBAAtE,sCAED,qBAAKzG,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+F,kBAAtE,qCAGD,qBAAK1G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAeW,QAAS,kBAAM,EAAKmG,kBAAnE,sCAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,gCAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAKnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAnOvB6C,aClBRnI,E,WAdd,WAAYC,GAAM,oBACXC,KAAKD,KAAOA,EACZC,KAAKC,UAAY,KACjBD,KAAKmB,SAAW,K,4CAEpB,WAAY,OAAOnB,KAAKD,O,sBACxB,SAASA,GAAOC,KAAKD,KAAOA,I,2BAE5B,WAAiB,OAAOC,KAAKC,Y,2BAC7B,SAAcA,GAAYD,KAAKC,UAAYA,I,0BAE3C,WAAgB,OAAOD,KAAKmB,W,0BAC5B,SAAaA,GAAWnB,KAAKmB,SAAWA,M,KCiN7B8H,EAvNd,aAAc,IAAD,gCAHbP,QAAQ,KAGK,KAFb9F,OAAO,KAEM,KAMVwF,YAAY,SAACM,GAAW,EAAKA,QAAQA,GAN3B,KAOVJ,YAAY,WAAM,OAAO,EAAKI,SAPpB,KAQVlI,WAAW,SAACoC,GAAU,EAAKA,OAAOA,GARxB,KASVnC,WAAW,WAAM,OAAO,EAAKmC,QATnB,KAUVuF,MAAQ,WACJ,OAA0B,MAAtB,EAAKG,eAXH,KAkBblI,SAAW,SAAC8I,GACX,IAAI7I,EAAa,IAAIP,EAAKoJ,GACA,GAAhB,EAAKf,SACX,EAAKC,YAAY/H,GACX,EAAKG,WAAWH,GAChB,EAAKiI,cAAc5H,cAAc,EAAKD,cACtC,EAAKA,aAAaC,cAAc,EAAK4H,iBAErC,EAAK7H,aAAaC,cAAcL,GAChCA,EAAWgI,aAAa,EAAK5H,cAC7BJ,EAAWK,cAAc,EAAK4H,eAC9B,EAAK9H,WAAWH,IAEpB,EAAKyI,QA/BC,KAiCbjI,gBAAkB,SAACqI,GAClB,IAAI7I,EAAa,IAAIP,EAAKoJ,GACA,GAAhB,EAAKf,SACX,EAAKC,YAAY/H,GACX,EAAKG,WAAWH,GAChB,EAAKiI,cAAc5H,cAAc,EAAKD,cACtC,EAAKA,aAAaC,cAAc,EAAK4H,iBAErC,EAAK7H,aAAaC,cAAcL,GAChCA,EAAWgI,aAAa,EAAK5H,cAC7BJ,EAAWK,cAAc,EAAK4H,eAC9B,EAAK9H,WAAWH,IAEpB,EAAKyI,QA9CC,KAgDbnI,gBAAkB,SAACuI,GAClB,IAAI7I,EAAa,IAAIP,EAAKoJ,GACA,GAAhB,EAAKf,SACX,EAAKC,YAAY/H,GACX,EAAKG,WAAWH,GAChB,EAAKiI,cAAc5H,cAAc,EAAKD,cACtC,EAAKA,aAAaC,cAAc,EAAK4H,iBAExCjI,EAAWK,cAAc,EAAK4H,eAC9BjI,EAAWgI,aAAa,EAAK5H,cAC7B,EAAKA,aAAaC,cAAcL,GAChC,EAAKiI,cAAcD,aAAahI,GAChC,EAAK+H,YAAY/H,IAElB,EAAKyI,QA9DC,KAgEbhI,SAAW,SAACf,GACX,GAAoB,GAAhB,EAAKoI,QACC,GAAI,EAAKG,cAAclH,YAAcrB,EACjC,GAAI,EAAKuI,cAAcpH,iBAAmB,EAAKoH,cAAc,CACzD,IAAIa,EAAM,EAAKb,cAAcpH,gBAC7B,EAAKoH,cAAcpH,gBAAgBmH,aAAa,EAAK5H,cACrD,EAAKA,aAAaC,cAAcyI,GAChC,EAAKb,cAAc5H,cAAc,MACjC,EAAK4H,cAAcD,aAAa,MAChC,EAAKD,YAAYe,GACjB,EAAKL,YAEL,EAAKV,YAAY,MACjB,EAAK5H,WAAW,MAChB,EAAKsI,YAGP,GAAI,EAAKrI,aAAaW,YAAcrB,EAEtC,GAAI,EAAKU,aAAa+H,gBAAkB,EAAK/H,aAAa,CAEtD,IAAI0I,EAAM,EAAK1I,aAAa+H,eAC5B,EAAK/H,aAAa+H,eAAe9H,cAAc,EAAK4H,eACpD,EAAKA,cAAcD,aAAac,GAChC,EAAK1I,aAAa4H,aAAa,MAC/B,EAAK5H,aAAaC,cAAc,MAChC,EAAKF,WAAW2I,GAChB,EAAKL,YAEL,EAAKV,YAAY,MACjB,EAAK5H,WAAW,MAEhB,EAAKsI,WAIR,CACD,IAAI7H,EAAc,EAAKqH,cAAcpH,gBACjCC,EAAW,EAAKmH,cACpB,EAAG,CAEC,GAAIrH,EAAYG,YAAcrB,EAAK,CAE/B,IAAIE,EAAYgB,EAAYC,gBAE5BD,EAAYP,cAAc,MAC1BO,EAAYoH,aAAa,MACzBlH,EAAST,cAAcT,GACvBA,EAAUoI,aAAalH,GACvB,EAAK2H,OAGT7H,EAAcA,EAAYC,gBAC1BC,EAAWA,EAASD,sBAEA,MAAfD,KAvHX,KA4HVmI,SAAS,WAGL,IAFA,IAAI3H,EAAI,EACJR,EAAc,EAAKqH,cACjB7G,EAAE,EAAKqH,MACT/H,QAAQC,IAAIC,EAAYG,YACxBH,EAAcA,EAAYC,gBAC1BO,KAlIE,KAqIVJ,OAAS,SAACtB,EAAMuB,GACZ,IAAIL,EAAc,EAAKqH,cACvB,GAAoB,GAAhB,EAAKH,QAEL,IADA,IAAI1G,EAAI,EACFA,EAAE,EAAKqH,MACL7H,EAAYG,YAAcrB,GAC1BkB,EAAYM,SAASD,GAEzBL,EAAcA,EAAYC,gBAC1BO,KA9IF,KAkJVD,OAAO,SAACzB,GACJ,IAAIkB,EAAc,EAAKqH,cACvB,GAAoB,GAAhB,EAAKH,QAYL,OAAO,EAVP,IADA,IAAI1G,EAAI,EACFA,EAAE,EAAKqH,MAAK,CACd,GAAI7H,EAAYG,YAAcrB,EAG1B,OAFAgB,QAAQC,IAAI,eAAiBC,EAAYG,YACzCL,QAAQC,IAAIS,GACLA,EAEXR,EAAcA,EAAYC,gBAC1BO,IAKR,OAAO,GAlKD,KAoKVE,gBAAkB,WACd,IAAIV,EAAc,EAAKqH,cACnB1G,EAAM,GACV,GAAoB,GAAhB,EAAKuG,QAEL,IADA,IAAI1G,EAAI,EACFA,EAAE,EAAKqH,MAAK,CACd,GAAM,GAAHrH,EAAK,CACJ,IAAI4H,EAASpI,EAAYG,WAAW,YACpCQ,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOuH,SACrB,GAAG5H,EAAE,GAAG,EAAKqH,KAAK,CACpB,IAAIO,EAASpI,EAAYG,WAAW,WACpCQ,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOuH,SAEvBzH,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOb,EAAYG,aAEvCH,EAAcA,EAAYC,gBAC1BO,IAGR,OAAOG,GAvLD,KAyLVG,gBAAkB,WACd,IAAId,EAAc,EAAKqH,cACnB1G,EAAM,GACG,EAAKkH,KACN,EAAKA,KACjB,GAAoB,GAAhB,EAAKX,QAEL,IADA,IAAI1G,EAAI,EACFA,EAAE,EAAKqH,MAAK,CACd,IAAI9G,EAAUC,SAASR,GACnBS,EAAUD,SAASD,GAAWC,SAAS,GACpC,GAAHR,IACAG,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG,EAAG0C,OAAQ,OAChCR,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG,EAAG0C,OAAQ,QAErB,GAAVJ,GAA8B,GAAXE,IACpBN,EAAIC,KAAK,CAACM,KAAKF,SAASD,GAAUtC,GAAGuC,SAASC,GAAUE,OAAQ,OAChER,EAAIC,KAAK,CAACM,KAAKF,SAASC,GAAUxC,GAAGuC,SAASD,GAAUI,OAAQ,QAE/DX,EAAE,GAAI,EAAKqH,OACZlH,EAAIC,KAAK,CAACM,KAAKV,EAAG/B,GAAG,EAAG0C,OAAQ,OAChCR,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG+B,EAAGW,OAAQ,QAEpCnB,EAAcA,EAAYC,gBAC1BO,IAGR,OAAOG,GAlNb5B,KAAK0I,QAAU,KACT1I,KAAK4C,OAAS,KACd5C,KAAK8I,KAAO,GCPhBQ,EAAW,IAAIL,EACfnG,EAAW,IAAIC,UAAQuG,EAAS3H,mBAChCqB,EAAW,IAAID,UAAQuG,EAASvH,mBAGhCkB,GAAO,CACVC,MAAOJ,EACPK,KAAMH,GAGHI,GAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cA0NX4F,G,kDApNhB,WAAYxF,GAAO,IAAD,8BACjB,cAAMA,IAqBPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA3BxC,EA8BfC,UAAY,WACXwE,EAASlJ,SAAS,EAAK2E,MAAMC,MAChClC,EAAW,IAAIC,UAAQuG,EAAS3H,mBAChCqB,EAAW,IAAID,UAAQuG,EAASvH,mBAChCkB,GAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAtCrC,EAwClBkC,aAAe,WACdgE,EAASxI,SAAS,EAAKiE,MAAMC,MAC7BlC,EAAW,IAAIC,UAAQuG,EAAS3H,mBAChCqB,EAAW,IAAID,UAAQuG,EAASvH,mBAChCkB,GAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAjDrC,EAmDlBqC,aAAe,WACd6D,EAAS3I,gBAAgB,EAAKoE,MAAMC,MACpClC,EAAW,IAAIC,UAAQuG,EAAS3H,mBAChCqB,EAAW,IAAID,UAAQuG,EAASvH,mBAChCkB,GAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA5DrC,EA8DlBsC,eAAiB,WAChB4D,EAASzI,gBAAgB,EAAKkE,MAAMC,MACpClC,EAAW,IAAIC,UAAQuG,EAAS3H,mBAChCqB,EAAW,IAAID,UAAQuG,EAASvH,mBAChCkB,GAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAvErC,EAyElBuC,aAAe,WACd,IAAI5F,EAAOuJ,EAAS9H,OAAO,EAAKuD,MAAMC,MAClC,GAAK/C,SAASlC,KACjB+C,EAAW,IAAIC,UAAQuG,EAAS3H,mBAChCqB,EAAW,IAAID,UAAQuG,EAASvH,mBAChCkB,GAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAERA,EAAS4C,IAAI,CAACzD,KAAMF,SAASlC,GAAOL,GAAIuC,SAASlC,GAAO8F,MAAM5D,SAASlC,GAAM2D,MAAM,CAACA,MAAM,cAI3F,EAAKwB,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAtFrC,EAwFlBmC,aAAe,WACd+D,EAASjI,OAAO,EAAK0D,MAAMC,KAAM,EAAKD,MAAMS,kBAC5C1C,EAAW,IAAIC,UAAQuG,EAAS3H,mBAChCqB,EAAW,IAAID,UAAQuG,EAASvH,mBAChCkB,GAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAjGrC,EAmGlB0C,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,qBAAtBmB,EAASE,WADA,kFACoCF,EAASG,OAAiB,CAE1E,IAAK,IAAIzE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAC1CV,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7B6H,EAASlJ,SAAS2F,EAASvD,QAAQf,IAGpCqB,EAAW,IAAIC,UAAQuG,EAAS3H,mBAChCqB,EAAW,IAAID,UAAQuG,EAASvH,mBAChCkB,GAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAItDgD,MAAM,4CAtHP,EAAKrB,MAAQ,CACZC,KAAK,GACLQ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAQ,GACb,EAAKE,OAAO8B,sBACZ,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAVR,E,qDAYlB,WACGpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAEvD,SAAkBa,GAChB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBA2GX,WAAU,IAAD,OAGV,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,4BAED,qBAAK9F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,mBAAmB3F,UAAU,eAAewI,YAAY,oBAAoBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMS,iBAAkBiC,SAAUzH,KAAKmH,sBAEvK,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4F,gBAAtE,+BAED,qBAAKvG,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,wBAG7D,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK8F,gBAAtE,iCAED,qBAAKzG,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+F,kBAAtE,gCAED,qBAAK1G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,2BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,0BAMF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GA9MvB6C,aCnBRnI,G,WAXX,WAAYC,GAAM,oBACdC,KAAKD,KAAOA,EACZC,KAAKC,UAAY,K,4CAGrB,WAAY,OAAOD,KAAKD,O,sBACxB,SAASA,GAAOC,KAAKD,KAAOA,I,2BAE5B,WAAiB,OAAOC,KAAKC,Y,2BAC7B,SAAcA,GAAYD,KAAKC,UAAYA,M,KCyJhCuJ,GAhKX,aAAc,IAAD,gCAIbpJ,SAAW,SAACL,GACR,IAAKM,EAAa,IAAIP,GAAKC,GACP,GAAhB,EAAK0J,SACLpJ,EAAWK,cAAc,EAAK4H,eAC9B,EAAKF,YAAY/H,IAEjB,EAAK+H,YAAY/H,IAVZ,KAebqJ,IAAM,WAEF,GAAmB,GAAhB,EAAKD,QAeJ,OADA1I,QAAQC,IAAI,WACL,EAbP,GAA0C,MAAtC,EAAKsH,cAAcpH,gBAAwB,CAE3C,IAAIqH,EAAO,EAAKD,cAAcpH,gBAI9B,OAHA,EAAKoH,cAAc5H,cAAc,MACjC,EAAK0H,YAAYG,GAEVxH,QAAQC,IAAI,WAEnB,EAAKoH,YAAY,OA3BhB,KAyCb/G,OAAS,SAACtB,EAAMuB,GACZ,IAAIL,EAAc,EAAKqH,cAEvB,GAAoB,GAAhB,EAAKmB,QAEL,EAAE,CACE,GAAIxI,EAAYG,YAAcrB,EAE1B,OADAkB,EAAYM,SAASD,GACdP,QAAQC,IAAI,gBAEvBC,EAAcA,EAAYC,sBACR,MAAfD,GAEX,OAAOF,QAAQC,IAAI,oBAtDV,KA0DbQ,OAAS,SAACzB,GACN,IAAIkB,EAAc,EAAKqH,cAEvB,GAAoB,GAAhB,EAAKmB,QAaL,OADA1I,QAAQC,IAAI,WACL,EAZP,IAAIS,EAAI,EACR,EAAE,CACE,GAAIR,EAAYG,YAAcrB,EAE1B,OADAgB,QAAQC,IAAI,eAAiBC,EAAYG,YAClCK,EAEXR,EAAcA,EAAYC,gBAC1BO,UACkB,MAAfR,GASX,OADAF,QAAQC,IAAI,oBACL,GA/EE,KAmFbyH,MAAQ,WAEJ,GAAmB,GAAhB,EAAKgB,QASJ,OADA1I,QAAQC,IAAI,WACL,EARP,IAAIC,EAAc,EAAKqH,cACvB,GACIvH,QAAQC,IAAIC,EAAYG,YACxBH,EAAcA,EAAYC,sBACN,MAAfD,IA1FJ,KAqGbwI,MAAQ,WACJ,OAA0B,MAAtB,EAAKnB,eAtGA,KA8Gb3G,gBAAkB,WAEd,IAAIV,EAAc,EAAKqH,cACnB1G,EAAM,GACV,GAAoB,GAAhB,EAAK6H,QAAiB,CACtB,IAAIhI,EAAI,EACR,GACRG,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOb,EAAYG,aACvBH,EAAcA,EAAYC,gBAC1BO,UACoB,MAAfR,GAGb,OAAOW,GA3HE,KA+HbG,gBAAkB,WAEd,IAAId,EAAc,EAAKqH,cACnB1G,EAAM,GACV,GAAoB,GAAhB,EAAK6H,QAAiB,CACtB,IAAIhI,EAAI,EACR,EAAG,CACC,GAAmC,MAA/BR,EAAYC,gBAAwB,CAEpC,IAAIc,EAAUC,SAASR,GACnBS,EAAUD,SAASD,GAAWC,SAAS,GACpC,GAAHR,GACAG,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG,EAAG0C,OAAQ,OAErB,GAAVJ,GAA8B,GAAXE,GACpBN,EAAIC,KAAK,CAACM,KAAKF,SAASD,GAAUtC,GAAGuC,SAASC,GAAUE,OAAQ,OAGxEnB,EAAcA,EAAYC,gBAC1BO,UACoB,MAAfR,GAGb,OAAOW,GAtJE,KA2Jb0G,YAAc,WAAQ,OAAO,EAAKI,SA3JrB,KA4JbN,YAAc,SAACM,GAAc,EAAKA,QAAUA,GA3JxC1I,KAAK0I,QAAU,MCDnBiB,GAAO,IAAIH,GAEX1G,GAAW,IAAIC,UAAQ4G,GAAKhI,mBAC5BqB,GAAW,IAAID,UAAQ4G,GAAK5H,mBAE5BkB,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAGHI,GAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACTC,aAAc,MAGdN,MAAM,CACFO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cA4LXiG,G,kDArLhB,WAAY7F,GAAQ,IAAD,8BAClB,cAAMA,IAyBPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA/BvC,EAmCnBC,UAAY,WACX6E,GAAKvJ,SAAS,EAAK2E,MAAMC,MACzBlC,GAAW,IAAIC,UAAQ4G,GAAKhI,mBAC5BqB,GAAW,IAAID,UAAQ4G,GAAK5H,mBAC5BkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA5CpC,EA+CnBkC,aAAe,WACdqE,GAAKD,MACL5G,GAAW,IAAIC,UAAQ4G,GAAKhI,mBAC5BqB,GAAW,IAAID,UAAQ4G,GAAK5H,mBAC5BkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAxDpC,EA2DnBmC,aAAe,WACdoE,GAAKtI,OAAO,EAAK0D,MAAMC,KAAM,EAAKD,MAAMS,kBACxC1C,GAAW,IAAIC,UAAQ4G,GAAKhI,mBAC5BqB,GAAW,IAAID,UAAQ4G,GAAK5H,mBAC5BkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KApEpC,EAuEnBuC,aAAe,WACd,IAAI5F,EAAO4J,GAAKnI,OAAO,EAAKuD,MAAMC,MAC9B,GAAK/C,SAASlC,KACjBgB,QAAQC,IAAIjB,EAAK,eACR+C,GAAW,IAAIC,UAAQ4G,GAAKhI,mBAC5BqB,GAAW,IAAID,UAAQ4G,GAAK5H,mBACrCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERA,GAAS4C,IAAI,CAACzD,KAAMF,SAASlC,GAAOL,GAAIuC,SAASlC,GAAO8F,MAAM5D,SAASlC,GAAM2D,MAAM,CAACA,MAAM,cAI3F,EAAKwB,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KArFpC,EAyFnB0C,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,qBAAtBmB,EAASE,WAAuD,QAAnBF,EAASG,OAAiB,CAG1E,IAAK,IAAIzE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAC1CV,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7BkI,GAAKvJ,SAAS2F,EAASvD,QAAQf,GAAGc,YAGnCO,GAAW,IAAIC,UAAQ4G,GAAKhI,mBAC5BqB,GAAW,IAAID,UAAQ4G,GAAK5H,mBAC5BkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAKtDgD,MAAM,oDA/GP,EAAKrB,MAAQ,CAEZC,KAAM,GACNQ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAXP,E,qDAcnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAgGX,WAAU,IAAD,OACP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,OAAOtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAElI,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,uBAED,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,mBAAmB3F,UAAU,eAAewI,YAAY,SAAStI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMS,iBAAkBiC,SAAUzH,KAAKmH,sBAE5J,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4F,gBAAtE,0BAED,qBAAKvG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAeW,QAAS,kBAAM,EAAKgG,gBAAnE,sBAED,qBAAK3G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAeW,QAAS,kBAAM,EAAKmG,kBAAnE,yBAED,qBAAK9G,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,WAAWuI,SAAUzH,KAAKgE,qBAE1E,qBAAKhF,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAhL3B6C,aCrBJnI,G,WAVd,WAAYoJ,GAAO,oBAClBlJ,KAAKC,UAAY,KACjBD,KAAKkJ,MAAQA,E,iDAGd,WAAiB,OAAOlJ,KAAKC,Y,2BAC7B,SAAc4J,GAAY7J,KAAKC,UAAU4J,I,uBACzC,WAAa,OAAO7J,KAAKkJ,Q,uBACzB,SAAUA,GAAQlJ,KAAKkJ,MAAMA,M,KCiGfY,G,4DAxGdpB,QAAQ,K,KAMRJ,YAAc,WAAO,OAAO,EAAKI,S,KACjCN,YAAc,SAACM,GAAa,EAAKA,QAAUA,G,KAC3CjI,WAAa,WAAO,OAAO,EAAKmC,Q,KAChCpC,WAAa,SAACoC,GAAY,EAAKA,OAASA,G,KACxCtC,UAAY,WACX,OAAuB,MAApB,EAAKgI,e,KAMTlI,SAAW,SAAC8I,GACX,IAAIa,EAAO,IAAIjK,GAAKoJ,GACC,GAAlB,EAAK5I,aACP,EAAK8H,YAAY2B,GACjB,EAAKvJ,WAAWuJ,KAEhB,EAAKtJ,aAAaC,cAAcqJ,GAChC,EAAKvJ,WAAWuJ,K,KAGlBC,WAAa,WACD,EAAKtB,QAEhB,EAAKN,YAAY,EAAKE,cAAcpH,kB,KAErCM,OAAS,SAACzB,GACT,IAAIgK,EAAO,EAAKzB,cACZ7G,EAAE,EACN,GAAuB,GAApB,EAAKnB,YASP,OAAO,EARP,EAAE,CACD,GAAGyJ,EAAKE,aAAelK,EACtB,OAAO0B,EAERA,IACAsI,EAAOA,EAAK7I,sBACE,MAAR6I,GAIR,OAAO,G,KAER1I,OAAS,SAACtB,EAAMuB,GACT,IAAIL,EAAc,EAAKqH,cACvB,GAAwB,GAApB,EAAKhI,YACL,GACQW,EAAYgJ,aAAelK,GAC3BkB,EAAYiJ,UAAU5I,GAE1BL,EAAcA,EAAYC,sBACR,MAAfD,I,KAIlBmI,SAAW,WACV,IAAIW,EAAO,EAAKzB,cAChB,GACCvH,QAAQC,IAAI+I,EAAKE,aACjBF,EAAKA,EAAK7I,sBACE,MAAN6I,I,KAERpI,gBAAkB,WACjB,IAAIoI,EAAO,EAAKzB,cACZ1G,EAAM,GACV,GAAqB,GAAlB,EAAKtB,YAAmB,CAC1B,IAAIpB,EAAK,EACT,GACC0C,EAAIC,KAAK,CAAC3C,GAAIA,EAAI4C,MAAOiI,EAAKE,cAC9BF,EAAKA,EAAK7I,gBACVhC,UACc,MAAR6K,GAER,OAAOnI,G,KAERG,gBAAkB,WACjB,IAAIgI,EAAO,EAAKzB,cACZ1G,EAAM,GACV,GAAqB,GAAlB,EAAKtB,YAAmB,CAC1B,IAAImB,EAAI,EACR,EAAE,CACD,GAA6B,MAAxBsI,EAAK7I,gBAAyB,CAClC,IAAIiJ,EAAWlI,SAASR,GACpB2I,EAAgBnI,SAASkI,GAAclI,SAAS,GAC9C,GAAHR,GACFG,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG,EAAG0C,OAAQ,OAEhB,GAAd+H,GAAwC,GAAjBC,GACzBxI,EAAIC,KAAK,CAACM,KAAKF,SAASkI,GAAazK,GAAGuC,SAASmI,GAAgBhI,OAAQ,OAG3E2H,EAAOA,EAAK7I,gBACZO,UACc,MAARsI,GAER,OAAOnI,G,+CAlGR,WACC5B,KAAK0I,QAAS,KACd1I,KAAK4C,OAAO,S,KCDVyH,GAAiB,IAAIP,GACrBQ,GAAQ,IAAIvH,UAAQsH,GAAe1I,mBACnC4I,GAAU,IAAIxH,UAAQsH,GAAetI,mBACrCyI,GAAQ,CAACtH,MAAMoH,GAAOrF,MAAMsF,IAC5BnH,GAAU,CACZC,QAAS,CACPC,eAAe,EACfC,UAAW,CACTC,aAAc,MAGlBN,MAAM,CACAO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cA+Lb8G,G,kDAtLb,WAAY1G,GAAQ,IAAD,8BACjB,cAAMA,IA0BRC,iBAAmB,SAACC,GAClB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACd,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WAhCzC,EAqCnB6F,YAAc,WACZL,GAAejK,SAAS,EAAK2E,MAAM4F,SACnCL,GAAQ,IAAIvH,UAAQsH,GAAe1I,mBACnC4I,GAAU,IAAIxH,UAAQsH,GAAetI,mBACrCyI,GAAQ,CAACtH,MAAMoH,GAAOrF,MAAMsF,IAC5B,EAAKrF,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASmF,GAAOpH,KA1CtC,EA4CnBwH,aAAe,WACbP,GAAeL,aACfM,GAAQ,IAAIvH,UAAQsH,GAAe1I,mBACnC4I,GAAU,IAAIxH,UAAQsH,GAAetI,mBACrCyI,GAAQ,CAACtH,MAAMoH,GAAOrF,MAAMsF,IAC5B,EAAKrF,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASmF,GAAOpH,KAjDtC,EAmDnByH,eAAiB,WACfR,GAAehJ,OAAO,EAAK0D,MAAM4F,QAAS,EAAK5F,MAAMS,kBACrD8E,GAAQ,IAAIvH,UAAQsH,GAAe1I,mBACnC4I,GAAU,IAAIxH,UAAQsH,GAAetI,mBACrCyI,GAAQ,CAACtH,MAAMoH,GAAOrF,MAAMsF,IAC5B,EAAKrF,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASmF,GAAOpH,KAxDtC,EA0DnB0H,WAAa,WACX,IAAI/K,EAAOsK,GAAe7I,OAAO,EAAKuD,MAAM4F,SACxC,GAAK5K,IACPuK,GAAQ,IAAIvH,UAAQsH,GAAe1I,mBACnC4I,GAAU,IAAIxH,UAAQsH,GAAetI,mBACrCyI,GAAQ,CACNtH,MAAOoH,GACPrF,MAAOsF,IAETA,GAAQ3E,IAAI,CAACzD,KAAMF,SAASlC,GAAOL,GAAIuC,SAASlC,GAAO8F,MAAM5D,SAASlC,GAAM2D,MAAM,CAACA,MAAM,cAE3F,EAAKwB,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASmF,GAAOpH,KArEtC,EAwEnB0C,eAAiB,WAEjB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,qBAAtBmB,EAASE,WAAuD,QAAnBF,EAASG,OAAiB,CAG1E,IAAK,IAAIzE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAC1CV,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7B4I,GAAejK,SAAS2F,EAASvD,QAAQf,GAAGc,YAG7C+H,GAAQ,IAAIvH,UAAQsH,GAAe1I,mBAChC4I,GAAU,IAAIxH,UAAQsH,GAAetI,mBACrCyI,GAAQ,CACNtH,MAAOoH,GACPrF,MAAOsF,IAGT,EAAKrF,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASmF,GAAOpH,SAK1DgD,MAAM,oDA9FL,EAAKrB,MAAQ,CACX4F,QAAS,GACTnF,iBAAkB,GAClBuF,cAAc,GACdC,YAAa,GACbC,MAAO,IACVvG,SAAU,GACVE,YAAa,IAEZ,EAAKM,QAAU,GACf,EAAKE,OAAS8B,sBACd,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAbR,E,qDAgBnB,WACEpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASmF,GAAOpH,M,+BAEzD,SAAkBa,GAChB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBA6EZ,WAAU,IAAD,OACP,OACE,qCACA,qBAAK7G,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBAAOA,UAAU,0BAGrB,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,uBAAOC,KAAK,OAAO5C,KAAK,UAAU3F,UAAU,eAAewI,YAAY,OAAOtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM4F,QAASlD,SAAUzH,KAAKmH,sBAEzI,qBAAKnI,UAAU,WAAf,SACE,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+K,eAAtE,uBAEF,qBAAK1L,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,uBAAOC,KAAK,OAAO5C,KAAK,mBAAmB3F,UAAU,eAAewI,YAAY,SAAStI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMS,iBAAkBiC,SAAUzH,KAAKmH,sBAE7J,qBAAKnI,UAAU,WAAf,SACE,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKkL,kBAAtE,+BAEF,qBAAK7L,UAAU,WAAf,SACE,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAKiL,gBAArE,wBAEF,qBAAK5L,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,wBAAQC,KAAK,SAASvI,UAAU,eAAeW,QAAS,kBAAM,EAAKmL,cAAnE,sBAEF,qBAAK9L,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,wBAAQC,KAAK,SAASvI,UAAU,eAAeW,QAAS,kBAAM,EAAKmG,kBAAnE,yBAEF,qBAAK9G,UAAU,WAAf,SACE,uBAAOA,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,WAAWuI,SAAUzH,KAAKgE,qBAE3E,qBAAKhF,UAAU,WAAf,SACE,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,0BAGJ,qBAAK1I,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAaqI,MAAO,CAACC,WAAY,OAAhD,SACE,2BAAUI,MAAM,aAAhB,UACE,+CACA,qBAAKA,MAAM,aAAX,SACE,wBAAOA,MAAM,mBAAb,UACE,uBAAOH,KAAK,QAAQG,MAAM,mBAAmB/C,KAAK,gBAAgBzF,GAAG,iBAAiB2G,MAAM,YAD9F,UAKF,qBAAK6B,MAAM,aAAX,SACE,wBAAOA,MAAM,mBAAb,UACE,uBAAOH,KAAK,QAAQG,MAAM,mBAAmB/C,KAAK,gBAAgBzF,GAAG,iBAAiB2G,MAAM,YAD9F,iBAQR,qBAAK7G,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBAAOA,UAAU,0BAGrB,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,sDAEF,qBAAKtI,UAAU,WAAf,SACE,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,QAAQ8C,SAAUzH,KAAKmH,sBAEpH,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,8CAAiBtH,KAAK+E,MAAMkG,cAIhC,qBAAKjM,UAAU,QAGf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAlL9B6C,aCfJnI,G,WAdd,WAAYoJ,GAAO,oBAClBlJ,KAAKC,UAAY,KACjBD,KAAKkJ,MAAQA,EACblJ,KAAKkL,UAAY,E,iDAGlB,WAAiB,OAAOlL,KAAKC,Y,2BAC7B,SAAc4J,GAAY7J,KAAKC,UAAU4J,I,uBACzC,WAAa,OAAO7J,KAAKkJ,Q,uBACzB,SAAUA,GAAQlJ,KAAKkJ,MAAMA,I,2BAC7B,WAAgB,OAAOlJ,KAAKkL,Y,2BAC5B,SAAchC,GAAOlJ,KAAKkL,UAAUhC,M,KCVjCiC,GAAgB,I,4DCCnBzC,QAAQ,K,KAMRJ,YAAc,WAAO,OAAO,EAAKI,S,KACjCN,YAAc,SAACM,GAAa,EAAKA,QAAUA,G,KAC3CjI,WAAa,WAAO,OAAO,EAAKmC,Q,KAChCpC,WAAa,SAACoC,GAAY,EAAKA,OAASA,G,KACxCtC,UAAY,WACX,OAAuB,MAApB,EAAKgI,e,KAMT8C,QAAU,SAAClC,EAAOgC,GACjB,IAAIrB,EAAY,IAAI/J,GAAKoJ,GACX,MAAXgC,GAA8B,IAAXA,IACrBnK,QAAQC,IAAI,SACZ6I,EAAUwB,cAAcH,IAEzB,IAAInB,EAAO,EAAKzB,cACZgD,GAAO,EACX,GAAqB,GAAlB,EAAKhL,YACP,EAAK8H,YAAYyB,GACjB,EAAKrJ,WAAWqJ,QAIhB,GAFA9I,QAAQC,IAAI+I,EAAKwB,iBACjBxK,QAAQC,IAAIkK,GACE,MAAXA,GAA8B,IAAXA,EACrB,GACCnK,QAAQC,IAAI,kBACa,MAAtB+I,EAAK7I,iBACP,EAAKT,aAAaC,cAAcmJ,GAChC,EAAKrJ,WAAWqJ,GAChByB,GAAM,IAENvK,QAAQC,IAAI+I,EAAKwB,iBACjBxK,QAAQC,IAAIkK,GACRA,GAAanB,EAAKwB,iBACrBxK,QAAQC,IAAI,eACZ6I,EAAUnJ,cAAcqJ,EAAK7I,iBAC7B6I,EAAKrJ,cAAcmJ,GACnByB,GAAM,GACEJ,EAAUnB,EAAKwB,kBACvBxK,QAAQC,IAAI,qBAC6B,GAAtC+I,EAAK7I,gBAAgBqK,iBAMfL,GAAWnB,EAAK7I,gBAAgBqK,mBALxC1B,EAAUnJ,cAAcqJ,EAAK7I,iBAC7B6I,EAAKrJ,cAAcmJ,GACnB,EAAKpJ,aAAaC,cAAcmJ,GAChC,EAAKrJ,WAAWqJ,GAChByB,GAAM,KAUTvB,EAAOA,EAAK7I,sBACE,MAAR6I,GAAuB,GAAPuB,QAEvB,EAAK7K,aAAaC,cAAcmJ,GAChC,EAAKrJ,WAAWqJ,I,KAInBG,WAAa,WACD,EAAKtB,QAEhB,EAAKN,YAAY,EAAKE,cAAcpH,kB,KAErCsK,OAAS,SAACzL,GACT,IAAIgK,EAAO,EAAKzB,cACZ7G,EAAE,EACN,GAAuB,GAApB,EAAKnB,YASP,OAAO,EARP,EAAE,CACD,GAAGyJ,EAAKE,aAAelK,EACtB,OAAO0B,EAERA,IACAsI,EAAOA,EAAK7I,sBACE,MAAR6I,GAIR,OAAO,G,KAGRX,SAAW,WACV,IAAIW,EAAO,EAAKzB,cAChB,GACCvH,QAAQC,IAAI+I,EAAKE,aACjBF,EAAKA,EAAK7I,sBACE,MAAN6I,I,KAER0B,gBAAkB,WACjB,IAAI1B,EAAO,EAAKzB,cACZ1G,EAAM,GACV,GAAqB,GAAlB,EAAKtB,YAAmB,CAC1B,IAAIpB,EAAK,EACT,GACC0C,EAAIC,KAAK,CAAC3C,GAAIA,EAAI4C,MAAOiI,EAAKE,cAC9BF,EAAKA,EAAK7I,gBACVhC,UACc,MAAR6K,GAER,OAAOnI,G,KAER8J,gBAAkB,WACjB,IAAI3B,EAAO,EAAKzB,cACZ1G,EAAM,GACV,GAAqB,GAAlB,EAAKtB,YAAmB,CAC1B,IAAImB,EAAI,EACR,EAAE,CACD,GAA6B,MAAxBsI,EAAK7I,gBAAyB,CAClC,IAAIiJ,EAAWlI,SAASR,GACpB2I,EAAgBnI,SAASkI,GAAclI,SAAS,GAC9C,GAAHR,GACFG,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG,EAAG0C,OAAQ,OAEhB,GAAd+H,GAAwC,GAAjBC,GACzBxI,EAAIC,KAAK,CAACM,KAAKF,SAASkI,GAAazK,GAAGuC,SAASmI,GAAgBhI,OAAQ,OAG3E2H,EAAOA,EAAK7I,gBACZO,UACc,MAARsI,GAER,OAAOnI,G,+CAnIR,WACC5B,KAAK0I,QAAS,KACd1I,KAAK4C,OAAO,S,MDJV0H,GAAQ,IAAIvH,UAAQoI,GAAcM,mBAClClB,GAAU,IAAIxH,UAAQoI,GAAcO,mBAGpClB,GAAQ,CACXtH,MAAOoH,GACPnH,KAAMoH,IAGHnH,GAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cAoHbgI,G,kDA5Gb,WAAY5H,GAAQ,IAAD,8BACjB,cAAMA,IAsBR2G,YAAc,WACZS,GAAcC,QAAQ,EAAKrG,MAAM4F,QAAS,EAAK5F,MAAMmG,WACrDZ,GAAQ,IAAIvH,UAAQoI,GAAcM,mBAClClB,GAAU,IAAIxH,UAAQoI,GAAcO,mBACpClB,GAAQ,CAACtH,MAAMoH,GAAOrF,MAAMsF,IAC5B,EAAKrF,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASmF,GAAOpH,KA5BtC,EA8BnBwH,aAAe,WACbO,GAAcnB,aACdM,GAAQ,IAAIvH,UAAQoI,GAAcM,mBAClClB,GAAU,IAAIxH,UAAQoI,GAAcO,mBACpClB,GAAQ,CAACtH,MAAMoH,GAAOrF,MAAMsF,IAC5B,EAAKrF,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASmF,GAAOpH,KAnCtC,EAqCnB0H,WAAa,WACX,IAAI/K,EAAOoL,GAAcK,OAAO,EAAKzG,MAAM4F,SACvC,GAAK5K,IACPuK,GAAQ,IAAIvH,UAAQoI,GAAcM,mBAClClB,GAAU,IAAIxH,UAAQoI,GAAcO,mBACpClB,GAAQ,CACNtH,MAAOoH,GACPrF,MAAOsF,IAETA,GAAQ3E,IAAI,CAACzD,KAAMF,SAASlC,GAAOL,GAAIuC,SAASlC,GAAO8F,MAAM5D,SAASlC,GAAM2D,MAAM,CAACA,MAAM,cAE3F,EAAKwB,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASmF,GAAOpH,KA9CvD,EAAK2B,MAAQ,CACX4F,QAAS,GACTO,UAAU,GACVF,YAAa,GACbC,MAAO,KAET,EAAK/F,QAAU,GACf,EAAKE,OAAS8B,sBACd,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAVR,E,qDAanB,WACEpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASmF,GAAOpH,M,+BAEzD,SAAkBa,GAChB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBA+BZ,WAAU,IAAD,OACP,OACE,qCACA,qBAAK7G,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBAAOA,UAAU,0BAGrB,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,uBAAOC,KAAK,OAAO5C,KAAK,UAAU3F,UAAU,eAAewI,YAAY,OAAOtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM4F,QAASlD,SAAUzH,KAAKmH,sBAEzI,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,uBAAOC,KAAK,OAAO5C,KAAK,YAAY3F,UAAU,eAAewI,YAAY,YAAYtI,GAAG,iBAAiB2G,MAAO7F,KAAK+E,MAAMmG,UAAWzD,SAAUzH,KAAKmH,sBAEvJ,qBAAKnI,UAAU,WAAf,SACE,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+K,eAAtE,uBAEF,qBAAK1L,UAAU,WAAf,SACE,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAKiL,gBAArE,wBAEF,qBAAK5L,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,wBAAQC,KAAK,SAASvI,UAAU,eAAeW,QAAS,kBAAM,EAAKmL,cAAnE,sBAEF,qBAAK9L,UAAU,WAAf,SACE,uBAAOA,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,eAEjD,qBAAKF,UAAU,WAAf,SACE,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,0BAGJ,qBAAK1I,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBAAOA,UAAU,0BAGrB,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,sDAEF,qBAAKtI,UAAU,WAAf,SACE,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,QAAQ8C,SAAUzH,KAAKmH,sBAEpH,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,8CAAiBtH,KAAK+E,MAAMkG,cAIhC,qBAAKjM,UAAU,QAGf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAxGrB6C,aE7BxB2D,GAAU,ICFV,aAAc,IAAD,gCAIbxL,SAAW,SAACL,GACR,EAAK8L,MAAMhK,KAAK9B,IALP,KAQb+L,qBAAuB,WAEnB,IAAK,IAAIrK,EAAK,EAAKoK,MAAM1F,OAAS,EAAI1E,GAAK,EAAGA,IAC1C,IAAK,IAAIsK,EAAI,EAAGA,EAAItK,EAAGsK,IACnB,GAAG,EAAKF,MAAME,GAAI,EAAKF,MAAME,EAAE,GAAG,CAC9B,IAAIxD,EAAO,EAAKsD,MAAME,GACtB,EAAKF,MAAME,GAAK,EAAKF,MAAME,EAAE,GAC7B,EAAKF,MAAME,EAAE,GAAKxD,IAfrB,KAqBb5G,gBAAkB,WAGd,IADA,IAAIC,EAAM,GACDH,EAAI,EAAGA,EAAE,EAAKoK,MAAM1F,OAAO1E,IAChCV,QAAQC,IAAI,EAAK6K,MAAMpK,IACvBG,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAO,EAAK+J,MAAMpK,KAGtC,OAAOG,GA7BE,KAiCbG,gBAAkB,WAGd,IADA,IAAIH,EAAM,GACDH,EAAI,EAAGA,EAAE,EAAKoK,MAAM1F,OAAO1E,IAEhC,GAAuB,MAAnB,EAAKoK,MAAMpK,EAAE,GAAW,CAExB,IAAIO,EAAUC,SAASR,GACnBS,EAAUD,SAASD,GAAWC,SAAS,GAC3CL,EAAIC,KAAK,CAACM,KAAKH,EAAStC,GAAGwC,EAASE,OAAQ,OAIpD,OAAOR,GA7CP5B,KAAK6L,MAAQ,IDEjB/I,GAAW,IAAIC,UAAQ6I,GAAQjK,mBAC/BqB,GAAW,IAAID,UAAQ6I,GAAQ7J,mBAG/BkB,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAGHI,GAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cAuIXqI,G,kDA9HhB,WAAYjI,GAAQ,IAAD,8BAClB,cAAMA,IAsBPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA5BvC,EAgCnBiB,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aACvC,GAA0B,qBAAtBmB,EAASE,WAAuD,gBAAnBF,EAASG,OAAyB,CAGlF,IAAK,IAAIzE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAE1CmK,GAAQxL,SAAS2F,EAASvD,QAAQf,GAAGc,YAGtCO,GAAW,IAAIC,UAAQ6I,GAAQjK,mBAC/BqB,GAAW,IAAID,UAAQ6I,GAAQ7J,mBAC/BkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAKtDgD,MAAM,6DAvDW,EA4DnB6F,mBAAqB,WAEpBL,GAAQE,uBACRhJ,GAAW,IAAIC,UAAQ6I,GAAQjK,mBAC9BqB,GAAW,IAAID,UAAQ6I,GAAQ7J,mBAC/BkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KApEvD,EAAK2B,MAAQ,CACZL,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBARP,E,qDAWnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAwDX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOtI,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,qBAE5D,qBAAKhF,UAAU,aAEf,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKsM,sBAAtE,uBAED,qBAAKjN,UAAU,WAAWqI,MAAO,CAAC6E,YAAa,OAA/C,SACC,wBAAQ3E,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAzHxB6C,aE/BlBkE,GAAY,ICFf,aAAc,IAAD,gCAIb/L,SAAW,SAACL,GACX,EAAK8L,MAAMhK,KAAK9B,IALJ,KASVqM,uBAAyB,WAE3B,IAAI,IAAI3K,EAAI,EAAGA,EAAI,EAAKoK,MAAM1F,OAAQ1E,IAAI,CAGzC,IAFA,IAAI0H,EAAM,EAAK0C,MAAMpK,GACjB8G,EAAO9G,EAAI,EACT0H,EAAM,EAAK0C,MAAMtD,IAASA,GAAQ,GACvC,EAAKsD,MAAMtD,EAAK,GAAK,EAAKsD,MAAMtD,GAChCA,GAAc,EAIX,EAAKsD,MAAMtD,IAASY,EACtB,EAAK0C,MAAMtD,EAAK,GAAKY,GAEtB,EAAK0C,MAAMtD,EAAK,GAAK,EAAKsD,MAAMtD,GAChC,EAAKsD,MAAMtD,GAAQY,KAxBT,KAgCVxH,gBAAkB,WAGd,IADA,IAAIC,EAAM,GACDH,EAAI,EAAGA,EAAE,EAAKoK,MAAM1F,OAAO1E,IAChCV,QAAQC,IAAI,EAAK6K,MAAMpK,IACvBG,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAO,EAAK+J,MAAMpK,KAGtC,OAAOG,GAxCD,KA4CVG,gBAAkB,WAGd,IADA,IAAIH,EAAM,GACDH,EAAI,EAAGA,EAAE,EAAKoK,MAAM1F,OAAO1E,IAEhC,GAAuB,MAAnB,EAAKoK,MAAMpK,EAAE,GAAW,CAExB,IAAIO,EAAUC,SAASR,GACnBS,EAAUD,SAASD,GAAWC,SAAS,GAC3CL,EAAIC,KAAK,CAACM,KAAKH,EAAStC,GAAGwC,EAASE,OAAQ,OAIpD,OAAOR,GAxDb5B,KAAK6L,MAAQ,IDEX/I,GAAW,IAAIC,UAAQoJ,GAAUxK,mBACjCqB,GAAW,IAAID,UAAQoJ,GAAUpK,mBAGjCkB,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAGHI,GAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cAuIb0I,G,kDA9Hd,WAAYtI,GAAQ,IAAD,8BAClB,cAAMA,IAsBPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA5BvC,EAgCnBiB,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aACvC,GAA0B,qBAAtBmB,EAASE,WAAuD,gBAAnBF,EAASG,OAAyB,CAGlF,IAAK,IAAIzE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAE1C0K,GAAU/L,SAAS2F,EAASvD,QAAQf,GAAGc,YAGxCO,GAAW,IAAIC,UAAQoJ,GAAUxK,mBACjCqB,GAAW,IAAID,UAAQoJ,GAAUpK,mBACjCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAKtDgD,MAAM,6DAvDW,EA4DnB6F,mBAAqB,WAEpBE,GAAUC,yBACVtJ,GAAW,IAAIC,UAAQoJ,GAAUxK,mBACjCqB,GAAW,IAAID,UAAQoJ,GAAUpK,mBACjCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KApEtD,EAAK2B,MAAQ,CACZL,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBARP,E,qDAWnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAwDX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOtI,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,qBAE5D,qBAAKhF,UAAU,aAEf,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKsM,sBAAtE,uBAED,qBAAKjN,UAAU,WAAWqI,MAAO,CAAC6E,YAAa,OAA/C,SACC,wBAAQ3E,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAzHtB6C,aE/BpBqE,GAAY,ICFf,aAAc,IAAD,gCAIblM,SAAW,SAACL,GACX,EAAK8L,MAAMhK,KAAK9B,IALJ,KASbwM,uBAAyB,WAEb,EAAKV,MAAM1F,OAEtB,IAFA,IAA8BoC,EAAMY,EAE1B1H,EAAI,EAAGA,EAAI,EAAKoK,MAAM1F,OAAQ1E,IAAM,CAE7C,IADD0H,EAAM,EAAK0C,MAAMpK,GACV8G,EAAO9G,EAAI,EAAG8G,GAAQ,GAAK,EAAKsD,MAAMtD,GAAQY,EAAKZ,IACxD,EAAKsD,MAAOtD,EAAO,GAAM,EAAKsD,MAAMtD,GAEtC,EAAKsD,MAAOtD,EAAO,GAAMY,IAlBb,KAwBVxH,gBAAkB,WAGd,IADA,IAAIC,EAAM,GACDH,EAAI,EAAGA,EAAE,EAAKoK,MAAM1F,OAAO1E,IAChCV,QAAQC,IAAI,EAAK6K,MAAMpK,IACvBG,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAO,EAAK+J,MAAMpK,KAGtC,OAAOG,GAhCD,KAoCVG,gBAAkB,WAGd,IADA,IAAIH,EAAM,GACDH,EAAI,EAAGA,EAAE,EAAKoK,MAAM1F,OAAO1E,IAEhC,GAAuB,MAAnB,EAAKoK,MAAMpK,EAAE,GAAW,CAExB,IAAIO,EAAUC,SAASR,GACnBS,EAAUD,SAASD,GAAWC,SAAS,GAC3CL,EAAIC,KAAK,CAACM,KAAKH,EAAStC,GAAGwC,EAASE,OAAQ,OAIpD,OAAOR,GAhDb5B,KAAK6L,MAAQ,IDEX/I,GAAW,IAAIC,UAAQuJ,GAAU3K,mBACjCqB,GAAW,IAAID,UAAQuJ,GAAUvK,mBAGjCkB,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAGHI,GAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cAuIb6I,G,kDA9Hd,WAAYzI,GAAQ,IAAD,8BAClB,cAAMA,IAsBPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA5BvC,EAgCnBiB,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aACvC,GAA0B,qBAAtBmB,EAASE,WAAuD,gBAAnBF,EAASG,OAAyB,CAGlF,IAAK,IAAIzE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAE1C6K,GAAUlM,SAAS2F,EAASvD,QAAQf,GAAGc,YAGxCO,GAAW,IAAIC,UAAQuJ,GAAU3K,mBACjCqB,GAAW,IAAID,UAAQuJ,GAAUvK,mBACjCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAKtDgD,MAAM,6DAvDW,EA4DnB6F,mBAAqB,WAEpBK,GAAUC,yBACVzJ,GAAW,IAAIC,UAAQuJ,GAAU3K,mBACjCqB,GAAW,IAAID,UAAQuJ,GAAUvK,mBACjCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KApEtD,EAAK2B,MAAQ,CACZL,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBARP,E,qDAWnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAwDX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOtI,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,qBAE5D,qBAAKhF,UAAU,aAEf,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKsM,sBAAtE,uBAED,qBAAKjN,UAAU,WAAWqI,MAAO,CAAC6E,YAAa,OAA/C,SACC,wBAAQ3E,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAzHtB6C,aEjCT,SAASwE,KACvB,MAAyB3N,mBAAS,IAAlC,mBACA,GADA,UACyBA,mBAAS,MAAlC,mBAAOmM,EAAP,KAAayB,EAAb,KAEA,OACC,qCACC,qBAAK1N,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOtI,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,eAEhD,qBAAKF,UAAU,aAEf,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAhC,uBAED,qBAAKA,UAAU,WAAWqI,MAAO,CAAC6E,YAAa,OAA/C,SACC,wBAAQ3E,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,YAAY8C,SAAU,SAACxD,GAAD,OAAOyI,EAASzI,EAAEE,OAAO0B,YAE3I,qBAAK7G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,8CAAiB2D,UAGnB,qBAAKjM,UAAU,WCxCH,SAAS2N,KACvB,MAAyB7N,mBAAS,IAAlC,mBACA,GADA,UACyBA,mBAAS,MAAlC,mBAAOmM,EAAP,KAAayB,EAAb,KAEA,OACC,qCACC,qBAAK1N,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAOvI,UAAU,eAAewI,YAAY,eAAetI,GAAG,gBAE3E,qBAAKF,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAhC,uBAED,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAhC,wBAED,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAhC,0BAED,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAhC,sBAED,qBAAKA,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,eAEhD,qBAAKF,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,YAAY8C,SAAU,SAACxD,GAAD,OAAOyI,EAASzI,EAAEE,OAAO0B,YAE3I,qBAAK7G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,8CAAiB2D,UAGnB,qBAAKjM,UAAU,WClDH,SAAS4N,KACvB,MAAyB9N,mBAAS,IAAlC,mBACA,GADA,UACyBA,mBAAS,MAAlC,mBAAOmM,EAAP,KAAayB,EAAb,KAEA,OACC,qCACC,qBAAK1N,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAOvI,UAAU,eAAewI,YAAY,eAAetI,GAAG,gBAE3E,qBAAKF,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAhC,uBAED,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAhC,wBAED,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAhC,0BAED,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAhC,sBAED,qBAAKA,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,eAEhD,qBAAKF,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,YAAY8C,SAAU,SAACxD,GAAD,OAAOyI,EAASzI,EAAEE,OAAO0B,YAE3I,qBAAK7G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,8CAAiB2D,UAGnB,qBAAKjM,UAAU,WClDH,SAAS6N,KACvB,MAAyB/N,mBAAS,IAAlC,mBACA,GADA,UACyBA,mBAAS,MAAlC,mBAAOmM,EAAP,KAAayB,EAAb,KAEA,OACC,qCACC,qBAAK1N,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAOvI,UAAU,eAAewI,YAAY,eAAetI,GAAG,gBAE3E,qBAAKF,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAhC,uBAED,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAhC,wBAED,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAhC,0BAED,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAhC,sBAED,qBAAKA,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,eAEhD,qBAAKF,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,YAAY8C,SAAU,SAACxD,GAAD,OAAOyI,EAASzI,EAAEE,OAAO0B,YAE3I,qBAAK7G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,8CAAiB2D,UAGnB,qBAAKjM,UAAU,WClDH,SAAS8N,KACvB,MAAyBhO,mBAAS,IAAlC,mBACA,GADA,UACyBA,mBAAS,MAAlC,mBAAOmM,EAAP,KAAayB,EAAb,KAEA,OACC,qCACC,qBAAK1N,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAOvI,UAAU,eAAewI,YAAY,eAAetI,GAAG,gBAE3E,qBAAKF,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAhC,uBAED,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAhC,wBAED,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAhC,0BAED,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAhC,sBAED,qBAAKA,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,eAEhD,qBAAKF,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,YAAY8C,SAAU,SAACxD,GAAD,OAAOyI,EAASzI,EAAEE,OAAO0B,YAE3I,qBAAK7G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,8CAAiB2D,UAGnB,qBAAKjM,UAAU,W,ICoDH+N,GArGd,WAAYtL,EAAEsK,GAAG,IAAD,gCAFhBiB,OAAO,GAES,KADhBC,SAAS,GACO,KAIhBC,MAAM,WAAK,OAAO,EAAKzL,GAJP,KAKhB0L,MAAM,SAAC1L,GAAK,EAAKA,EAAEA,GALH,KAMhB2L,MAAM,WAAK,OAAO,EAAKrB,GANP,KAOhBsB,MAAM,SAACtB,GAAK,EAAKA,EAAEA,GAPH,KAShBuB,kBAAkB,WACjB,EAAKN,OAAO,GACZ,EAAKC,SAAS,GAGd,IAFA,IAAIM,EAAQ,EAAKL,QACbM,EAAW,EAAKJ,QACZ3L,EAAE,EAAEA,EAAE8L,EAAM9L,IAAI,CAEvB,IADA,IAAIgM,EAAQ,GACJ1B,EAAE,EAAEA,EAAEyB,EAASzB,IACtB0B,EAAQ5L,KAAK,KAEd,EAAKmL,OAAOnL,KAAK4L,KAnBH,KAsBhBC,aAAa,SAACjM,EAAEsK,EAAEhM,GACb0B,EAAE,EAAKyL,SAAWnB,EAAE,EAAKqB,UAC5B,EAAKJ,OAAOvL,GAAGsK,GAAGhM,EAClBgB,QAAQC,IAAI,EAAKgM,UAzBH,KA4BhBW,kBAAkB,WACjB,EAAKV,SAAS,GACd,IAAI,IAAIxL,EAAE,EAAEA,EAAE,EAAKyL,QAAQzL,IAC1B,IAAI,IAAIsK,EAAE,EAAGA,EAAE,EAAKqB,QAAQrB,IAC3B,EAAKkB,SAASpL,KAAK,EAAKmL,OAAOvL,GAAGsK,KAhCrB,KAoChB6B,qBAAqB,WACpB,EAAKX,SAAS,GACd,IAAI,IAAIlB,EAAE,EAAGA,EAAE,EAAKqB,QAASrB,IAC5B,IAAI,IAAItK,EAAE,EAAGA,EAAE,EAAKyL,QAASzL,IAC5B,EAAKwL,SAASpL,KAAK,EAAKmL,OAAOvL,GAAGsK,KAxCrB,KA4ChB8B,mBAAmB,SAACC,EAAKC,GACxB,IAAIC,GAAQ,EAIZ,OAHIF,EAAK,EAAKZ,SAAWa,EAAQ,EAAKX,UACrCY,EAAQ/L,SAAS,EAAKmL,SAASU,EAAMC,GAE/BC,GAjDQ,KAmDhBC,sBAAsB,SAACH,EAAKC,GAC3B,IAAIC,GAAQ,EAIZ,OAHIF,EAAK,EAAKZ,SAAWa,EAAQ,EAAKX,UACrCY,EAAQ/L,SAAS,EAAKiL,SAASa,EAASD,GAElCE,GAxDQ,KA0DhBpD,aAAa,SAACkD,EAAKC,GACdD,EAAK,EAAKZ,SAAWa,EAAQ,EAAKX,UACrC,EAAKJ,OAAOc,GAAMC,GAAS,MA5Db,KA+DhBG,QAAQ,WAGP,IAFA,IAAIC,EAAU,GACVC,EAAW,GACP3M,EAAE,EAAEA,EAAE,EAAKwL,SAAS9G,OAAO1E,IAAI,CACtC,IAAI4H,EAAW,GAAK,EAAK4D,SAASxL,GAClC0M,EAAQtM,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOuH,IACxB5H,EAAE,GAAG,EAAKwL,SAAS9G,QACrBiI,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG+B,EAAE,EAAGW,OAAQ,OAGzC,MAAO,CAAC+L,EAAQC,IAzED,KA2EhBC,aAAa,WAIZ,IAHA,IAAIF,EAAU,GACVC,EAAW,GACXE,EAAS,EACL7M,EAAE,EAAGA,EAAE,EAAKyL,QAAQzL,IAC3B,IAAI,IAAIsK,EAAE,EAAGA,EAAE,EAAKqB,QAAQrB,IAAI,CAC/BhL,QAAQC,IAAI,MAAMS,EAAE,OAAQsK,EAAG,EAAKiB,OAAOvL,GAAGsK,IAC9C,IAAI1C,EAAW,GAAK,EAAK2D,OAAOvL,GAAGsK,GACnCoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAM9M,IAClD6M,IAIF,IAAI,IAAIvC,EAAE,EAAGA,EAAE,EAAKqB,QAASrB,IAE5B,IADA,IAAI5C,EAAI,EAAE4C,EACFtK,EAAE,EAAGA,EAAE,EAAKyL,QAAQzL,IACxBA,EAAE,EAAE,EAAKyL,SACXkB,EAASvM,KAAK,CAACM,KAAKgH,EAAKzJ,GAAIyJ,EAAI,EAAKiE,QAAS1J,MAAM,CAAE8K,QAAS,MAEjErF,GAAQ,EAAKiE,QAIf,MAAO,CAACe,EAAQC,IAjGhBpO,KAAKyB,EAAEA,EACPzB,KAAK+L,EAAEA,GCFL0C,GAAc,IAAI1B,GAAM,EAAE,GAC1BjK,GAAW,IAAIC,UAAQ,IACvBC,GAAW,IAAID,UAAQ,IACvB2L,GAAY,IAAI3L,UAAQ,IACxB4L,GAAY,IAAI5L,UAAQ,IAGxBE,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAEH4L,GAAQ,CACX1L,MAAOJ,GACPK,KAAMH,IAEHI,GAAU,CACbF,MAAM,CACL2L,MAAO,MACJC,OAAQ,GACRC,gBAAiB,CACfC,QAAS,KAERvL,YAAa,IAEjBwL,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cAIjBC,GAAW,CACdnM,MAAM,CACL2L,MAAO,MACJC,OAAQ,GACRC,gBAAiB,CACfC,QAAS,KAERvL,YAAa,IAEjBwL,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cA4PJE,G,kDApPhB,WAAYvL,GAAQ,IAAD,8BAClB,cAAMA,IAoCPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA1CvC,EA8CnB0K,eAAiB,WAChBd,GAAYtB,MAAMlL,SAAS,EAAK8C,MAAMwI,QACtCkB,GAAYpB,MAAMpL,SAAS,EAAK8C,MAAMyI,WACtCiB,GAAYnB,oBACZxK,GAAW,IAAIC,UAAQ0L,GAAYJ,eAAe,IAClDrL,GAAW,IAAID,UAAQ0L,GAAYJ,eAAe,IAClDpL,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,IACtDrC,QAAQC,IAAI,aA3DM,EA8DnB8D,UAAY,WACX2J,GAAYf,aAAazL,SAAS,EAAK8C,MAAMyK,cAAcvN,SAAS,EAAK8C,MAAM0K,iBAAiB,EAAK1K,MAAMC,MAC3GlC,GAAW,IAAIC,UAAQ0L,GAAYJ,eAAe,IAClDrL,GAAW,IAAID,UAAQ0L,GAAYJ,eAAe,IAClDtN,QAAQC,IAAI8B,IACZG,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAvEpC,EA0EnBkC,aAAe,WACdmJ,GAAY7D,aAAa3I,SAAS,EAAK8C,MAAMyK,cAAcvN,SAAS,EAAK8C,MAAM0K,kBAC/E3M,GAAW,IAAIC,UAAQ0L,GAAYJ,eAAe,IAClDrL,GAAW,IAAID,UAAQ0L,GAAYJ,eAAe,IAClDtN,QAAQC,IAAI8B,IACZG,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAnFpC,EAsFnBsM,cAAgB,WACfjB,GAAYb,uBACZc,GAAY,IAAI3L,UAAQ0L,GAAYP,UAAU,IAC9CS,GAAY,IAAI5L,UAAQ0L,GAAYP,UAAU,IAC9CnN,QAAQC,IAAI8B,IACZ8L,GAAQ,CACP1L,MAAOwL,GACPzJ,MAAO0J,IAER,EAAKzJ,QAAU,IAAIC,UAAQ,EAAKwK,QAAQtK,QAASuJ,GAAOS,KA/FtC,EAkGnB1J,aAAe,WACd+I,GAAY,IAAI3L,UAAQ0L,GAAYP,UAAU,IAC9CS,GAAY,IAAI5L,UAAQ0L,GAAYP,UAAU,IAC9C,IAAIF,EAASS,GAAYR,sBAAsBhM,SAAS,EAAK8C,MAAMyK,cAAcvN,SAAS,EAAK8C,MAAM0K,kBACrGd,GAAU/I,IAAI,CAACzD,KAAMF,SAAS+L,GAAStO,GAAIuC,SAAS+L,GAAQnI,MAAM5D,SAAS+L,GAAQtK,MAAM,CAACA,MAAM,aAChGkL,GAAQ,CACP1L,MAAOwL,GACPzJ,MAAO0J,IAER,EAAKzJ,QAAU,IAAIC,UAAQ,EAAKwK,QAAQtK,QAASuJ,GAAOS,KA3GtC,EA8GnBvJ,eAAiB,WAChB,IACMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA2B,wBAAtBmB,EAASE,WAAwD,gBAAjBF,EAASG,OAAwB,CACrFuI,GAAYtB,MAAMlL,SAAS8D,EAAS6J,EAAE,KACtCnB,GAAYpB,MAAMpL,SAAS8D,EAAS6J,EAAE,KACtCnB,GAAYnB,oBACZ,IAAK,IAAI7L,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAC1CgN,GAAYf,aAAazL,SAAS8D,EAASvD,QAAQf,GAAGoO,QAAQ,IAAI5N,SAAS8D,EAASvD,QAAQf,GAAGoO,QAAQ,IAAI9J,EAASvD,QAAQf,GAAGyH,OAEhIpG,GAAW,IAAIC,UAAQ0L,GAAYJ,eAAe,IAClDrL,GAAW,IAAID,UAAQ0L,GAAYJ,eAAe,IAClDpL,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAGtDgD,MAAM,kEAlIW,EAsInBC,eAAiB,aApIhB,EAAKtB,MAAQ,CACZ+K,OAAQ,SACRC,QAAS,GACTxC,MAAO,GACPC,SAAU,GACVgC,aAAc,GACdC,gBAAiB,GACjBzK,KAAM,GACNQ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAGZ,EAAKM,QAAU,GACjB,EAAK8K,SAAW,GACd,EAAK5K,OAAS8B,sBACd,EAAKyI,QAAUzI,sBACjB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAnBP,E,qDAsBnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,gCAEvD,WACCpD,KAAKgQ,SAAW,IAAI7K,UAAQnF,KAAK2P,QAAQtK,QAASuJ,GAAOS,M,+BAG1D,SAAkBpL,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBA2GX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,QAAQ3F,UAAU,eAAewI,YAAY,qBAAqBtI,GAAG,aAAa2G,MAAO7F,KAAK+E,MAAMwI,MAAO9F,SAAUzH,KAAKmH,sBAErJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,WAAW3F,UAAU,eAAewI,YAAY,wBAAwBtI,GAAG,gBAAgB2G,MAAO7F,KAAK+E,MAAMyI,SAAU/F,SAAUzH,KAAKmH,sBAEjK,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4P,kBAAtE,iCAGF,qBAAKvQ,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,eAAe3F,UAAU,eAAewI,YAAY,WAAWtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMyK,aAAc/H,SAAUzH,KAAKmH,sBAEtJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,kBAAkB3F,UAAU,eAAewI,YAAY,cAActI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM0K,gBAAiBhI,SAAUzH,KAAKmH,sBAE/J,qBAAKnI,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,wBAG7D,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,4BAED,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,2BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+P,iBAAtE,oCAED,qBAAK1Q,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAMF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKA,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,SAC3C,qBAAKpG,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAK2P,iB,GA/Od1H,aCjD5BgI,GAAW,IAAIlD,GAAM,EAAE,GACvBjK,GAAW,IAAIC,UAAQ,IACvBC,GAAW,IAAID,UAAQ,IACvB2L,GAAY,IAAI3L,UAAQ,IACxB4L,GAAY,IAAI5L,UAAQ,IAGxBE,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAEH4L,GAAQ,CACX1L,MAAOJ,GACPK,KAAMH,IAEHI,GAAU,CACbF,MAAM,CACL2L,MAAO,MACJC,OAAQ,GACRC,gBAAiB,CACfC,QAAS,KAERvL,YAAa,IAEjBwL,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cAIjBC,GAAW,CACdnM,MAAM,CACL2L,MAAO,MACJC,OAAQ,GACRC,gBAAiB,CACfC,QAAS,KAERvL,YAAa,IAEjBwL,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cA4PJc,G,kDApPhB,WAAYnM,GAAQ,IAAD,8BAClB,cAAMA,IAoCPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA1CvC,EA8CnB0K,eAAiB,WAChBU,GAAS9C,MAAMlL,SAAS,EAAK8C,MAAMwI,QACnC0C,GAAS5C,MAAMpL,SAAS,EAAK8C,MAAMyI,WACnCyC,GAAS3C,oBACTxK,GAAW,IAAIC,UAAQkN,GAAS5B,eAAe,IAC/CrL,GAAW,IAAID,UAAQkN,GAAS5B,eAAe,IAC/CpL,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,IACtDrC,QAAQC,IAAI,aA3DM,EA8DnB8D,UAAY,WACXmL,GAASvC,aAAazL,SAAS,EAAK8C,MAAMyK,cAAcvN,SAAS,EAAK8C,MAAM0K,iBAAiB,EAAK1K,MAAMC,MACxGlC,GAAW,IAAIC,UAAQkN,GAAS5B,eAAe,IAC/CrL,GAAW,IAAID,UAAQkN,GAAS5B,eAAe,IAC/CtN,QAAQC,IAAI8B,IACZG,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAvEpC,EA0EnBkC,aAAe,WACd2K,GAASrF,aAAa3I,SAAS,EAAK8C,MAAMyK,cAAcvN,SAAS,EAAK8C,MAAM0K,kBAC5E3M,GAAW,IAAIC,UAAQkN,GAAS5B,eAAe,IAC/CrL,GAAW,IAAID,UAAQkN,GAAS5B,eAAe,IAC/CtN,QAAQC,IAAI8B,IACZG,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAnFpC,EAsFnBsM,cAAgB,WACfO,GAAStC,oBACTe,GAAY,IAAI3L,UAAQkN,GAAS/B,UAAU,IAC3CS,GAAY,IAAI5L,UAAQkN,GAAS/B,UAAU,IAC3CnN,QAAQC,IAAI8B,IACZ8L,GAAQ,CACP1L,MAAOwL,GACPzJ,MAAO0J,IAER,EAAKzJ,QAAU,IAAIC,UAAQ,EAAKwK,QAAQtK,QAASuJ,GAAOS,KA/FtC,EAkGnB1J,aAAe,WACd+I,GAAY,IAAI3L,UAAQkN,GAAS/B,UAAU,IAC3CS,GAAY,IAAI5L,UAAQkN,GAAS/B,UAAU,IAC3C,IAAIF,EAASiC,GAASpC,mBAAmB5L,SAAS,EAAK8C,MAAMyK,cAAcvN,SAAS,EAAK8C,MAAM0K,kBAC/Fd,GAAU/I,IAAI,CAACzD,KAAMF,SAAS+L,GAAStO,GAAIuC,SAAS+L,GAAQnI,MAAM5D,SAAS+L,GAAQtK,MAAM,CAACA,MAAM,aAChGkL,GAAQ,CACP1L,MAAOwL,GACPzJ,MAAO0J,IAER,EAAKzJ,QAAU,IAAIC,UAAQ,EAAKwK,QAAQtK,QAASuJ,GAAOS,KA3GtC,EA8GnBvJ,eAAiB,WAChB,IACMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA2B,wBAAtBmB,EAASE,WAAwD,aAAjBF,EAASG,OAAqB,CAClF+J,GAAS9C,MAAMlL,SAAS8D,EAAS6J,EAAE,KACnCK,GAAS5C,MAAMpL,SAAS8D,EAAS6J,EAAE,KACnCK,GAAS3C,oBACT,IAAK,IAAI7L,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAC1CwO,GAASvC,aAAazL,SAAS8D,EAASvD,QAAQf,GAAGoO,QAAQ,IAAI5N,SAAS8D,EAASvD,QAAQf,GAAGoO,QAAQ,IAAI9J,EAASvD,QAAQf,GAAGyH,OAE7HpG,GAAW,IAAIC,UAAQkN,GAAS5B,eAAe,IAC/CrL,GAAW,IAAID,UAAQkN,GAAS5B,eAAe,IAC/CpL,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAGtDgD,MAAM,kEAlIW,EAsInBC,eAAiB,aApIhB,EAAKtB,MAAQ,CACZ+K,OAAQ,SACRC,QAAS,GACTxC,MAAO,GACPC,SAAU,GACVgC,aAAc,GACdC,gBAAiB,GACjBzK,KAAM,GACNQ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAGZ,EAAKM,QAAU,GACjB,EAAK8K,SAAW,GACd,EAAK5K,OAAS8B,sBACd,EAAKyI,QAAUzI,sBACjB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAnBP,E,qDAsBnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,gCAEvD,WACCpD,KAAKgQ,SAAW,IAAI7K,UAAQnF,KAAK2P,QAAQtK,QAASuJ,GAAOS,M,+BAG1D,SAAkBpL,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBA2GX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,QAAQ3F,UAAU,eAAewI,YAAY,qBAAqBtI,GAAG,aAAa2G,MAAO7F,KAAK+E,MAAMwI,MAAO9F,SAAUzH,KAAKmH,sBAErJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,WAAW3F,UAAU,eAAewI,YAAY,wBAAwBtI,GAAG,gBAAgB2G,MAAO7F,KAAK+E,MAAMyI,SAAU/F,SAAUzH,KAAKmH,sBAEjK,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4P,kBAAtE,iCAGF,qBAAKvQ,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,eAAe3F,UAAU,eAAewI,YAAY,WAAWtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMyK,aAAc/H,SAAUzH,KAAKmH,sBAEtJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,kBAAkB3F,UAAU,eAAewI,YAAY,cAActI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM0K,gBAAiBhI,SAAUzH,KAAKmH,sBAE/J,qBAAKnI,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,wBAG7D,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,4BAED,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,2BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+P,iBAAtE,iCAED,qBAAK1Q,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAMF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKA,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,SAC3C,qBAAKpG,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAK2P,iB,GA/OjB1H,aCyGdkI,GA3JX,aAAe,IAAD,gCAKd/P,SAAW,SAACgQ,GACS,GAAd,EAAKjI,SACJ,EAAKkI,WAAWD,GAChB,EAAKE,UAAUF,IAEZA,EAAUG,OAAS,EAAKC,aAAaD,OACpC,EAAKE,eAAeL,GACdA,EAAUG,OAAS,EAAKG,YAAYH,OAC1C,EAAKI,cAAcP,GAEnB,EAAKQ,cAAcR,IAfjB,KAoBdK,eAAiB,SAACL,GACd,EAAKI,aAAaK,YAAYT,GAC9BA,EAAUU,aAAa,EAAKN,cAC5B,EAAKH,WAAWD,IAvBN,KA0BdQ,cAAgB,SAACR,GACb,IAAIW,EAAO,KACPC,EAAO,KAEX,IADAD,EAAO,EAAKP,aACNO,EAAKR,OAASH,EAAUG,QAC1BQ,EAAOA,EAAKE,gBAGhBD,EAAOD,EAAKG,eACPJ,aAAaV,GAClBA,EAAUU,aAAaC,GACvBX,EAAUS,YAAYG,GACtBD,EAAKF,YAAYT,IAtCP,KAyCdO,cAAgB,SAACP,GACb,EAAKM,YAAYI,aAAaV,GAC9BA,EAAUS,YAAY,EAAKH,aAC3B,EAAKJ,UAAUF,IA5CL,KAiDde,OAAS,SAACC,GAEN,GAAiB,GAAd,EAAKjJ,QACJpH,QAAQC,IAAI,eAIZ,GAAG,EAAKwP,aAAaD,QAAUa,EAC3B,GAAuC,MAApC,EAAKZ,aAAaS,eAAuB,CAExC,IAAI1I,EAAO,EAAKiI,aAAaS,eAC7B,EAAKT,aAAaM,aAAa,MAC/BvI,EAAKsI,YAAY,MACjB,EAAKR,WAAW9H,QAIhB,EAAK8H,WAAW,MAChB,EAAKC,UAAU,WAEjB,GAAI,EAAKI,YAAYH,QAAUa,EAEjC,GAAqC,MAAlC,EAAKV,YAAYQ,cAAsB,CAEtC,IAAI3I,EAAO,EAAKmI,YAAYQ,cAC5B,EAAKR,YAAYG,YAAY,MAC7BtI,EAAKuI,aAAa,MAClB,EAAKR,UAAU/H,QAGf,EAAK8H,WAAW,MAChB,EAAKC,UAAU,UAGlB,CAED,IAAIrP,EAAc,EAAKuP,aACvB,EAAG,CAEC,GADAzP,QAAQC,IAAI,EAAKwP,aAAaD,QAC1BtP,EAAYsP,QAAUa,EAAE,CAExB,IAAIjQ,EAAWF,EAAYiQ,cACvBjR,EAAYgB,EAAYgQ,eAO5B,OALAhQ,EAAY6P,aAAa,MACzB7P,EAAY4P,YAAY,MACxB1P,EAAS2P,aAAa7Q,GACtBA,EAAU4Q,YAAY1P,GAEfJ,QAAQC,IAAI,WAGvBC,EAAcA,EAAYgQ,qBAEN,MAAfhQ,KAvGP,KAgHdwH,MAAQ,WACJ,GAAmB,GAAhB,EAAKN,QAEJ,IADA,IAAIkJ,EAAM,EAAKb,aACD,MAAPa,GACHtQ,QAAQC,IAAI,gBAAkBqQ,EAAId,QAClCc,EAAMA,EAAIJ,oBAGdlQ,QAAQC,IAAI,UAxHN,KA4HdsQ,SAAW,SAACF,GACR,GAAmB,GAAhB,EAAKjJ,QAEJ,IADA,IAAIkJ,EAAM,EAAKb,aACF,MAAPa,GAAY,CACd,GAAGA,EAAId,QAAUa,EACb,OAAOC,EAEXA,EAAMA,EAAIJ,eAGlB,OAAO,MAtIG,KA0Id9I,MAAQ,WACJ,OAAyB,MAArB,EAAKqI,cA3IC,KAmJdA,WAAa,WAAQ,OAAO,EAAK9H,SAnJnB,KAoJd2H,WAAa,SAAC3H,GAAc,EAAKA,QAAUA,GApJ7B,KAqJdgI,UAAY,WAAQ,OAAO,EAAK9N,QArJlB,KAsJd0N,UAAY,SAAC1N,GAAa,EAAKA,OAASA,GArJpC5C,KAAK0I,QAAU,KACf1I,KAAK4C,OAAS,MCwJP2O,GA1JX,aAAe,IAAD,gCAKdnR,SAAW,SAACgQ,GACW,GAAhB,EAAKjI,SACJ,EAAKkI,WAAWD,GAChB,EAAKE,UAAUF,IAEZA,EAAUoB,OAAS,EAAKhB,aAAagB,OACpC,EAAKf,eAAeL,GACdA,EAAUoB,OAAS,EAAKd,YAAYc,OAC1C,EAAKb,cAAcP,GAEnB,EAAKQ,cAAcR,IAfjB,KAoBdK,eAAiB,SAACL,GACd,EAAKI,aAAaK,YAAYT,GAC9BA,EAAUU,aAAa,EAAKN,cAC5B,EAAKH,WAAWD,IAvBN,KA0BdQ,cAAgB,SAACR,GACb,IAAIW,EAAO,KACPC,EAAO,KAEX,IADAD,EAAO,EAAKP,aACNO,EAAKS,OAASpB,EAAUoB,QAC1BT,EAAOA,EAAKE,gBAGhBD,EAAOD,EAAKG,eACPJ,aAAaV,GAClBA,EAAUU,aAAaC,GACvBX,EAAUS,YAAYG,GACtBD,EAAKF,YAAYT,IAtCP,KAyCdO,cAAgB,SAACP,GAEb,EAAKM,YAAYI,aAAaV,GAC9BA,EAAUS,YAAY,EAAKH,aAC3B,EAAKJ,UAAUF,IA7CL,KAiDde,OAAS,SAACM,GAEN,GAAiB,GAAd,EAAKtJ,QACJpH,QAAQC,IAAI,eAIZ,GAAG,EAAKwP,aAAagB,QAAUC,EAC3B,GAAuC,MAApC,EAAKjB,aAAaS,eAAuB,CAExC,IAAI1I,EAAO,EAAKiI,aAAaS,eAC7B,EAAKT,aAAaM,aAAa,MAC/BvI,EAAKsI,YAAY,MACjB,EAAKR,WAAW9H,QAIhB,EAAK8H,WAAW,MAChB,EAAKC,UAAU,WAEjB,GAAI,EAAKI,YAAYc,QAAUC,EAEjC,GAAqC,MAAlC,EAAKf,YAAYQ,cAAsB,CAEtC,IAAI3I,EAAO,EAAKmI,YAAYQ,cAC5B,EAAKR,YAAYG,YAAY,MAC7BtI,EAAKuI,aAAa,MAClB,EAAKR,UAAU/H,QAGf,EAAK8H,WAAW,MAChB,EAAKC,UAAU,UAGlB,CAED,IAAIrP,EAAc,EAAKuP,aACvB,EAAG,CAEC,GADAzP,QAAQC,IAAI,EAAKwP,aAAagB,QAC1BvQ,EAAYuQ,QAAUC,EAAE,CAExB,IAAItQ,EAAWF,EAAYiQ,cACvBjR,EAAYgB,EAAYgQ,eAO5B,OALAhQ,EAAY6P,aAAa,MACzB7P,EAAY4P,YAAY,MACxB1P,EAAS2P,aAAa7Q,GACtBA,EAAU4Q,YAAY1P,GAEfJ,QAAQC,IAAI,WAGvBC,EAAcA,EAAYgQ,qBAEN,MAAfhQ,KAvGP,KA+GdwH,MAAQ,WACJ,GAAiB,GAAd,EAAKN,QAEJ,IADA,IAAIkJ,EAAM,EAAKb,aACD,MAAPa,GACHtQ,QAAQC,IAAI,gBAAkBqQ,EAAIG,QAClCH,EAAMA,EAAIJ,oBAGdlQ,QAAQC,IAAI,UAvHN,KA2HdsQ,SAAW,SAACG,GACR,GAAiB,GAAd,EAAKtJ,QAEJ,IADA,IAAIkJ,EAAM,EAAKb,aACF,MAAPa,GAAY,CACd,GAAGA,EAAIG,QAAUC,EACb,OAAOJ,EAEXA,EAAMA,EAAIJ,eAGlB,OAAO,MArIG,KAyId9I,MAAQ,WACJ,OAAyB,MAArB,EAAKqI,cA1IC,KAkJdA,WAAa,WAAQ,OAAO,EAAK9H,SAlJnB,KAmJd2H,WAAa,SAAC3H,GAAc,EAAKA,QAAUA,GAnJ7B,KAoJdgI,UAAY,WAAQ,OAAO,EAAK9N,QApJlB,KAqJd0N,UAAY,SAAC1N,GAAa,EAAKA,OAASA,GApJpC5C,KAAK0I,QAAU,KACf1I,KAAK4C,OAAS,MC4IP8O,GA/IX,aAAe,IAAD,gCAKdtR,SAAW,SAACgQ,GACS,GAAd,EAAKjI,SACJ,EAAKkI,WAAWD,GAChB,EAAKE,UAAUF,IAEZA,EAAUoB,OAAS,EAAKhB,aAAagB,OACpC,EAAKf,eAAeL,GACdA,EAAUoB,OAAS,EAAKd,YAAYc,OAC1C,EAAKb,cAAcP,GAEnB,EAAKQ,cAAcR,IAfjB,KAqBdK,eAAiB,SAACL,GACd,EAAKI,aAAamB,aAAavB,GAC/BA,EAAUwB,WAAW,EAAKpB,cAC1B,EAAKH,WAAWD,IAxBN,KA2BdQ,cAAgB,SAACR,GACb,IAAIW,EAAO,KACPC,EAAO,KAEX,IADAD,EAAO,EAAKP,aACNO,EAAKS,OAASpB,EAAUoB,QAC1BT,EAAOA,EAAKc,cAGhBb,EAAOD,EAAKe,gBACPF,WAAWxB,GAChBA,EAAUwB,WAAWb,GACrBX,EAAUuB,aAAaX,GACvBD,EAAKY,aAAavB,IAvCR,KA0CdO,cAAgB,SAACP,GACb,EAAKM,YAAYkB,WAAWxB,GAC5BA,EAAUuB,aAAa,EAAKjB,aAC5B,EAAKJ,UAAUF,IA7CL,KAgDd3H,MAAQ,WACJ,GAAiB,GAAd,EAAKN,QAEJ,IADA,IAAIkJ,EAAM,EAAKb,aACD,MAAPa,GACHtQ,QAAQC,IAAI,SAAWqQ,EAAIU,UAAY,oBAAsBV,EAAIG,OAAW,IAAMH,EAAId,QACtFc,EAAMA,EAAIQ,kBAGd9Q,QAAQC,IAAI,UAxDN,KA8DdmQ,OAAS,SAACM,GAEN,GAAiB,GAAd,EAAKtJ,QACJpH,QAAQC,IAAI,eAIZ,GAAG,EAAKwP,aAAagB,QAAUC,EAC3B,GAAqC,MAAlC,EAAKjB,aAAaqB,aAAqB,CAEtC,IAAItJ,EAAO,EAAKiI,aAAaqB,aAC7B,EAAKrB,aAAaoB,WAAW,MAC7BrJ,EAAKoJ,aAAa,MAClB,EAAKtB,WAAW9H,QAIhB,EAAK8H,WAAW,MAChB,EAAKC,UAAU,WAEjB,GAAI,EAAKI,YAAYc,QAAUC,EAEjC,GAAsC,MAAnC,EAAKf,YAAYoB,eAAuB,CAEvC,IAAIvJ,EAAO,EAAKmI,YAAYoB,eAC5B,EAAKpB,YAAYiB,aAAa,MAC9BpJ,EAAKqJ,WAAW,MAChB,EAAKtB,UAAU/H,QAGf,EAAK8H,WAAW,MAChB,EAAKC,UAAU,UAGlB,CAED,IAAIrP,EAAc,EAAKuP,aAAaqB,aAChC1Q,EAAW,EAAKqP,aACpB,EAAG,CAEC,GAAIvP,EAAYuQ,QAAUC,EAAE,CAExB,IAAIxR,EAAYgB,EAAY4Q,aAO5B,OALA5Q,EAAY2Q,WAAW,MACvB3Q,EAAY0Q,aAAa,MACzBxQ,EAASyQ,WAAW3R,GACpBA,EAAU0R,aAAaxQ,GAEhBJ,QAAQC,IAAI,WAGvBC,EAAcA,EAAY4Q,aAC1B1Q,EAAWA,EAAS0Q,mBAEA,MAAf5Q,KArHP,KA+HdkH,MAAQ,WACJ,OAAyB,MAArB,EAAKqI,cAhIC,KAwIdA,WAAa,WAAQ,OAAO,EAAK9H,SAxInB,KAyId2H,WAAa,SAAC3H,GAAc,EAAKA,QAAUA,GAzI7B,KA0IdgI,UAAY,WAAQ,OAAO,EAAK9N,QA1IlB,KA2Id0N,UAAY,SAAC1N,GAAa,EAAKA,OAASA,GA1IpC5C,KAAK0I,QAAU,KACf1I,KAAK4C,OAAS,MC0BPoP,G,WAzBX,WAAYZ,GAAI,oBACZpR,KAAKoR,EAAIA,EACTpR,KAAKC,UAAY,KACjBD,KAAKmB,SAAW,KAChBnB,KAAK8N,KAAO,IAAI4D,G,gDAGpB,WAAiB,OAAO1R,KAAKC,Y,0BAE7B,SAAaA,GAAaD,KAAKC,UAAYA,I,yBAE3C,WAAgB,OAAOD,KAAKmB,W,yBAE5B,SAAY8Q,GAAajS,KAAKmB,SAAW8Q,I,qBAEzC,WAAY,OAAOjS,KAAK8N,O,qBAExB,SAAQA,GAAQ9N,KAAK8N,KAAOA,I,kBAE5B,WAAS,OAAO9N,KAAKoR,I,kBAErB,SAAKA,GAAKpR,KAAKoR,EAAIA,M,KCqIRc,GA5JX,aAAe,IAAD,gCAKd9R,SAAW,SAACgQ,GACS,GAAd,EAAKjI,SACJ,EAAKkI,WAAWD,GAChB,EAAKE,UAAUF,IAIZA,EAAUG,OAAS,EAAKC,aAAaD,OACpC,EAAKE,eAAeL,GACdA,EAAUG,OAAS,EAAKG,YAAYH,OAC1C,EAAKI,cAAcP,GAEnB,EAAKQ,cAAcR,IAjBjB,KAuBdK,eAAiB,SAACL,GACd,EAAKI,aAAa2B,UAAU/B,GAC5BA,EAAUgC,SAAS,EAAK5B,cACxB,EAAKH,WAAWD,IA1BN,KA6BdQ,cAAgB,SAACR,GAEb,IAAIW,EAAO,KACPC,EAAO,KAEX,IADAD,EAAO,EAAKP,aACNO,EAAKR,OAASH,EAAUG,QAC1BQ,EAAOA,EAAKsB,YAGhBrB,EAAOD,EAAKuB,aACPF,SAAShC,GACdA,EAAUgC,SAASrB,GACnBX,EAAU+B,UAAUnB,GACpBD,EAAKoB,UAAU/B,IA1CL,KA6CdO,cAAgB,SAACP,GAEb,EAAKM,YAAY0B,SAAShC,GAC1BA,EAAU+B,UAAU,EAAKzB,aACzB,EAAKJ,UAAUF,IAjDL,KAsDde,OAAS,SAACC,GAEN,GAAiB,GAAd,EAAKjJ,QACJpH,QAAQC,IAAI,cACX,CAED,GAAG,EAAKwP,aAAaD,QAAUa,EAAE,CAC7B,GAAmC,MAAhC,EAAKZ,aAAa6B,WAAmB,CAEpC,IAAI9J,EAAO,EAAKiI,aAAa6B,WAI7B,OAHA,EAAK7B,aAAa4B,SAAS,MAC3B7J,EAAK4J,UAAU,MACf,EAAK9B,WAAW9H,IACT,EAMP,OAFA,EAAK8H,WAAW,MAChB,EAAKC,UAAU,OACR,EAET,GAAI,EAAKI,YAAYH,QAAUa,EAAE,CAEnC,GAAmC,MAAhC,EAAKV,YAAY4B,YAAoB,CAEpC,IAAI/J,EAAO,EAAKmI,YAAY4B,YAI5B,OAHA,EAAK5B,YAAYyB,UAAU,MAC3B5J,EAAK6J,SAAS,MACd,EAAK9B,UAAU/H,IACR,EAKP,OAFA,EAAK8H,WAAW,MAChB,EAAKC,UAAU,OACR,EAKX,IAAIrP,EAAc,EAAKuP,aAAa6B,WAChClR,EAAW,EAAKqP,aACpB,EAAG,CAEC,GADAzP,QAAQC,IAAIC,GACRA,EAAYsP,QAAUa,EAAE,CAExB,IAAInR,EAAYgB,EAAYoR,WAQ5B,OANApR,EAAYmR,SAAS,MACrBnR,EAAYkR,UAAU,MACtBhR,EAASiR,SAASnS,GAClBA,EAAUkS,UAAUhR,GAEpBJ,QAAQC,IAAI,YACL,EAGXC,EAAcA,EAAYoR,WAC1BlR,EAAWA,EAASkR,iBAEA,MAAfpR,GAOjB,OAAO,MAxHG,KA+HdwH,MAAQ,WACJ,GAAiB,GAAd,EAAKN,QAEJ,IADA,IAAIkJ,EAAM,EAAKb,aACD,MAAPa,GACHtQ,QAAQC,IAAI,SAAWqQ,EAAIU,UAAY,oBAAsBV,EAAIG,OAAW,IAAMH,EAAId,QACtFc,EAAMA,EAAIgB,gBAGdtR,QAAQC,IAAI,UAvIN,KA2IdmH,MAAQ,WACA,OAAyB,MAArB,EAAKqI,cA5IH,KAoJdA,WAAa,WAAQ,OAAO,EAAK9H,SApJnB,KAqJd2H,WAAa,SAAC3H,GAAc,EAAKA,QAAUA,GArJ7B,KAsJdgI,UAAY,WAAQ,OAAO,EAAK9N,QAtJlB,KAuJd0N,UAAY,SAAC1N,GAAa,EAAKA,OAASA,GAtJpC5C,KAAK0I,QAAU,KACf1I,KAAK4C,OAAS,MCyBP2P,G,WAzBX,WAAYd,GAAI,oBACZzR,KAAKyR,EAAIA,EACTzR,KAAKC,UAAY,KACjBD,KAAKmB,SAAW,KAChBnB,KAAK+N,QAAU,IAAImE,G,gDAGvB,WAAiB,OAAOlS,KAAKC,Y,0BAE7B,SAAaA,GAAaD,KAAKC,UAAYA,I,yBAE3C,WAAgB,OAAOD,KAAKmB,W,yBAE5B,SAAYA,GAAYnB,KAAKmB,SAAWA,I,wBAExC,WAAe,OAAOnB,KAAK+N,U,wBAE3B,SAAWA,GAAW/N,KAAK+N,QAAUA,I,kBAErC,WAAS,OAAO/N,KAAKyR,I,kBAErB,SAAKA,GAAKzR,KAAKyR,EAAIA,M,KCaRe,GApCX,WAAYf,EAAGL,EAAGrR,GAAO,IAAD,gCAUxBgS,QAAU,WAAQ,OAAO,EAAKhS,MAVN,KAWxB0S,QAAU,SAAC1S,GAAU,EAAKA,KAAOA,GAXT,KAaxByR,KAAO,WAAO,OAAO,EAAKC,GAbF,KAexBlB,KAAO,WAAO,OAAO,EAAKa,GAfF,KAiBxBkB,UAAY,WAAO,OAAO,EAAKI,QAjBP,KAmBxBP,UAAY,SAACO,GAAY,EAAKA,OAASA,GAnBf,KAqBxBL,SAAW,WAAO,OAAO,EAAKM,OArBN,KAuBxBP,SAAW,SAACO,GAAY,EAAKA,MAAQA,GAvBb,KAyBxBb,aAAe,WAAO,OAAO,EAAKc,WAzBV,KA2BxBjB,aAAe,SAACiB,GAAe,EAAKA,UAAYA,GA3BxB,KA6BxBf,WAAa,WAAO,OAAO,EAAKgB,SA7BR,KA+BxBjB,WAAa,SAACiB,GAAa,EAAKA,QAAUA,GA9BtC7S,KAAKD,KAAOA,EACZC,KAAKyR,EAAIA,EACTzR,KAAKoR,EAAIA,EACTpR,KAAK0S,OAAS,KACd1S,KAAK2S,MAAQ,KACb3S,KAAK4S,UAAY,KACjB5S,KAAK6S,QAAU,MCNnBC,GAAiB,ICUjB,aAAe,IAAD,gCAMd1S,SAAW,SAACqR,EAAGL,EAAGrR,GAEd,IAAIqQ,EAAY,IAAIoC,GAAcf,EAAGL,EAAGrR,GACJ,MAAjC,EAAKgT,aAAazB,SAASG,IAC1B,EAAKsB,aAAa3S,SAAS,IAAImS,GAAoBd,IAEtB,MAA9B,EAAKuB,UAAU1B,SAASF,IACvB,EAAK4B,UAAU5S,SAAS,IAAI4R,GAAiBZ,IAGjD,EAAK2B,aAAazB,SAASG,GAAGsB,aAAa3S,SAASgQ,GACpD,EAAK4C,UAAU1B,SAASF,GAAG4B,UAAU5S,SAASgQ,IAjBpC,KAqBd3H,MAAQ,WAEJ,IAAIwK,EAAgB,EAAKD,UAAUxC,aAC/BvP,EAAc,KAClB,GAAoB,MAAjBgS,EACC,EAAE,CAGE,GAFAlS,QAAQC,IAAIiS,EAAc1C,QAER,OADlBtP,EAAcgS,EAAcD,UAAUxC,cAElC,GACIzP,QAAQC,IAAI,SAAWC,EAAY8Q,UAAY,oBAAsB9Q,EAAYuQ,OAAW,IAAMvQ,EAAYsP,QAC9GtP,EAAcA,EAAY4Q,mBACR,MAAf5Q,GAEXgS,EAAgBA,EAAchC,qBACV,MAAjBgC,GAOX,GAHAlS,QAAQC,IAAI,KAEZC,EAAc,KACM,OAFpBgS,EAAgB,EAAKF,aAAavC,cAG7B,EAAE,CACCzP,QAAQC,IAAIiS,EAAczB,QAC1B,IAAIvQ,EAAcgS,EAAcF,aAAavC,aAC7C,GAAkB,MAAfvP,EACE,GACGF,QAAQC,IAAI,SAAWC,EAAY8Q,UAAY,oBAAsB9Q,EAAYuQ,OAAW,IAAMvQ,EAAYsP,QAC9GtP,EAAcA,EAAYoR,iBACR,MAAfpR,GAEXgS,EAAgBA,EAAchC,qBACV,MAAjBgC,IAtDD,KA2DdzR,OAAS,SAACiQ,EAAGL,EAAGrR,GAEZ,IAAIkT,EAAgB,EAAKD,UAAUxC,aAC/BvP,EAAc,KAClB,GAAqB,MAAjBgS,EACA,EAAE,CAGE,GAAmB,OADnBhS,EAAcgS,EAAcD,UAAUxC,cAElC,EAAE,CACF,GAAIvP,EAAY8Q,WAAahS,GAAQkB,EAAYuQ,QAAUC,GAAKxQ,EAAYsP,QAAUa,EAElF,OADArQ,QAAQC,IAAI,SAAWC,EAAY8Q,UAAY,oBAAsB9Q,EAAYuQ,OAAW,IAAMvQ,EAAYsP,QACvGtP,EAEXA,EAAcA,EAAY4Q,mBACR,MAAf5Q,GAIPgS,EAAgBA,EAAchC,qBAEV,MAAjBgC,GAGX,OADAlS,QAAQC,IAAI,kBACL,MAnFG,KAsFdkS,QAAU,SAACzB,EAAGL,GAEV,IAAI6B,EAAgB,EAAKD,UAAUxC,aAC/BvP,EAAc,KAClB,GAAqB,MAAjBgS,EACA,EAAE,CAGE,GAAmB,OADnBhS,EAAcgS,EAAcD,UAAUxC,cAElC,EAAE,CACF,GAAIvP,EAAYuQ,QAAUC,GAAKxQ,EAAYsP,QAAUa,EAEjD,OADArQ,QAAQC,IAAI,SAAWC,EAAY8Q,UAAY,oBAAsB9Q,EAAYuQ,OAAW,IAAMvQ,EAAYsP,QACvGtP,EAAY8Q,UAEvB9Q,EAAcA,EAAY4Q,mBACR,MAAf5Q,GAIPgS,EAAgBA,EAAchC,qBAEV,MAAjBgC,GAGX,OADAlS,QAAQC,IAAI,kBACL,MA9GG,KAkHdK,OAAS,SAACoQ,EAAGL,EAAGrR,EAAMuB,GAGlB,IAAI2R,EAAgB,EAAKD,UAAUxC,aAC/BvP,EAAc,KAClB,GAAoB,MAAjBgS,EACC,EAAE,CAEE,GAAmB,OADnBhS,EAAcgS,EAAcD,UAAUxC,cAElC,EAAE,CACE,GAAIvP,EAAY8Q,WAAahS,GAAQkB,EAAYuQ,QAAUC,GAAKxQ,EAAYsP,QAAUa,EAGlF,OAFAnQ,EAAYwR,QAAQnR,GACpBP,QAAQC,IAAI,mBAAqBC,EAAY8Q,UAAY,oBAAsB9Q,EAAYuQ,OAAW,IAAMvQ,EAAYsP,QACjHtP,EAEXA,EAAcA,EAAY4Q,mBACR,MAAf5Q,GAEXgS,EAAgBA,EAAchC,qBAEV,MAAjBgC,GAGX,OADAlS,QAAQC,IAAI,kBACL,MAzIG,KA8IdmQ,OAAS,SAACM,EAAGL,EAAGrR,GAEkB,MAA3B,EAAKyB,OAAOiQ,EAAGL,EAAGrR,KACjB,EAAKgT,aAAazB,SAASG,GAAGsB,aAAa5B,OAAOC,GAClD,EAAK4B,UAAU1B,SAASF,GAAG4B,UAAU7B,OAAOM,IAEc,MAA3D,EAAKsB,aAAazB,SAASG,GAAGsB,aAAavC,cAC1C,EAAKuC,aAAa5B,OAAOM,GAE0B,MAAnD,EAAKuB,UAAU1B,SAASF,GAAG4B,UAAUxC,cACrC,EAAKwC,UAAU7B,OAAOC,IAxJhB,KA4JdzP,gBAAkB,WAEd,IAAIsR,EAAgB,EAAKF,aAAavC,aAClCvP,EAAc,KACdW,EAAM,GACN0M,EAAW,EAEf,GAAoB,MAAjB2E,EACC,EAAE,CACoB,GAAf,EAAKE,QACJvR,EAAIC,KAAK,CAAC3C,GAAG+C,SAASqM,GAAWxM,MAAM,SAASsR,OAAOH,EAAczB,QAASjD,MAAMtM,SAASgR,EAAczB,OAAO,KAEtHlD,IACA,IAAIrN,EAAcgS,EAAcF,aAAavC,aAC7C,GAAkB,MAAfvP,EACC,GACIW,EAAIC,KAAK,CAAC3C,GAAG+C,SAASqM,GAAWxM,MAAM,IAAIsR,OAAOnS,EAAYuQ,QAAQ,IAAI4B,OAAOnS,EAAYsP,QAAQ,IAAI6C,OAAOnS,EAAY8Q,WAAYxD,MAAMtM,SAAShB,EAAYuQ,OAAO,KAC1KlD,IACArN,EAAcA,EAAYoR,iBACR,MAAfpR,GAEXgS,EAAgBA,EAAchC,qBACV,MAAjBgC,GAKX,GADAhS,EAAc,KACM,OAFpBgS,EAAgB,EAAKD,UAAUxC,cAI3B,EAAE,CAME,GALgB,GAAb,EAAK2C,QACRvR,EAAIC,KAAK,CAAC3C,GAAG+C,SAASqM,GAAWxM,MAAO,YAAYsR,OAAOH,EAAc1C,QAAShC,MAAM,IAExFD,IAEmB,OADnBrN,EAAcgS,EAAcD,UAAUxC,cAElC,GACIlC,IACArN,EAAcA,EAAY4Q,mBACR,MAAf5Q,GAGXgS,EAAgBA,EAAchC,qBACV,MAAjBgC,GAGX,OAAOrR,GA1MG,KA8MdyR,gBAAkB,SAAC5B,EAAEL,EAAErR,GACnB,IAAIkT,EAAgB,EAAKF,aAAavC,aAElClC,EAAW,EAEf,GAAoB,MAAjB2E,EACC,EAAE,CACE3E,IACA,IAAIrN,EAAcgS,EAAcF,aAAavC,aAC7C,GAAkB,MAAfvP,EACC,EAAE,CACE,GAAIA,EAAYuQ,QAAQC,GAAKxQ,EAAYsP,QAAQa,GAAKnQ,EAAY8Q,WAAWhS,EAEzE,OAAOuO,EAEXA,IACArN,EAAcA,EAAYoR,iBACR,MAAfpR,GAEXgS,EAAgBA,EAAchC,qBACV,MAAjBgC,GAGX,OAAO,MArOG,KAwOdlR,gBAAkB,WAEd,IAAIkR,EAAgB,EAAKF,aAAavC,aAClCvP,EAAc,KACdW,EAAM,GACN0M,EAAW,EACXgF,EAAe,EAEnB,GAAoB,MAAjBL,EACC,EAAE,CACEK,EAAehF,EACfA,IACA,IAAIrN,EAAcgS,EAAcF,aAAavC,aAC7C,GAAkB,MAAfvP,EAAoB,CACnB,IAAIkI,EAAM,EAAKkK,gBAAgBpS,EAAYuQ,OAAQvQ,EAAYsP,OAAQtP,EAAY8Q,WAC3E,MAAL5I,GACCvH,EAAIC,KAAK,CAACM,KAAKF,SAASqR,GAAe5T,GAAGyJ,EAAK/G,OAAQ,OAE3D,GAE+B,MAAxBnB,EAAYoR,aACXzQ,EAAIC,KAAK,CAACM,KAAKF,SAASqM,GAAW5O,GAAGuC,SAASqM,EAAS,GAAIlM,OAAQ,OACpER,EAAIC,KAAK,CAACM,KAAKF,SAASqM,EAAS,GAAI5O,GAAGuC,SAASqM,GAAWlM,OAAQ,QAExEkM,IACArN,EAAcA,EAAYoR,iBACR,MAAfpR,GAGyB,MAAhCgS,EAAchC,gBACVrP,EAAIC,KAAK,CAACM,KAAKF,SAASqR,GAAe5T,GAAGuC,SAASqM,GAAWlM,OAAQ,OAE9E6Q,EAAgBA,EAAchC,qBACV,MAAjBgC,GAKX,GADAhS,EAAc,KACM,OAFpBgS,EAAgB,EAAKD,UAAUxC,cAI3B,EAAE,CAKE,GAHA8C,EAAehF,EACfA,IAEmB,OADnBrN,EAAcgS,EAAcD,UAAUxC,cACd,CACpB,IAAIrH,EAAM,EAAKkK,gBAAgBpS,EAAYuQ,OAAQvQ,EAAYsP,OAAQtP,EAAY8Q,WAC3E,MAAL5I,GACCvH,EAAIC,KAAK,CAACM,KAAKF,SAASqR,GAAe5T,GAAGyJ,EAAK/G,OAAQ,OAE3D,EAAE,CACE,GAA6B,MAA1BnB,EAAY4Q,aAAmB,CAC9B9Q,QAAQC,IAAI,QACZ,IAAIuS,EAAa,EAAKF,gBAAgBpS,EAAYuQ,OAAQvQ,EAAYsP,OAAQtP,EAAY8Q,WACtFyB,EAAa,EAAKH,gBAAgBpS,EAAY4Q,aAAaL,OAAQvQ,EAAY4Q,aAAatB,OAAQtP,EAAY4Q,aAAaE,WACjIhR,QAAQC,IAAIC,EAAY8Q,UAAW,IAAIyB,EAAW,MAAQvS,EAAY4Q,aAAaE,UAAW,IAAIwB,GAClG3R,EAAIC,KAAK,CAACM,KAAKF,SAASuR,GAAa9T,GAAGuC,SAASsR,GAAanR,OAAQ,OACtER,EAAIC,KAAK,CAACM,KAAKF,SAASsR,GAAa7T,GAAGuC,SAASuR,GAAapR,OAAQ,OAE1EkM,IACArN,EAAcA,EAAY4Q,mBACR,MAAf5Q,GAEyB,MAAhCgS,EAAchC,gBACVrP,EAAIC,KAAK,CAACM,KAAKF,SAASqR,GAAe5T,GAAGuC,SAASqM,GAAWlM,OAAQ,OAG9E6Q,EAAgBA,EAAchC,qBACV,MAAjBgC,GAGX,OAAOrR,GA/SG,KAkTd6R,qBAAuB,SAAC1O,GACV,QAAPA,EACC,EAAKoO,QAAS,EACF,SAAPpO,IACL,EAAKoO,QAAS,IAtTR,KA2Td9Q,aAAe,WAEX,IAAIqR,EAAO,qHAEPT,EAAgB,EAAKD,UAAUxC,aAC/BvP,EAAc,KAClB,GAAoB,MAAjBgS,EACC,EAAE,CAGE,GAFAlS,QAAQC,IAAIiS,EAAc1C,QAER,OADlBtP,EAAcgS,EAAcD,UAAUxC,cAElC,GACqC,MAA9ByC,EAAchC,eACiC,iBAApChP,SAAShB,EAAY8Q,YAA4B,GAAK9P,SAAShB,EAAY8Q,WACjF2B,EAAOA,EAAO,8BAAkCN,OAAOnS,EAAYuQ,QAAU,UAAY4B,OAAOnS,EAAYsP,QAAU,0BAA8BtO,SAAShB,EAAY8Q,WAAW,SAE7I,iBAA1B9Q,EAAY8Q,YACzB2B,EAAOA,EAAO,8BAAkCN,OAAOnS,EAAYuQ,QAAU,UAAY4B,OAAOnS,EAAYsP,QAArGmD,2BAAoJzS,EAAY8Q,UAAhK2B,WAImC,iBAApCzR,SAAShB,EAAY8Q,YAA4B,GAAK9P,SAAShB,EAAY8Q,WACjF2B,EAAOA,EAAO,8BAAkCN,OAAOnS,EAAYuQ,QAAU,UAAY4B,OAAOnS,EAAYsP,QAAU,0BAA8BtO,SAAShB,EAAY8Q,WAAW,QAE7I,iBAA1B9Q,EAAY8Q,YACzB2B,EAAOA,EAAO,8BAAkCN,OAAOnS,EAAYuQ,QAAU,UAAY4B,OAAOnS,EAAYsP,QAArGmD,2BAAoJzS,EAAY8Q,UAAhK2B,UAIfzS,EAAcA,EAAY4Q,mBACR,MAAf5Q,GAEXgS,EAAgBA,EAAchC,qBACV,MAAjBgC,GAIX,OAFAS,GAAc,YA9VJ,KAoWdX,WAAa,WAAO,OAAO,EAAKvF,UApWlB,KAqWdmG,WAAa,SAAC5F,GAAc,EAAKP,SAAWO,GArW9B,KAsWdiF,QAAU,WAAO,OAAO,EAAKzF,OAtWf,KAuWdqG,QAAU,SAAC9F,GAAW,EAAKP,MAAQO,GAtW/B9N,KAAKuN,MAAQ,IAAI4C,GACjBnQ,KAAKwN,SAAW,IAAI+D,GACpBvR,KAAKmT,QAAS,GDZlBrQ,GAAW,IAAIC,UAAQ+P,GAAenR,mBACtCqB,GAAW,IAAID,UAAQ+P,GAAe/Q,mBAGtCkB,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAGHI,GAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,aAIxBsL,OAAO,CACTC,aAAc,CACZC,UAAW,QAwRE0E,G,kDAhRhB,WAAY9P,GAAQ,IAAD,8BAClB,cAAMA,IA4BPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WAlCvC,EAuCnBC,UAAY,WACX,IAAI/E,EAAO+S,GAAetR,OAAO,EAAKuD,MAAM+O,MAAO,EAAK/O,MAAMgP,MAAO,EAAKhP,MAAMC,MAChFjE,QAAQC,IAAIjB,GACH,MAANA,GAEF+S,GAAe1S,SAAS,EAAK2E,MAAM+O,MAAO,EAAK/O,MAAMgP,MAAO,EAAKhP,MAAMC,MACvElC,GAAW,IAAIC,UAAQ+P,GAAenR,mBACtCqB,GAAW,IAAID,UAAQ+P,GAAe/Q,mBACtCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAGtDgD,MAAM,sCAvDW,EA4DnBd,aAAe,WACdwN,GAAe3B,OAAO,EAAKpM,MAAM+O,MAAO,EAAK/O,MAAMgP,MAAO,EAAKhP,MAAMC,MACrElC,GAAW,IAAIC,UAAQ+P,GAAenR,mBACtCqB,GAAW,IAAID,UAAQ+P,GAAe/Q,mBACtCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KArEpC,EAwEnBmC,aAAe,WACduN,GAAezR,OAAO,EAAK0D,MAAM+O,MAAO,EAAK/O,MAAMgP,MAAO,EAAKhP,MAAMC,KAAM,EAAKD,MAAMS,kBACtF1C,GAAW,IAAIC,UAAQ+P,GAAenR,mBACtCqB,GAAW,IAAID,UAAQ+P,GAAe/Q,mBACtCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAjFpC,EAoFnBuC,aAAe,WACd,IAAI5F,EAAO+S,GAAeO,gBAAgB,EAAKtO,MAAM+O,MAAO,EAAK/O,MAAMgP,MAAO,EAAKhP,MAAMC,MACrF,GAAK/C,SAASlC,IACjBgB,QAAQC,IAAIjB,EAAK,eACjB+C,GAAW,IAAIC,UAAQ+P,GAAenR,mBACtCqB,GAAW,IAAID,UAAQ+P,GAAe/Q,mBACtCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERA,GAAS4C,IAAI,CAACzD,KAAMF,SAASlC,GAAOL,GAAIuC,SAASlC,GAAO8F,MAAM5D,SAASlC,GAAM2D,MAAM,CAACA,MAAM,cAG1F3C,QAAQC,IAAIjB,GAIb,EAAKmF,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KArGpC,EAwGnB0C,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aACvC,GAA0B,wBAAtBmB,EAASE,UAAoC,CAQhD,IAAI+N,EAAa,KACbC,EAAY,KACZxS,EAAI,EACRsE,EAASvD,QAAQ0R,SAAQ,SAAS5N,GACjC7E,EAAI,EACJ6E,EAAQuJ,QAAQqE,SAAQ,SAASC,GAC1B,GAAH1S,EACFuS,EAAYG,EACD,GAAH1S,IACRwS,EAAYE,GAEb1S,OAEDV,QAAQC,IAAIgT,EAAU,IAAIC,EAAU,KAAK3N,EAAQ4C,OACjD,IAAInJ,EAAO+S,GAAeI,QAAQc,EAAWC,GACpC,MAANlU,EACF+S,GAAezR,OAAO2S,EAAWC,EAAWlU,EAAMuG,EAAQ4C,OAE1D4J,GAAe1S,SAAS4T,EAAWC,EAAW3N,EAAQ4C,UAKxDpG,GAAW,IAAIC,UAAQ+P,GAAenR,mBACtCqB,GAAW,IAAID,UAAQ+P,GAAe/Q,mBACtCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAKtDgD,MAAM,6CAtJW,EA2JnBC,eAAiB,WAChB,IAAMC,EAAUC,SAASC,cAAc,KACnCC,EAAYqM,GAAezQ,aAAayQ,IACtCpM,EAAO,IAAIC,KAAK,CAACF,IACvBH,EAAQrH,KAAO2H,IAAIC,gBAAgBH,GAChCJ,EAAQQ,SAAW,sBACnBP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAQW,QACRb,MAAM,sBAnKS,EAuKnBgO,eAAiB,WAChBtB,GAAeW,qBAAqB,EAAK1O,MAAMoO,QAC/CrQ,GAAW,IAAIC,UAAQ+P,GAAenR,mBACrCqB,GAAW,IAAID,UAAQ+P,GAAe/Q,mBACtCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA9KvD,EAAK2B,MAAQ,CAEZC,KAAM,GACN8O,MAAO,GACPC,MAAO,GACPZ,OAAQ,GACR3N,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAdP,E,qDAiBnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBA2JX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,4BAED,qBAAK9F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,mBAAmB3F,UAAU,eAAewI,YAAY,oBAAoBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMS,iBAAkBiC,SAAUzH,KAAKmH,sBAEvK,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4F,gBAAtE,+BAED,qBAAKvG,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,wBAG7D,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,QAAQ3F,UAAU,eAAewI,YAAY,cAActI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM+O,MAAOrM,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,QAAQ3F,UAAU,eAAewI,YAAY,cAActI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMgP,MAAOtM,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAf,SACC,uBAAOuI,KAAK,OAAO5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,aAAatI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMoO,OAAQ1L,SAAUzH,KAAKmH,sBAE5I,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAKyU,kBAArE,wBAED,qBAAKpV,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,2BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAMF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GA3QjB6C,aEnCzBoM,GAAY,ICDf,WAAYzE,EAAGjI,EAAKC,GAAK,IAAD,gCAFxB0M,WAAW,EAEa,KADxBrH,SAAS,GACe,KAMxBsH,gBAAgB,SAACC,GAEhB,IADA,IAAI3P,EAAO,EACHpD,EAAE,EAAEA,EAAE+S,EAAOrO,OAAO1E,IAC3BoD,GAAQ2P,EAAOC,WAAWhT,GAE3B,OAAOoD,GAXgB,KAaxB6P,iBAAiB,SAACC,GAEjB,IADA,IAAIC,EAAa,GACTnT,EAAE,EAAEA,EAAEkT,EAAQxO,OAAO1E,IAAI,CAEhC,IADA,IAAIoD,EAAO,EACHkH,EAAE,EAAEA,EAAE4I,EAAQlT,GAAG0E,OAAO4F,IAC/BlH,GAAQ8P,EAAQlT,GAAGgT,WAAW1I,GAE/B6I,EAAa/S,KAAKgD,GAEnB,OAAO+P,GAtBgB,KAwBxBC,mBAAmB,WAClB,EAAKP,WAAW,EAChB,EAAKrH,SAAS,GAEd,IADA,IAAI8C,EAAU,EAAK+E,QACXrT,EAAE,EAAEA,EAAEsO,EAAQtO,IACrB,EAAKwL,SAASpL,KAAK,EAAE,KA7BC,KAgCxBkT,UAAU,WAET,IADA,IAAIC,EAAK,EACDvT,EAAE,EAAGA,EAAE,EAAKwT,kBAAmBxT,IAAI,EAEpB,GAAnB,EAAKwL,SAASxL,KAChBuT,GAAa,GAIf,OADa,EAAKC,kBAAkBD,GAxCb,KA2CxBC,gBAAgB,WACf,OAAO,EAAKhI,SAAS9G,QA5CE,KA8CxB+O,MAAM,SAACtF,GAAK,EAAKA,EAAEA,GA9CK,KA+CxBkF,MAAM,WAAK,OAAO,EAAKlF,GA/CC,KAgDxBuF,QAAQ,SAACxN,GAAO,EAAKA,IAAIA,GAhDD,KAiDxByN,QAAQ,WAAK,OAAO,EAAKzN,KAjDD,KAkDxB0N,QAAQ,SAACzN,GAAO,EAAKA,IAAIA,GAlDD,KAmDxB0N,QAAQ,WAAK,OAAO,EAAK1N,KAnDD,KAoDxB2N,eAAe,SAACvH,GACf,OAAO,EAAKf,SAASe,IArDE,KAuDxB5E,SAAS,WAER,IADA,IAAIoM,EAAM,IACF/T,EAAE,EAAGA,EAAE,EAAKqT,QAAQrT,IAC3B+T,GAAS,IAAI,EAAKvI,SAASxL,GAG5B+T,GAAO,MAD2B,IAAjB,EAAKT,YAAgB,EAAKD,QAAU,KAErD/T,QAAQC,IAAIwU,IA9DW,KAgExBC,gBAAkB,SAACC,GAClB,OAASA,EAAI,EAAKZ,SAjEK,KAmExBa,cAAgB,SAACD,GAGhB,IAFA,IAAIE,EAAW3T,SAASyT,GACpBG,EAAQ,EACND,GAAU,GACfA,GAAoB,EAMrB,OAJAC,EAASC,KAAKC,MAAOH,EAAW3T,SAAS,EAAK2N,IAC3C3N,SAAS4T,IAAU,EAAKf,UAC1Be,EAAQ5T,SAAS4T,GAAS,GAEnB5T,SAAS4T,IA7EM,KA+ExBG,sBAAsB,SAACN,GAEtB,OAAQI,KAAKC,MAAM,EAAKjB,SADhB,YAC4BY,EAAG,KAjFhB,KAmFxBO,UAAU,SAACC,GACV,GAAsB,IAAjB,EAAKnB,YAAiB,EAAKD,SAAU,EAAKQ,UAAU,CACxD,IAAInM,EAAM,EAAK8D,SACf,EAAK7D,WACL,IAAI+M,EAAa,EAAKrB,QACtB,EAAKI,MAAuB,IAAjB,EAAKH,YAAgB,EAAKK,WACrC,EAAKP,qBACL,IAAI,IAAIpT,EAAE,EAAGA,EAAE0U,EAAY1U,IAE1B,GADAV,QAAQC,IAAImI,EAAI1H,KACJ,GAAT0H,EAAI1H,GACN,GAAS,YAANyU,EAAiB,CACnBnV,QAAQC,IAAI,eAAemI,EAAI1H,IAC/B,IAAI,IAAIsK,EAAE,EAAEA,EAAE5C,EAAI1H,GAAG0E,OAAO4F,IAAI,CAC/B,IAAIqK,SAAejN,EAAI1H,GAAGsK,GAC1B,GAAU,UAAPqK,EAAgB,CACFjN,EAAI1H,GAAGsK,GACvB,EAAKsK,iBAAiBlN,EAAI1H,GAAGsK,QACd,UAAPqK,GACR,EAAKC,iBAAiBpU,SAASkH,EAAI1H,GAAGsK,WAGnC,GAAS,kBAANmK,EACR,IAAI,IAAInK,EAAE,EAAEA,EAAE5C,EAAI1H,GAAG0E,OAAO4F,IAAI,CAC/B,IAAIqK,SAAejN,EAAI1H,GAAGsK,GAC1B,GAAU,UAAPqK,EAAgB,CACFjN,EAAI1H,GAAGsK,GACvB,EAAKuK,uBAAuBnN,EAAI1H,GAAGsK,QACpB,UAAPqK,GACR,EAAKE,uBAAuBrU,SAASkH,EAAI1H,GAAGsK,UAGzC,GAAS,UAANmK,EACR,IAAI,IAAInK,EAAE,EAAEA,EAAE5C,EAAI1H,GAAG0E,OAAO4F,IAAI,CAC/B,IAAIqK,SAAejN,EAAI1H,GAAGsK,GAC1B,GAAU,UAAPqK,EAAgB,CACFjN,EAAI1H,GAAGsK,GACvB,EAAKwK,eAAepN,EAAI1H,GAAGsK,QACZ,UAAPqK,GACR,EAAKG,eAAetU,SAASkH,EAAI1H,GAAGsK,WAOzC,EAAK3C,YAhIiB,KAmIxBiN,iBAAiB,SAACX,GACjB3U,QAAQC,IAAI,QACZ,IAAIoV,SAAeV,EACnB3U,QAAQC,WAAW0U,GACnB,IAAIc,EAAc,EACR,UAAPJ,EACFI,EAAgBvU,SAAS,EAAKwT,gBAAgB,EAAKlB,gBAAgBmB,KACpD,UAAPU,IACRI,EAAgB,EAAKf,gBAAgBxT,SAASyT,KAE/C3U,QAAQC,IAAI,eAAewV,IACO,GAA/B,EAAKvJ,SAASuJ,IAChB,EAAKvJ,SAASuJ,GAAe3U,KAAK6T,GAElC,EAAKpB,eAEL,EAAKrH,SAASuJ,GAAe,CAACd,GAC9B,EAAKpB,cAEN,EAAK2B,UAAU,aAtJQ,KAwJxBM,eAAe,SAACb,GACf,IAAIU,SAAeV,EACfe,EAAY,EACN,UAAPL,EACFK,EAAcxU,SAAS,EAAK0T,cAAc,EAAKpB,gBAAgBmB,KAChD,UAAPU,IACRK,EAAc,EAAKd,cAAc1T,SAASyT,MAEX,GAA7B,EAAKzI,SAASwJ,IAChB,EAAKxJ,SAASwJ,GAAa5U,KAAK6T,GAGhC,EAAKpB,eAEL,EAAKrH,SAASwJ,GAAa,CAACf,GAC5B,EAAKpB,cAEN,EAAK2B,UAAU,WAzKQ,KA2KxBK,uBAAuB,SAACZ,GACvB,IACIgB,EAAoB,EAEvBA,EADS,iBAFShB,EAGIzT,SAAS,EAAK+T,sBAAsB,EAAKzB,gBAAgBmB,KAEzD,EAAKM,sBAAsBN,IAEV,GAArC,EAAKzI,SAASyJ,IAChB,EAAKzJ,SAASyJ,GAAqB7U,KAAK6T,GAExC,EAAKpB,eAEL,EAAKrH,SAASyJ,GAAqB,CAAChB,GACpC,EAAKpB,cAEN,EAAK2B,UAAU,mBA3LQ,KA8LxBU,eAAe,SAACjB,GACf,IACIe,EAAY,EAMhB,GAJCA,EADS,iBAFSf,EAGJzT,SAAS,EAAK0T,cAAc,EAAKpB,gBAAgBmB,KAEjD,EAAKC,cAAcD,IAEF,GAA7B,EAAKzI,SAASwJ,GAChB,GAAG,EAAKxJ,SAASwJ,GAAatQ,OAAO,GACpC,IAAI,IAAI1E,EAAE,EAAEA,EAAE,EAAKwL,SAASwJ,GAAatQ,OAAO1E,IAC/C,GAAG,EAAKwL,SAASwJ,GAAahV,IAAIiU,EAAE,CACnC,IAAIkB,EAAa,EAAK3J,SAASwJ,GAC/BG,EAAWC,OAAOpV,EAAE,GACpB,EAAKwL,SAASwJ,GAAeG,EAC7B,EAAKtC,aACL,YAIF,EAAKrH,SAASwJ,GAAa,EAAE,GAC7B,EAAKnC,aAGP,EAAK2B,UAAU,WAtNQ,KAwNxBa,iBAAiB,SAACpB,GACjB,IACIc,EAAc,EAMlB,GAJCA,EADS,iBAFSd,EAGFzT,SAAS,EAAKwT,gBAAgB,EAAKlB,gBAAgBmB,KAEnD,EAAKD,gBAAgBC,IAEJ,GAA/B,EAAKzI,SAASuJ,GAChB,GAAG,EAAKvJ,SAASuJ,GAAerQ,OAAO,GACtC,IAAI,IAAI1E,EAAE,EAAEA,EAAE,EAAKwL,SAASuJ,GAAerQ,OAAO1E,IACjD,GAAG,EAAKwL,SAASuJ,GAAe/U,IAAIiU,EAAE,CACrC,IAAIkB,EAAa,EAAK3J,SAASuJ,GAC/BI,EAAWC,OAAOpV,EAAE,GACpB,EAAKwL,SAASuJ,GAAiBI,EAC/B,EAAKtC,aACL,YAIF,EAAKrH,SAASuJ,GAAe,EAAE,GAC/B,EAAKlC,aAGP,EAAK2B,UAAU,aAhPQ,KAkPxBc,uBAAuB,SAACrB,GACvB,IACIgB,EAAoB,EAMxB,GAJCA,EADS,iBAFShB,EAGIzT,SAAS,EAAK+T,sBAAsB,EAAKzB,gBAAgBmB,KAEzD,EAAKM,sBAAsBN,IAEV,GAArC,EAAKzI,SAASyJ,GAChB,GAAG,EAAKzJ,SAASyJ,GAAqBvQ,OAAO,GAC5C,IAAI,IAAI1E,EAAE,EAAEA,EAAE,EAAKwL,SAASyJ,GAAqBvQ,OAAO1E,IACvD,GAAG,EAAKwL,SAASyJ,GAAqBjV,IAAIiU,EAAE,CAC3C,IAAIkB,EAAa,EAAK3J,SAASyJ,GAC/BE,EAAWC,OAAOpV,EAAE,GACpB,EAAKwL,SAASyJ,GAAuBE,EACrC,EAAKtC,aACL,YAIF,EAAKrH,SAASyJ,GAAqB,EAAE,GACrC,EAAKpC,aAGP,EAAK2B,UAAU,mBA1QQ,KA6QxBe,aAAa,SAACtB,GACb,IAAI1H,GAAQ,EACRiJ,EAAc,EAEdR,EAAY,EAMhB,GAJCA,EADS,iBAFSf,EAGJzT,SAAS,EAAK0T,cAAc,EAAKpB,gBAAgBmB,KAEjD,EAAKC,cAAcD,IAEF,GAA7B,EAAKzI,SAASwJ,GAChB,GAAG,EAAKxJ,SAASwJ,GAAatQ,OAAO,EACpC,IAAI,IAAI1E,EAAE,EAAEA,EAAE,EAAKwL,SAASwJ,GAAatQ,OAAO1E,IAC5C,EAAKwL,SAASwJ,GAAahV,IAAIiU,IACjC1H,EAAOyI,EACPQ,EAAcxV,QAIhBuM,EAAOyI,EAIT,OADA,EAAKR,UAAU,UACR,CAACjI,EAAOiJ,IApSQ,KAsSxBC,eAAe,SAACxB,GACf,IAAI1H,GAAQ,EACRiJ,EAAc,EAEdT,EAAc,EAMlB,GAJCA,EADS,iBAFSd,EAGFzT,SAAS,EAAKwT,gBAAgB,EAAKlB,gBAAgBmB,KAEnD,EAAKD,gBAAgBC,IAEJ,GAA/B,EAAKzI,SAASuJ,GAChB,GAAG,EAAKvJ,SAASuJ,GAAerQ,OAAO,EACtC,IAAI,IAAI1E,EAAE,EAAEA,EAAE,EAAKwL,SAASuJ,GAAerQ,OAAO1E,IAC9C,EAAKwL,SAASuJ,GAAe/U,IAAIiU,IACnC1H,EAAOwI,EACPS,EAAcxV,QAIhBuM,EAAOwI,EAIT,OADA,EAAKP,UAAU,YACR,CAACjI,EAAOiJ,IA7TQ,KA+TxBE,qBAAqB,SAACzB,GACrB,IAAI1H,GAAQ,EACRiJ,EAAc,EAEdP,EAAoB,EAMxB,GAJCA,EADS,iBAFShB,EAGIzT,SAAS,EAAK+T,sBAAsB,EAAKzB,gBAAgBmB,KAEzD,EAAKM,sBAAsBN,IAEV,GAArC,EAAKzI,SAASyJ,GAChB,GAAG,EAAKzJ,SAASyJ,GAAqBvQ,OAAO,EAC5C,IAAI,IAAI1E,EAAE,EAAEA,EAAE,EAAKwL,SAASyJ,GAAqBvQ,OAAO1E,IACpD,EAAKwL,SAASyJ,GAAqBjV,IAAIiU,IACzC1H,EAAO0I,EACPO,EAAcxV,QAIhBuM,EAAO0I,EAIT,OADA,EAAKT,UAAU,kBACR,CAACjI,EAAOiJ,IAtVQ,KAyVxBG,WAAW,SAAC1B,EAAE2B,EAAMnB,GACnB,GAAS,UAANA,EAAe,CACjB,IACIO,EAAY,EAMhB,GAJCA,EADS,iBAFSf,EAGJzT,SAAS,EAAK0T,cAAc,EAAKpB,gBAAgBmB,KAEjD,EAAKC,cAAcD,IAEF,GAA7B,EAAKzI,SAASwJ,GAChB,GAAG,EAAKxJ,SAASwJ,GAAatQ,OAAO,GACpC,IAAI,IAAI1E,EAAE,EAAEA,EAAE,EAAKwL,SAASwJ,GAAatQ,OAAO1E,IAC/C,GAAG,EAAKwL,SAASwJ,GAAahV,IAAIiU,EAAE,CACnC,IAAIkB,EAAa,EAAK3J,SAASwJ,GAC/BG,EAAWC,OAAOpV,EAAE,GACpB,EAAKwL,SAASwJ,GAAeG,EAC7B,EAAKtC,aACL,EAAKiC,eAAec,SAItB,EAAKpK,SAASwJ,GAAa,EAAE,GAC7B,EAAKnC,aACL,EAAKiC,eAAec,GAGtB,EAAKpB,UAAU,eACV,GAAS,YAANC,EAAiB,CACzB,IACIM,EAAc,EAOlB,GALCA,EADS,iBAFSd,EAGFzT,SAAS,EAAKwT,gBAAgB,EAAKlB,gBAAgBmB,KAEnD,EAAKD,gBAAgBC,IAGJ,GAA/B,EAAKzI,SAASuJ,GAChB,GAAG,EAAKvJ,SAASuJ,GAAerQ,OAAO,GACtC,IAAI,IAAI1E,EAAE,EAAEA,EAAE,EAAKwL,SAASuJ,GAAerQ,OAAO1E,IACjD,GAAG,EAAKwL,SAASuJ,GAAe/U,IAAIiU,EAAE,CACrC,IAAIkB,EAAa,EAAK3J,SAASuJ,GAC/BI,EAAWC,OAAOpV,EAAE,GACpB,EAAKwL,SAASuJ,GAAiBI,EAC/B,EAAKtC,aACL,EAAK+B,iBAAiBgB,SAIxB,EAAKpK,SAASuJ,GAAe,EAAE,GAC/B,EAAKlC,aACL,EAAK+B,iBAAiBgB,GAGxB,EAAKpB,UAAU,iBACV,GAAS,kBAANC,EAAuB,CAC/B,IACIQ,EAAoB,EAMxB,GAJCA,EADS,iBAFShB,EAGIzT,SAAS,EAAK+T,sBAAsB,EAAKzB,gBAAgBmB,KAEzD,EAAKM,sBAAsBN,IAEV,GAArC,EAAKzI,SAASyJ,GAChB,GAAG,EAAKzJ,SAASyJ,GAAqBvQ,OAAO,GAC5C,IAAI,IAAI1E,EAAE,EAAEA,EAAE,EAAKwL,SAASyJ,GAAqBvQ,OAAO1E,IACvD,GAAG,EAAKwL,SAASyJ,GAAqBjV,IAAIiU,EAAE,CAC3C,IAAIkB,EAAa,EAAK3J,SAASyJ,GAC/BE,EAAWC,OAAOpV,EAAE,GACpB,EAAKwL,SAASyJ,GAAuBE,EACrC,EAAKtC,aACL,EAAKgC,uBAAuBe,SAI9B,EAAKpK,SAASyJ,GAAqB,EAAE,GACrC,EAAKpC,aACL,EAAKgC,uBAAuBe,GAG9B,EAAKpB,UAAU,oBAxaO,KA4axBqB,WAAa,WAIZ,IAHA,IAAInJ,EAAU,GACVC,EAAW,GACXE,EAAW,EACP7M,EAAE,EAAEA,EAAE,EAAKwT,kBAAkBxT,IACpC0M,EAAQtM,KAAK,CAAC3C,GAAGuC,EAAGK,MAAO,IAAKyM,MAAM,IACnC9M,EAAE,EAAE,EAAKwL,SAAS9G,QACpBiI,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG+B,EAAE,EAAGW,OAAQ,OAExCkM,IAEDvN,QAAQC,IAAIsN,GACZ,IAAI,IAAI7M,EAAE,EAAEA,EAAE,EAAKwT,kBAAkBxT,IACpC,IAAsB,GAAnB,EAAKwL,SAASxL,GAChB,GAAG,EAAKwL,SAASxL,GAAG0E,OAAO,GAC1B,IAAI,IAAI4F,EAAE,EAAEA,EAAE,EAAKkB,SAASxL,GAAG0E,OAAO4F,IACrC,GAAM,GAAHA,EAAK,CACP,IAAI1C,EAAS,GAAG,EAAK4D,SAASxL,GAAGsK,GAIjC,GAHAoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAMxC,EAAE,IACpDqC,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG4O,EAAUlM,OAAQ,OAC5CkM,IACIvC,EAAE,GAAI,EAAKkB,SAASxL,GAAG0E,OAAO,CACjC,IAAIkD,EAAS,GAAG,EAAK4D,SAASxL,GAAGsK,EAAE,GACnCoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAMxC,EAAE,IACpDqC,EAASvM,KAAK,CAACM,KAAKmM,EAAS,EAAG5O,GAAG4O,EAAUlM,OAAQ,OACrDkM,UAGD,GAAIvC,EAAE,EAAG,EAAKkB,SAASxL,GAAG0E,OAAO,CAChC,IAAIkD,EAAS,GAAG,EAAK4D,SAASxL,GAAGsK,EAAE,GACnCoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAMxC,EAAE,IACpDqC,EAASvM,KAAK,CAACM,KAAKmM,EAAS,EAAG5O,GAAG4O,EAAUlM,OAAQ,OACrDkM,SAMC,CACJ,IAAIjF,EAAS,GAAG,EAAK4D,SAASxL,GAAG,GACjC0M,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAM,IAClDH,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG4O,EAAUlM,OAAQ,OAC5CkM,IAKG,MAAO,CAACH,EAAQC,IA3dC,KA8drBmJ,iBAAiB,SAACC,EAAQC,EAAQ1X,GAIpC,IAHG,IAAIoO,EAAU,GACbC,EAAW,GACXE,EAAW,EACP7M,EAAE,EAAEA,EAAE,EAAKwT,kBAAkBxT,IACpC0M,EAAQtM,KAAK,CAAC3C,GAAGuC,EAAGK,MAAO,IAAKyM,MAAM,IACnC9M,EAAE,EAAE,EAAKwL,SAAS9G,QACpBiI,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG+B,EAAE,EAAGW,OAAQ,OAExCkM,IAEDvN,QAAQC,IAAIsN,GACZ,IAAI,IAAI7M,EAAE,EAAEA,EAAE,EAAKwT,kBAAkBxT,IACpC,IAAsB,GAAnB,EAAKwL,SAASxL,GAChB,GAAG,EAAKwL,SAASxL,GAAG0E,OAAO,EAC1B,IAAI,IAAI4F,EAAE,EAAEA,EAAE,EAAKkB,SAASxL,GAAG0E,OAAO4F,IAAI,CACzC,GAAM,GAAHA,EAAK,CACP,IAAI1C,EAAS,GAAG,EAAK4D,SAASxL,GAAGsK,GAIjC,GAHAoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAMxC,EAAE,IACpDqC,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG4O,EAAUlM,OAAQ,OAC5CkM,IACIvC,EAAE,GAAI,EAAKkB,SAASxL,GAAG0E,OAAO,CACjC,IAAIkD,EAAS,GAAG,EAAK4D,SAASxL,GAAGsK,EAAE,GACnCoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAMxC,EAAE,IACpDqC,EAASvM,KAAK,CAACM,KAAKmM,EAAS,EAAG5O,GAAG4O,EAAUlM,OAAQ,OACrDkM,UAGD,GAAIvC,EAAE,EAAG,EAAKkB,SAASxL,GAAG0E,OAAO,CAChC,IAAIkD,EAAS,GAAG,EAAK4D,SAASxL,GAAGsK,EAAE,GACnCoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAMxC,EAAE,IACpDqC,EAASvM,KAAK,CAACM,KAAKmM,EAAS,EAAG5O,GAAG4O,EAAUlM,OAAQ,OACrDkM,IAIEkJ,GAAS/V,GAAKgW,GAAS1L,GAAKhM,GAAM,EAAKkN,SAASxL,GAAGsK,IACtDqC,EAASvM,KAAK,CAACM,KAAMmM,EAAS,EAAG5O,GAAI4O,EAAS,EAAGzI,MAAMyI,EAAS5K,MAAM,CAACA,MAAM,iBAI3E,CACJ,IAAI2F,EAAS,GAAG,EAAK4D,SAASxL,GAAG,GACjC0M,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAM,IAClDH,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG4O,EAAUlM,OAAQ,OACxCoV,GAAS/V,GAAc,GAATgW,GAAc1X,GAAM,EAAKkN,SAASxL,GAAG,IACtD2M,EAASvM,KAAK,CAACM,KAAMmM,EAAU5O,GAAI4O,EAAUzI,MAAMyI,EAAS5K,MAAM,CAACA,MAAM,aAE1E4K,IAKG,MAAO,CAACH,EAAQC,IAlhBtBpO,KAAK4P,EAAIA,EACT5P,KAAK2H,IAAMA,EACX3H,KAAK4H,IAAMA,EACX5H,KAAK6U,qBDHS,CAAgB,EAAE,GAAG,IACjC/R,GAAW,IAAIC,UAAQ,IACvBC,GAAW,IAAID,UAAQ,IAGvBE,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAGHI,GAAU,CACbF,MAAM,CACCO,YAAa,GACboL,MAAO,MACPnL,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,aAIxBsL,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cA4aJsI,G,kDApahB,WAAY3T,GAAQ,IAAD,8BAClB,cAAMA,IA6BPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WAnCvC,EAuCnB0K,eAAiB,WAChB8E,GAAUa,MAAMjT,SAAS,EAAK8C,MAAMgL,UACpCsE,GAAUc,QAAQlT,SAAS,EAAK8C,MAAM4S,SACtCtD,GAAUgB,QAAQpT,SAAS,EAAK8C,MAAM6S,SACtCvD,GAAUQ,qBAEV9T,QAAQC,IAAI,UACZD,QAAQC,IAAI,aA9CM,EAiDnB8D,UAAY,WACX,IAAI+S,GAAW,EACXC,EAAS7V,SAAS,EAAK8C,MAAMC,MAC9B+S,MAAMD,KACRD,GAAS,GAEY,UAAnB,EAAK9S,MAAM+K,QACA,GAAV+H,EACFxD,GAAUkC,eAAetU,SAAS,EAAK8C,MAAMC,OAE7CqP,GAAUkC,eAAe,EAAKxR,MAAMC,MAErClC,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,KACnB,YAAnB,EAAKvS,MAAM+K,QACN,GAAV+H,EACFxD,GAAUgC,iBAAiBpU,SAAS,EAAK8C,MAAMC,OAE/CqP,GAAUgC,iBAAiB,EAAKtR,MAAMC,MAEvClC,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,IAC9CvW,QAAQC,IAAI,QACe,kBAAnB,EAAK+D,MAAM+K,SACN,GAAV+H,EACFxD,GAAUiC,uBAAuBrU,SAAS,EAAK8C,MAAMC,OAErDqP,GAAUiC,uBAAuB,EAAKvR,MAAMC,MAE7ClC,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,IAC9CvW,QAAQC,IAAI,SAEbiC,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAxFpC,EA2FnBkC,aAAe,WACd,IAAIuS,GAAW,EACXC,EAAS7V,SAAS,EAAK8C,MAAMC,MAC9B+S,MAAMD,KACRD,GAAS,GAEY,UAAnB,EAAK9S,MAAM+K,QACA,GAAV+H,EACFxD,GAAUsC,eAAe1U,SAAS,EAAK8C,MAAMC,OAE7CqP,GAAUsC,eAAe,EAAK5R,MAAMC,MAErClC,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,KACnB,YAAnB,EAAKvS,MAAM+K,QACN,GAAV+H,EACFxD,GAAUyC,iBAAiB7U,SAAS,EAAK8C,MAAMC,OAE/CqP,GAAUyC,iBAAiB,EAAK/R,MAAMC,MAEvClC,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,IAC9CvW,QAAQC,IAAI,QACe,kBAAnB,EAAK+D,MAAM+K,SACN,GAAV+H,EACFxD,GAAU0C,uBAAuB9U,SAAS,EAAK8C,MAAMC,OAErDqP,GAAU0C,uBAAuB,EAAKhS,MAAMC,MAE7ClC,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,IAC9CvW,QAAQC,IAAI,SAEbiC,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAlIpC,EAqInBmC,aAAe,WACd,IAAIsS,GAAW,EACXC,EAAS7V,SAAS,EAAK8C,MAAMC,MAC9B+S,MAAMD,KACRD,GAAS,GAEV,IAAIG,GAAY,EACZC,EAAUhW,SAAS,EAAK8C,MAAMS,kBAC/BuS,MAAME,KACRD,GAAU,GAEW,UAAnB,EAAKjT,MAAM+K,QACA,GAAV+H,EACY,GAAXG,EACF3D,GAAU+C,WAAWnV,SAAS,EAAK8C,MAAMC,MAAM/C,SAAS,EAAK8C,MAAMS,kBAAkB,UAErF6O,GAAU+C,WAAWnV,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAMS,iBAAiB,UAG9D,GAAXwS,EACF3D,GAAU+C,WAAW,EAAKrS,MAAMC,KAAK/C,SAAS,EAAK8C,MAAMS,kBAAkB,UAE3E6O,GAAU+C,WAAW,EAAKrS,MAAMC,KAAK,EAAKD,MAAMS,iBAAiB,UAGnE6O,GAAU+C,WAAW,EAAKrS,MAAMC,KAAK,EAAKD,MAAMS,iBAAiB,UACjE1C,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,KACnB,YAAnB,EAAKvS,MAAM+K,QACN,GAAV+H,EACY,GAAXG,EACF3D,GAAU+C,WAAWnV,SAAS,EAAK8C,MAAMC,MAAM/C,SAAS,EAAK8C,MAAMS,kBAAkB,aAErFzE,QAAQC,IAAI,iBACZqT,GAAU+C,WAAWnV,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAMS,iBAAiB,aAG9D,GAAXwS,EACF3D,GAAU+C,WAAW,EAAKrS,MAAMC,KAAK/C,SAAS,EAAK8C,MAAMS,kBAAkB,YAE3E6O,GAAU+C,WAAW,EAAKrS,MAAMC,KAAK,EAAKD,MAAMS,iBAAiB,YAGnE1C,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,KACnB,kBAAnB,EAAKvS,MAAM+K,SACN,GAAV+H,EACY,GAAXG,EACF3D,GAAU+C,WAAWnV,SAAS,EAAK8C,MAAMC,MAAM/C,SAAS,EAAK8C,MAAMS,kBAAkB,kBAErF6O,GAAU+C,WAAWnV,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAMS,iBAAiB,kBAG9D,GAAXwS,EACF3D,GAAU+C,WAAW,EAAKrS,MAAMC,KAAK/C,SAAS,EAAK8C,MAAMS,kBAAkB,kBAE3E6O,GAAU+C,WAAW,EAAKrS,MAAMC,KAAK,EAAKD,MAAMS,iBAAiB,kBAGnE1C,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,KAE/CrU,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAzMpC,EA4MnBuC,aAAe,WACd,IAAIkS,GAAW,EACXC,EAAS7V,SAAS,EAAK8C,MAAMC,MAIjC,GAHG+S,MAAMD,KACRD,GAAS,GAEY,UAAnB,EAAK9S,MAAM+K,OAAiB,CAC9B,IAAI0H,EAAQ,EACRC,EAAQ,EACC,GAAVI,GACFL,EAAQnD,GAAU2C,aAAa/U,SAAS,EAAK8C,MAAMC,OAAO,GAC1DyS,EAAQpD,GAAU2C,aAAa/U,SAAS,EAAK8C,MAAMC,OAAO,GAC1DlC,GAAW,IAAIC,UAAQsR,GAAUkD,iBAAiBC,EAAQC,EAAQxV,SAAS,EAAK8C,MAAMC,OAAO,IAC7FhC,GAAW,IAAID,UAAQsR,GAAUkD,iBAAiBC,EAAQC,EAAQxV,SAAS,EAAK8C,MAAMC,OAAO,MAE7FwS,EAAQnD,GAAU2C,aAAa,EAAKjS,MAAMC,MAAM,GAChDyS,EAAQpD,GAAU2C,aAAa,EAAKjS,MAAMC,MAAM,GAChDlC,GAAW,IAAIC,UAAQsR,GAAUkD,iBAAiBC,EAAQC,EAAQ,EAAK1S,MAAMC,MAAM,IACnFhC,GAAW,IAAID,UAAQsR,GAAUkD,iBAAiBC,EAAQC,EAAQ,EAAK1S,MAAMC,MAAM,KAEpFjE,QAAQC,IAAI,YAAYwW,GACxBzW,QAAQC,IAAI,YAAYyW,QACnB,GAAsB,YAAnB,EAAK1S,MAAM+K,OAAmB,CACtC,IAAI0H,EAAQ,EACRC,EAAQ,EACC,GAAVI,GACFL,EAAQnD,GAAU6C,eAAejV,SAAS,EAAK8C,MAAMC,OAAO,GAC5DyS,EAAQpD,GAAU6C,eAAejV,SAAS,EAAK8C,MAAMC,OAAO,GAC5DlC,GAAW,IAAIC,UAAQsR,GAAUkD,iBAAiBC,EAAQC,EAAQxV,SAAS,EAAK8C,MAAMC,OAAO,IAC7FhC,GAAW,IAAID,UAAQsR,GAAUkD,iBAAiBC,EAAQC,EAAQxV,SAAS,EAAK8C,MAAMC,OAAO,MAE7FwS,EAAQnD,GAAU6C,eAAe,EAAKnS,MAAMC,MAAM,GAClDyS,EAAQpD,GAAU6C,eAAe,EAAKnS,MAAMC,MAAM,GAClDlC,GAAW,IAAIC,UAAQsR,GAAUkD,iBAAiBC,EAAQC,EAAQ,EAAK1S,MAAMC,MAAM,IACnFhC,GAAW,IAAID,UAAQsR,GAAUkD,iBAAiBC,EAAQC,EAAQ,EAAK1S,MAAMC,MAAM,KAEpFjE,QAAQC,IAAI,YAAYwW,GACxBzW,QAAQC,IAAI,YAAYyW,QACnB,GAAsB,kBAAnB,EAAK1S,MAAM+K,OAAyB,CAC5C,IAAI0H,EAAQ,EACRC,EAAQ,EACC,GAAVI,GACFL,EAAQnD,GAAU8C,qBAAqBlV,SAAS,EAAK8C,MAAMC,OAAO,GAClEyS,EAAQpD,GAAU8C,qBAAqBlV,SAAS,EAAK8C,MAAMC,OAAO,GAClElC,GAAW,IAAIC,UAAQsR,GAAUkD,iBAAiBC,EAAQC,EAAQxV,SAAS,EAAK8C,MAAMC,OAAO,IAC7FhC,GAAW,IAAID,UAAQsR,GAAUkD,iBAAiBC,EAAQC,EAAQxV,SAAS,EAAK8C,MAAMC,OAAO,MAE7FwS,EAAQnD,GAAU8C,qBAAqB,EAAKpS,MAAMC,MAAM,GACxDyS,EAAQpD,GAAU8C,qBAAqB,EAAKpS,MAAMC,MAAM,GACxDlC,GAAW,IAAIC,UAAQsR,GAAUkD,iBAAiBC,EAAQC,EAAQ,EAAK1S,MAAMC,MAAM,IACnFhC,GAAW,IAAID,UAAQsR,GAAUkD,iBAAiBC,EAAQC,EAAQ,EAAK1S,MAAMC,MAAM,KAEpFjE,QAAQC,IAAI,YAAYwW,GACxBzW,QAAQC,IAAI,YAAYyW,GAEzBxU,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAzQpC,EA4QnB0C,eAAiB,WAChB,IACMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,wBAAtBmB,EAASE,UAAoC,CAEhDoO,GAAUa,MAAMjT,SAAS8D,EAAS6J,IAClCyE,GAAUc,QAAQlT,SAAS8D,EAAS4R,SACpCtD,GAAUgB,QAAQpT,SAAS8D,EAAS6R,SACpCvD,GAAUQ,qBACV,IAAK,IAAIpT,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IACrB,UAAlBsE,EAASmS,SACXnX,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7B4S,GAAUkC,eAAexQ,EAASvD,QAAQf,GAAGc,aACnB,YAAlBwD,EAASmS,SACjBnX,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7B4S,GAAUgC,iBAAiBtQ,EAASvD,QAAQf,GAAGc,aACrB,kBAAlBwD,EAASmS,UACjBnX,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7B4S,GAAUiC,uBAAuBvQ,EAASvD,QAAQf,GAAGc,aAIvDO,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,IAC9CrU,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAKtDgD,MAAM,gDA/SW,EAoTnBC,eAAiB,aAlThB,EAAKtB,MAAQ,CACZ+K,OAAQ,SACRC,QAAS,GACT4H,OAAQ,GACRC,OAAQ,GACR5S,KAAM,GACNQ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GAEb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAfP,E,qDAkBnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAgSX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,UAAU5C,KAAK,UAAU3F,UAAU,eAAewI,YAAY,2BAAwBtI,GAAG,eAAe2G,MAAO7F,KAAK+E,MAAMgL,QAAStI,SAAUzH,KAAKmH,sBAE/J,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,kBAAkBtI,GAAG,cAAc2G,MAAO7F,KAAK+E,MAAM4S,OAAQlQ,SAAUzH,KAAKmH,sBAErJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,kBAAkBtI,GAAG,cAAc2G,MAAO7F,KAAK+E,MAAM6S,OAAQnQ,SAAUzH,KAAKmH,sBAErJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4P,kBAAtE,gCAGF,qBAAKvQ,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAf,SACC,yBAAQuI,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,cAAcyI,SAAUzH,KAAKmH,kBAA3E,UACO,wBAAQtB,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,iBAAd,iCAGR,qBAAK7G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,mBAAmB3F,UAAU,eAAewI,YAAY,oBAAoBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMS,iBAAkBiC,SAAUzH,KAAKmH,sBAEvK,qBAAKnI,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,wBAG7D,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,4BAED,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,2BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4F,gBAAtE,+BAED,qBAAKvG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAMF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GA/Zf6C,aEhC3BoM,GAAY,ICDf,WAAYzE,EAAGjI,EAAKC,GAAK,IAAD,gCAFxB0M,WAAW,EAEa,KADxBrH,SAAS,GACe,KAMxBsH,gBAAgB,SAACC,GAEhB,IADA,IAAI3P,EAAO,EACHpD,EAAE,EAAEA,EAAE+S,EAAOrO,OAAO1E,IAC3BoD,GAAQ2P,EAAOC,WAAWhT,GAE3B,OAAOoD,GAXgB,KAaxB6P,iBAAiB,SAACC,GAEjB,IADA,IAAIC,EAAa,GACTnT,EAAE,EAAEA,EAAEkT,EAAQxO,OAAO1E,IAAI,CAEhC,IADA,IAAIoD,EAAO,EACHkH,EAAE,EAAEA,EAAE4I,EAAQlT,GAAG0E,OAAO4F,IAC/BlH,GAAQ8P,EAAQlT,GAAGgT,WAAW1I,GAE/B6I,EAAa/S,KAAKgD,GAEnB,OAAO+P,GAtBgB,KAwBxBK,gBAAgB,WACf,OAAO,EAAKhI,SAAS9G,QAzBE,KA2BxB0O,mBAAmB,WAClB,EAAKP,WAAW,EAChB,EAAKrH,SAAS,GAEd,IADA,IAAI8C,EAAU,EAAK+E,QACXrT,EAAE,EAAEA,EAAEsO,EAAQtO,IACrB,EAAKwL,SAASpL,MAAM,IAhCE,KAmCxBqT,MAAM,SAACtF,GAAK,EAAKA,EAAEA,GAnCK,KAoCxBkF,MAAM,WAAK,OAAO7S,SAAS,EAAK2N,EAAE,KApCV,KAqCxBuF,QAAQ,SAACxN,GAAO,EAAKA,IAAIA,GArCD,KAsCxByN,QAAQ,WAAK,OAAO,EAAKzN,KAtCD,KAuCxB0N,QAAQ,SAACzN,GAAO,EAAKA,IAAIA,GAvCD,KAwCxB0N,QAAQ,WAAK,OAAO,EAAK1N,KAxCD,KAyCxB2N,eAAe,SAACvH,GAGf,OAAO,EAAKf,SAASe,IA5CE,KA8CxB5E,SAAS,WAER,IADA,IAAIoM,EAAM,IACF/T,EAAE,EAAGA,EAAE,EAAKqT,QAAQrT,IAC3B+T,GAAS,IAAI,EAAKvI,SAASxL,GAG5B+T,GAAO,MAD0B,IAAhB,EAAKlB,WAAe,EAAKQ,QAAU,KAEpD/T,QAAQC,IAAIwU,IArDW,KAuDxBC,gBAAkB,SAACC,GAClB,OAASA,EAAI,EAAKZ,SAxDK,KA0DxBa,cAAgB,SAACD,GAEhB,IADA,IAAIE,EAAWF,EACTE,EAAS,GACdA,EAAWE,KAAKC,MAAMH,EAAS,GAEhC,IAAIC,EAASC,KAAKC,MAAMH,EAAW,EAAKd,SAIxC,OAHGe,GAAS,EAAKf,UAChBe,GAAgB,GAETA,GAnEe,KAqExBG,sBAAsB,SAACN,GAEtB,OAAQI,KAAKC,MAAM,EAAKjB,SADhB,YAC4BY,EAAG,KAvEhB,KAyExByC,sBAAsB,SAACzC,EAAEjU,GACxB,OAASiU,EAAI,GAAK,EAAKZ,SA1EA,KA4ExBsD,0BAA0B,SAAC1C,EAAEjU,GAC5B,OAASiU,EAAGjU,EAAEA,GAAM,EAAKqT,SA7EF,KA+ExBuD,qBAAqB,SAACC,EAAG7W,EAAE8W,GAC1B,OAASD,EAAG7W,EAAE8W,GAAM,EAAKzD,SAhFF,KAkFxBmB,UAAU,SAACC,EAAKsC,GACf,GAAqB,IAAhB,EAAKlE,WAAgB,EAAKQ,SAAU,EAAKQ,UAAU,CACvD,IAAInM,EAAM,EAAK8D,SACf,EAAK7D,WACL,IAAI+M,EAAa,EAAKrB,QACtB,EAAKI,MAAsB,IAAhB,EAAKZ,WAAe,EAAKc,WACpC,EAAKP,qBACL,IAAI,IAAIpT,EAAE,EAAGA,EAAE0U,EAAY1U,IAE1B,IAAY,GAAT0H,EAAI1H,GACN,GAAS,YAANyU,EAAiB,CAClB,IAAIE,SAAejN,EAAI1H,GACvB,GAAU,UAAP2U,EAAgB,CACFjN,EAAI1H,GACpB,EAAK4U,iBAAiBlN,EAAI1H,GAAG+W,OACd,UAAPpC,GACR,EAAKC,iBAAiBpU,SAASkH,EAAI1H,IAAI+W,QAEpC,GAAS,kBAANtC,EAAuB,CAC9B,IAAIE,SAAejN,EAAI1H,GACvB,GAAU,UAAP2U,EAAgB,CACFjN,EAAI1H,GACpB,EAAK6U,uBAAuBnN,EAAI1H,GAAG+W,OACpB,UAAPpC,GACR,EAAKE,uBAAuBrU,SAASkH,EAAI1H,IAAI+W,QAE1C,GAAS,UAANtC,EAAe,CACtB,IAAIE,SAAejN,EAAI1H,GACvB,GAAU,UAAP2U,EAAgB,CACFjN,EAAI1H,GACpB,EAAK8U,eAAepN,EAAI1H,GAAG+W,OACZ,UAAPpC,GACR,EAAKG,eAAetU,SAASkH,EAAI1H,IAAI+W,SAM1C,EAAKpP,YAxHiB,KA2HxBiN,iBAAiB,SAACX,EAAE8C,GACnB,IAAIpC,SAAeV,EACnB3U,QAAQC,WAAW0U,GACnB,IAAIc,EAAc,EAOlB,GANU,UAAPJ,EACFI,EAAgBvU,SAAS,EAAKwT,gBAAgB,EAAKlB,gBAAgBmB,KACpD,UAAPU,IACRI,EAAgB,EAAKf,gBAAgBxT,SAASyT,KAGtC,UAAN8C,EAAe,CACjB,MAAqC,GAA/B,EAAKvL,SAASuJ,IACnBA,EAAgB,EAAK2B,sBAAsB3B,GAE5C,EAAKvJ,SAASuJ,GAAed,EAC7B,EAAKpB,kBACA,GAAS,cAANkE,EAAmB,CAG3B,IAFA,IAAIlK,EAAS,EACTmK,EAAWjC,GACmB,GAA5B,EAAKvJ,SAASwL,IACnBA,EAAa,EAAKL,0BAA0B5B,EAAclI,GAC1DA,IAED,EAAKrB,SAASwL,GAAY/C,EAC1B,EAAKpB,kBACA,GAAS,SAANkE,EAAc,CACtB,IAAIpC,SAAeV,EACnB3U,QAAQC,WAAW0U,GACnB,IAAI6C,EAAG,EACG,UAAPnC,EACFmC,EAAKtW,SAAS,EAAK0T,cAAc,EAAKpB,gBAAgBmB,KACvC,UAAPU,IACRmC,EAAK,EAAK5C,cAAc1T,SAASyT,KAIlC,IAFA,IAAIpH,EAAS,EACTmK,EAAWjC,GACmB,GAA5B,EAAKvJ,SAASwL,IACnBA,EAAa,EAAKJ,qBAAqB7B,EAAclI,EAASiK,GAC9DjK,IAED,EAAKrB,SAASwL,GAAY/C,EAC1B,EAAKpB,aAEN,EAAK2B,UAAU,WAAWuC,IAtKH,KAwKxBjC,eAAe,SAACb,EAAE8C,GACjB,IAAIpC,SAAeV,EACfe,EAAY,EAMhB,GALU,UAAPL,EACFK,EAAcxU,SAAS,EAAK0T,cAAc,EAAKpB,gBAAgBmB,KAChD,UAAPU,IACRK,EAAc,EAAKd,cAAc1T,SAASyT,KAElC,UAAN8C,EAAe,CACjB,MAAmC,GAA7B,EAAKvL,SAASwJ,IACnBA,EAAc,EAAK0B,sBAAsB1B,GAE1C,EAAKxJ,SAASwJ,GAAaf,EAC3B,EAAKpB,kBACA,GAAS,cAANkE,EAAmB,CAG3B,IAFA,IAAIlK,EAAS,EACTmK,EAAWhC,GACmB,GAA5B,EAAKxJ,SAASwL,IACnBA,EAAa,EAAKL,0BAA0B3B,EAAYnI,GACxDvN,QAAQC,IAAIyX,GACZ1X,QAAQC,IAAI,OAAOsN,GACnBA,IAED,EAAKrB,SAASwL,GAAY/C,EAC1B,EAAKpB,kBACA,GAAS,SAANkE,EAAc,CAGtB,IAFA,IAAIlK,EAAS,EACTmK,EAAWhC,GACmB,GAA5B,EAAKxJ,SAASwL,IACnBA,EAAa,EAAKJ,qBAAqB5B,EAAYnI,EAASmI,GAC5DnI,IAED,EAAKrB,SAASwL,GAAY/C,EAC1B,EAAKpB,aAEN,EAAK2B,UAAU,SAASuC,IA3MD,KA6MxBlC,uBAAuB,SAACZ,EAAE8C,GACzB,IACI9B,EAAoB,EAMxB,GAJCA,EADS,iBAFShB,EAGIzT,SAAS,EAAK+T,sBAAsB,EAAKzB,gBAAgBmB,KAEzD,EAAKM,sBAAsBN,GAEzC,UAAN8C,EAAe,CACjB,MAA2C,GAArC,EAAKvL,SAASyJ,IACnBA,EAAsB,EAAKyB,sBAAsBzB,GAElD,EAAKzJ,SAASyJ,GAAqBhB,EACnC,EAAKpB,kBACA,GAAS,cAANkE,EAAmB,CAG3B,IAFA,IAAIlK,EAAS,EACTmK,EAAW/B,GACmB,GAA5B,EAAKzJ,SAASwL,IACnBA,EAAa,EAAKL,0BAA0B1B,EAAoBpI,GAChEA,IAED,EAAKrB,SAASwL,GAAY/C,EAC1B,EAAKpB,kBACA,GAAS,SAANkE,EAAc,CAGtB,IAFA,IAAIlK,EAAS,EACTmK,EAAW/B,GACmB,GAA5B,EAAKzJ,SAASwL,IACnBA,EAAa,EAAKJ,qBAAqB3B,EAAoBpI,EAASoI,GACpEpI,IAED,EAAKrB,SAASwL,GAAY/C,EAC1B,EAAKpB,aAEN,EAAK2B,UAAU,iBAAiBuC,IA9OT,KAgPxB7B,eAAe,SAACjB,EAAE8C,GAQjB,GALU,iBAFS9C,EAGJzT,SAAS,EAAK0T,cAAc,EAAKpB,gBAAgBmB,KAEjD,EAAKC,cAAcD,GAEzB,UAAN8C,EAIF,IAHA,IAAI/B,EAAc,EAAKd,cAAcD,GACjCgD,GAAU,EACVjX,EAAE,EACW,GAAXiX,GACF,EAAKzL,SAASwJ,IAAcf,IAC9B,EAAKzI,SAASwJ,IAAc,EAC5B,EAAKnC,aACLoE,GAAU,KAEXjX,GACM,EAAKqT,UACV4D,GAAU,GAEXjC,EAAc,EAAK0B,sBAAsB1B,QAErC,GAAS,cAAN+B,EAMR,IALA,IAAI/B,EAAc,EAAKd,cAAcD,GACjCpH,EAAS,EACToK,GAAU,EACVD,EAAWhC,EACXhV,EAAE,EACW,GAAXiX,GACF,EAAKzL,SAASwL,IAAa/C,IAC7B,EAAKzI,SAASwL,IAAa,EAC3B,EAAKnE,aACLoE,GAAU,KAEXjX,GACM,EAAKqT,UACV4D,GAAU,GAEXD,EAAa,EAAKL,0BAA0B3B,EAAYnI,GACxDA,SAEI,GAAS,SAANkK,EAMR,IALA,IAAI/B,EAAc,EAAKd,cAAcD,GACjCgD,GAAU,EACVpK,EAAS,EACT7M,EAAE,EACFgX,EAAWhC,EACE,GAAXiC,GACF,EAAKzL,SAASwL,IAAa/C,IAC7B,EAAKzI,SAASwL,IAAa,EAC3B,EAAKnE,aACLoE,GAAU,KAEXjX,GACM,EAAKqT,UACV4D,GAAU,GAEXD,EAAa,EAAKJ,qBAAqB5B,EAAYnI,EAASmI,GAC5DnI,IAGF,EAAK2H,UAAU,SAASuC,IA/SD,KAiTxB1B,iBAAiB,SAACpB,EAAE8C,GACnB,IACIhC,EAAc,EAMlB,GAJCA,EADS,iBAFSd,EAGFzT,SAAS,EAAKwT,gBAAgB,EAAKlB,gBAAgBmB,KAEnD,EAAKD,gBAAgBC,GAE7B,UAAN8C,EAIF,IAHA,IAAIhC,EAAgB,EAAKf,gBAAgBC,GACrCgD,GAAU,EACVjX,EAAE,EACW,GAAXiX,GACF,EAAKzL,SAASuJ,IAAgBd,IAChC,EAAKzI,SAASuJ,IAAgB,EAC9B,EAAKlC,aACLoE,GAAU,KAEXjX,GACM,EAAKqT,UACV4D,GAAU,GAEXlC,EAAgB,EAAK2B,sBAAsB3B,QAEvC,GAAS,cAANgC,EAMR,IALA,IAAIhC,EAAgB,EAAKf,gBAAgBC,GACrCpH,EAAS,EACToK,GAAU,EACVD,EAAWjC,EACX/U,EAAE,EACW,GAAXiX,GACF,EAAKzL,SAASwL,IAAa/C,IAC7B,EAAKzI,SAASwL,IAAa,EAC3B,EAAKnE,aACLoE,GAAU,KAEXjX,GACM,EAAKqT,UACV4D,GAAU,GAEXD,EAAa,EAAKL,0BAA0B5B,EAAclI,GAC1DA,SAEI,GAAS,SAANkK,EAAc,CACtB,IAAIpC,SAAeV,EACnB3U,QAAQC,WAAW0U,GACnB,IAAI6C,EAAG,EACG,UAAPnC,EACFmC,EAAKtW,SAAS,EAAK0T,cAAc,EAAKpB,gBAAgBmB,KACvC,UAAPU,IACRmC,EAAK,EAAK5C,cAAc1T,SAASyT,KAMlC,IAJA,IAAIgD,GAAU,EACVpK,EAAS,EACT7M,EAAE,EACFgX,EAAWjC,EACE,GAAXkC,GACF,EAAKzL,SAASwL,IAAa/C,IAC7B,EAAKzI,SAASwL,IAAa,EAC3B,EAAKnE,aACLoE,GAAU,KAEXjX,GACM,EAAKqT,UACV4D,GAAU,GAEXD,EAAa,EAAKJ,qBAAqB7B,EAAclI,EAASiK,GAC9DjK,IAGF,EAAK2H,UAAU,WAAWuC,IAvXH,KAyXxBzB,uBAAuB,SAACrB,EAAE8C,GAQzB,GALU,iBAFS9C,EAGIzT,SAAS,EAAK+T,sBAAsB,EAAKzB,gBAAgBmB,KAEzD,EAAKM,sBAAsBN,GAEzC,UAAN8C,EAIF,IAHA,IAAI9B,EAAsB,EAAKV,sBAAsBN,GACjDgD,GAAU,EACVjX,EAAE,EACW,GAAXiX,GACF,EAAKzL,SAASyJ,IAAsBhB,IACtC,EAAKzI,SAASyJ,IAAsB,EACpC,EAAKpC,aACLoE,GAAU,KAEXjX,GACM,EAAKqT,UACV4D,GAAU,GAEXhC,EAAsB,EAAKyB,sBAAsBzB,QAE7C,GAAS,cAAN8B,EAMR,IALA,IAAI9B,EAAsB,EAAKV,sBAAsBN,GACjDpH,EAAS,EACToK,GAAU,EACVD,EAAW/B,EACXjV,EAAE,EACW,GAAXiX,GACF,EAAKzL,SAASwL,IAAa/C,IAC7B,EAAKzI,SAASwL,IAAa,EAC3B,EAAKnE,aACLoE,GAAU,KAEXjX,GACM,EAAKqT,UACV4D,GAAU,GAEXD,EAAa,EAAKL,0BAA0B1B,EAAoBpI,GAChEA,SAEI,GAAS,SAANkK,EAMR,IALA,IAAI9B,EAAsB,EAAKV,sBAAsBN,GACjDgD,GAAU,EACVpK,EAAS,EACT7M,EAAE,EACFgX,EAAW/B,EACE,GAAXgC,GACF,EAAKzL,SAASwL,IAAa/C,IAC7B,EAAKzI,SAASwL,IAAa,EAC3B,EAAKnE,aACLoE,GAAU,KAEXjX,GACM,EAAKqT,UACV4D,GAAU,GAEXD,EAAa,EAAKJ,qBAAqB3B,EAAoBpI,EAASoI,GACpEpI,IAGF,EAAK2H,UAAU,SAASuC,IAxbD,KA2bxBhN,OAAO,SAACkK,EAAE8C,GACT,IAAIxK,GAAQ,EAGRyI,EAAY,EAMhB,GAJCA,EADS,iBAFSf,EAGJzT,SAAS,EAAK0T,cAAc,EAAKpB,gBAAgBmB,KAEjD,EAAKC,cAAcD,GAEzB,UAAN8C,EAGF,IAFA,IAAIG,GAAW,EACXlX,EAAE,EACY,GAAZkX,GACF,EAAK1L,SAASwJ,IAAcf,IAC9B1H,EAAOyI,EACPkC,GAAW,KAEZlX,GACM,EAAKqT,UACV6D,GAAW,GAEZlC,EAAc,EAAK0B,sBAAsB1B,QAErC,GAAS,cAAN+B,EAKR,IAJA,IAAIlK,EAAS,EACTqK,GAAW,EACXF,EAAWhC,EACXhV,EAAE,EACY,GAAZkX,GACF,EAAK1L,SAASwL,IAAa/C,IAC7B1H,EAAOyK,EACPE,GAAW,KAEZlX,GACM,EAAKqT,UACV6D,GAAW,GAEZF,EAAa,EAAKL,0BAA0B3B,EAAYnI,GACxDA,SAEI,GAAS,SAANkK,EAKR,IAJA,IAAIG,GAAW,EACXrK,EAAS,EACT7M,EAAE,EACFgX,EAAWhC,EACG,GAAZkC,GACF,EAAK1L,SAASwL,IAAa/C,IAC7B1H,EAAOyK,EACPE,GAAW,KAEZlX,GACM,EAAKqT,UACV6D,GAAW,GAEZF,EAAa,EAAKJ,qBAAqB5B,EAAYnI,EAASmI,GAC5DnI,IAIF,OADA,EAAK2H,UAAU,SAASuC,GACjBxK,GAvfgB,KAyfxBoJ,WAAW,SAAC1B,EAAE2B,EAAMmB,EAAKtC,GACxB,IACIO,EAAY,EAMhB,GAJCA,EADS,iBAFSf,EAGJzT,SAAS,EAAK0T,cAAc,EAAKpB,gBAAgBmB,KAEjD,EAAKC,cAAcD,GAEzB,UAAN8C,EAGF,IAFA,IAAII,GAAY,EACZnX,EAAE,EACa,GAAbmX,GACF,EAAK3L,SAASwJ,IAAcf,IACrB,UAANQ,GACF,EAAKjJ,SAASwJ,IAAc,EAC5B,EAAKnC,aACL,EAAKiC,eAAec,EAAMmB,IACZ,YAANtC,GACR,EAAKjJ,SAASwJ,IAAc,EAC5B,EAAKnC,aACL,EAAK+B,iBAAiBgB,EAAMmB,IACd,kBAANtC,IACR,EAAKjJ,SAASwJ,IAAc,EAC5B,EAAKnC,aACL,EAAKgC,uBAAuBe,EAAMmB,IAEnCI,GAAY,KAEbnX,GACM,EAAKqT,UACV8D,GAAY,GAEbnC,EAAc,EAAK0B,sBAAsB1B,QAErC,GAAS,cAAN+B,EAKR,IAJA,IAAIlK,EAAS,EACTsK,GAAY,EACZH,EAAWhC,EACXhV,EAAE,EACa,GAAbmX,GACF,EAAK3L,SAASwL,IAAa/C,IACpB,UAANQ,GACF,EAAKjJ,SAASwL,IAAa,EAC3B,EAAKnE,aACL,EAAKiC,eAAec,EAAMmB,IACZ,YAANtC,GACR,EAAKjJ,SAASwL,IAAa,EAC3B,EAAKnE,aACL,EAAK+B,iBAAiBgB,EAAMmB,IACd,kBAANtC,IACR,EAAKjJ,SAASwL,IAAa,EAC3B,EAAKnE,aACL,EAAKgC,uBAAuBe,EAAMmB,IAEnCI,GAAY,KAEbnX,GACM,EAAKqT,UACV8D,GAAY,GAEbH,EAAa,EAAKL,0BAA0B3B,EAAYnI,GACxDA,SAEI,GAAS,SAANkK,EAKR,IAJA,IAAII,GAAY,EACZtK,EAAS,EACT7M,EAAE,EACFgX,EAAWhC,EACI,GAAbmC,GACF,EAAK3L,SAASwL,IAAa/C,IACpB,UAANQ,GACF,EAAKjJ,SAASwL,IAAa,EAC3B,EAAKnE,aACL,EAAKiC,eAAec,EAAMmB,IACZ,YAANtC,GACR,EAAKjJ,SAASwL,IAAa,EAC3B,EAAKnE,aACL,EAAK+B,iBAAiBgB,EAAMmB,IACd,kBAANtC,IACR,EAAKjJ,SAASwL,IAAa,EAC3B,EAAKnE,aACL,EAAKgC,uBAAuBe,EAAMmB,IAEnCI,GAAY,KAEbnX,GACM,EAAKqT,UACV8D,GAAY,GAEbH,EAAa,EAAKJ,qBAAqB5B,EAAYnI,EAASmI,GAC5DnI,IAGF,EAAK2H,UAAU,SAASuC,IAtlBD,KAwlBxBlB,WAAa,WAIZ,IAHA,IAAInJ,EAAU,GACVC,EAAW,GACXE,EAAW,EACP7M,EAAE,EAAEA,EAAE,EAAKwT,kBAAkBxT,IACpC0M,EAAQtM,KAAK,CAAC3C,GAAGuC,EAAGK,MAAO,IAAKyM,MAAM,IACnC9M,EAAE,EAAE,EAAKwL,SAAS9G,QACpBiI,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG+B,EAAE,EAAGW,OAAQ,OAExCkM,IAEDvN,QAAQC,IAAIsN,GACZ,IAAI,IAAI7M,EAAE,EAAEA,EAAE,EAAKwT,kBAAkBxT,IACpC,IAAsB,GAAnB,EAAKwL,SAASxL,GAAO,CACtB,IAAI4H,EAAS,GAAG,EAAK4D,SAASxL,GAC9B0M,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAM,IAClDH,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG4O,EAAUlM,OAAQ,OAC5CkM,IAIG,MAAO,CAACH,EAAQC,IA7mBC,KAgnBrBmJ,iBAAiB,SAACxX,GAIpB,IAHG,IAAIoO,EAAU,GACbC,EAAW,GACXE,EAAW,EACP7M,EAAE,EAAEA,EAAE,EAAKwT,kBAAkBxT,IACpC0M,EAAQtM,KAAK,CAAC3C,GAAGuC,EAAGK,MAAO,IAAKyM,MAAM,IACnC9M,EAAE,EAAE,EAAKwL,SAAS9G,QACpBiI,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG+B,EAAE,EAAGW,OAAQ,OAExCkM,IAEDvN,QAAQC,IAAIsN,GACZ,IAAI,IAAI7M,EAAE,EAAEA,EAAE,EAAKwT,kBAAkBxT,IACpC,IAAsB,GAAnB,EAAKwL,SAASxL,GAAO,CACtB,IAAI4H,EAAS,GAAG,EAAK4D,SAASxL,GAC9B0M,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAM,IAClDH,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG4O,EAAUlM,OAAQ,OAC5CrB,QAAQC,IAAI,cACTjB,GAAM,EAAKkN,SAASxL,KACtBV,QAAQC,IAAI,gBACZoN,EAASvM,KAAK,CAACM,KAAMmM,EAAU5O,GAAI4O,EAAUzI,MAAMyI,EAAS5K,MAAM,CAACA,MAAM,cAE1E4K,IAIG,MAAO,CAACH,EAAQC,IAzoBtBpO,KAAK4P,EAAIA,EACT5P,KAAK2H,IAAMA,EACX3H,KAAK4H,IAAMA,EACX5H,KAAK6U,qBDHS,CAAgB,EAAE,GAAG,IACjC/R,GAAW,IAAIC,UAAQ,IACvBC,GAAW,IAAID,UAAQ,IAGvBE,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAGHI,GAAU,CACbF,MAAM,CACCO,YAAa,GACboL,MAAO,MACPnL,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,aAIxBsL,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cAgaJyJ,G,kDAxZhB,WAAY9U,GAAQ,IAAD,8BAClB,cAAMA,IA8BPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WApCvC,EAwCnB0K,eAAiB,WAChB8E,GAAUa,MAAMjT,SAAS,EAAK8C,MAAMgL,UACpCsE,GAAUc,QAAQlT,SAAS,EAAK8C,MAAM4S,SACtCtD,GAAUgB,QAAQpT,SAAS,EAAK8C,MAAM6S,SACtCvD,GAAUQ,qBAEV9T,QAAQC,IAAI,UACZD,QAAQC,IAAI,aA/CM,EAkDnB8D,UAAY,WACX,IAAI+S,GAAW,EACXC,EAAS7V,SAAS,EAAK8C,MAAMC,MAC9B+S,MAAMD,KACRD,GAAS,GAEY,UAAnB,EAAK9S,MAAM+K,QACA,GAAV+H,EACFxD,GAAUkC,eAAetU,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAMyT,MAE9DnE,GAAUkC,eAAe,EAAKxR,MAAMC,KAAK,EAAKD,MAAMyT,MAErD1V,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,KACnB,YAAnB,EAAKvS,MAAM+K,QACN,GAAV+H,EACFxD,GAAUgC,iBAAiBpU,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAMyT,MAEhEnE,GAAUgC,iBAAiB,EAAKtR,MAAMC,KAAK,EAAKD,MAAMyT,MAEvD1V,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,IAC9CvW,QAAQC,IAAI,QACe,kBAAnB,EAAK+D,MAAM+K,SACN,GAAV+H,EACFxD,GAAUiC,uBAAuBrU,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAMyT,MAEtEnE,GAAUiC,uBAAuB,EAAKvR,MAAMC,KAAK,EAAKD,MAAMyT,MAE7D1V,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,IAC9CvW,QAAQC,IAAI,SAEbiC,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAzFpC,EA4FnBkC,aAAe,WACd,IAAIuS,GAAW,EACXC,EAAS7V,SAAS,EAAK8C,MAAMC,MAC9B+S,MAAMD,KACRD,GAAS,GAEY,UAAnB,EAAK9S,MAAM+K,QACA,GAAV+H,EACFxD,GAAUsC,eAAe1U,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAMyT,MAE9DnE,GAAUsC,eAAe,EAAK5R,MAAMC,KAAK,EAAKD,MAAMyT,MAErD1V,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,KACnB,YAAnB,EAAKvS,MAAM+K,QACN,GAAV+H,EACFxD,GAAUyC,iBAAiB7U,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAMyT,MAEhEnE,GAAUyC,iBAAiB,EAAK/R,MAAMC,KAAK,EAAKD,MAAMyT,MAEvD1V,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,IAC9CvW,QAAQC,IAAI,QACe,kBAAnB,EAAK+D,MAAM+K,SACN,GAAV+H,EACFxD,GAAU0C,uBAAuB9U,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAMyT,MAEtEnE,GAAU0C,uBAAuB,EAAKhS,MAAMC,KAAK,EAAKD,MAAMyT,MAE7D1V,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,IAC9CvW,QAAQC,IAAI,SAEbiC,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAnIpC,EAsInBmC,aAAe,WACd,IAAIsS,GAAW,EACXC,EAAS7V,SAAS,EAAK8C,MAAMC,MAC9B+S,MAAMD,KACRD,GAAS,GAEV,IAAIG,GAAY,EACZC,EAAUhW,SAAS,EAAK8C,MAAMS,kBAC/BuS,MAAME,KACRD,GAAU,GAEW,UAAnB,EAAKjT,MAAM+K,QACA,GAAV+H,EACY,GAAXG,EACF3D,GAAU+C,WAAWnV,SAAS,EAAK8C,MAAMC,MAAM/C,SAAS,EAAK8C,MAAMS,kBAAkB,EAAKT,MAAMyT,KAAK,UAErGnE,GAAU+C,WAAWnV,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAMS,iBAAiB,EAAKT,MAAMyT,KAAK,UAG9E,GAAXR,EACF3D,GAAU+C,WAAW,EAAKrS,MAAMC,KAAK/C,SAAS,EAAK8C,MAAMS,kBAAkB,EAAKT,MAAMyT,KAAK,UAE3FnE,GAAU+C,WAAW,EAAKrS,MAAMC,KAAK,EAAKD,MAAMS,iBAAiB,EAAKT,MAAMyT,KAAK,UAGnFnE,GAAU+C,WAAW,EAAKrS,MAAMC,KAAK,EAAKD,MAAMS,iBAAiB,EAAKT,MAAMyT,KAAK,UACjF1V,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,KACnB,YAAnB,EAAKvS,MAAM+K,QACN,GAAV+H,EACY,GAAXG,EACF3D,GAAU+C,WAAWnV,SAAS,EAAK8C,MAAMC,MAAM/C,SAAS,EAAK8C,MAAMS,kBAAkB,EAAKT,MAAMyT,KAAK,aAErGzX,QAAQC,IAAI,iBACZqT,GAAU+C,WAAWnV,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAMS,iBAAiB,EAAKT,MAAMyT,KAAK,aAG9E,GAAXR,EACF3D,GAAU+C,WAAW,EAAKrS,MAAMC,KAAK/C,SAAS,EAAK8C,MAAMS,kBAAkB,EAAKT,MAAMyT,KAAK,YAE3FnE,GAAU+C,WAAW,EAAKrS,MAAMC,KAAK,EAAKD,MAAMS,iBAAiB,EAAKT,MAAMyT,KAAK,YAGnF1V,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,KACnB,kBAAnB,EAAKvS,MAAM+K,SACN,GAAV+H,EACY,GAAXG,EACF3D,GAAU+C,WAAWnV,SAAS,EAAK8C,MAAMC,MAAM/C,SAAS,EAAK8C,MAAMS,kBAAkB,EAAKT,MAAMyT,KAAK,kBAErGnE,GAAU+C,WAAWnV,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAMS,iBAAiB,EAAKT,MAAMyT,KAAK,kBAG9E,GAAXR,EACF3D,GAAU+C,WAAW,EAAKrS,MAAMC,KAAK/C,SAAS,EAAK8C,MAAMS,kBAAkB,EAAKT,MAAMyT,KAAK,kBAE3FnE,GAAU+C,WAAW,EAAKrS,MAAMC,KAAK,EAAKD,MAAMS,iBAAiB,EAAKT,MAAMyT,KAAK,kBAGnF1V,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,KAE/CrU,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA1MpC,EA6MnBuC,aAAe,WACd,IAAIkS,GAAW,EACXC,EAAS7V,SAAS,EAAK8C,MAAMC,MAC9B+S,MAAMD,KACRD,GAAS,GAEV9W,QAAQC,IAAI,gBACU,UAAnB,EAAK+D,MAAM+K,QACb/O,QAAQC,IAAI,UACC,GAAV6W,GACF/U,GAAW,IAAIC,UAAQsR,GAAUkD,iBAAiBtV,SAAS,EAAK8C,MAAMC,OAAO,IAC7EhC,GAAW,IAAID,UAAQsR,GAAUkD,iBAAiBtV,SAAS,EAAK8C,MAAMC,OAAO,MAE7ElC,GAAW,IAAIC,UAAQsR,GAAUkD,iBAAiB,EAAKxS,MAAMC,MAAM,IACnEhC,GAAW,IAAID,UAAQsR,GAAUkD,iBAAiB,EAAKxS,MAAMC,MAAM,MAEzC,YAAnB,EAAKD,MAAM+K,OACN,GAAV+H,GACF9W,QAAQC,IAAI,YACZ8B,GAAW,IAAIC,UAAQsR,GAAUkD,iBAAiBtV,SAAS,EAAK8C,MAAMC,OAAO,IAC7EhC,GAAW,IAAID,UAAQsR,GAAUkD,iBAAiBtV,SAAS,EAAK8C,MAAMC,OAAO,MAE7ElC,GAAW,IAAIC,UAAQsR,GAAUkD,iBAAiB,EAAKxS,MAAMC,MAAM,IACnEhC,GAAW,IAAID,UAAQsR,GAAUkD,iBAAiB,EAAKxS,MAAMC,MAAM,KAEzC,kBAAnB,EAAKD,MAAM+K,SACnB/O,QAAQC,IAAI,kBACC,GAAV6W,GACF/U,GAAW,IAAIC,UAAQsR,GAAUkD,iBAAiBtV,SAAS,EAAK8C,MAAMC,OAAO,IAC7EhC,GAAW,IAAID,UAAQsR,GAAUkD,iBAAiBtV,SAAS,EAAK8C,MAAMC,OAAO,MAE7ElC,GAAW,IAAIC,UAAQsR,GAAUkD,iBAAiB,EAAKxS,MAAMC,MAAM,IACnEhC,GAAW,IAAID,UAAQsR,GAAUkD,iBAAiB,EAAKxS,MAAMC,MAAM,MAGrE/B,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAtPpC,EAyPnB0C,eAAiB,WAChB,IACMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,wBAAtBmB,EAASE,UAAoC,CAEhDoO,GAAUa,MAAMjT,SAAS8D,EAAS6J,IAClCyE,GAAUc,QAAQlT,SAAS8D,EAAS4R,SACpCtD,GAAUgB,QAAQpT,SAAS8D,EAAS6R,SACpCvD,GAAUQ,qBACV,IAAK,IAAIpT,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IACrB,UAAlBsE,EAASmS,SACXnX,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7B4S,GAAUkC,eAAexQ,EAASvD,QAAQf,GAAGc,WAAWwD,EAAS+S,OAAOvW,aAC9C,YAAlBwD,EAASmS,SACjBnX,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7B4S,GAAUgC,iBAAiBtQ,EAASvD,QAAQf,GAAGc,WAAWwD,EAAS+S,OAAOvW,aAChD,kBAAlBwD,EAASmS,UACjBnX,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7B4S,GAAUiC,uBAAuBvQ,EAASvD,QAAQf,GAAGc,WAAWwD,EAAS+S,OAAOvW,aAIlFO,GAAW,IAAIC,UAAQsR,GAAUiD,aAAa,IAC9CtU,GAAW,IAAID,UAAQsR,GAAUiD,aAAa,IAC9CrU,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAKtDgD,MAAM,gDA5RW,EAiSnBC,eAAiB,aA/RhB,EAAKtB,MAAQ,CACZ+K,OAAQ,SACR0I,KAAM,SACNzI,QAAS,GACT4H,OAAQ,GACRC,OAAQ,GACR5S,KAAM,GACNQ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GAEb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAhBP,E,qDAmBnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBA4QX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,UAAU5C,KAAK,UAAU3F,UAAU,eAAewI,YAAY,2BAAwBtI,GAAG,eAAe2G,MAAO7F,KAAK+E,MAAMgL,QAAStI,SAAUzH,KAAKmH,sBAE/J,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,kBAAkBtI,GAAG,cAAc2G,MAAO7F,KAAK+E,MAAM4S,OAAQlQ,SAAUzH,KAAKmH,sBAErJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,kBAAkBtI,GAAG,cAAc2G,MAAO7F,KAAK+E,MAAM6S,OAAQnQ,SAAUzH,KAAKmH,sBAErJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4P,kBAAtE,gCAGF,qBAAKvQ,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAf,SACC,yBAAQuI,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,cAAcyI,SAAUzH,KAAKmH,kBAA3E,UACO,wBAAQtB,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,iBAAd,iCAGH,qBAAK7G,UAAU,WAAf,SACJ,yBAAQuI,KAAK,SAAS5C,KAAK,OAAO3F,UAAU,cAAcyI,SAAUzH,KAAKmH,kBAAzE,UACO,wBAAQtB,MAAM,SAAd,oBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,QAAd,wBAGR,qBAAK7G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,mBAAmB3F,UAAU,eAAewI,YAAY,oBAAoBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMS,iBAAkBiC,SAAUzH,KAAKmH,sBAEvK,qBAAKnI,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,wBAG7D,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,4BAED,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,2BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4F,gBAAtE,+BAED,qBAAKvG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAMF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAnZf6C,aExBhBnI,GAVd,aAAc,IAAD,gCAKbiZ,aAAe,WAAQ,OAAO,EAAKC,WALtB,KAMbC,aAAe,SAACD,GAAgB,EAAKA,UAAYA,GANpC,KAObE,cAAgB,WAAQ,OAAO,EAAKC,YAPvB,KAQbC,cAAgB,SAACD,GAAiB,EAAKA,WAAaA,GAPnDnZ,KAAKgZ,UAAY,KACjBhZ,KAAKmZ,WAAa,MCAhBE,GAAY,ICMf,aAAc,IAAD,gCASbjZ,SAAW,SAACkZ,EAAUH,EAAYI,EAAOC,GACd,MAAtB,EAAKC,eAAiD,MAAxB,EAAKP,kBACtC,EAAKQ,YAAYJ,GACjB,EAAKF,cAAcD,GACnB,EAAKQ,kBACL,EAAKC,qBAEiB,MAApB,EAAKH,eAAuB,EAAKA,eAAgBH,IACnD,EAAKI,YAAYJ,GACjB,EAAKK,kBACL,EAAKE,WAAW3F,SAAQ,SAAA5N,GACK,MAAxBA,EAAQyS,gBACXzS,EAAQ2S,aAAa,UAIC,MAAtB,EAAKC,iBAAyB,EAAKA,iBAAkBC,IACvD,EAAKC,cAAcD,GACnB,EAAKS,oBACL,EAAKC,WAAW3F,SAAQ,SAAA5N,GACM,MAAzBA,EAAQ4S,iBACX5S,EAAQ8S,cAAc,UAKzB,IAAIU,EAAiB,EAAKC,wBAAwBvY,OAAO+X,GACrDS,EAAkB,EAAKD,wBAAwBvY,OAAOgY,GAEtDnZ,EAAa,IAAIP,GAEA,GAAlBga,GACFzZ,EAAW4Y,aAAaM,GACxB,EAAKM,WAAW3F,SAAQ,SAAA5N,GACpBiT,GAASjT,EAAQyS,iBACG,GAAnBiB,GACH3Z,EAAW+Y,cAAcI,GACzB,EAAKS,0BAA0B7Z,SAASoZ,GACxC,EAAKU,MAAMrY,KAAKxB,GAChBU,QAAQC,IAAI,WAAWuY,EAAM,0BAA0BC,EAAM,iBAE5DzY,QAAQC,IAAI,2BAMO,GAAnBgZ,EACF,EAAKH,WAAW3F,SAAQ,SAAA5N,GACxBjG,EAAW+Y,cAAcI,GACtBA,GAASlT,EAAQ4S,kBACG,GAAnBc,GACH3Z,EAAW4Y,aAAaM,GACxB,EAAKQ,wBAAwB3Z,SAASmZ,GACtC,EAAKW,MAAMrY,KAAKxB,GAChBU,QAAQC,IAAI,WAAWuY,EAAM,0BAA0BC,EAAM,iBAE5DzY,QAAQC,IAAI,2BAMf,EAAK+Y,wBAAwB3Z,SAASmZ,GACtC,EAAKU,0BAA0B7Z,SAASoZ,GAExCnZ,EAAW4Y,aAAaM,GACxBlZ,EAAW+Y,cAAcI,GACzB,EAAKU,MAAMrY,KAAKxB,KA7EL,KAmFbS,SAAW,SAACwY,EAAUH,EAAYI,EAAOC,GAExC,GAA0B,MAAtB,EAAKC,eAAiD,MAAxB,EAAKP,gBAEtC,OADA9S,MAAM,6BACC,KAGiB,QAAtB,EAAKqT,cACR,EAAKM,wBAAwBrQ,MACE,QAAtB,EAAK+P,cACd,EAAKM,wBAAwB/P,aAE7B,EAAK+P,wBAAwBjZ,SAASyY,GAGX,QAAxB,EAAKL,gBACP,EAAKe,0BAA0BvQ,MACC,QAAxB,EAAKwP,gBACb,EAAKe,0BAA0BjQ,aAEhC,EAAKiQ,0BAA0BnZ,SAAS0Y,IAvG5B,KA6GbhY,OAAS,SAAC8X,EAAUH,EAAYI,EAAOC,GAEtC,GAA0B,MAAtB,EAAKC,eAAiD,MAAxB,EAAKP,gBAEtC,OADA9S,MAAM,6BACC,KAGR,IAAI+T,EAAS,EAAKJ,wBAAwBvY,OAAO+X,GAC7Ca,EAAS,EAAKH,0BAA0BzY,OAAOgY,GAInD,OAFAzY,QAAQC,IAAI,UACZD,QAAQC,IAAIoS,OAAO+G,GAAQ,IAAI/G,OAAOgH,IAC/B,CACNC,MAAOF,EACPG,MAAOF,IA3HI,KAgIb/Y,OAAS,SAACiY,EAAUH,EAAYI,EAAOC,EAAOe,EAASC,GAGtD,GAA0B,MAAtB,EAAKf,eAAiD,MAAxB,EAAKP,gBAEtC,OADA9S,MAAM,6BACC,KAER,IAAI+T,EAAS,EAAKJ,wBAAwBvY,OAAO+X,GAC7Ca,EAAS,EAAKH,0BAA0BzY,OAAOgY,GAEvC,MAARW,GAAe,EAAKJ,wBAAwB1Y,OAAOkY,EAAOgB,GAEnD,MAARH,GAAe,EAAKH,0BAA0B5Y,OAAOmY,EAAOgB,IA5InD,KAgJb7Z,gBAAkB,SAAC2Y,EAAUH,EAAYI,EAAOC,GAC/C,GAA0B,MAAtB,EAAKC,eAAiD,MAAxB,EAAKP,gBAEtC,OADA9S,MAAM,6BACC,KAKkB,QAAtB,EAAKqT,eAAiD,QAAtB,EAAKA,gBAE5B,GADC,EAAKM,wBAAwBvY,OAAO+X,IAEhD,EAAKQ,wBAAwBpZ,gBAAgB4Y,IAInB,QAAxB,EAAKL,iBAAqD,QAAxB,EAAKA,kBAE9B,GADC,EAAKe,0BAA0BzY,OAAOgY,IAElD,EAAKS,0BAA0BtZ,gBAAgB6Y,KAlKrC,KAwKb3Y,gBAAkB,SAACyY,EAAUH,EAAYI,EAAOC,GAE/C,GAA0B,MAAtB,EAAKC,eAAiD,MAAxB,EAAKP,gBAEtC,OADA9S,MAAM,6BACC,KAIkB,QAAtB,EAAKqT,eAAiD,QAAtB,EAAKA,gBAE5B,GADA,EAAKM,wBAAwBvY,OAAO+X,IAE/C,EAAKQ,wBAAwBlZ,gBAAgB0Y,IAInB,QAAxB,EAAKL,iBAAqD,QAAxB,EAAKA,kBAE9B,GADA,EAAKe,0BAA0BzY,OAAOgY,IAEjD,EAAKS,0BAA0BpZ,gBAAgB2Y,KA1LrC,KAgMbG,gBAAkB,WACG,gBAAjB,EAAKL,SACP,EAAKmB,mBAAqB,IAAIva,EACL,eAAjB,EAAKoZ,SACZ,EAAKmB,mBAAqB,IAAIvS,EACN,kBAAjB,EAAKoR,SACZ,EAAKmB,mBAAqB,IAAI5R,EACN,wBAAjB,EAAKyQ,SACZ,EAAKmB,mBAAqB,IAAIC,EACN,QAAjB,EAAKpB,SACZ,EAAKmB,mBAAqB,IAAI7Q,GACN,QAAjB,EAAK0P,WACZ,EAAKmB,mBAAqB,IAAIhQ,KA5MpB,KA+MbmP,kBAAoB,WACG,gBAAnB,EAAKT,WACP,EAAKwB,qBAAuB,IAAIza,EACL,eAAnB,EAAKiZ,WACb,EAAKwB,qBAAuB,IAAIzS,EACL,kBAAnB,EAAKiR,WACb,EAAKwB,qBAAuB,IAAI9R,EACL,wBAAnB,EAAKsQ,WACb,EAAKwB,qBAAuB,IAAID,EACL,QAAnB,EAAKvB,WACb,EAAKwB,qBAAuB,IAAI/Q,GACL,QAAnB,EAAKuP,aACb,EAAKwB,qBAAuB,IAAIlQ,KA3NrB,KAkObsP,sBAAwB,WAAQ,OAAO,EAAKU,oBAlO/B,KAmObG,sBAAwB,SAACtB,GAAe,EAAKmB,mBAAqBnB,GAnOrD,KAqObW,wBAA0B,WAAQ,OAAO,EAAKU,sBArOjC,KAsObE,wBAA0B,SAAC1B,GAAiB,EAAKwB,qBAAuBxB,GAtO3D,KAwObU,SAAW,WAAQ,OAAO,EAAKK,OAxOlB,KA0ObT,YAAc,WAAQ,OAAO,EAAKH,UA1OrB,KA2ObI,YAAc,SAACJ,GAAe,EAAKA,SAAWA,GA3OjC,KA4ObJ,cAAgB,WAAQ,OAAO,EAAKC,YA5OvB,KA6ObC,cAAgB,SAACD,GAAiB,EAAKA,WAAaA,GA5OnDnZ,KAAKya,mBAAqB,KAC1Bza,KAAK2a,qBAAuB,KAC5B3a,KAAKsZ,SAAW,KAChBtZ,KAAKmZ,WAAa,KAClBnZ,KAAKka,MAAQ,IDwoBEY,G,kDA9oBhB,WAAY/W,GAAQ,IAAD,8BAClB,cAAMA,IAkCPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WAxCvC,EA6CnBC,UAAY,WAEXuU,GAAUjZ,SAAS,EAAK2E,MAAMgW,YAAa,EAAKhW,MAAMiW,YAAa,EAAKjW,MAAMwU,MAAO,EAAKxU,MAAMyU,OAChG,IAIIvW,EAAM,CACTC,MALc,IAAIH,UAAQsW,GAAUU,wBAAwBpY,mBAM5DsD,MALc,IAAIlC,UAAQsW,GAAUU,wBAAwBhY,oBA2BzD6M,EAAO,CACV1L,MA3Be,IAAIH,UAAQsW,GAAUY,0BAA0BtY,mBA4B/DsD,MA3Be,IAAIlC,UAAQsW,GAAUY,0BAA0BlY,oBAkDhE,EAAKmD,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EA5ClC,CACbI,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,eA+B5B,EAAKqM,SAAW,IAAI7K,UAAQ,EAAKwK,QAAQtK,QAASuJ,EArBnC,CACdvL,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,gBA/FV,EA2GnB2B,aAAe,WACd+T,GAAUvY,SAAS,EAAKiE,MAAMgW,YAAa,EAAKhW,MAAMiW,YAAa,EAAKjW,MAAMwU,MAAO,EAAKxU,MAAMyU,OAChG,IAIIvW,EAAM,CACTC,MALc,IAAIH,UAAQsW,GAAUU,wBAAwBpY,mBAM5DsD,MALc,IAAIlC,UAAQsW,GAAUU,wBAAwBhY,oBA2BzD6M,EAAO,CACV1L,MA3Be,IAAIH,UAAQsW,GAAUY,0BAA0BtY,mBA4B/DsD,MA3Be,IAAIlC,UAAQsW,GAAUY,0BAA0BlY,oBAkDhE,EAAKmD,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EA5ClC,CACbI,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,eA+B5B,EAAKqM,SAAW,IAAI7K,UAAQ,EAAKwK,QAAQtK,QAASuJ,EArBnC,CACdvL,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,gBA5JV,EAsKnB4B,aAAe,WACd8T,GAAUhY,OAAO,EAAK0D,MAAMgW,YAAa,EAAKhW,MAAMiW,YAAa,EAAKjW,MAAMwU,MAAO,EAAKxU,MAAMyU,MAAO,EAAKzU,MAAMwV,QAAS,EAAKxV,MAAMyV,SACpI,IAIIvX,EAAM,CACTC,MALc,IAAIH,UAAQsW,GAAUU,wBAAwBpY,mBAM5DsD,MALc,IAAIlC,UAAQsW,GAAUU,wBAAwBhY,oBA2BzD6M,EAAO,CACV1L,MA3Be,IAAIH,UAAQsW,GAAUY,0BAA0BtY,mBA4B/DsD,MA3Be,IAAIlC,UAAQsW,GAAUY,0BAA0BlY,oBAkDhE,EAAKmD,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EA5ClC,CACbI,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,eA+B5B,EAAKqM,SAAW,IAAI7K,UAAQ,EAAKwK,QAAQtK,QAASuJ,EArBnC,CACdvL,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,gBAvNV,EAiOnBgC,aAAe,WACd,IAAI,EAAiB0T,GAAU7X,OAAO,EAAKuD,MAAMgW,YAAa,EAAKhW,MAAMiW,YAAa,EAAKjW,MAAMwU,MAAO,EAAKxU,MAAMyU,OAA9Ga,EAAL,EAAKA,MAAOC,EAAZ,EAAYA,MAGZ,GAFAvZ,QAAQC,IAAI,cACZD,QAAQC,IAAIoS,OAAOiH,GAAO,KAAKjH,OAAOkH,IAClC,GAAKrY,SAASoY,IAAU,GAAKpY,SAASqY,GAAO,CAChD,IAIIrX,EAAM,CACTC,MALc,IAAIH,UAAQsW,GAAUU,wBAAwBpY,mBAM5DsD,MALGjC,EAAW,IAAID,UAAQsW,GAAUU,wBAAwBhY,oBAQzDqB,EAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cAKxBiL,EAAO,CACV1L,MA3Be,IAAIH,UAAQsW,GAAUY,0BAA0BtY,mBA4B/DsD,MA3BG0J,EAAY,IAAI5L,UAAQsW,GAAUY,0BAA0BlY,oBA8B5DsN,EAAW,CACdhM,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cAM5BX,EAAS4C,IAAI,CAACzD,KAAMF,SAASoY,GAAQ3a,GAAIuC,SAASoY,GAAQxU,MAAM5D,SAASoY,GAAO3W,MAAM,CAACA,MAAM,aAC7FiL,EAAU/I,IAAI,CAACzD,KAAMF,SAASqY,GAAQ5a,GAAIuC,SAASqY,GAAQzU,MAAM5D,SAASqY,GAAO5W,MAAM,CAACA,MAAM,iBAG9F,KACIV,EAEA2L,EACA1L,EAAM,CACTC,MALc,IAAIH,UAAQsW,GAAUU,wBAAwBpY,mBAM5DsD,MALGjC,EAAW,IAAID,UAAQsW,GAAUU,wBAAwBhY,oBAQzDqB,EAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cAKxBiL,EAAO,CACV1L,MA3Be,IAAIH,UAAQsW,GAAUY,0BAA0BtY,mBA4B/DsD,MA3BG0J,EAAY,IAAI5L,UAAQsW,GAAUY,0BAA0BlY,oBA8B5DsN,EAAW,CACdhM,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cAU7B,EAAKuB,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,GACtD,EAAK4M,SAAW,IAAI7K,UAAQ,EAAKwK,QAAQtK,QAASuJ,EAAOS,IAzVvC,EA6VnB5J,aAAe,WACd4T,GAAU1Y,gBAAgB,EAAKoE,MAAMgW,YAAa,EAAKhW,MAAMiW,YAAa,EAAKjW,MAAMwU,MAAO,EAAKxU,MAAMyU,OACvG,IAIIvW,EAAM,CACTC,MALc,IAAIH,UAAQsW,GAAUU,wBAAwBpY,mBAM5DsD,MALc,IAAIlC,UAAQsW,GAAUU,wBAAwBhY,oBA2BzD6M,EAAO,CACV1L,MA3Be,IAAIH,UAAQsW,GAAUY,0BAA0BtY,mBA4B/DsD,MA3Be,IAAIlC,UAAQsW,GAAUY,0BAA0BlY,oBAkDhE,EAAKmD,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EA5ClC,CACbI,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,eA+B5B,EAAKqM,SAAW,IAAI7K,UAAQ,EAAKwK,QAAQtK,QAASuJ,EArBnC,CACdvL,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,gBA9YV,EAwZnB+B,eAAiB,WAChB2T,GAAUxY,gBAAgB,EAAKkE,MAAMgW,YAAa,EAAKhW,MAAMiW,YAAa,EAAKjW,MAAMwU,MAAO,EAAKxU,MAAMyU,OACvG,IAIIvW,EAAM,CACTC,MALc,IAAIH,UAAQsW,GAAUU,wBAAwBpY,mBAM5DsD,MALc,IAAIlC,UAAQsW,GAAUU,wBAAwBhY,oBA2BzD6M,EAAO,CACV1L,MA3Be,IAAIH,UAAQsW,GAAUY,0BAA0BtY,mBA4B/DsD,MA3Be,IAAIlC,UAAQsW,GAAUY,0BAA0BlY,oBAkDhE,EAAKmD,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EA5ClC,CACbI,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,eA+B5B,EAAKqM,SAAW,IAAI7K,UAAQ,EAAKwK,QAAQtK,QAASuJ,EArBnC,CACdvL,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,gBAzcV,EAmdnBmC,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aACvC,GAA0B,wBAAtBmB,EAASE,UAAoC,CAChDF,EAASvD,QAAQ0R,SAAQ,SAAA5N,GACxBvF,QAAQC,IAAIsF,EAAQ0S,UAAY,KAAK1S,EAAQ2U,YAC7C5B,GAAUjZ,SAAS,EAAK2E,MAAMgW,YAAa,EAAKhW,MAAMiW,YAAa5H,OAAO9M,EAAQ0S,WAAY5F,OAAO9M,EAAQ2U,gBAI9G,IAIIhY,EAAM,CACTC,MALc,IAAIH,UAAQsW,GAAUU,wBAAwBpY,mBAM5DsD,MALc,IAAIlC,UAAQsW,GAAUU,wBAAwBhY,oBA2BzD6M,EAAO,CACV1L,MA3Be,IAAIH,UAAQsW,GAAUY,0BAA0BtY,mBA4B/DsD,MA3Be,IAAIlC,UAAQsW,GAAUY,0BAA0BlY,oBAkDhE,EAAKmD,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EA5ClC,CACbI,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,eA+B5B,EAAKqM,SAAW,IAAI7K,UAAQ,EAAKwK,QAAQtK,QAASuJ,EArBnC,CACdvL,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,oBAY5ByC,MAAM,6CAxhBW,EA6hBnBC,eAAiB,WAEhBtF,QAAQC,IAAI,eA7hBZ,EAAK+D,MAAQ,CAEZwU,MAAO,GACPC,MAAO,GACPuB,YAAa,GACbC,YAAa,GACbT,QAAS,GACTC,QAAS,GACT9V,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACf,EAAK8K,SAAW,GACd,EAAK5K,OAAS8B,sBACd,EAAKyI,QAAUzI,sBACjB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAjBP,E,qDAoBnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAzBrCpC,UACAG,a,gCA0BH,WACCpD,KAAKgQ,SAAW,IAAI7K,UAAQnF,KAAK2P,QAAQtK,QA5BjCuJ,UACGS,a,+BA8BZ,SAAkBpL,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAogBX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,cAAc3F,UAAU,eAAewI,YAAY,eAAetI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMgW,YAAatT,SAAUzH,KAAKmH,sBAExJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,QAAQ3F,UAAU,eAAewI,YAAY,SAAStI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMwU,MAAO9R,SAAUzH,KAAKmH,sBAEtI,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,uBAGD,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAf,SACC,uBAAOuI,KAAK,OAAO5C,KAAK,UAAU3F,UAAU,eAAewI,YAAY,WAAWtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMwV,QAAS9S,SAAUzH,KAAKmH,sBAE5I,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4F,gBAAtE,+BAED,qBAAKvG,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,wBAG7D,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,cAAc3F,UAAU,eAAewI,YAAY,eAAetI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMiW,YAAavT,SAAUzH,KAAKmH,sBAExJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,QAAQ3F,UAAU,eAAewI,YAAY,SAAStI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMyU,MAAO/R,SAAUzH,KAAKmH,sBAEtI,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK8F,gBAAtE,sBAED,qBAAKzG,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+F,kBAAtE,qBAED,qBAAK1G,UAAU,WAAf,SACC,uBAAOuI,KAAK,OAAO5C,KAAK,UAAU3F,UAAU,eAAewI,YAAY,WAAWtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMyV,QAAS/S,SAAUzH,KAAKmH,sBAE5I,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,2BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAMF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAIf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,SAC3C,qBAAKiC,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAK2P,iB,GApoBtB1H,aEHpBiT,GAAgB,ICFnB,aAAc,IAAD,gCAQbC,OAAS,SAACnW,GAIT,IAHA,IAAI8D,EAAQ9D,EAAKmB,OAEb1E,EAAI,EACFA,EAAEqH,GACP,EAAKsS,WAAWvZ,KAAKmD,EAAKqW,OAAO5Z,IACjCA,IAGDA,EAAI,EACJ,IAAI6Z,EAAW,EAGf,IAFA,EAAKC,MAAM1Z,KAAK,CAAC3C,GAAG,SAAUa,KAAK,KAAMyb,MAAMvZ,SAAS,EAAKwZ,SAC7D,EAAKC,UAAU7Z,KAAK,CAAC3C,GAAG,aAAca,KAAK,KAAMyb,MAAMvZ,SAAS,EAAKwZ,SAC/Dha,EAAEqH,GACJ,EAAK6S,SAASla,EAAE,IAAKA,EAAE,GACzB,EAAK8Z,MAAM1Z,KAAK,CAAC3C,GAAG,IAAIkU,OAAO3R,EAAE,GAAI1B,KAAK,KAAMyb,MAAMvZ,SAAS,EAAKwZ,SACpE,EAAKC,UAAU7Z,KAAK,CAAC3C,GAAG,IAAIkU,OAAO3R,EAAE,GAAI1B,KAAK,KAAMyb,MAAMvZ,SAAS,EAAKwZ,SACxE3S,MAEA,EAAKyS,MAAM1Z,KAAK,CAAC3C,GAAG,IAAIkU,OAAOkI,GAAWvb,KAAK,EAAKqb,WAAWE,EAAS,GAAIE,MAAMvZ,SAAS,EAAKwZ,SAChG,EAAKC,UAAU7Z,KAAK,CAAC3C,GAAG,IAAIkU,OAAOkI,GAAWvb,KAAK,EAAKqb,WAAWE,EAAS,GAAIE,MAAMvZ,SAAS,EAAKwZ,SACpGH,KAED7Z,IAED,EAAKga,QAiBL,IAXA,EAAKF,MAAMrH,SAAQ,SAAA5N,GAClB,GAAyB,KAAtBA,EAAQpH,GAAGmc,OAAO,GAAQ,CAC5B,EAAKO,WAAW/Z,KAAK,CAAC3C,GAAG,IAAIoH,EAAQpH,GAAGmc,OAAO,GAAItb,KAAK,KAAMyb,MAAM,EAAKC,QACzE,IAAItS,EAAM,EAAK0S,YAAY/S,EAAMxC,EAAQpH,GAAGmc,OAAO,GAAI,EAAKI,OAC5D,EAAKpa,OAAOiF,EAAQpH,GAAIiK,EAAK,EAAKsS,OAClC,EAAKA,YAKPha,EAAI,EACEA,EAAE,EAAKia,UAAUvV,QAAO,CAE7B,IADA,IAAI4F,EAAI,EACFA,EAAE,EAAK6P,WAAWzV,QACpB,EAAKuV,UAAUja,GAAGvC,IAAM,EAAK0c,WAAW7P,GAAG7M,IAAiC,MAA3B,EAAK0c,WAAW7P,GAAGhM,OACtE,EAAK2b,UAAUja,GAAG1B,KAAO,EAAK6b,WAAW7P,GAAGhM,KAC5C,EAAK2b,UAAUja,GAAG+Z,MAAQ,EAAKC,OAGL,cAAxB,EAAKC,UAAUja,GAAGvC,KACpB,EAAKwc,UAAUja,GAAG+Z,MAAQ,EAAKC,OAEhC1P,IAEDtK,MA/DW,KAmEboa,YAAc,SAAC/S,EAAMgT,EAAQL,GAC5B,IAAIha,EAAI,EACJyH,EAAQ,KACRiK,GAAS,EACT4I,EAAU,EAEd,IADAhb,QAAQC,IAAI,aAAa8H,EAAK,UAAUgT,EAAO,WAAWL,GACpDha,GAAGqH,GAAK,CACb,IAAIP,EAAO,EAAK/G,OAAOC,GACpBqa,GAAQra,EACPsa,EAAQD,GAAoB,GAAV3I,GAEE,KAAnB5K,EAAKrJ,GAAGmc,OAAO,GACjB,EAAKO,WAAW/Z,KAAK,CAAC3C,GAAGqJ,EAAKrJ,GAAIa,KAAK,KAAMyb,MAAMvZ,SAASwZ,MAEhD,MAATvS,EACFA,EAAQX,EAAKxI,KAKG,GAAbwI,EAAKxI,MAAsB,GAATmJ,EAAaA,EAAQ,EACrB,GAAbX,EAAKxI,MAAsB,GAATmJ,GACL,GAAbX,EAAKxI,MAAsB,GAATmJ,EADaA,EAAQ,EAE1B,GAAbX,EAAKxI,MAAsB,GAATmJ,IAAaA,EAAQ,GAEhD,EAAK0S,WAAW/Z,KAAK,CAAC3C,GAAGqJ,EAAKrJ,GAAIa,KAAKwI,EAAKxI,KAAMyb,MAAMvZ,SAASwZ,QAElEM,GACYD,IACX3I,GAAO,KAKPA,EADW,KADZ4I,EAMA,EAAKH,WAAW/Z,KAAK,CAAC3C,GAAGqJ,EAAKrJ,GAAIa,KAAK,KAAMyb,MAAMvZ,SAASwZ,MAG7D,EAAKG,WAAW/Z,KAAK,CAAC3C,GAAGqJ,EAAKrJ,GAAIa,KAAK,KAAMyb,MAAMvZ,SAASwZ,KAE7Dha,IAED,OAAOyH,GAhHK,KAoHb1H,OAAS,SAAC2S,GAGT,IAFA,IAAI1S,EAAI,EACJ0H,EAAM,KACJ1H,EAAE,EAAK8Z,MAAMpV,QAAO,CAEzB,GADAgD,EAAM,EAAKoS,MAAM9Z,GACd0S,GAAU1S,EACZ,OAAO0H,EAER1H,IAED,OAAO,GA9HK,KAiIbJ,OAAS,SAACnC,EAAIoC,EAAQma,GAGrB,IAFA,IAAIha,EAAI,EAEFA,EAAE,EAAKma,WAAWzV,QACpB,EAAKyV,WAAWna,GAAGvC,IAAIA,GAAM,EAAK0c,WAAWna,GAAG+Z,OAASC,IAC3D,EAAKG,WAAWna,GAAG1B,KAAKqT,OAAO9R,IAEhCG,IAED,OAAO,GA1IK,KA8Ibka,SAAW,SAAC7S,GAEX,IADA,IAAIrH,EAAI,EACFA,EAAEqH,GAAK,CACZ,GAAG,WAAGrH,IAAKqH,EACV,OAAO,KAAP,IAAO,EAAGrH,GAEXA,IAED,OAAO,MAtJK,KA0JZE,gBAAkB,WAKZ,IAHA,IAAIC,EAAM,GACNH,EAAI,EACJua,EAAS,EACPva,EAAE,EAAK8Z,MAAMpV,QAClBvE,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAMsR,OAAO,EAAKmI,MAAM9Z,GAAGvC,IAAKqP,MAAM,EAAKgN,MAAM9Z,GAAG+Z,QACzE/Z,IACAua,IAGD,IADAva,EAAI,EACEA,EAAE,EAAKma,WAAWzV,QACa,KAAjC,EAAKyV,WAAWna,GAAGvC,GAAGmc,OAAO,GAC/BzZ,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM,EAAK8Z,WAAWna,GAAGvC,GAAIqP,MAAM,EAAKqN,WAAWna,GAAG+Z,QAE7C,MAA3B,EAAKI,WAAWna,GAAG1B,KACrB6B,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM,IAAKyM,MAAM,EAAKqN,WAAWna,GAAG+Z,QAGzD5Z,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAMsR,OAAO,EAAKwI,WAAWna,GAAG1B,MAAOwO,MAAM,EAAKqN,WAAWna,GAAG+Z,QAGvF/Z,IACAua,IAGD,IADAva,EAAI,EACEA,EAAE,EAAKia,UAAUvV,QACK,cAAxB,EAAKuV,UAAUja,GAAGvC,GACpB0C,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAMsR,OAAO,EAAKsI,UAAUja,GAAGvC,IAAKqP,MAAM,EAAKmN,UAAUja,GAAG+Z,QAEjF5Z,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAMsR,OAAO,EAAKsI,UAAUja,GAAG1B,MAAOwO,MAAM,EAAKmN,UAAUja,GAAG+Z,QAGpF/Z,IACAua,IAED,OAAOpa,GA9LD,KAkMVqa,eAAiB,SAAC/B,EAAOhb,EAAIuc,GAG5B,IAFA,IAAIha,EAAI,EACJua,EAAS,EACPva,EAAE,EAAK8Z,MAAMpV,QACf1E,IACAua,IAGD,IADAva,EAAI,EACEA,EAAE,EAAKma,WAAWzV,QAAO,CAE9B,GAAG+T,EAAMzY,GAAGvC,IAAMA,GAAMgb,EAAMzY,GAAG+Z,OAASC,EACzC,OAAOO,EAERva,IACAua,IAID,IADAva,EAAI,EACEA,EAAE,EAAKia,UAAUvV,QACtB1E,IACAua,IAGJ,OAAO,GAzNE,KA6NVja,gBAAkB,WAIjB,IAHA,IAAIN,EAAI,EACJG,EAAM,GACNoa,EAAS,EACPva,EAAE,EAAK8Z,MAAMpV,QAAO,CACF,MAAjB,EAAKoV,MAAM9Z,EAAE,IACfG,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAEjE,IAAImG,EAAO,EAAK0T,eAAe,EAAKL,WAAY,EAAKL,MAAM9Z,GAAGvC,GAAI,EAAKqc,MAAM9Z,GAAG+Z,MAAM,GAC7E,MAANjT,GACF3G,EAAIC,KAAK,CAACM,KAAK6Z,EAAQtc,GAAG6I,EAAMnG,OAAQ,OAGzCX,IACAua,IAGD,IADAva,EAAI,EACEA,EAAE,EAAKma,WAAWzV,QAAO,CACL,MAAtB,EAAKyV,WAAWna,EAAE,IAAY,EAAKma,WAAWna,GAAG+Z,OAAS,EAAKI,WAAWna,EAAE,GAAG+Z,OACjF5Z,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAEjE,IAAImG,EAAO,EAAK0T,eAAe,EAAKL,WAAY,EAAKA,WAAWna,GAAGvC,GAAI,EAAK0c,WAAWna,GAAG+Z,MAAM,GACvF,MAANjT,GACF3G,EAAIC,KAAK,CAACM,KAAK6Z,EAAQtc,GAAG6I,EAAMnG,OAAQ,OAEzCX,IACAua,IAGD,IADAva,EAAI,EACEA,EAAE,EAAKia,UAAUvV,QAAO,CACL,MAArB,EAAKuV,UAAUja,EAAE,IAAY,EAAKia,UAAUja,GAAG+Z,OAAS,EAAKE,UAAUja,EAAE,GAAG+Z,OAC9E5Z,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAGjE,IAAImG,EAAO,EAAK0T,eAAe,EAAKL,WAAY,EAAKF,UAAUja,GAAGvC,GAAI,EAAKwc,UAAUja,GAAG+Z,MAAM,GACrF,MAANjT,GACF3G,EAAIC,KAAK,CAACM,KAAKoG,EAAM7I,GAAGsc,EAAQ5Z,OAAQ,OAEzCX,IACAua,IAKD,OAAOpa,GAxQb5B,KAAKob,WAAY,GACjBpb,KAAKub,MAAQ,GACbvb,KAAK4b,WAAa,GAClB5b,KAAK0b,UAAY,GACjB1b,KAAKyb,MAAQ,GDFX3Y,GAAW,IAAIC,UAAQmY,GAAcvZ,mBACrCqB,GAAW,IAAID,UAAQmY,GAAcnZ,mBAGrCkB,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAEHI,GAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACboL,MAAO,MACPnL,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,aAIxBsL,OAAO,CACTC,aAAc,CACZC,UAAW,QAsIE+M,G,kDA9HhB,WAAYnY,GAAQ,IAAD,8BAClB,cAAMA,IAuBPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA7BvC,EAiCnBiB,eAAiB,WAEhB,IAAMqW,EAAa,EAAKpX,MAAMH,YAC9B7D,QAAQC,IAAImb,GAEZjB,GAAcC,OAAOgB,GACrBrZ,GAAW,IAAIC,UAAQmY,GAAcvZ,mBACrCqB,GAAW,IAAID,UAAQmY,GAAcnZ,mBACrCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA9CpC,EAqDnBgZ,aAAe,WACM,IAAjB,EAAKrX,MAAMC,MACbkW,GAAcC,OAAO,EAAKpW,MAAMC,MAChClC,GAAW,IAAIC,UAAQmY,GAAcvZ,mBACpCqB,GAAW,IAAID,UAAQmY,GAAcnZ,mBACrCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAEvDgD,MAAM,yCA/DP,EAAKrB,MAAQ,CACZC,KAAM,GACNN,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBATP,E,qDAYnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAoDX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOtI,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,qBAE5D,qBAAKhF,UAAU,aAEf,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,uBAAOuI,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKyc,gBAAtE,yBAED,qBAAKpd,UAAU,WAAWqI,MAAO,CAAC6E,YAAa,OAA/C,SACC,wBAAQ3E,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAzHxB6C,aEuIPoU,GA9Kd,aAAc,IAAD,gCAObC,aAAa,SAACvc,GACb,EAAKwc,SAASxc,GARF,KAUbyc,QAAQ,SAACzc,GACR,EAAK0c,IAAI1c,GAXG,KAab2c,aAAa,WAAM,OAAO,EAAKH,UAblB,KAcbI,QAAQ,WAAM,OAAO,EAAKF,KAdb,KAebG,cAAc,SAACC,EAAOJ,EAAIK,GACzB,IAAI9O,EAAO,EAAKxC,OAAOqR,IACX,GAAT7O,GACF,EAAK+O,SAAS/O,GAAQ,GAAGnM,KAAK,CAAC4a,EAAIK,KAlBxB,KAqBbE,SAAS,SAACjd,EAAKkd,GACd,EAAKF,SAASlb,KAAK,CAAC9B,EAAKkd,KAtBb,KAwBb7F,WAAW,SAAC8F,EAAUC,EAAUC,GAC/B,IAAIpP,EAAQ,EAAKxC,OAAO0R,GACxB,EAAKH,SAAS/O,GAAQ,CAACmP,EAAU,KA1BrB,KA4Bb3R,OAAO,SAACzL,GAEP,IADA,IAAIiO,GAAQ,EACJvM,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAQ1E,IACpC,GAAG,EAAKsb,SAAStb,GAAG,IAAI1B,EAEvB,OADAiO,EAAOvM,EAIT,OAAOuM,GApCK,KAsCbqP,SAAS,SAACtd,GACT,IAAI,IAAI0B,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAQ1E,IACjC,EAAKsb,SAAStb,GAAG,IAAI1B,GACvB,EAAKgd,SAASlG,OAAOpV,EAAE,IAzCb,KA6Cb6b,qBAAqB,WACpB,IAAInP,EAAQ,GACRC,EAAS,GACbrN,QAAQC,IAAI,EAAK+b,UACjB,IAAI,IAAItb,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAO1E,IAAI,CACvC,IAAI4H,EAAS,GAAI,EAAK0T,SAAStb,GAAG,GAElC,GADA0M,EAAQtM,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOuH,IACI,GAA5B,EAAK0T,SAAStb,GAAG,GAAG0E,OACtB,IAAI,IAAI4F,EAAE,EAAGA,EAAE,EAAKgR,SAAStb,GAAG,GAAG0E,OAAQ4F,IAAI,CAC9C,IAAIiC,EAEJ,IAAY,IADZA,EAAS,EAAKxC,OAAO,EAAKuR,SAAStb,GAAG,GAAGsK,GAAG,KAC9B,CACb,IAAIjK,EAAO,GAAK,EAAKib,SAAStb,GAAG,GAAGsK,GAAG,GACvCqC,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAGsO,EAAQlM,MAAOA,MAK7C,MAAO,CAACqM,EAAQC,IA/DJ,KAiEbmP,mBAAmB,WAClB,IAAIpP,EAAQ,GACRC,EAAS,GACbrN,QAAQC,IAAI,EAAK+b,UACjB,IAAI,IAAItb,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAO1E,IAAI,CACvC,IAAI4H,EAAS,GAAI,EAAK0T,SAAStb,GAAG,GAElC,GADA0M,EAAQtM,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOuH,IACI,GAA5B,EAAK0T,SAAStb,GAAG,GAAG0E,OACtB,IAAI,IAAI4F,EAAE,EAAGA,EAAE,EAAKgR,SAAStb,GAAG,GAAG0E,OAAQ4F,IAAI,CAC9C,IAAIiC,EAEJ,IAAY,IADZA,EAAS,EAAKxC,OAAO,EAAKuR,SAAStb,GAAG,GAAGsK,GAAG,KAC9B,CACb,IAAIjK,EAAO,GAAG,EAAKib,SAAStb,GAAG,GAAGsK,GAAG,GACrCqC,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAGsO,EAAQlM,MAAOA,EAAOM,OAAQ,SAK5D,MAAO,CAAC+L,EAAQC,IAnFJ,KAqFboP,cAAc,WACb,IAAI,IAAI/b,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAQ1E,IAAI,CAExC,IADA,IAAIgc,EAAQ,GACJ1R,EAAE,EAAGA,EAAE,EAAKgR,SAAS5W,OAAQ4F,IACpC0R,EAAQ5b,KAAK,GAEd,EAAKmL,OAAOnL,KAAK4b,GAElB,IAAI,IAAIhc,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAQ1E,IACpC,GAA+B,GAA5B,EAAKsb,SAAStb,GAAG,GAAG0E,OACtB,IAAI,IAAI4F,EAAE,EAAGA,EAAE,EAAKgR,SAAStb,GAAG,GAAG0E,OAAO4F,IAAI,CAC7C,IAAIiC,EACJA,EAAS,EAAKxC,OAAO,EAAKuR,SAAStb,GAAG,GAAGsK,GAAG,IAC5C,EAAKiB,OAAOvL,GAAGuM,GAAQ,IAlGd,KAuGb0P,iBAAiB,WAChB,EAAKF,gBAIL,IAHA,IAAIrP,EAAQ,GACRC,EAAS,GACTE,EAAS,EACL7M,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAO1E,IACnC,IAAI,IAAIsK,EAAE,EAAGA,EAAE,EAAKgR,SAAS5W,OAAO4F,IAAI,CACvC,IAAI1C,EAAW,GAAK,EAAK2D,OAAOvL,GAAGsK,GACnCoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAM9M,IAClD6M,IAGF,IAAI,IAAIvC,EAAE,EAAGA,EAAE,EAAKgR,SAAS5W,OAAO4F,IAEnC,IADA,IAAI5C,EAAI,EAAE4C,EACFtK,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAO1E,IAC/BA,EAAE,EAAG,EAAKsb,SAAS5W,QACtBiI,EAASvM,KAAK,CAACM,KAAKgH,EAAKzJ,GAAIyJ,EAAI,EAAK4T,SAAS5W,OAAQzC,MAAM,CAAE8K,QAAS,MAEzErF,GAAQ,EAAK4T,SAAS5W,OAGxB,MAAO,CAACgI,EAASC,IA5HL,KA8HbuP,gBAAgB,WAIf,IAHA,IAAIxP,EAAQ,GACRC,EAAS,GACTE,EAAS,EACL7M,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAO1E,IAAI,CACvC,IAAI4H,EAAS,GAAI,EAAK0T,SAAStb,GAAG,GAClC0M,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAM9M,IAC9CA,EAAE,EAAG,EAAKsb,SAAS5W,QACtBiI,EAASvM,KAAK,CAACM,KAAKmM,EAAU5O,GAAI4O,EAAS,EAAG5K,MAAM,CAAE8K,QAAS,MAEhEF,IAED,IAAI,IAAI7M,EAAE,EAAEA,EAAE,EAAKsb,SAAS5W,OAAO1E,IAClC,GAA+B,GAA5B,EAAKsb,SAAStb,GAAG,GAAG0E,OACtB,IAAI,IAAI4F,EAAE,EAAGA,EAAE,EAAKgR,SAAStb,GAAG,GAAG0E,OAAQ4F,IAC1C,GAAM,GAAHA,EAAK,CACP,IAAI1C,EAAS,GAAI,EAAK0T,SAAStb,GAAG,GAAGsK,GAAG,GACxCoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAM9M,IAClD2M,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAI4O,EAAUlM,OAAQ,OAC7CkM,QACI,CACJ,IAAIjF,EAAS,GAAI,EAAK0T,SAAStb,GAAG,GAAGsK,GAAG,GACxCoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAM9M,IAClD2M,EAASvM,KAAK,CAACM,KAAKmM,EAAS,EAAG5O,GAAI4O,EAAUlM,OAAQ,OACtDkM,IAKJ,MAAO,CAACH,EAAQC,IA3JJ,KA6JbwP,qBAAqB,WACpB,IACI5P,EADA6P,EAAc,GAEdC,EAAS,GACb9P,EAAS,EAAKxC,OAAO,EAAK+Q,UAC1B,EAAE,CAEDuB,EAASjc,KAAK,EAAKkb,SAAS/O,GAAQ,IACpC6P,EAAchc,KAAKic,EAASC,SAC5B,IAAI,IAAItc,EAAE,EAAKsb,SAAS/O,GAAQ,GAAG7H,OAAQ1E,EAAE,EAAGA,IAC/Cqc,EAASC,MAAM,EAAKhB,SAAS/O,GAAQ,GAAGvM,GAAG,UAItCqc,GAAU,KA1KjB9d,KAAKuc,SAAS,KACdvc,KAAKyc,IAAI,KACTzc,KAAK+c,SAAS,GACd/c,KAAKgN,OAAO,GACZhN,KAAKka,MAAM,ICHT8D,GAAQ,IAAI3B,GACZvZ,GAAW,IAAIC,UAAQ,IACvBC,GAAW,IAAID,UAAQ,IACvB2L,GAAY,IAAI3L,UAAQ,IACxB4L,GAAY,IAAI5L,UAAQ,IAGxBE,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAEH4L,GAAQ,CACX1L,MAAOJ,GACPK,KAAMH,IAEHI,GAAU,CACbF,MAAM,CACL2L,MAAO,MACJC,OAAQ,GACRC,gBAAiB,CACfC,QAAS,KAERvL,YAAa,IAEjBwL,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cAIjBC,GAAW,CACdnM,MAAM,CACL2L,MAAO,MACJC,OAAQ,GACRC,gBAAiB,CACfC,QAAS,KAERvL,YAAa,IAEjBwL,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cAmXJ6O,G,kDA3WhB,WAAYla,GAAQ,IAAD,8BAClB,cAAMA,IAsCPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA5CvC,EAgDnBqZ,oBAAoB,WACnBF,GAAMpB,cAAc,EAAK7X,MAAMoZ,OAAO,EAAKpZ,MAAMqZ,MAAM,EAAKrZ,MAAM+X,WAC5C,eAAnB,EAAK/X,MAAM+K,QACbhN,GAAW,IAAIC,UAAQib,GAAMV,uBAAuB,IACpDta,GAAW,IAAID,UAAQib,GAAMV,uBAAuB,KACzB,YAAnB,EAAKvY,MAAM+K,SACnBhN,GAAW,IAAIC,UAAQib,GAAMT,qBAAqB,IAClDva,GAAW,IAAID,UAAQib,GAAMT,qBAAqB,KAEnDta,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA7DpC,EA+DnBib,eAAe,aA/DI,EAkEnBC,eAAe,aAlEI,EAsEnBxZ,UAAY,WACX,IAAI+S,GAAW,EACXC,EAAS7V,SAAS,EAAK8C,MAAMC,MAC9B+S,MAAMD,KACRD,GAAS,GAEG,GAAVA,EACFmG,GAAMhB,SAAS/a,SAAS,EAAK8C,MAAMC,MAAM,IAEzCgZ,GAAMhB,SAAS,EAAKjY,MAAMC,KAAK,IAEV,eAAnB,EAAKD,MAAM+K,QACbhN,GAAW,IAAIC,UAAQib,GAAMV,uBAAuB,IACpDta,GAAW,IAAID,UAAQib,GAAMV,uBAAuB,KACzB,YAAnB,EAAKvY,MAAM+K,SACnBhN,GAAW,IAAIC,UAAQib,GAAMT,qBAAqB,IAClDva,GAAW,IAAID,UAAQib,GAAMT,qBAAqB,KAEnDta,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA5FpC,EA8FnBmb,YAAY,WACX7P,GAAY,IAAI3L,UAAQib,GAAML,kBAAkB,IAChDhP,GAAY,IAAI5L,UAAQib,GAAML,kBAAkB,IAChD/O,GAAQ,CACP1L,MAAOwL,GACPzJ,MAAO0J,IAER,EAAKzJ,QAAU,IAAIC,UAAQ,EAAKwK,QAAQtK,QAASuJ,GAAOS,KArGtC,EAuGnBmP,aAAa,WACZ9P,GAAY,IAAI3L,UAAQib,GAAMN,mBAAmB,IACjD/O,GAAY,IAAI5L,UAAQib,GAAMN,mBAAmB,IACjD9O,GAAQ,CACP1L,MAAOwL,GACPzJ,MAAO0J,IAER,EAAKzJ,QAAU,IAAIC,UAAQ,EAAKwK,QAAQtK,QAASuJ,GAAOS,KA9GtC,EAiHnB/J,aAAe,WACd,IAAIuS,GAAW,EACXC,EAAS7V,SAAS,EAAK8C,MAAMC,MAC9B+S,MAAMD,KACRD,GAAS,GAEG,GAAVA,EACFmG,GAAMX,SAASpb,SAAS,EAAK8C,MAAMC,OAEnCgZ,GAAMX,SAAS,EAAKtY,MAAMC,MAEL,eAAnB,EAAKD,MAAM+K,QACbhN,GAAW,IAAIC,UAAQib,GAAMV,uBAAuB,IACpDta,GAAW,IAAID,UAAQib,GAAMV,uBAAuB,KACzB,YAAnB,EAAKvY,MAAM+K,SACnBhN,GAAW,IAAIC,UAAQib,GAAMT,qBAAqB,IAClDva,GAAW,IAAID,UAAQib,GAAMT,qBAAqB,KAEnDta,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAvIpC,EA0InBmC,aAAe,WACdyY,GAAM5G,WAAW,EAAKrS,MAAMC,KAAK,EAAKD,MAAM0Z,YACtB,eAAnB,EAAK1Z,MAAM+K,QACbhN,GAAW,IAAIC,UAAQib,GAAMV,uBAAuB,IACpDta,GAAW,IAAID,UAAQib,GAAMV,uBAAuB,KACzB,YAAnB,EAAKvY,MAAM+K,SACnBhN,GAAW,IAAIC,UAAQib,GAAMT,qBAAqB,IAClDva,GAAW,IAAID,UAAQib,GAAMT,qBAAqB,KAEnDta,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAvJpC,EA0JnBuC,aAAe,WACd,IAAIqI,EAAOgQ,GAAMxS,OAAO,EAAKzG,MAAMC,OACvB,GAATgJ,IACoB,eAAnB,EAAKjJ,MAAM+K,QACbhN,GAAW,IAAIC,UAAQib,GAAMV,uBAAuB,IACpDta,GAAW,IAAID,UAAQib,GAAMV,uBAAuB,KACzB,YAAnB,EAAKvY,MAAM+K,SACnBhN,GAAW,IAAIC,UAAQib,GAAMT,qBAAqB,IAClDva,GAAW,IAAID,UAAQib,GAAMT,qBAAqB,KAEnDva,GAAS4C,IAAI,CAACzD,KAAMF,SAAS+L,GAAStO,GAAIuC,SAAS+L,GAAQtK,MAAM,CAACA,MAAM,cAEzET,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA1KpC,EA6KnB0C,eAAiB,WAChB,IACMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,wBAAtBmB,EAASE,UAAoC,CAChD,IAAK,IAAIxE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAAK,CAC/C,IAAIwb,EAAQ,GACZ,GAAuC,GAApClX,EAASvD,QAAQf,GAAGwb,QAAQ9W,OAC9B,IAAI,IAAI4F,EAAE,EAAGA,EAAEhG,EAASvD,QAAQf,GAAGwb,QAAQ9W,OAAQ4F,IAAI,CACtDhL,QAAQC,IAAI,SAAS+E,EAASvD,QAAQf,GAAGwb,QAAQlR,GAAG2S,QACpD3d,QAAQC,IAAI,SAAS+E,EAASvD,QAAQf,GAAGwb,QAAQlR,GAAG+Q,WACpD,IAAI6B,EAAK5Y,EAASvD,QAAQf,GAAGwb,QAAQlR,GAAG2S,OACpCE,EAAK7Y,EAASvD,QAAQf,GAAGwb,QAAQlR,GAAG+Q,UACxCG,EAAQpb,KAAK,CAAC8c,EAAKC,IAGrBZ,GAAMhB,SAASjX,EAASvD,QAAQf,GAAGod,QAAQ5B,GAExB,kBAAjBlX,EAASG,QACXpD,GAAW,IAAIC,UAAQib,GAAMT,qBAAqB,IAClDva,GAAW,IAAID,UAAQib,GAAMT,qBAAqB,MAElDza,GAAW,IAAIC,UAAQib,GAAMV,uBAAuB,IACpDta,GAAW,IAAID,UAAQib,GAAMV,uBAAuB,KAEzB,UAAzBvX,EAAS+Y,gBACXpQ,GAAY,IAAI3L,UAAQib,GAAMN,mBAAmB,IACjD/O,GAAY,IAAI5L,UAAQib,GAAMN,mBAAmB,MAEjDhP,GAAY,IAAI3L,UAAQib,GAAML,kBAAkB,IAChDhP,GAAY,IAAI5L,UAAQib,GAAML,kBAAkB,KAEjD1a,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER4L,GAAQ,CACP1L,MAAOwL,GACPzJ,MAAO0J,IAER,EAAKzJ,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,IACtD,EAAK8B,QAAU,IAAIC,UAAQ,EAAKwK,QAAQtK,QAASuJ,GAAOS,SAGxDjJ,MAAM,kEAzNW,EA6NnBC,eAAiB,aA3NhB,EAAKtB,MAAQ,CACZ+K,OAAQ,cACRqO,OAAQ,GACRC,MAAO,GACPtB,UAAW,GACXD,OAAQ,GACRJ,IAAK,GACLsC,OAAQ,GACR/Z,KAAM,GACNyZ,WAAY,GACZjZ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAGZ,EAAKM,QAAU,GACjB,EAAK8K,SAAW,GACd,EAAK5K,OAAS8B,sBACd,EAAKyI,QAAUzI,sBACjB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBArBP,E,qDAwBnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,gCAEvD,WACCpD,KAAKgQ,SAAW,IAAI7K,UAAQnF,KAAK2P,QAAQtK,QAASuJ,GAAOS,M,+BAG1D,SAAkBpL,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAgMX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,kBAAkBtI,GAAG,aAAa2G,MAAO7F,KAAK+E,MAAMoZ,OAAQ1W,SAAUzH,KAAKmH,sBAEpJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,QAAQ3F,UAAU,eAAewI,YAAY,uBAAuBtI,GAAG,gBAAgB2G,MAAO7F,KAAK+E,MAAMqZ,MAAO3W,SAAUzH,KAAKmH,sBAE1J,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,YAAY3F,UAAU,eAAewI,YAAY,qBAAqBtI,GAAG,gBAAgB2G,MAAO7F,KAAK+E,MAAM+X,UAAWrV,SAAUzH,KAAKmH,sBAEhK,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKue,uBAAtE,8BAED,qBAAKlf,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4e,eAAtE,gCAGF,qBAAKvf,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,aAAa3F,UAAU,eAAewI,YAAY,6BAA6BtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM0Z,WAAYhX,SAAUzH,KAAKmH,sBAEpK,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,yBAAQC,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,cAAcyI,SAAUzH,KAAKmH,kBAA3E,UACO,wBAAQtB,MAAM,cAAd,yBACA,wBAAQA,MAAM,WAAd,2BAGR,qBAAK7G,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,qBAE5D,qBAAKhF,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK6e,gBAAtE,iCAGF,qBAAKxf,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,+BAED,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,gCAED,qBAAKtG,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,8BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK4F,gBAArE,kCAED,qBAAKvG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,oBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAIF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0e,kBAAlE,wBAED,qBAAKrf,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,kBAAkBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM8X,OAAQpV,SAAUzH,KAAKmH,sBAEjJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,MAAM3F,UAAU,eAAewI,YAAY,eAAetI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM0X,IAAKhV,SAAUzH,KAAKmH,sBAExI,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMga,OAAQtX,SAAUzH,KAAKmH,sBAE/I,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK2e,kBAAlE,2BAGF,qBAAKtf,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKA,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,SAC3C,qBAAKpG,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAK2P,iB,GAtWf1H,aCjD3B+V,GAAQ,IAAI3B,GACZvZ,GAAW,IAAIC,UAAQ,IACvBC,GAAW,IAAID,UAAQ,IACvB2L,GAAY,IAAI3L,UAAQ,IACxB4L,GAAY,IAAI5L,UAAQ,IAGxBE,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAEH4L,GAAQ,CACX1L,MAAOJ,GACPK,KAAMH,IAEHI,GAAU,CACbF,MAAM,CACL2L,MAAO,MACJC,OAAQ,GACRC,gBAAiB,CACfC,QAAS,KAERvL,YAAa,IAEjBwL,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cAIjBC,GAAW,CACdnM,MAAM,CACL2L,MAAO,MACJC,OAAQ,GACRC,gBAAiB,CACfC,QAAS,KAERvL,YAAa,IAEjBwL,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cAmXJ4P,G,kDA3WhB,WAAYjb,GAAQ,IAAD,8BAClB,cAAMA,IAsCPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA5CvC,EAgDnBqZ,oBAAoB,WACnBF,GAAMpB,cAAc,EAAK7X,MAAMoZ,OAAO,EAAKpZ,MAAMqZ,MAAM,EAAKrZ,MAAM+X,WAC5C,eAAnB,EAAK/X,MAAM+K,QACbhN,GAAW,IAAIC,UAAQib,GAAMV,uBAAuB,IACpDta,GAAW,IAAID,UAAQib,GAAMV,uBAAuB,KACzB,YAAnB,EAAKvY,MAAM+K,SACnBhN,GAAW,IAAIC,UAAQib,GAAMT,qBAAqB,IAClDva,GAAW,IAAID,UAAQib,GAAMT,qBAAqB,KAEnDta,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA7DpC,EA+DnBib,eAAe,aA/DI,EAkEnBC,eAAe,aAlEI,EAsEnBxZ,UAAY,WACX,IAAI+S,GAAW,EACXC,EAAS7V,SAAS,EAAK8C,MAAMC,MAC9B+S,MAAMD,KACRD,GAAS,GAEG,GAAVA,EACFmG,GAAMhB,SAAS/a,SAAS,EAAK8C,MAAMC,MAAM,IAEzCgZ,GAAMhB,SAAS,EAAKjY,MAAMC,KAAK,IAEV,eAAnB,EAAKD,MAAM+K,QACbhN,GAAW,IAAIC,UAAQib,GAAMV,uBAAuB,IACpDta,GAAW,IAAID,UAAQib,GAAMV,uBAAuB,KACzB,YAAnB,EAAKvY,MAAM+K,SACnBhN,GAAW,IAAIC,UAAQib,GAAMT,qBAAqB,IAClDva,GAAW,IAAID,UAAQib,GAAMT,qBAAqB,KAEnDta,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA5FpC,EA8FnBmb,YAAY,WACX7P,GAAY,IAAI3L,UAAQib,GAAML,kBAAkB,IAChDhP,GAAY,IAAI5L,UAAQib,GAAML,kBAAkB,IAChD/O,GAAQ,CACP1L,MAAOwL,GACPzJ,MAAO0J,IAER,EAAKzJ,QAAU,IAAIC,UAAQ,EAAKwK,QAAQtK,QAASuJ,GAAOS,KArGtC,EAuGnBmP,aAAa,WACZ9P,GAAY,IAAI3L,UAAQib,GAAMN,mBAAmB,IACjD/O,GAAY,IAAI5L,UAAQib,GAAMN,mBAAmB,IACjD9O,GAAQ,CACP1L,MAAOwL,GACPzJ,MAAO0J,IAER,EAAKzJ,QAAU,IAAIC,UAAQ,EAAKwK,QAAQtK,QAASuJ,GAAOS,KA9GtC,EAiHnB/J,aAAe,WACd,IAAIuS,GAAW,EACXC,EAAS7V,SAAS,EAAK8C,MAAMC,MAC9B+S,MAAMD,KACRD,GAAS,GAEG,GAAVA,EACFmG,GAAMX,SAASpb,SAAS,EAAK8C,MAAMC,OAEnCgZ,GAAMX,SAAS,EAAKtY,MAAMC,MAEL,eAAnB,EAAKD,MAAM+K,QACbhN,GAAW,IAAIC,UAAQib,GAAMV,uBAAuB,IACpDta,GAAW,IAAID,UAAQib,GAAMV,uBAAuB,KACzB,YAAnB,EAAKvY,MAAM+K,SACnBhN,GAAW,IAAIC,UAAQib,GAAMT,qBAAqB,IAClDva,GAAW,IAAID,UAAQib,GAAMT,qBAAqB,KAEnDta,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAvIpC,EA0InBmC,aAAe,WACdyY,GAAM5G,WAAW,EAAKrS,MAAMC,KAAK,EAAKD,MAAM0Z,YACtB,eAAnB,EAAK1Z,MAAM+K,QACbhN,GAAW,IAAIC,UAAQib,GAAMV,uBAAuB,IACpDta,GAAW,IAAID,UAAQib,GAAMV,uBAAuB,KACzB,YAAnB,EAAKvY,MAAM+K,SACnBhN,GAAW,IAAIC,UAAQib,GAAMT,qBAAqB,IAClDva,GAAW,IAAID,UAAQib,GAAMT,qBAAqB,KAEnDta,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAvJpC,EA0JnBuC,aAAe,WACd,IAAIqI,EAAOgQ,GAAMxS,OAAO,EAAKzG,MAAMC,OACvB,GAATgJ,IACoB,eAAnB,EAAKjJ,MAAM+K,QACbhN,GAAW,IAAIC,UAAQib,GAAMV,uBAAuB,IACpDta,GAAW,IAAID,UAAQib,GAAMV,uBAAuB,KACzB,YAAnB,EAAKvY,MAAM+K,SACnBhN,GAAW,IAAIC,UAAQib,GAAMT,qBAAqB,IAClDva,GAAW,IAAID,UAAQib,GAAMT,qBAAqB,KAEnDva,GAAS4C,IAAI,CAACzD,KAAMF,SAAS+L,GAAStO,GAAIuC,SAAS+L,GAAQtK,MAAM,CAACA,MAAM,cAEzET,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA1KpC,EA6KnB0C,eAAiB,WAChB,IACMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,wBAAtBmB,EAASE,UAAoC,CAChD,IAAK,IAAIxE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAAK,CAC/C,IAAIwb,EAAQ,GACZ,GAAuC,GAApClX,EAASvD,QAAQf,GAAGwb,QAAQ9W,OAC9B,IAAI,IAAI4F,EAAE,EAAGA,EAAEhG,EAASvD,QAAQf,GAAGwb,QAAQ9W,OAAQ4F,IAAI,CACtDhL,QAAQC,IAAI,SAAS+E,EAASvD,QAAQf,GAAGwb,QAAQlR,GAAG2S,QACpD3d,QAAQC,IAAI,SAAS+E,EAASvD,QAAQf,GAAGwb,QAAQlR,GAAG+Q,WACpD,IAAI6B,EAAK5Y,EAASvD,QAAQf,GAAGwb,QAAQlR,GAAG2S,OACpCE,EAAK7Y,EAASvD,QAAQf,GAAGwb,QAAQlR,GAAG+Q,UACxCG,EAAQpb,KAAK,CAAC8c,EAAKC,IAGrBZ,GAAMhB,SAASjX,EAASvD,QAAQf,GAAGod,QAAQ5B,GAExB,kBAAjBlX,EAASG,QACXpD,GAAW,IAAIC,UAAQib,GAAMT,qBAAqB,IAClDva,GAAW,IAAID,UAAQib,GAAMT,qBAAqB,MAElDza,GAAW,IAAIC,UAAQib,GAAMV,uBAAuB,IACpDta,GAAW,IAAID,UAAQib,GAAMV,uBAAuB,KAEzB,UAAzBvX,EAAS+Y,gBACXpQ,GAAY,IAAI3L,UAAQib,GAAMN,mBAAmB,IACjD/O,GAAY,IAAI5L,UAAQib,GAAMN,mBAAmB,MAEjDhP,GAAY,IAAI3L,UAAQib,GAAML,kBAAkB,IAChDhP,GAAY,IAAI5L,UAAQib,GAAML,kBAAkB,KAEjD1a,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER4L,GAAQ,CACP1L,MAAOwL,GACPzJ,MAAO0J,IAER,EAAKzJ,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,IACtD,EAAK8B,QAAU,IAAIC,UAAQ,EAAKwK,QAAQtK,QAASuJ,GAAOS,SAGxDjJ,MAAM,kEAzNW,EA6NnBC,eAAiB,aA3NhB,EAAKtB,MAAQ,CACZ+K,OAAQ,cACRqO,OAAQ,GACRC,MAAO,GACPtB,UAAW,GACXD,OAAQ,GACRJ,IAAK,GACLsC,OAAQ,GACR/Z,KAAM,GACNyZ,WAAY,GACZjZ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAGZ,EAAKM,QAAU,GACjB,EAAK8K,SAAW,GACd,EAAK5K,OAAS8B,sBACd,EAAKyI,QAAUzI,sBACjB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBArBP,E,qDAwBnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,gCAEvD,WACCpD,KAAKgQ,SAAW,IAAI7K,UAAQnF,KAAK2P,QAAQtK,QAASuJ,GAAOS,M,+BAG1D,SAAkBpL,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAgMX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,kBAAkBtI,GAAG,aAAa2G,MAAO7F,KAAK+E,MAAMoZ,OAAQ1W,SAAUzH,KAAKmH,sBAEpJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,QAAQ3F,UAAU,eAAewI,YAAY,uBAAuBtI,GAAG,gBAAgB2G,MAAO7F,KAAK+E,MAAMqZ,MAAO3W,SAAUzH,KAAKmH,sBAE1J,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,YAAY3F,UAAU,eAAewI,YAAY,qBAAqBtI,GAAG,gBAAgB2G,MAAO7F,KAAK+E,MAAM+X,UAAWrV,SAAUzH,KAAKmH,sBAEhK,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKue,uBAAtE,8BAED,qBAAKlf,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4e,eAAtE,gCAGF,qBAAKvf,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,aAAa3F,UAAU,eAAewI,YAAY,6BAA6BtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM0Z,WAAYhX,SAAUzH,KAAKmH,sBAEpK,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,yBAAQC,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,cAAcyI,SAAUzH,KAAKmH,kBAA3E,UACO,wBAAQtB,MAAM,cAAd,yBACA,wBAAQA,MAAM,WAAd,2BAGR,qBAAK7G,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,qBAE5D,qBAAKhF,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK6e,gBAAtE,iCAGF,qBAAKxf,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,+BAED,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,gCAED,qBAAKtG,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,8BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK4F,gBAArE,kCAED,qBAAKvG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,oBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAIF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0e,kBAAlE,wBAED,qBAAKrf,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,kBAAkBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM8X,OAAQpV,SAAUzH,KAAKmH,sBAEjJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,MAAM3F,UAAU,eAAewI,YAAY,eAAetI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM0X,IAAKhV,SAAUzH,KAAKmH,sBAExI,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMga,OAAQtX,SAAUzH,KAAKmH,sBAE/I,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK2e,kBAAlE,2BAGF,qBAAKtf,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKA,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,SAC3C,qBAAKpG,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAK2P,iB,GAtWnB1H,aCcZgX,OAnCf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO3gB,KAAK,gBAAgB4gB,OAAK,EAACC,UAAWH,KAC7C,cAAC,IAAD,CAAO1gB,KAAK,oBAAoB4gB,OAAK,EAACC,UAAWlB,KACjD,cAAC,IAAD,CAAO3f,KAAK,IAAI4gB,OAAK,EAACC,UAAWvf,IACjC,cAAC,IAAD,CAAOtB,KAAK,eAAe4gB,OAAK,EAACC,UAAWzH,KAC5C,cAAC,IAAD,CAAOpZ,KAAK,eAAe4gB,OAAK,EAACC,UAAWtG,KAC5C,cAAC,IAAD,CAAOva,KAAK,eAAe4gB,OAAK,EAACC,UAAW7P,KAC5C,cAAC,IAAD,CAAOhR,KAAK,YAAY4gB,OAAK,EAACC,UAAWjP,KACzC,cAAC,IAAD,CAAO5R,KAAK,4BAA4B6gB,UAAWrb,IACnD,cAAC,IAAD,CAAOxF,KAAK,2BAA2B6gB,UAAWvW,IAClD,cAAC,IAAD,CAAOtK,KAAK,oCAAoC6gB,UAAWnW,IAC3D,cAAC,IAAD,CAAO1K,KAAK,mCAAmC6gB,UAAW5V,KAC1D,cAAC,IAAD,CAAOjL,KAAK,QAAQ6gB,UAAWvV,KAC/B,cAAC,IAAD,CAAOtL,KAAK,QAAQ6gB,UAAW1U,KAC/B,cAAC,IAAD,CAAOnM,KAAK,iBAAiB6gB,UAAWxT,KACxC,cAAC,IAAD,CAAOrN,KAAK,WAAW6gB,UAAWnT,KAClC,cAAC,IAAD,CAAO1N,KAAK,aAAa6gB,UAAW9S,KACpC,cAAC,IAAD,CAAO/N,KAAK,aAAa6gB,UAAW3S,KACpC,cAAC,IAAD,CAAOlO,KAAK,UAAU6gB,UAAW1S,KACjC,cAAC,IAAD,CAAOnO,KAAK,OAAO6gB,UAAWxS,KAC9B,cAAC,IAAD,CAAOrO,KAAK,UAAU6gB,UAAWvS,KACjC,cAAC,IAAD,CAAOtO,KAAK,cAAc6gB,UAAWtS,KACrC,cAAC,IAAD,CAAOvO,KAAK,eAAe6gB,UAAWrS,KACtC,cAAC,IAAD,CAAOxO,KAAK,kBAAkB6gB,UAAWtL,KACzC,cAAC,IAAD,CAAOvV,KAAK,aAAa6gB,UAAWrE,KACpC,cAAC,IAAD,CAAOxc,KAAK,WAAW6gB,UAAWjD,YChD3BkD,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACL,cAAC,GAAD,IACFvZ,SAASwZ,eAAe,SAG1BX,O","file":"static/js/main.4ce95449.chunk.js","sourcesContent":["export const MenuItemsLineales = [\r\n\t{\r\n\t\ttitle:'Lista simplemente enlazada',\r\n\t\tpath:'/Listasimplementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Lista doblemente enlazada',\r\n\t\tpath:'/Listadoblementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Lista circular simplemente enlazada',\r\n\t\tpath:'/Listacircularsimplementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Lista circular doblemente enlazada',\r\n\t\tpath:'/Listacirculardoblementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Pila',\r\n\t\tpath:'/Pila',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Cola',\r\n\t\tpath:'/Cola',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Cola de Prioridad',\r\n\t\tpath:'/Colaprioridad',\r\n\t\tcName:'dropdown-item'\r\n\t}\r\n]","export const MenuItemsOrdenamientos = [\r\n\t{\r\n\t\ttitle:'Burbuja',\r\n\t\tpath:'/Burbuja',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Seleccion',\r\n\t\tpath:'/Seleccion',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Insercion',\r\n\t\tpath:'/Insercion',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Rapido',\r\n\t\tpath:'/Rapido',\r\n\t\tcName:'dropdown-item'\r\n\t}\r\n]","export const MenuItemsArboreas = [\r\n\t{\r\n\t\ttitle:'Arbol Binario de Busqueda',\r\n\t\tpath:'/ArbolBinario',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'AVL',\r\n\t\tpath:'/AVL',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Arbol B',\r\n\t\tpath:'/Arbolb',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Arbol B+',\r\n\t\tpath:'/Arbolbplus',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Arbol de Merkle',\r\n\t\tpath:'/Arbolmerkle',\r\n\t\tcName:'dropdown-item'\r\n\t}\r\n]","export const MenuItemsCompuesta = [\r\n\t{\r\n\t\ttitle:'Matriz Dispersa',\r\n\t\tpath:'/MatrizDispersa',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Row Major(3D a 2D)',\r\n\t\tpath:'/RowMajor',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Col Major(3D a 2D)',\r\n\t\tpath:'/ColumnMajor',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Estructuras Compuestas',\r\n\t\tpath:'/Compuesta',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n]","export const MenuItemsNoLineales = [\r\n\t{\r\n\t\ttitle:'Tabla Hash Abierta',\r\n\t\tpath:'/HashAbierta',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Tabla Hash Cerrada',\r\n\t\tpath:'/HashCerrada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Recorrido y busqueda por anchura de grafos',\r\n\t\tpath:'/GrafoAnchura',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Recorrido y busqueda por profundidad de grafos',\r\n\t\tpath:'/GrafoProfundidad',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Algoritmo de Costo Uniforme',\r\n\t\tpath:'/',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Arbol de recubrimiento minimo',\r\n\t\tpath:'/',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t\r\n]","export const MenuItemsCodificacion = [\r\n\t{\r\n\t\ttitle:'Codigo Hamming',\r\n\t\tpath:'/Hamming',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Algoritmo de Huffman',\r\n\t\tpath:'/',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Algoritmo LZW',\r\n\t\tpath:'/',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Cifrado Feistel',\r\n\t\tpath:'/',\r\n\t\tcName:'dropdown-item'\r\n\t},\t\r\n]","import React, { useState } from 'react';\r\nimport { MenuItemsLineales } from './MenuItemsLineales';\r\nimport { MenuItemsOrdenamientos } from './MenuItemsOrdenamientos';\r\nimport { MenuItemsArboreas } from './MenuItemsArboreas';\r\nimport { MenuItemsCompuesta } from './MenuItemsCompuesta';\r\nimport { MenuItemsNoLineales } from './MenuItemsNoLineales';\r\nimport { MenuItemsCodificacion } from './MenuItemsCodificacion';\r\nimport { Link } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\n\r\nfunction Navbar(){\r\n\tconst [click, setClick] = useState(false);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      \t\t\t<div className=\"container-fluid\">\r\n      \t\t\t\t<a className=\"navbar-brand\" href=\"./\">ESTRUCTURA DE DATOS</a>\r\n      \t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n          \t\t\t<ul className=\"navbar-nav me-auto\">\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n              \t\t\t\t<a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Estructuras Lineales</a>\r\n              \t\t\t\t<div className=\"dropdown-menu\">\r\n                \t\t\t\t{MenuItemsLineales.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n              \t\t\t\t</div>\r\n           \t\t\t\t</li>\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Ordenamientos</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsOrdenamientos.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Estructura Arboreas</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsArboreas.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">No Lineales</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsNoLineales.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Codificacion</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsCodificacion.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Compuesta</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsCompuesta.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n          \t\t\t</ul>\r\n        \t\t\t</div>\t\r\n      \t\t\t</div>\r\n      \t\t</nav>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\n\r\nexport default function Home(){\r\n\treturn (\r\n\t\t<>\t\r\n\t\t\t<table className=\"table table-hover\">\r\n  \t\t\t\t<thead>\r\n  \t\t\t\t  <tr>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t    <th scope=\"col\">\r\n  \t\t\t\t    \t<div className=\"card border-light mb-3\">\r\n  \t\t\t\t\t\t\t<div className=\"card-body\"><div className=\"page-header\"><h1>Indice de Estructura de Datos</h1></div></div>\r\n  \t\t\t\t\t\t\t<div className=\"card-body\">\r\n  \t\t\t\t\t\t\t  <ul>\r\n        \t  \t\t\t\t\t<li><h4>Estuctura Lineales</h4></li>\r\n        \t  \t\t\t\t\t<ul>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listasimplementeenlazada\"><h5>Lista simplemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listadoblementeenlazada\"><h5>Lista doblemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listacircularsimplementeenlazada\"><h5>Lista circular simplemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listacirculardoblementeenlazada\"><h5>Lista circular doblemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Pila\"><h5>Pila</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Cola\"><h5>Cola</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Colaprioridad\"><h5>Cola de prioridad</h5></a></li>  \r\n        \t  \t\t\t\t\t</ul>\r\n        \t  \t\t\t\t\t<li><h4>Ordenamientos</h4></li>\r\n        \t  \t\t\t\t\t<ul>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Burbuja\"><h5>Burbuja</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Seleccion\"><h5>Selección</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Insercion\"><h5>Inserción</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Rapido\"><h5>Rápido</h5></a></li>  \r\n        \t  \t\t\t\t\t</ul>\r\n        \t  \t\t\t\t\t<li><h4>Estructuras Árboreas</h4></li>\r\n        \t  \t\t\t\t\t<ul>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolBinario\"><h5>Árbol binario de búsqueda</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./AVL\"><h5>AVL</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolB\"><h5>Árbol B</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolBPlus\"><h5>Árbol B+</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolMerkle\"><h5>Árbol de Merkle</h5></a></li>  \r\n        \t  \t\t\t\t\t</ul>\r\n        \t\t\t\t\t  </ul>\r\n  \t\t\t\t\t\t\t</div>\r\n        \t\t\t\t</div>\r\n  \t\t\t\t    </th>\r\n  \t\t\t\t    <th scope=\"col\"></th>\r\n  \t\t\t\t    <th scope=\"col\"></th>\r\n  \t\t\t\t    <th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  </tr>\r\n  \t\t\t\t</thead>\r\n\t\t\t</table>\r\n\t\t\t\r\n\t\t</>\r\n\t);\r\n}","var i = 0;\r\nclass Nodo{\r\n\r\n    constructor(dato) {\r\n        this.siguiente = null;\r\n        this.dato = dato;\r\n        i ++;\r\n        \r\n    }\r\n\r\n    get_siguiente(){\r\n\r\n        return this.siguiente;\r\n    }\r\n\r\n    set_siguiente(siguiente){\r\n        this.siguiente = siguiente;\r\n    }\r\n\r\n    get_dato(){\r\n        return this.dato;\r\n    }\r\n\r\n    set_dato(dato){\r\n        this.dato = dato;\r\n    }\r\n}\r\n\r\nexport default Nodo;\r\n// module.exports = Nodo;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js');\r\n\r\nclass ListaSimple{\r\n\r\n    cabeza = null\r\n\r\n    constructor(){\r\n        this.cabeza = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n\r\n    insertar = (dato) =>{\r\n        let nodo_nuevo = new Nodo(dato);\r\n        if (this.get_vacia() == true){\r\n            this.set_cabeza(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n        }else{\r\n\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n\r\n        }\r\n\r\n    }\r\n    \r\n    insertar_inicio = (dato) =>{\r\n        let nodo_nuevo = new Nodo(dato)\r\n\r\n        nodo_nuevo.set_siguiente(this.get_cabeza())\r\n        this.set_cabeza(nodo_nuevo)\r\n    }\r\n\r\n    insertar_ultimo = (dato) =>{\r\n        let nodo_nuevo = new Nodo(dato)\r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        this.set_ultimo(nodo_nuevo)\r\n\r\n    }\r\n\r\n    eliminar = (dato) =>{\r\n\r\n        if (this.get_vacia() == false){\r\n            \r\n            let nodo_actual = this.get_cabeza().get_siguiente();\r\n            let anterior = this.get_cabeza();\r\n            if (this.get_cabeza().get_dato() == dato){\r\n                this.set_cabeza(this.get_cabeza().get_siguiente());\r\n                return console.log(\"Delete!\");\r\n            }else{\r\n                do {\r\n                    if (nodo_actual.get_dato() == dato){\r\n                        if (nodo_actual.get_dato() == this.get_ultimo().get_dato()){\r\n                            anterior.set_siguiente(null);\r\n                            this.set_ultimo(anterior);\r\n                            return console.log(\"Delete!\");\r\n                        }else {\r\n                            anterior.set_siguiente(nodo_actual.get_siguiente());\r\n                            return console.log(\"Delete!\");\r\n                        }\r\n                    }\r\n                    nodo_actual = nodo_actual.get_siguiente();\r\n                    anterior = anterior.get_siguiente();\r\n\r\n                } while (nodo_actual != null);\r\n            }\r\n\r\n        }else{ return console.log(\"Empty!\"); }\r\n\r\n        return console.log(\"Data not found!\");\r\n    }\r\n\r\n    update = (dato, cambio) =>{\r\n        let nodo_actual = this.get_cabeza();\r\n\r\n        if (this.get_vacia() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) =>{\r\n        let nodo_actual = this.get_cabeza()\r\n        \r\n        if (this.get_vacia() == false){\r\n            let i = 0;\r\n            do{\r\n\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato()+\"-> Posicion\"+i);\r\n                    return i;\r\n                }\r\n                i ++;\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n\r\n            }while(nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n    mostrar = () => {\r\n        let nodo_actual = this.get_cabeza();\r\n        if (this.get_vacia() == false){\r\n\r\n            do {\r\n                console.log(nodo_actual.get_dato());\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n            } while (nodo_actual != null);\r\n        }\r\n    }\r\n    \r\n    get_vacia = () => {\r\n        if (this.get_cabeza() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }  \r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_cabeza();\r\n        var dot = [];\r\n        if (this.get_vacia() == false){\r\n            let i = 0\r\n            do {\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_cabeza();\r\n        var dot = [];\r\n        if (this.get_vacia() == false){\r\n            let i = 0;\r\n            do {\r\n                if (nodo_actual.get_siguiente() != null){\r\n\r\n                    let nodoUno = parseInt(i)\r\n                    let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                    if (i==0){\r\n                        dot.push({from:0, to:1, arrows: \"to\"});\r\n                    }\r\n                    if ( nodoUno!= false && nodoDos != false){\r\n                        dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                    }\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            } while (nodo_actual != null);\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n    generateJSON = () => {\r\n\r\n        var dic = {};\r\n\r\n        dic.categoria = \"Estructura Lineal\"\r\n        dic.nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n        var dot = []\r\n        if (this.get_vacia() == false){\r\n            let nodo_actual = this.get_cabeza();\r\n            do{\r\n                if(typeof(parseInt(nodo_actual.get_dato())) == \"number\"  && 0 <= parseInt(nodo_actual.get_dato())){\r\n                    \r\n                    dot.push(parseInt(nodo_actual.get_dato()))\r\n                     \r\n                }else if (typeof(nodo_actual.get_dato()) == \"string\" ){\r\n\r\n                    dot.push(nodo_actual.get_dato().toString())\r\n\r\n                } \r\n\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n            }while(nodo_actual != null);\r\n        }\r\n        dic.valores = dot;\r\n        console.log(dic)\r\n        var dictstring = JSON.stringify(dic);\r\n        console.log(dictstring)\r\n        return dictstring;\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    get_cabeza = () =>{ return this.cabeza; }\r\n    set_cabeza = (cabeza) =>{ this.cabeza = cabeza; }\r\n    get_ultimo = () => { return this.ultimo; }\r\n    set_ultimo = (ultimo) => { this.ultimo = ultimo; }\r\n}\r\n\r\nexport default ListaSimple;\r\n//module.exports = ListaSimple;\r\n\r\n","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ListaSimple from './Modelo/Lineales/ListaSimple/ListaSimple'; // Importar la Estructura Lista Simple.\r\nvar listaSimple = new ListaSimple(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(listaSimple.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listaSimple.setEdgesDataSet());\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass ListaSE extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\tlistaSimple.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlistaSimple.eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlistaSimple.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddTop = () => {\r\n\t\tlistaSimple.insertar_inicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddLower = () => {\r\n\t\tlistaSimple.insertar_ultimo(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet dato = listaSimple.search(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n\t\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tconsole.log(dato)\r\n\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistaSimple.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\t\tconst element = document.createElement(\"a\");\r\n\t\tlet contenido = listaSimple.generateJSON()\r\n\t\tconst blob = new Blob([contenido]);                   \r\n\t\telement.href = URL.createObjectURL(blob);\r\n\t    element.download = \"listaSimple.json\";\r\n\t    document.body.appendChild(element);\r\n\t    element.click();\r\n\t    alert(\"Documento Crado\")\r\n\t\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default ListaSE;","class Nodo{\r\n\r\n    constructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n        this.anterior = null;\r\n    }\r\n\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n    \r\n    get_anterior(){ return this.anterior; }\r\n    set_anterior(anterior){ this.anterior = anterior; }\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js')\r\nclass ListaDoble{\r\n\r\n    constructor(){\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n    insertar = (dato) => {\r\n\r\n        let nodo_nuevo = new Nodo(dato);\r\n\r\n        if (this.vacia() == true){\r\n            this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n        }else{\r\n\r\n            this.get_ultimo().set_siguiente(nodo_nuevo)\r\n            nodo_nuevo.set_anterior(this.get_ultimo())\r\n            this.set_ultimo(nodo_nuevo)\r\n\r\n        }\r\n    }\r\n\r\n    insertar_inicio = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n\r\n        nodo_nuevo.set_siguiente(this.get_primero())\r\n        this.get_primero().set_anterior(nodo_nuevo)\r\n        this.set_primero(nodo_nuevo)\r\n    }\r\n\r\n    insertar_ultimo = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n        \r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        nodo_nuevo.set_anterior(this.get_ultimo())\r\n        this.set_ultimo(nodo_nuevo)\r\n\r\n    }\r\n\r\n    eliminar = (dato) => {\r\n\r\n        if (this.vacia() == false){\r\n            \r\n\r\n            if (this.get_primero().get_dato() == dato){ //Condicion cuando hay 2 nodos -> eliminando al primero\r\n\r\n                if (this.get_primero().get_siguiente() != null){\r\n\r\n                    let temp = this.get_primero().get_siguiente()\r\n                    this.get_primero().get_siguiente().set_anterior(null)\r\n                    this.get_primero().set_siguiente(null)\r\n                    this.set_primero(temp);\r\n\r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                }\r\n\r\n            }else if (this.get_ultimo().get_dato() == dato){  //Condicion cuando hay 2 nodos -> eliminando al ultimo\r\n\r\n                if (this.get_ultimo().get_anterior() != null){\r\n\r\n                    let temp = this.get_ultimo().get_anterior()\r\n                    this.get_ultimo().get_anterior().set_siguiente(null)\r\n                    this.get_ultimo().set_anterior(null)\r\n                    this.set_ultimo(temp);\r\n\r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    \r\n                    return console.log(\"Delete!\");\r\n                }\r\n\r\n\r\n            }else{ //Condicion cuando hay mas de 3 nodos -> eliminando al de en medio\r\n                let nodo_actual = this.get_primero().get_siguiente();\r\n                let anterior = this.get_primero();\r\n                do {\r\n\r\n                    if (nodo_actual.get_dato() == dato){\r\n                        \r\n                        let siguiente = nodo_actual.get_siguiente()\r\n\r\n                        nodo_actual.set_siguiente(null)\r\n                        nodo_actual.set_anterior(null)\r\n                        anterior.set_siguiente(siguiente)\r\n                        siguiente.set_anterior(anterior)\r\n\r\n                        return console.log(\"Delete!\");\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.get_siguiente();\r\n                    anterior = anterior.get_siguiente();\r\n\r\n                } while (nodo_actual != null);\r\n            }\r\n\r\n        }else{ return console.log(\"Empty!\"); }\r\n\r\n        return console.log(\"Data not found!\");\r\n    }\r\n\r\n    update = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n\r\n        if (this.vacia() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) => {\r\n        let nodo_actual = this.get_primero()\r\n        let i = 0;\r\n        if (this.vacia() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    return i;\r\n                }\r\n                i ++;\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n            }while(nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    print = () => {\r\n        console.log(\"-> ->\")\r\n        let nodo_actual = this.get_primero();\r\n        if (this.vacia() == false){\r\n            do{\r\n                console.log(nodo_actual.get_dato())\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n\r\n            console.log(\"<- <-\")\r\n            nodo_actual = this.get_ultimo();\r\n            do{\r\n                console.log(nodo_actual.get_dato())\r\n                nodo_actual = nodo_actual.get_anterior()\r\n            }while(nodo_actual != null);\r\n        }else{\r\n            console.log(\"Empty!\"); \r\n            \r\n        }\r\n    }\r\n\r\n    vacia = () => {\r\n        if (this.get_primero() == null){ \r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0\r\n            do {\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            do {\r\n                if (nodo_actual.get_siguiente() != null){\r\n\r\n                    let nodoUno = parseInt(i)\r\n                    let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                    if (i==0){\r\n                        dot.push({from:0, to:1, arrows: \"to\"});\r\n                        dot.push({from:1, to:0, arrows: \"to\"});\r\n                    }\r\n                    if ( nodoUno!= false && nodoDos != false){\r\n                        dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                        dot.push({from:parseInt(nodoDos), to:parseInt(nodoUno), arrows: \"to\"});\r\n                    }\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n\r\n    get_primero = () => { return this.primero; }\r\n    set_primero = (primero) =>{ this.primero = primero; }\r\n    get_ultimo = () => { return this.ultimo; }\r\n    set_ultimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n\r\n\r\n}\r\n\r\nexport default ListaDoble;\r\n//module.exports = ListaDoble;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ListaDoble from './Modelo/Lineales/ListaDoble/ListaDoble'; // Importar la Estructura Lista Simple.\r\nvar listaDoble = new ListaDoble(); // Instancia de la ListaSimple.\r\n\r\nvar getNodes = new DataSet(listaDoble.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listaDoble.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t  springLength: 200,\r\n\t\t},\r\n\t},\r\n    nodes:{\r\n        borderWidth: 20,\r\n        color: {\r\n            background: '#00FE92',\r\n            border:  '#37F300',\r\n            highlight: {\r\n                border: '#2B7CE9',\r\n                background: '#0008FE'\r\n            }\r\n        }\r\n    }\r\n}\r\nclass ListaDE extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\tlistaDoble.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlistaDoble.eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlistaDoble.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddTop = () => {\r\n\t\tlistaDoble.insertar_inicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddLower = () => {\r\n\t\tlistaDoble.insertar_ultimo(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet dato = listaDoble.search(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n            getNodes = new DataSet(listaDoble.setNodesDataSet());\r\n            getEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistaDoble.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleSearch()}>Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar Dato Al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-5\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar Dato al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()} >Generar Datos del JSON</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar Datos</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default ListaDE; ","class Nodo{\r\n\r\n    constructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n    }\r\n\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js')\r\nclass ListaCircular{\r\n\r\n    constructor(){\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n        this.size = 0;\r\n    }\r\n\r\n\r\n    insertar = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato);\r\n        if (this.vacia() == true){\r\n            this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            nodo_nuevo.set_siguiente(this.get_primero());\r\n            this.set_ultimo(nodo_nuevo);\r\n\r\n        }\r\n        this.size ++;\r\n\r\n    }\r\n\r\n    insertar_inicio = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n\r\n        nodo_nuevo.set_siguiente(this.get_primero())\r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        this.set_primero(nodo_nuevo)\r\n        this.size ++;\r\n    }\r\n\r\n    insertar_ultimo = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n        \r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        nodo_nuevo.set_siguiente(this.get_primero())\r\n        this.set_ultimo(nodo_nuevo)\r\n        this.size++;\r\n    }\r\n\r\n\r\n    eliminar = (dato) => {\r\n        if(this.vacia() == false){\r\n\r\n             if (this.get_primero().get_dato() == dato){ //Condicion cuando hay 2 nodos -> eliminando al primero\r\n\r\n                if (this.get_primero().get_siguiente() != null){\r\n\r\n                    let temp = this.get_primero().get_siguiente()\r\n                    this.get_primero().set_siguiente(null)\r\n                    this.get_ultimo().set_siguiente(temp)\r\n                    this.set_primero(temp)\r\n                    this.size --;\r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero.set_siguiente(null)\r\n                    this.set_ultimo.set_siguiente(null)\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    this.size --;\r\n                    return console.log(\"Delete!\");\r\n                }\r\n\r\n            }else if (this.get_ultimo().get_dato() == dato){  //Condicion cuando hay 2 nodos -> eliminando al ultimo\r\n\r\n                if (this.get_primero().get_siguiente()!= null){\r\n                    let nodo_actual = this.get_primero().get_siguiente()\r\n                    let anterior = this.get_primero()\r\n\r\n                    let i = 0\r\n\r\n                    while (i < this.size){\r\n                        if(nodo_actual.get_dato()==dato){\r\n                            if ((i+1) == this.size){\r\n\r\n                                let temp = this.get_ultimo().get_siguiente()\r\n                                this.get_ultimo().set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }else{\r\n\r\n                                let temp = nodo_actual.get_siguiente()\r\n                                nodo_actual.set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }\r\n\r\n                        }\r\n                        nodo_actual = nodo_actual.get_siguiente()\r\n                        anterior = anterior.get_siguiente()\r\n\r\n                        i ++;\r\n                    }\r\n\r\n                    \r\n                    \r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero.set_siguiente(null)\r\n                    this.set_ultimo.set_siguiente(null)\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    this.size --;\r\n                    return console.log(\"Delete!\");\r\n                }\r\n\r\n\r\n            }else{ //Condicion cuando hay mas de 3 nodos -> eliminando al de en medio\r\n                if (this.get_primero().get_siguiente()!= null){\r\n                    let nodo_actual = this.get_primero().get_siguiente()\r\n                    let anterior = this.get_primero()\r\n\r\n                    let i = 0\r\n\r\n                    while (i < this.size){\r\n                        if(nodo_actual.get_dato()==dato){\r\n                            if ((i+1) == this.size){\r\n\r\n                                let temp = this.get_ultimo().get_siguiente()\r\n                                this.get_ultimo().set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }else{\r\n\r\n                                let temp = nodo_actual.get_siguiente()\r\n                                nodo_actual.set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }\r\n\r\n                        }\r\n                        nodo_actual = nodo_actual.get_siguiente()\r\n                        anterior = anterior.get_siguiente()\r\n\r\n                        i ++;\r\n                    }\r\n\r\n                    \r\n                    return console.log(\"Delete!\");\r\n                }\r\n            }\r\n\r\n        }else{ return console.log(\"Empty!\"); }\r\n\r\n        return console.log(\"Data not found!\");\r\n\r\n\r\n    }\r\n\r\n    \r\n    update = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n\r\n        if (this.vacia() == false){\r\n\r\n            let i = 0;\r\n            while(i<this.size){\r\n                \r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n                i++;\r\n            }\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) => {\r\n        let nodo_actual = this.get_primero()\r\n\r\n        if (this.vacia() == false){\r\n\r\n            let i = 0;\r\n            while(i<this.size){\r\n                \r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    return i\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            }\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n    print = () => {\r\n        \r\n        var i = 0;\r\n        let nodo_actual = this.get_primero();\r\n        while(i<this.size){\r\n            console.log(nodo_actual.get_dato());\r\n            nodo_actual = nodo_actual.get_siguiente();\r\n            i++;\r\n        }\r\n\r\n        console.log(\"Salio del While\");\r\n        console.log(nodo_actual.get_dato());\r\n        console.log(\"Este es el Primero ->\"+this.get_primero().get_dato())\r\n        console.log(nodo_actual.get_siguiente().get_dato());\r\n        console.log(\"ultimo\");\r\n        console.log(this.get_ultimo().get_dato());\r\n        console.log(this.get_ultimo().get_siguiente().get_dato());\r\n    }\r\n\r\n    vacia = () => {\r\n        if (this.get_primero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0\r\n            while(i<this.size){\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } \r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n            \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                if (i==0){\r\n                    dot.push({from:0, to:1, arrows: \"to\"});\r\n                }\r\n                if ( nodoUno!= false && nodoDos != false){\r\n                    dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                }\r\n                if ((i+1)==this.size){\r\n                    dot.push({from:i, to:0, arrows: \"to\"});\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n\r\n    get_primero = () => { return this.primero; }\r\n    set_primero = (primero) =>{ this.primero = primero; }\r\n    \r\n    get_ultimo = () => { return this.ultimo; }\r\n    set_ultimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n}\r\n\r\nexport default ListaCircular;\r\n//module.exports = ListaCircular;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ListaCircular from './Modelo/Lineales/ListaCircular/ListaCircular'; // Importar la Estructura Lista Simple.\r\nvar listaCircular = new ListaCircular(); // Instancia de la ListaSimple.\r\n\r\nvar getNodes = new DataSet(listaCircular.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listaCircular.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t  springLength: 200,\r\n\t\t},\r\n\t},\r\n    nodes:{\r\n        borderWidth: 20,\r\n        color: {\r\n            background: '#FFFFFF',\r\n            border:  '#1EFFB1',\r\n            highlight: {\r\n                border: '#EEFF1E',\r\n                background: '#FFFFFF'\r\n            }\r\n        }\r\n    }\r\n}\r\nclass ListaCSE extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t}\r\n\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\tlistaCircular.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlistaCircular.eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlistaCircular.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddTop = () => {\r\n\t\tlistaCircular.insertar_inicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddLower = () => {\r\n\t\tlistaCircular.insertar_ultimo(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tvar dato = listaCircular.search(this.state.text);\r\n\t\t\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n            getNodes = new DataSet(listaCircular.setNodesDataSet());\r\n            getEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistaCircular.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleSearch()}>Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar Dato Al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-5\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar Dato Al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Generar Datos del JSON</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar Datos</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\r\n\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default ListaCSE;","class Nodo{\r\n\tconstructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n        this.anterior = null;\r\n    }\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n    \r\n    get_anterior(){ return this.anterior; }\r\n    set_anterior(anterior){ this.anterior = anterior; }\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js');\r\n\r\nclass ListaCircularDE{\r\n\tprimero=null;\r\n\tultimo=null;\r\n\r\n\tconstructor(){\r\n\t\tthis.primero = null;\r\n        this.ultimo = null;\r\n        this.size = 0;\r\n\t}\r\n\r\n    set_primero=(primero)=>{this.primero=primero;}\r\n    get_primero=()=>{ return this.primero;}\r\n    set_ultimo=(ultimo)=>{this.ultimo=ultimo;}\r\n    get_ultimo=()=>{ return this.ultimo;}\r\n    vacia = () => {\r\n        if (this.get_primero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\tinsertar = (valor) =>{\r\n\t\tlet nodo_nuevo = new Nodo(valor);\r\n        if (this.vacia() == true){\r\n\t\t    this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            nodo_nuevo.set_anterior(this.get_ultimo());\r\n            nodo_nuevo.set_siguiente(this.get_primero());\r\n            this.set_ultimo(nodo_nuevo);\r\n        }\r\n        this.size ++;\r\n\t}\r\n\tinsertar_ultimo = (valor) => {\r\n\t\tlet nodo_nuevo = new Nodo(valor);\r\n        if (this.vacia() == true){\r\n\t\t    this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            nodo_nuevo.set_anterior(this.get_ultimo());\r\n            nodo_nuevo.set_siguiente(this.get_primero());\r\n            this.set_ultimo(nodo_nuevo);\r\n        }\r\n        this.size ++;\r\n\t}\r\n\tinsertar_inicio = (valor) => {\r\n\t\tlet nodo_nuevo = new Nodo(valor);\r\n        if (this.vacia() == true){\r\n\t\t    this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n        \tnodo_nuevo.set_siguiente(this.get_primero());\r\n        \tnodo_nuevo.set_anterior(this.get_ultimo());\r\n        \tthis.get_ultimo().set_siguiente(nodo_nuevo)\r\n        \tthis.get_primero().set_anterior(nodo_nuevo)\r\n        \tthis.set_primero(nodo_nuevo)\r\n        }\r\n        this.size ++;\r\n\t}\r\n\teliminar = (dato) =>{\r\n\t\tif (this.vacia() == false){\r\n            if (this.get_primero().get_dato() == dato){ //Eliminando al primero\r\n                if (this.get_primero().get_siguiente() != this.get_primero()){                   \r\n                    let aux = this.get_primero().get_siguiente()\r\n                    this.get_primero().get_siguiente().set_anterior(this.get_ultimo())\r\n                    this.get_ultimo().set_siguiente(aux)\r\n                    this.get_primero().set_siguiente(null)\r\n                    this.get_primero().set_anterior(null)\r\n                    this.set_primero(aux)\r\n                    this.size --;\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    this.size --;\r\n                }\r\n\r\n            }else if (this.get_ultimo().get_dato() == dato){  //Eliminando al ultimo\r\n\r\n                if (this.get_ultimo().get_anterior() != this.get_ultimo()){\r\n\r\n                    let aux = this.get_ultimo().get_anterior()\r\n                    this.get_ultimo().get_anterior().set_siguiente(this.get_primero())\r\n                    this.get_primero().set_anterior(aux)\r\n                    this.get_ultimo().set_anterior(null)\r\n                    this.get_ultimo().set_siguiente(null)\r\n                    this.set_ultimo(aux);\r\n                    this.size --;\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    \r\n                    this.size --;\r\n                }\r\n\r\n\r\n            }else{ //Eliminando En Medio\r\n                let nodo_actual = this.get_primero().get_siguiente();\r\n                let anterior = this.get_primero();\r\n                do {\r\n\r\n                    if (nodo_actual.get_dato() == dato){\r\n                        \r\n                        let siguiente = nodo_actual.get_siguiente()\r\n\r\n                        nodo_actual.set_siguiente(null)\r\n                        nodo_actual.set_anterior(null)\r\n                        anterior.set_siguiente(siguiente)\r\n                        siguiente.set_anterior(anterior)\r\n                        this.size --;\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.get_siguiente();\r\n                    anterior = anterior.get_siguiente();\r\n\r\n                } while (nodo_actual != null);\r\n            }\r\n\r\n        }\r\n\t}\r\n    Imprimir=()=>{\r\n        var i = 0;\r\n        let nodo_actual = this.get_primero();\r\n        while(i<this.size){\r\n            console.log(nodo_actual.get_dato());\r\n            nodo_actual = nodo_actual.get_siguiente();\r\n            i++;\r\n        }\r\n    }\r\n    update = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n    search=(dato)=>{\r\n        let nodo_actual = this.get_primero()\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    console.log(i);\r\n                    return i\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            }\r\n        }else{ \r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n    setNodesDataSet = () => {\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0\r\n            while(i<this.size){\r\n                if(i==0){\r\n                    let etiqueta=nodo_actual.get_dato()+\"\\n Inicio\"\r\n                    dot.push({id:i, label: etiqueta});\r\n                }else if(i+1==this.size){\r\n                    let etiqueta=nodo_actual.get_dato()+\"\\n Final\"\r\n                    dot.push({id:i, label: etiqueta});\r\n                }else{\r\n                    dot.push({id:i, label: nodo_actual.get_dato()});  \r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } \r\n        }\r\n        return dot;\r\n    } \r\n    setEdgesDataSet = () => {\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        let idinicio=this.size+1;\r\n        let idfinal=this.size+2;\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                if (i==0){\r\n                    dot.push({from:0, to:1, arrows: \"to\"});\r\n                    dot.push({from:1, to:0, arrows: \"to\"});\r\n                }\r\n                if ( nodoUno!= false && nodoDos != false){\r\n                    dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                    dot.push({from:parseInt(nodoDos), to:parseInt(nodoUno), arrows: \"to\"});\r\n                }\r\n                if ((i+1)==this.size){\r\n                    dot.push({from:i, to:0, arrows: \"to\"});\r\n                    dot.push({from:0, to:i, arrows: \"to\"});\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            }\r\n        }\r\n        return dot;\r\n    }\r\n}\r\n\r\nexport default ListaCircularDE;\r\n//module.exports = ListaCircularDE;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport ListaCircularDE from './Modelo/Lineales/ListaCircularDoble/ListaCDE'; // Importar la Estructura Lista Circular Doble.\r\nvar listacde = new ListaCircularDE(); // Instancia de la ListaCDE.\r\nvar getNodes = new DataSet(listacde.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listacde.setEdgesDataSet());\t// Se Crean las flechas.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#00F3B8',\r\n            border:  '#00F3B8',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#00F3B8'\r\n            }\r\n        }\r\n    }\r\n  };\r\nclass ListaCDE extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttext:'',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t}\r\n\t\tthis.network={};\r\n\t\tthis.appRef=createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n    this.network = new Network(this.appRef.current, data, options);\r\n  \t}\r\n  \thandleInputChange(e) {\r\n    \tconst {value, name} = e.target;\r\n    \tconsole.log(value, name);\r\n    \tthis.setState({\r\n    \t  [name]: value\r\n    \t});\r\n    }\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n    handleAdd = () => {\r\n    \tlistacde.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleDelete = () => {\r\n\t\tlistacde.eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleAddTop = () => {\r\n\t\tlistacde.insertar_inicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleAddLower = () => {\r\n\t\tlistacde.insertar_ultimo(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleSearch = () => {\r\n\t\tlet dato = listacde.search(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleUpdate = () => {\r\n\t\tlistacde.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistacde.insertar(dataJson.valores[i])\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!!\")\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n\r\n    render() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n\r\n  export default ListaCDE;","class Nodo{\r\n\r\n    constructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n    }\r\n\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js')\r\nclass Stack{\r\n\r\n    constructor(){\r\n        this.primero = null\r\n    }\r\n\r\n    insertar = (dato) =>{ //Agrega un valor al final de la lista.\r\n        let  nodo_nuevo = new Nodo(dato)\r\n        if (this.empty() == false){\r\n            nodo_nuevo.set_siguiente(this.get_primero())\r\n            this.set_primero(nodo_nuevo)\r\n        }else{\r\n            this.set_primero(nodo_nuevo)\r\n        }   \r\n\r\n    }\r\n\r\n    pop = () => { // Saca el primero de la pila.\r\n\r\n        if(this.empty() == false){\r\n\r\n            if (this.get_primero().get_siguiente() != null){\r\n                \r\n                let temp = this.get_primero().get_siguiente()\r\n                this.get_primero().set_siguiente(null)\r\n                this.set_primero(temp)\r\n                \r\n                return console.log(\"Delete!\"); \r\n            }else {\r\n                this.set_primero(null)\r\n            }\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n    \r\n    update = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n\r\n        if (this.empty() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) => {\r\n        let nodo_actual = this.get_primero()\r\n\r\n        if (this.empty() == false){\r\n            let i = 0;\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    return i;\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            }while(nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n\r\n    print = () => {\r\n\r\n        if(this.empty() == false){\r\n            let nodo_actual = this.get_primero()\r\n            do {\r\n                console.log(nodo_actual.get_dato())\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            } while (nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n    }\r\n\r\n\r\n    empty = () => {\r\n        if (this.get_primero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    \r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.empty() == false){\r\n            let i = 0\r\n            do {\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.empty() == false){\r\n            let i = 0;\r\n            do {\r\n                if (nodo_actual.get_siguiente() != null){\r\n\r\n                    let nodoUno = parseInt(i)\r\n                    let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                    if (i==0){\r\n                        dot.push({from:0, to:1, arrows: \"to\"});\r\n                    }\r\n                    if ( nodoUno!= false && nodoDos != false){\r\n                        dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                    }\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            } while (nodo_actual != null);\r\n        }\r\n\r\n        return dot;\r\n\r\n    }\r\n\r\n\r\n    get_primero = () => { return this.primero; }\r\n    set_primero = (primero) => { this.primero = primero; }\r\n\r\n}\r\n\r\nexport default Stack;\r\n//module.exports = Stack;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport Stack from './Modelo/Lineales/Pila/Stack'; // Importar la Estructura Lista Simple.\r\nvar pila = new Stack(); // Instancia de la ListaSimple.\r\n\r\nvar getNodes = new DataSet(pila.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(pila.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t  springLength: 300,\r\n\t\t},\r\n\t},\r\n    nodes:{\r\n        borderWidth: 20,\r\n        color: {\r\n            background: '#FFFFFF', \r\n            border:  '#D366FF',\r\n            highlight: { // cambia de color al qu selecciona\r\n                border: '#1EFFB1', \r\n                background: '#FFFFFF'\t\r\n            }\r\n        }\r\n    }\r\n}\r\nclass Pila extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t}\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleAdd = () => {\r\n\t\tpila.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tpila.pop();\r\n\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tpila.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet dato = pila.search(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n            getNodes = new DataSet(pila.setNodesDataSet());\r\n            getEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Pila\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tpila.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL - PIla!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\trender() {\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Update\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleSearch()}>Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 0 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer JSON</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default Pila;","class Nodo{\r\n\r\n\tconstructor(valor){\r\n\t\tthis.siguiente = null;\r\n\t\tthis.valor = valor;\r\n\t}\r\n\t\r\n\tget_siguiente(){ return this.siguiente;}\r\n\tset_siguiente(nuevonodo){ this.siguiente=nuevonodo;}\r\n\tget_valor(){ return this.valor;}\r\n\tset_valor(valor){ this.valor=valor;}\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import Nodo from './Nodo.js';\r\n\r\nclass EstructuraCola{\r\n\tprimero=null;\r\n\r\n\tConstructor(){\r\n\t\tthis.primero= null;\r\n\t\tthis.ultimo=null;\r\n\t}\r\n\tget_primero = () => {return this.primero;}\r\n\tset_primero = (primero) => {this.primero = primero;}\r\n\tget_ultimo = () => {return this.ultimo;}\r\n\tset_ultimo = (ultimo) => {this.ultimo = ultimo;}\r\n\tget_vacia = () => {\r\n\t\tif(this.get_primero()==null){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tinsertar = (valor) => {\r\n\t\tlet nodo = new Nodo(valor);\r\n\t\tif(this.get_vacia()==true){\r\n\t\t\tthis.set_primero(nodo);\r\n\t\t\tthis.set_ultimo(nodo);\r\n\t\t}else{\r\n\t\t\tthis.get_ultimo().set_siguiente(nodo);\r\n\t\t\tthis.set_ultimo(nodo);\r\n\t\t}\r\n\t}\r\n\tDesencolar = () => {\r\n\t\tlet nodo = this.primero;\r\n\t\tlet seguir = true;\r\n\t\tthis.set_primero(this.get_primero().get_siguiente());\r\n\t}\r\n\tsearch = (dato) =>{\r\n\t\tlet nodo = this.get_primero();\r\n\t\tlet i=0;\r\n\t\tif(this.get_vacia() == false){\r\n\t\t\tdo{\r\n\t\t\t\tif(nodo.get_valor() == dato){\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t}while(nodo != null);\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tupdate = (dato, cambio) =>{\r\n        let nodo_actual = this.get_primero();\r\n        if (this.get_vacia() == false){\r\n            do{\r\n                if (nodo_actual.get_valor() == dato){\r\n                    nodo_actual.set_valor(cambio);\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n\r\n    }\r\n\tImprimir = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tdo{\r\n\t\t\tconsole.log(nodo.get_valor());\r\n\t\t\tnodo=nodo.get_siguiente();\r\n\t\t}while(nodo!=null)\r\n\t}\r\n\tsetNodesDataSet = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet id = 0;\r\n\t\t\tdo{\r\n\t\t\t\tdot.push({id: id, label: nodo.get_valor()});\r\n\t\t\t\tnodo=nodo.get_siguiente();\r\n\t\t\t\tid++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n\tsetEdgesDataSet = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet i = 0;\r\n\t\t\tdo{\r\n\t\t\t\tif ( nodo.get_siguiente() != null) {\r\n\t\t\t\t\tlet nodoactual=parseInt(i)\r\n\t\t\t\t\tlet nodosiguiente = parseInt(nodoactual) + parseInt(1)\r\n\t\t\t\t\tif(i==0){\r\n\t\t\t\t\t\tdot.push({from:0, to:1, arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(nodoactual != false && nodosiguiente != false){\r\n\t\t\t\t\t\tdot.push({from:parseInt(nodoactual), to:parseInt(nodosiguiente), arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t\ti++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n}\r\n\r\nexport default EstructuraCola;\r\n//module.exports = EstructuraCola;","import { DataSet, Network } from 'vis';\r\nimport React, { Component, createRef } from \"react\";\r\nimport { render } from 'react-dom';\r\nimport EstructuraCola from './Modelo/Lineales/Cola/EstructuraCola';\r\n\r\n\r\nvar estructuracola = new EstructuraCola();\r\nvar nodos = new DataSet(estructuracola.setNodesDataSet());\r\nvar flechas = new DataSet(estructuracola.setEdgesDataSet());\r\nvar datos = {nodes:nodos, edges:flechas,};\r\nvar options = {\r\n  physics: {\r\n    stabilization: false,\r\n    barnesHut: {\r\n      springLength: 200,\r\n    },\r\n  },\r\n  nodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FF5733',\r\n            border:  '#FF5733',\r\n            highlight: {\r\n                border: '#9E3D28',\r\n                background: '#9E3D28'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Cola extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      agregar: '',\r\n      dato_actualizado: '',\r\n      valoreliminar:'',\r\n      valorbuscar: '',\r\n      rango: '1',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n    }\r\n    this.network = {};\r\n    this.appRef = createRef();\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  handleInputChange(e) {\r\n    const {value, name} = e.target;\r\n    console.log(value, name);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    }\r\n  \r\n  handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      this.setState({fileName: file.name, fileContent: reader.result})\r\n    }\r\n  }\r\n\r\n\r\n  AgregarDato = () => { \r\n    estructuracola.insertar(this.state.agregar);\r\n    nodos = new DataSet(estructuracola.setNodesDataSet());\r\n    flechas = new DataSet(estructuracola.setEdgesDataSet());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  EliminarDato = () =>{\r\n    estructuracola.Desencolar();\r\n    nodos = new DataSet(estructuracola.setNodesDataSet());\r\n    flechas = new DataSet(estructuracola.setEdgesDataSet());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  ActualizarDato = () => {\r\n    estructuracola.update(this.state.agregar, this.state.dato_actualizado);\r\n    nodos = new DataSet(estructuracola.setNodesDataSet());\r\n    flechas = new DataSet(estructuracola.setEdgesDataSet());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  BuscarDato = () => {\r\n    let dato = estructuracola.search(this.state.agregar);\r\n    if (0 <= dato){\r\n      nodos = new DataSet(estructuracola.setNodesDataSet());\r\n      flechas = new DataSet(estructuracola.setEdgesDataSet());\r\n      datos = {\r\n        nodes: nodos,\r\n        edges: flechas,\r\n      }\r\n      flechas.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n    }\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n\r\n  handleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Cola\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\testructuracola.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tnodos = new DataSet(estructuracola.setNodesDataSet());\r\n      flechas = new DataSet(estructuracola.setEdgesDataSet());\r\n      datos = {\r\n        nodes: nodos,\r\n        edges: flechas,\r\n      }\r\n\t\t\t\r\n      this.network = new Network(this.appRef.current, datos, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL - Cola!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n          <input type=\"text\" name=\"agregar\" className=\"form-control\" placeholder=\"Dato\" id=\"InputCola\" value={this.state.agregar} onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.AgregarDato()}>Agregar</button>\r\n        </div>\r\n        <div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n          <input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Update\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-warning\" onClick={() => this.ActualizarDato()}>Actualizar Dato</button>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.EliminarDato()}>Eliminar</button>\r\n        </div>\r\n        <div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => this.BuscarDato()}>Buscar</button>\r\n        </div>\r\n        <div className=\"col-md-2\" style={{marginLeft: 0 + 'em'}}>\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\"  style={{marginLeft: 3 + 'em'}}>\r\n          <fieldset class=\"form-group\">\r\n            <legend>Repetidos</legend>\r\n            <div class=\"form-check\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"radio\" class=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios1\" value=\"option1\" ></input>\r\n                Si\r\n              </label>\r\n            </div>\r\n            <div class=\"form-check\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"radio\" class=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios2\" value=\"option2\"></input>\r\n                No\r\n              </label>\r\n            </div>\r\n          </fieldset>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n          <h5>Rango de Animacion</h5>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"rango\" onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n          <h5>Velocidad: x{this.state.rango}</h5>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"row\">\r\n\r\n      </div>\r\n      <div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cola;","class Nodo{\r\n\r\n\tconstructor(valor){\r\n\t\tthis.siguiente = null;\r\n\t\tthis.valor = valor;\r\n\t\tthis.prioridad = 0;\r\n\t}\r\n\t\r\n\tget_siguiente(){ return this.siguiente;}\r\n\tset_siguiente(nuevonodo){ this.siguiente=nuevonodo;}\r\n\tget_valor(){ return this.valor;}\r\n\tset_valor(valor){ this.valor=valor;}\r\n\tget_prioridad(){return this.prioridad;}\r\n\tset_prioridad(valor){this.prioridad=valor;}\r\n}\r\n\r\nexport default Nodo;\r\n// module.exports = Nodo;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport Colaprioridad from './Modelo/Lineales/ColaPrioridad/ColaPrioridad'; // Importar la Estructura Lista Circular Doble.\r\nvar colaprioridad = new Colaprioridad(); // Instancia de la ListaCDE.\r\nvar nodos = new DataSet(colaprioridad.GenerarNodosDOT());  // Se Crean los Nodos.\r\nvar flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\t// Se Crean las flechas.\r\nvar filePath;\r\n\r\nvar datos = {\r\n\tnodes: nodos,\r\n\tedge: flechas,\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#00F3B8',\r\n            border:  '#00F3B8',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#00F3B8'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\nclass ColaPrioridad extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      agregar: '',\r\n      prioridad:'',\r\n      valorbuscar: '',\r\n      rango: '1',\r\n    }\r\n    this.network = {};\r\n    this.appRef = createRef();\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  handleInputChange(e) {\r\n    const {value, name} = e.target;\r\n    console.log(value, name);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    }\r\n  AgregarDato = () => { \r\n    colaprioridad.Encolar(this.state.agregar, this.state.prioridad);\r\n    nodos = new DataSet(colaprioridad.GenerarNodosDOT());\r\n    flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  EliminarDato = () =>{\r\n    colaprioridad.Desencolar();\r\n    nodos = new DataSet(colaprioridad.GenerarNodosDOT());\r\n    flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  BuscarDato = () => {\r\n    let dato = colaprioridad.Buscar(this.state.agregar);\r\n    if (0 <= dato){\r\n      nodos = new DataSet(colaprioridad.GenerarNodosDOT());\r\n      flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\r\n      datos = {\r\n        nodes: nodos,\r\n        edges: flechas,\r\n      }\r\n      flechas.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n    }\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n          <input type=\"text\" name=\"agregar\" className=\"form-control\" placeholder=\"Dato\" id=\"InputCola\" value={this.state.agregar} onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n          <input type=\"text\" name=\"prioridad\" className=\"form-control\" placeholder=\"Prioridad\" id=\"InputPrioridad\" value={this.state.prioridad} onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.AgregarDato()}>Agregar</button>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.EliminarDato()}>Eliminar</button>\r\n        </div>\r\n        <div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => this.BuscarDato()}>Buscar</button>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n          <h5>Rango de Animacion</h5>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"rango\" onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n          <h5>Velocidad: x{this.state.rango}</h5>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"row\">\r\n\r\n      </div>\r\n      <div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColaPrioridad;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js');\r\n\r\nclass ColaPrioridad{\r\n\tprimero=null;\r\n\r\n\tConstructor(){\r\n\t\tthis.primero= null;\r\n\t\tthis.ultimo=null;\r\n\t}\r\n\tget_primero = () => {return this.primero;}\r\n\tset_primero = (primero) => {this.primero = primero;}\r\n\tget_ultimo = () => {return this.ultimo;}\r\n\tset_ultimo = (ultimo) => {this.ultimo = ultimo;}\r\n\tget_vacia = () => {\r\n\t\tif(this.get_primero()==null){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tEncolar = (valor, prioridad) => {\r\n\t\tlet nuevonodo = new Nodo(valor);\r\n\t\tif(prioridad!=null && prioridad!=\"\"){\r\n\t\t\tconsole.log(\"Enrtp\");\r\n\t\t\tnuevonodo.set_prioridad(prioridad);\r\n\t\t}\r\n\t\tlet nodo = this.get_primero();\r\n\t\tlet salir= false;\r\n\t\tif(this.get_vacia()==true){\r\n\t\t\tthis.set_primero(nuevonodo);\r\n\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t}else{\r\n\t\t\tconsole.log(nodo.get_prioridad());\r\n\t\t\tconsole.log(prioridad);\r\n\t\t\tif(prioridad!=null && prioridad!=\"\"){\r\n\t\t\t\tdo{\r\n\t\t\t\t\tconsole.log(\"Entro al while\");\r\n\t\t\t\t\tif(nodo.get_siguiente()==null){\r\n\t\t\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.log(nodo.get_prioridad());\r\n\t\t\t\t\t\tconsole.log(prioridad);\r\n\t\t\t\t\t\tif( prioridad <= nodo.get_prioridad()){\r\n\t\t\t\t\t\t\tconsole.log(\"Entro al if\");\r\n\t\t\t\t\t\t\tnuevonodo.set_siguiente(nodo.get_siguiente());\r\n\t\t\t\t\t\t\tnodo.set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t\t}else if(prioridad>nodo.get_prioridad()){\r\n\t\t\t\t\t\t\tconsole.log(\"Entro al segundo\")\r\n\t\t\t\t\t\t\tif(nodo.get_siguiente().get_prioridad()==0){\r\n\t\t\t\t\t\t\t\tnuevonodo.set_siguiente(nodo.get_siguiente());\r\n\t\t\t\t\t\t\t\tnodo.set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t\t\t}else if(prioridad<=nodo.get_siguiente().get_prioridad()){\r\n\t\t\t\t\t\t\t\tnuevonodo.set_siguiente(nodo.get_siguiente());\r\n\t\t\t\t\t\t\t\tnodo.set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t\t}while(nodo != null || salir==true);\r\n\t\t\t}else{\r\n\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tDesencolar = () => {\r\n\t\tlet nodo = this.primero;\r\n\t\tlet seguir = true;\r\n\t\tthis.set_primero(this.get_primero().get_siguiente());\r\n\t}\r\n\tBuscar = (dato) =>{\r\n\t\tlet nodo = this.get_primero();\r\n\t\tlet i=0;\r\n\t\tif(this.get_vacia() == false){\r\n\t\t\tdo{\r\n\t\t\t\tif(nodo.get_valor() == dato){\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t}while(nodo != null);\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tImprimir = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tdo{\r\n\t\t\tconsole.log(nodo.get_valor());\r\n\t\t\tnodo=nodo.get_siguiente();\r\n\t\t}while(nodo!=null)\r\n\t}\r\n\tGenerarNodosDOT = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet id = 0;\r\n\t\t\tdo{\r\n\t\t\t\tdot.push({id: id, label: nodo.get_valor()});\r\n\t\t\t\tnodo=nodo.get_siguiente();\r\n\t\t\t\tid++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n\tGenerarEdgesDOT = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet i = 0;\r\n\t\t\tdo{\r\n\t\t\t\tif ( nodo.get_siguiente() != null) {\r\n\t\t\t\t\tlet nodoactual=parseInt(i)\r\n\t\t\t\t\tlet nodosiguiente = parseInt(nodoactual) + parseInt(1)\r\n\t\t\t\t\tif(i==0){\r\n\t\t\t\t\t\tdot.push({from:0, to:1, arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(nodoactual != false && nodosiguiente != false){\r\n\t\t\t\t\t\tdot.push({from:parseInt(nodoactual), to:parseInt(nodosiguiente), arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t\ti++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n}\r\n\r\nexport default ColaPrioridad;\r\n//module.exports = ColaPrioridad;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ordenamientoBurbuja from './Modelo/Ordenamientos/OrBurbuja'; // Importar la Estructura Lista Simple.\r\nvar burbuja = new ordenamientoBurbuja(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(burbuja.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(burbuja.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Burbuja extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Ordenamiento\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\t// console.log(dataJson.valores[i]);\r\n\t\t\t\tburbuja.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(burbuja.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(burbuja.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! -> Ordenamiento \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleOrdenamiento = () => {\r\n\r\n\t\tburbuja.ordenamiento_burbuja()\r\n\t\tgetNodes = new DataSet(burbuja.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(burbuja.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleOrdenamiento()}>Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default Burbuja;","class OrBurbuja{\r\n\r\n    constructor(){\r\n        this.array = [];\r\n    }\r\n\r\n    insertar = (dato) =>{\r\n        this.array.push(dato)\r\n        // console.log(this.array)\r\n    }\r\n    ordenamiento_burbuja = () => {\r\n\r\n        for (var i = (this.array.length - 1); i >= 0; i--) {\r\n            for (var j = 0; j < i; j++) {\r\n                if(this.array[j]> this.array[j+1]){\r\n                    var temp = this.array[j];\r\n                    this.array[j] = this.array[j+1]\r\n                    this.array[j+1] = temp;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n            console.log(this.array[i])\r\n            dot.push({id:i, label: this.array[i]});\r\n        }\r\n       \r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n\r\n            if (this.array[i+1] != null){\r\n                \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                dot.push({from:nodoUno, to:nodoDos, arrows: \"to\"});\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n}   \r\n\r\nexport default OrBurbuja;\r\n//module.exports = OrBurbuja;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport OrdenamientoSeleccion from './Modelo/Ordenamientos/OrSeleccion'; // Importar la Estructura Lista Simple.\r\nvar seleccion = new OrdenamientoSeleccion(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(seleccion.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(seleccion.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Seleccion extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Ordenamiento\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\t// console.log(dataJson.valores[i]);\r\n\t\t\t\tseleccion.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(seleccion.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(seleccion.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! -> Ordenamiento \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleOrdenamiento = () => {\r\n\r\n\t\tseleccion.ordenamiento_seleccion()\r\n\t\tgetNodes = new DataSet(seleccion.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(seleccion.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleOrdenamiento()}>Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\nexport default Seleccion;\r\n","class OrSeleccion{\r\n\r\n\tconstructor(){\r\n\t\tthis.array = []\r\n\t}\r\n\r\n\tinsertar = (dato) => {\r\n\t\tthis.array.push(dato)\r\n\t}\r\n\r\n\r\n    ordenamiento_seleccion = () =>{\r\n\r\n\t\tfor(var i = 1; i < this.array.length; i++){\r\n\t\t\tvar aux = this.array[i];\r\n\t\t\tvar temp = i - 1  ;\r\n\t\t\twhile(aux < this.array[temp] && temp >= 1){\r\n\t\t\t\tthis.array[temp+1] = this.array[temp];\r\n\t\t\t\ttemp = temp - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (this.array[temp] <= aux){\r\n\t\t\t\t\tthis.array[temp+1] = aux;\r\n\t\t\t}else{\r\n\t\t\t\tthis.array[temp+1] = this.array[temp]\r\n\t\t\t\tthis.array[temp] = aux\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n            console.log(this.array[i])\r\n            dot.push({id:i, label: this.array[i]});\r\n        }\r\n       \r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n\r\n            if (this.array[i+1] != null){\r\n                \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                dot.push({from:nodoUno, to:nodoDos, arrows: \"to\"});\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default OrSeleccion;\r\n//module.exports = OrSeleccion;\r\n\r\n\r\n\r\n","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport OrdenamientoInsercion from './Modelo/Ordenamientos/OrInsercion'; // Importar la Estructura Lista Simple.\r\nvar insercion = new OrdenamientoInsercion(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(insercion.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(insercion.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Insercion extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Ordenamiento\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\t// console.log(dataJson.valores[i]);\r\n\t\t\t\tinsercion.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(insercion.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(insercion.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! -> Ordenamiento \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleOrdenamiento = () => {\r\n\r\n\t\tinsercion.ordenamiento_insercion()\r\n\t\tgetNodes = new DataSet(insercion.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(insercion.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleOrdenamiento()}>Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\nexport default Insercion;\r\n","class OrInsercion{\r\n\r\n\tconstructor(){\r\n\t\tthis.array = []\r\n\t}\r\n\r\n\tinsertar = (dato) => {\r\n\t\tthis.array.push(dato)\r\n\t}\r\n\r\n\r\n\tordenamiento_insercion = () =>{\r\n\r\n\t\tvar size = this.array.length, temp, aux;\r\n   \r\n\t\tfor ( var i = 0; i < this.array.length; i++ ) { // outer loop     \r\n\t\taux = this.array[i];\r\n\t\t\tfor ( temp = i - 1; temp >= 0 && this.array[temp] > aux; temp-- ){ // inner loop\r\n\t\t\t\tthis.array[ temp + 1 ] = this.array[temp];\r\n\t\t\t}\r\n\t\tthis.array[ temp + 1 ] = aux;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n            console.log(this.array[i])\r\n            dot.push({id:i, label: this.array[i]});\r\n        }\r\n       \r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n\r\n            if (this.array[i+1] != null){\r\n                \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                dot.push({from:nodoUno, to:nodoDos, arrows: \"to\"});\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default OrInsercion;\r\n//module.exports = OrInsercion;","import React, {useState} from 'react';\r\n\r\nexport default function Rapido(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-6\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function AVL(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function ArbolB(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function ArbolBPlus(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function ArbolMerkle(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","class Major{\r\n\tmatriz=[];\r\n\tarrreglo=[];\r\n\tconstructor(i,j){\r\n\t\tthis.i=i;\r\n\t\tthis.j=j;\r\n\t}\r\n\tget_i=()=>{return this.i;}\r\n\tset_i=(i)=>{this.i=i;}\r\n\tget_j=()=>{return this.j;}\r\n\tset_j=(j)=>{this.j=j;}\r\n\r\n\tInicializarMatriz=()=>{\r\n\t\tthis.matriz=[];\r\n\t\tthis.arrreglo=[];\r\n\t\tlet filas = this.get_i();\r\n\t\tlet columnas = this.get_j();\r\n\t\tfor(let i=0;i<filas;i++){\r\n\t\t\tlet auxfila=[]\r\n\t\t\tfor(let j=0;j<columnas;j++){\r\n\t\t\t\tauxfila.push(\" \");\r\n\t\t\t}\r\n\t\t\tthis.matriz.push(auxfila);\r\n\t\t}\r\n\t}\r\n\tInsertarDato=(i,j,dato)=>{\r\n\t\tif((i<this.get_i())&&(j<this.get_j())){\r\n\t\t\tthis.matriz[i][j]=dato;\r\n\t\t\tconsole.log(this.matriz);\r\n\t\t}\r\n\t}\r\n\tConvertirRowMajor=()=>{\r\n\t\tthis.arrreglo=[];\r\n\t\tfor(let i=0;i<this.get_i();i++){\r\n\t\t\tfor(let j=0; j<this.get_j();j++){\r\n\t\t\t\tthis.arrreglo.push(this.matriz[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tConvertirColumnMajor=()=>{\r\n\t\tthis.arrreglo=[];\r\n\t\tfor(let j=0; j<this.get_j(); j++){\r\n\t\t\tfor(let i=0; i<this.get_i(); i++){\r\n\t\t\t\tthis.arrreglo.push(this.matriz[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tBuscarDatoRowMajor=(fila,columna)=>{\r\n\t\tlet indice=-1;\r\n\t\tif((fila<this.get_i())&&(columna<this.get_j())){\r\n\t\t\tindice=(parseInt(this.get_j())*fila)+columna;\r\n\t\t}\r\n\t\treturn indice;\r\n\t}\r\n\tBuscarDatoColumnMajor=(fila,columna)=>{\r\n\t\tlet indice=-1;\r\n\t\tif((fila<this.get_i())&&(columna<this.get_j())){\r\n\t\t\tindice=(parseInt(this.get_i())*columna)+fila;\r\n\t\t}\r\n\t\treturn indice;\r\n\t}\r\n\tEliminarDato=(fila,columna)=>{\r\n\t\tif((fila<this.get_i())&&(columna<this.get_j())){\r\n\t\t\tthis.matriz[fila][columna]=\" \";\r\n\t\t}\r\n\t}\r\n\tsetData=()=>{\r\n\t\tvar dotNode = [];\r\n\t\tvar dotEdges = [];\r\n\t\tfor(let i=0;i<this.arrreglo.length;i++){\r\n\t\t\tlet etiqueta = \"\" + this.arrreglo[i];\r\n\t\t\tdotNode.push({id:i, label: etiqueta});\r\n\t\t\tif(i+1<=this.arrreglo.length){\r\n\t\t\t\tdotEdges.push({from:i, to:i+1, arrows: \"to\"});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [dotNode,dotEdges];\r\n\t}\r\n\tsetDataNodes=()=>{\r\n\t\tvar dotNode = [];\r\n\t\tvar dotEdges = [];\r\n\t\tlet contador=0;\r\n\t\tfor(let i=0; i<this.get_i();i++){\t\r\n\t\t\tfor(let j=0; j<this.get_j();j++){\r\n\t\t\t\tconsole.log(\"i: \"+i+\" j: \"+ j +this.matriz[i][j])\r\n\t\t\t\tlet etiqueta = \"\" + this.matriz[i][j];\r\n\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:i});\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor(let j=0; j<this.get_j() ;j++){\r\n\t\t\tlet aux=0+j;\r\n\t\t\tfor(let i=0; i<this.get_i();i++){\r\n\t\t\t\tif(i+1<this.get_i()){\r\n\t\t\t\t\tdotEdges.push({from:aux, to: aux+this.get_j(), color:{ opacity: 0.1 }})\r\n\t\t\t\t}\r\n\t\t\t\taux=aux+this.get_j();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn [dotNode,dotEdges];\r\n\t}\r\n}\r\nexport default Major;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport Major from './Modelo/Compuesta/Major/RowColumnMajor'; // Importar la Estructura Lista Simple.\r\nvar columnmajor = new Major(5,5);\r\nvar getNodes = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar getNodes2 = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges2 = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar data2 = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar options = {\r\n\tnodes:{\r\n\t\tshape: \"box\",\r\n    \tmargin: 10,\r\n    \twidthConstraint: {\r\n    \t  maximum: 300,\r\n    \t},\r\n        borderWidth: 30,\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"UD\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n};\r\nvar options2 = {\r\n\tnodes:{\r\n\t\tshape: \"box\",\r\n    \tmargin: 10,\r\n    \twidthConstraint: {\r\n    \t  maximum: 300,\r\n    \t},\r\n        borderWidth: 30,\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"LR\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass MatrizColumnMajor extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topcion: 'Simple',\r\n\t\t\ttamanio: '',\r\n\t\t\tfilas: '',\r\n\t\t\tcolumnas: '',\r\n\t\t\tfilaingresar: '',\r\n\t\t\tcolumnaingresar: '',\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\t//this.tablahash;\r\n\t  \tthis.network = {};\r\n\t\tthis.network2 = {};\r\n\t  \tthis.appRef = createRef();\r\n\t  \tthis.appRef2 = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\tcomponentDidMount2() {\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleGenerate = () => {\r\n\t\tcolumnmajor.set_i(parseInt(this.state.filas));\r\n\t\tcolumnmajor.set_j(parseInt(this.state.columnas));\r\n\t\tcolumnmajor.InicializarMatriz();\r\n\t\tgetNodes = new DataSet(columnmajor.setDataNodes()[0]);\r\n\t\tgetEdges = new DataSet(columnmajor.setDataNodes()[1]);\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tconsole.log(\"Generado\")\r\n\t}\r\n\r\n\thandleAdd = () => {\r\n\t\tcolumnmajor.InsertarDato(parseInt(this.state.filaingresar),parseInt(this.state.columnaingresar),this.state.text);\r\n\t\tgetNodes = new DataSet(columnmajor.setDataNodes()[0]);\r\n\t\tgetEdges = new DataSet(columnmajor.setDataNodes()[1]);\r\n\t\tconsole.log(getNodes);\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tcolumnmajor.EliminarDato(parseInt(this.state.filaingresar),parseInt(this.state.columnaingresar));\r\n\t\tgetNodes = new DataSet(columnmajor.setDataNodes()[0]);\r\n\t\tgetEdges = new DataSet(columnmajor.setDataNodes()[1]);\r\n\t\tconsole.log(getNodes);\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleGenerar = () => {\r\n\t\tcolumnmajor.ConvertirColumnMajor();\r\n\t\tgetNodes2 = new DataSet(columnmajor.setData()[0]);\r\n\t\tgetEdges2 = new DataSet(columnmajor.setData()[1]);\r\n\t\tconsole.log(getNodes);\r\n\t\tdata2 = {\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tgetNodes2 = new DataSet(columnmajor.setData()[0]);\r\n\t\tgetEdges2 = new DataSet(columnmajor.setData()[1]);\r\n\t\tlet indice = columnmajor.BuscarDatoColumnMajor(parseInt(this.state.filaingresar),parseInt(this.state.columnaingresar));\r\n\t\tgetEdges2.add({from: parseInt(indice), to: parseInt(indice),value:parseInt(indice),color:{color:'#ff383f'}});\r\n\t\tdata2 = {\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\t\tlet paraarreglo=[]\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\t//let nombre = \"Estructura Compuesta\";\r\n\t\tif ((dataJson.categoria == \"Estructura Compuesta\")&&(dataJson.nombre==\"Column Major\")){\r\n\t\t\tcolumnmajor.set_i(parseInt(dataJson.m[0]));\r\n\t\t\tcolumnmajor.set_j(parseInt(dataJson.m[1]));\r\n\t\t\tcolumnmajor.InicializarMatriz();\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tcolumnmajor.InsertarDato(parseInt(dataJson.valores[i].indices[0]),parseInt(dataJson.valores[i].indices[1]),dataJson.valores[i].valor);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(columnmajor.setDataNodes()[0]);\r\n\t\t\tgetEdges = new DataSet(columnmajor.setDataNodes()[1]);\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA COMPUESTA O DE COLUMN MAJOR!! \")\r\n\t\t}\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\r\n\t\t//listaSimple.generateJSON(listaSimple)\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"minimo\" name=\"filas\" className=\"form-control\" placeholder=\"Ingresar No. Filas\" id=\"InputFilas\" value={this.state.filas} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"maximo\" name=\"columnas\" className=\"form-control\" placeholder=\"Ingresar No. Columnas\" id=\"InputColumnas\" value={this.state.columnas} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleGenerate()}>Generar Matriz</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"filaingresar\" className=\"form-control\" placeholder=\"No. Fila\" id=\"InputCola\" value={this.state.filaingresar} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"columnaingresar\" className=\"form-control\" placeholder=\"No. Columna\" id=\"InputCola\" value={this.state.columnaingresar} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleGenerar()}>Generar Column Major</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 20 + 'em'}} ref={this.appRef2} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default MatrizColumnMajor;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport Major from './Modelo/Compuesta/Major/RowColumnMajor'; // Importar la Estructura Lista Simple.\r\nvar rowmajor = new Major(5,5);\r\nvar getNodes = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar getNodes2 = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges2 = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar data2 = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar options = {\r\n\tnodes:{\r\n\t\tshape: \"box\",\r\n    \tmargin: 10,\r\n    \twidthConstraint: {\r\n    \t  maximum: 300,\r\n    \t},\r\n        borderWidth: 30,\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"UD\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n};\r\nvar options2 = {\r\n\tnodes:{\r\n\t\tshape: \"box\",\r\n    \tmargin: 10,\r\n    \twidthConstraint: {\r\n    \t  maximum: 300,\r\n    \t},\r\n        borderWidth: 30,\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"LR\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass MatrizRowMajor extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topcion: 'Simple',\r\n\t\t\ttamanio: '',\r\n\t\t\tfilas: '',\r\n\t\t\tcolumnas: '',\r\n\t\t\tfilaingresar: '',\r\n\t\t\tcolumnaingresar: '',\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\t//this.tablahash;\r\n\t  \tthis.network = {};\r\n\t\tthis.network2 = {};\r\n\t  \tthis.appRef = createRef();\r\n\t  \tthis.appRef2 = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\tcomponentDidMount2() {\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleGenerate = () => {\r\n\t\trowmajor.set_i(parseInt(this.state.filas));\r\n\t\trowmajor.set_j(parseInt(this.state.columnas));\r\n\t\trowmajor.InicializarMatriz();\r\n\t\tgetNodes = new DataSet(rowmajor.setDataNodes()[0]);\r\n\t\tgetEdges = new DataSet(rowmajor.setDataNodes()[1]);\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tconsole.log(\"Generado\")\r\n\t}\r\n\r\n\thandleAdd = () => {\r\n\t\trowmajor.InsertarDato(parseInt(this.state.filaingresar),parseInt(this.state.columnaingresar),this.state.text);\r\n\t\tgetNodes = new DataSet(rowmajor.setDataNodes()[0]);\r\n\t\tgetEdges = new DataSet(rowmajor.setDataNodes()[1]);\r\n\t\tconsole.log(getNodes);\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\trowmajor.EliminarDato(parseInt(this.state.filaingresar),parseInt(this.state.columnaingresar));\r\n\t\tgetNodes = new DataSet(rowmajor.setDataNodes()[0]);\r\n\t\tgetEdges = new DataSet(rowmajor.setDataNodes()[1]);\r\n\t\tconsole.log(getNodes);\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleGenerar = () => {\r\n\t\trowmajor.ConvertirRowMajor();\r\n\t\tgetNodes2 = new DataSet(rowmajor.setData()[0]);\r\n\t\tgetEdges2 = new DataSet(rowmajor.setData()[1]);\r\n\t\tconsole.log(getNodes);\r\n\t\tdata2 = {\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tgetNodes2 = new DataSet(rowmajor.setData()[0]);\r\n\t\tgetEdges2 = new DataSet(rowmajor.setData()[1]);\r\n\t\tlet indice = rowmajor.BuscarDatoRowMajor(parseInt(this.state.filaingresar),parseInt(this.state.columnaingresar));\r\n\t\tgetEdges2.add({from: parseInt(indice), to: parseInt(indice),value:parseInt(indice),color:{color:'#ff383f'}});\r\n\t\tdata2 = {\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\t\tlet paraarreglo=[]\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\t//let nombre = \"Estructura Compuesta\";\r\n\t\tif ((dataJson.categoria == \"Estructura Compuesta\")&&(dataJson.nombre==\"Row Major\")){\r\n\t\t\trowmajor.set_i(parseInt(dataJson.m[0]));\r\n\t\t\trowmajor.set_j(parseInt(dataJson.m[1]));\r\n\t\t\trowmajor.InicializarMatriz();\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\trowmajor.InsertarDato(parseInt(dataJson.valores[i].indices[0]),parseInt(dataJson.valores[i].indices[1]),dataJson.valores[i].valor);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(rowmajor.setDataNodes()[0]);\r\n\t\t\tgetEdges = new DataSet(rowmajor.setDataNodes()[1]);\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA COMPUESTA O DE COLUMN MAJOR!! \")\r\n\t\t}\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\r\n\t\t//listaSimple.generateJSON(listaSimple)\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"minimo\" name=\"filas\" className=\"form-control\" placeholder=\"Ingresar No. Filas\" id=\"InputFilas\" value={this.state.filas} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"maximo\" name=\"columnas\" className=\"form-control\" placeholder=\"Ingresar No. Columnas\" id=\"InputColumnas\" value={this.state.columnas} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleGenerate()}>Generar Matriz</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"filaingresar\" className=\"form-control\" placeholder=\"No. Fila\" id=\"InputCola\" value={this.state.filaingresar} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"columnaingresar\" className=\"form-control\" placeholder=\"No. Columna\" id=\"InputCola\" value={this.state.columnaingresar} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleGenerar()}>Generar Row Major</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 20 + 'em'}} ref={this.appRef2} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default MatrizRowMajor;","class ListaCabeceraFilas {\r\n    \r\n    constructor() {\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n    insertar = (nodoNuevo) => {\r\n        if(this.vacia()==true){\r\n            this.setPrimero(nodoNuevo);\r\n            this.setUltimo(nodoNuevo);\r\n        }else{\r\n            if(nodoNuevo.getY() < this.getPrimero().getY()){ // Agregar Incicio\r\n                this.insertarInicio(nodoNuevo);\r\n            }else if (nodoNuevo.getY() > this.getUltimo().getY()){ //Agregar al final\r\n                this.insertarFinal(nodoNuevo);\r\n            }else{ // Agregar en medio\r\n                this.insertarMedio(nodoNuevo);\r\n            }\r\n        }\r\n    }\r\n\r\n    insertarInicio = (nodoNuevo) => {\r\n        this.getPrimero().setAnterior(nodoNuevo);\r\n        nodoNuevo.setSiguiente(this.getPrimero());\r\n        this.setPrimero(nodoNuevo);\r\n    }\r\n\r\n    insertarMedio = (nodoNuevo) => {\r\n        let tmp1 = null;\r\n        let tmp2 = null;\r\n        tmp1 = this.getPrimero();\r\n        while(tmp1.getY() < nodoNuevo.getY()){\r\n            tmp1 = tmp1.getSiguiente();\r\n        }\r\n\r\n        tmp2 = tmp1.getAnterior();\r\n        tmp2.setSiguiente(nodoNuevo);\r\n        nodoNuevo.setSiguiente(tmp1);\r\n        nodoNuevo.setAnterior(tmp2);\r\n        tmp1.setAnterior(nodoNuevo);\r\n    }\r\n\r\n    insertarFinal = (nodoNuevo) => {\r\n        this.getUltimo().setSiguiente(nodoNuevo);\r\n        nodoNuevo.setAnterior(this.getUltimo());\r\n        this.setUltimo(nodoNuevo);\r\n    }\r\n\r\n\r\n\r\n    delete = (y) => {\r\n\r\n        if(this.vacia()==true){\r\n            console.log(\"Empty!\")\r\n\r\n        }else{\r\n\r\n            if(this.getPrimero().getY() == y){ // Eliminar al Inicio\r\n                if(this.getPrimero().getSiguiente() != null){\r\n\r\n                    let temp = this.getPrimero().getSiguiente();\r\n                    this.getPrimero().setSiguiente(null);\r\n                    temp.setAnterior(null);\r\n                    this.setPrimero(temp);\r\n\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                }\r\n            }else if (this.getUltimo().getY() == y){ // Eliminar en Final\r\n\r\n                if(this.getUltimo().getAnterior() != null){\r\n\r\n                    let temp = this.getUltimo().getAnterior();\r\n                    this.getUltimo().setAnterior(null);\r\n                    temp.setSiguiente(null);\r\n                    this.setUltimo(temp);\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                }\r\n                \r\n            }else{  // Eliminar en Medio\r\n                \r\n                let nodo_actual = this.getPrimero()\r\n                do {\r\n                    console.log(this.getPrimero().getY())\r\n                    if (nodo_actual.getY() == y){\r\n                        \r\n                        let anterior = nodo_actual.getAnterior()\r\n                        let siguiente = nodo_actual.getSiguiente()\r\n                        \r\n                        nodo_actual.setSiguiente(null)\r\n                        nodo_actual.setAnterior(null)\r\n                        anterior.setSiguiente(siguiente)\r\n                        siguiente.setAnterior(anterior)\r\n\r\n                        return console.log(\"Delete!\");\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.getSiguiente();\r\n\r\n                } while (nodo_actual != null);\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    print = () => {\r\n        if(this.vacia() == false) {\r\n            let tmp = this.getPrimero();\r\n            while (tmp != null) {\r\n                console.log(\" Cabecera Y: \" + tmp.getY());\r\n                tmp = tmp.getSiguiente();\r\n            }\r\n        }else{\r\n            console.log(\"Empty\");\r\n        }\r\n    }\r\n\r\n    busqueda = (y) => {\r\n        if(this.vacia() == false){\r\n            let tmp = this.getPrimero();\r\n            while(tmp != null){\r\n                if(tmp.getY() == y){\r\n                    return tmp;\r\n                }\r\n                tmp = tmp.getSiguiente();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    vacia = () => {\r\n        if (this.getPrimero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    getPrimero = () => { return this.primero; }\r\n    setPrimero = (primero) => { this.primero = primero; }\r\n    getUltimo = () => { return this.ultimo; }\r\n    setUltimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n}\r\n\r\n\r\nexport default ListaCabeceraFilas;\r\n// module.exports = ListaCabeceraFilas;\r\n","class ListaCabeceraColumnas{\r\n\r\n    constructor() {\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n    insertar = (nodoNuevo) => {\r\n        if(this.vacia() == true){\r\n            this.setPrimero(nodoNuevo);\r\n            this.setUltimo(nodoNuevo);\r\n        }else{\r\n            if(nodoNuevo.getX() < this.getPrimero().getX()){ // Agregar al inicio\r\n                this.insertarInicio(nodoNuevo);\r\n            }else if (nodoNuevo.getX() > this.getUltimo().getX()){ // Agregar al final\r\n                this.insertarFinal(nodoNuevo);\r\n            }else{ // agregar medio\r\n                this.insertarMedio(nodoNuevo);\r\n            }\r\n        }\r\n    }\r\n\r\n    insertarInicio = (nodoNuevo) => {\r\n        this.getPrimero().setAnterior(nodoNuevo);\r\n        nodoNuevo.setSiguiente(this.getPrimero());\r\n        this.setPrimero(nodoNuevo);\r\n    }\r\n\r\n    insertarMedio = (nodoNuevo) => {\r\n        let tmp1 = null;\r\n        let tmp2 = null;\r\n        tmp1 = this.getPrimero();\r\n        while(tmp1.getX() < nodoNuevo.getX()){\r\n            tmp1 = tmp1.getSiguiente();\r\n        }\r\n\r\n        tmp2 = tmp1.getAnterior();\r\n        tmp2.setSiguiente(nodoNuevo);\r\n        nodoNuevo.setSiguiente(tmp1);\r\n        nodoNuevo.setAnterior(tmp2);\r\n        tmp1.setAnterior(nodoNuevo);\r\n    }\r\n\r\n    insertarFinal = (nodoNuevo) => {\r\n\r\n        this.getUltimo().setSiguiente(nodoNuevo);\r\n        nodoNuevo.setAnterior(this.getUltimo());\r\n        this.setUltimo(nodoNuevo);\r\n    }\r\n\r\n\r\n    delete = (x) => {\r\n\r\n        if(this.vacia()==true){\r\n            console.log(\"Empty!\")\r\n\r\n        }else{\r\n\r\n            if(this.getPrimero().getX() == x){ // Eliminar al Inicio\r\n                if(this.getPrimero().getSiguiente() != null){\r\n\r\n                    let temp = this.getPrimero().getSiguiente();\r\n                    this.getPrimero().setSiguiente(null);\r\n                    temp.setAnterior(null);\r\n                    this.setPrimero(temp);\r\n\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                }\r\n            }else if (this.getUltimo().getX() == x){ // Eliminar en Final\r\n\r\n                if(this.getUltimo().getAnterior() != null){\r\n\r\n                    let temp = this.getUltimo().getAnterior();\r\n                    this.getUltimo().setAnterior(null);\r\n                    temp.setSiguiente(null);\r\n                    this.setUltimo(temp);\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                }\r\n                \r\n            }else{  // Eliminar en Medio\r\n                \r\n                let nodo_actual = this.getPrimero()\r\n                do {\r\n                    console.log(this.getPrimero().getX())\r\n                    if (nodo_actual.getX() == x){\r\n                        \r\n                        let anterior = nodo_actual.getAnterior()\r\n                        let siguiente = nodo_actual.getSiguiente()\r\n                        \r\n                        nodo_actual.setSiguiente(null)\r\n                        nodo_actual.setAnterior(null)\r\n                        anterior.setSiguiente(siguiente)\r\n                        siguiente.setAnterior(anterior)\r\n\r\n                        return console.log(\"Delete!\");\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.getSiguiente();\r\n\r\n                } while (nodo_actual != null);\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    print = () => {\r\n        if(this.vacia()==false) {\r\n            let tmp = this.getPrimero();\r\n            while (tmp != null) {\r\n                console.log(\" Cabecera x: \" + tmp.getX());\r\n                tmp = tmp.getSiguiente();\r\n            }\r\n        }else{\r\n            console.log(\"Empty\");\r\n        }\r\n    }\r\n\r\n    busqueda = (x) => {\r\n        if(this.vacia()==false){\r\n            let tmp = this.getPrimero();\r\n            while(tmp != null){\r\n                if(tmp.getX() == x){\r\n                    return tmp;\r\n                }\r\n                tmp = tmp.getSiguiente();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    vacia = () => {\r\n        if (this.getPrimero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    getPrimero = () => { return this.primero; }\r\n    setPrimero = (primero) => { this.primero = primero; }\r\n    getUltimo = () => { return this.ultimo; }\r\n    setUltimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n}\r\n\r\n\r\nexport default ListaCabeceraColumnas;\r\n// module.exports = ListaCabeceraColumnas;\r\n","class ListaHorizontal {\r\n    constructor() {\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n    insertar = (nodoNuevo) => {\r\n        if(this.vacia()==true){\r\n            this.setPrimero(nodoNuevo);\r\n            this.setUltimo(nodoNuevo);\r\n        }else{\r\n            if(nodoNuevo.getX() < this.getPrimero().getX()){ // Agregar inicio\r\n                this.insertarInicio(nodoNuevo);\r\n            }else if (nodoNuevo.getX() > this.getUltimo().getX()){ // Agregar final\r\n                this.insertarFinal(nodoNuevo);\r\n            }else{  // Agregar medio\r\n                this.insertarMedio(nodoNuevo);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    insertarInicio = (nodoNuevo) => {\r\n        this.getPrimero().setIzquierda(nodoNuevo);\r\n        nodoNuevo.setDerecha(this.getPrimero());\r\n        this.setPrimero(nodoNuevo);\r\n    }\r\n\r\n    insertarMedio = (nodoNuevo) => {\r\n        let tmp1 = null;\r\n        let tmp2 = null;\r\n        tmp1 = this.getPrimero();\r\n        while(tmp1.getX() < nodoNuevo.getX()){\r\n            tmp1 = tmp1.getDerecha();\r\n        }\r\n\r\n        tmp2 = tmp1.getIzquierda();\r\n        tmp2.setDerecha(nodoNuevo);\r\n        nodoNuevo.setDerecha(tmp1);\r\n        nodoNuevo.setIzquierda(tmp2);\r\n        tmp1.setIzquierda(nodoNuevo);\r\n    }\r\n\r\n    insertarFinal = (nodoNuevo) => {\r\n        this.getUltimo().setDerecha(nodoNuevo);\r\n        nodoNuevo.setIzquierda(this.getUltimo());\r\n        this.setUltimo(nodoNuevo);\r\n    }\r\n\r\n    print = () => {         \r\n        if(this.vacia()==false) {\r\n            let tmp = this.getPrimero();\r\n            while (tmp != null) {\r\n                console.log(\"dato: \" + tmp.getDato() + \" posicion (x,y): \" + tmp.getX()  +  \",\" + tmp.getY());\r\n                tmp = tmp.getDerecha();\r\n            }\r\n        }else{\r\n            console.log(\"Empty\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    delete = (x) => {\r\n\r\n        if(this.vacia()==true){\r\n            console.log(\"Empty!\")\r\n\r\n        }else{\r\n\r\n            if(this.getPrimero().getX() == x){ // Eliminar al Inicio\r\n                if(this.getPrimero().getDerecha() != null){\r\n\r\n                    let temp = this.getPrimero().getDerecha();\r\n                    this.getPrimero().setDerecha(null);\r\n                    temp.setIzquierda(null);\r\n                    this.setPrimero(temp);\r\n\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                }\r\n            }else if (this.getUltimo().getX() == x){ // Eliminar en Final\r\n\r\n                if(this.getUltimo().getIzquierda() != null){\r\n\r\n                    let temp = this.getUltimo().getIzquierda();\r\n                    this.getUltimo().setIzquierda(null);\r\n                    temp.setDerecha(null);\r\n                    this.setUltimo(temp);\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                }\r\n                \r\n            }else{  // Eliminar en Medio\r\n                \r\n                let nodo_actual = this.getPrimero().getDerecha();\r\n                let anterior = this.getPrimero();\r\n                do {\r\n\r\n                    if (nodo_actual.getX() == x){\r\n                        \r\n                        let siguiente = nodo_actual.getDerecha();\r\n\r\n                        nodo_actual.setDerecha(null)\r\n                        nodo_actual.setIzquierda(null)\r\n                        anterior.setDerecha(siguiente)\r\n                        siguiente.setIzquierda(anterior)\r\n\r\n                        return console.log(\"Delete!\");\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.getDerecha();\r\n                    anterior = anterior.getDerecha();\r\n\r\n                } while (nodo_actual != null);\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    vacia = () => {\r\n        if (this.getPrimero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    getPrimero = () => { return this.primero; }\r\n    setPrimero = (primero) => { this.primero = primero; }\r\n    getUltimo = () => { return this.ultimo; }\r\n    setUltimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n}\r\n\r\nexport default ListaHorizontal;\r\n// module.exports = ListaHorizontal;\r\n","import ListaHorizontal from './ListaHorizontal.js';\r\n// const ListaHorizontal = require('./ListaHorizontal.js')\r\nclass NodoCabeceraFila {\r\n    \r\n    constructor(y) {\r\n        this.y = y;\r\n        this.siguiente = null;\r\n        this.anterior = null;\r\n        this.fila = new ListaHorizontal();\r\n    }\r\n\r\n    getSiguiente() { return this.siguiente; }\r\n\r\n    setSiguiente(siguiente) { this.siguiente = siguiente; }\r\n\r\n    getAnterior() { return this.anterior; }\r\n\r\n    setAnterior(antertior) { this.anterior = antertior; }\r\n\r\n    getFila() { return this.fila; }\r\n\r\n    setFila(fila) { this.fila = fila; }\r\n\r\n    getY() { return this.y; }\r\n\r\n    setY(y) { this.y = y; }\r\n}\r\n\r\n\r\nexport default NodoCabeceraFila;\r\n// module.exports = NodoCabeceraFila;\r\n","class ListaVertical {\r\n    \r\n    constructor() {\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n    insertar = (nodoNuevo) => {\r\n        if(this.vacia()==true){\r\n            this.setPrimero(nodoNuevo);\r\n            this.setUltimo(nodoNuevo);\r\n\r\n        }else{\r\n\r\n            if(nodoNuevo.getY() < this.getPrimero().getY()){ // Agrega al Inicio\r\n                this.insertarInicio(nodoNuevo);\r\n            }else if (nodoNuevo.getY() > this.getUltimo().getY()){ // Agrega en Final\r\n                this.insertarFinal(nodoNuevo);\r\n            }else{  // Agrega en Medio\r\n                this.insertarMedio(nodoNuevo);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    insertarInicio = (nodoNuevo) => {\r\n        this.getPrimero().setArriba(nodoNuevo)\r\n        nodoNuevo.setAbajo(this.getPrimero());\r\n        this.setPrimero(nodoNuevo)\r\n    }\r\n\r\n    insertarMedio = (nodoNuevo) => {\r\n\r\n        let tmp1 = null;\r\n        let tmp2 = null;\r\n        tmp1 = this.getPrimero();\r\n        while(tmp1.getY() < nodoNuevo.getY()){\r\n            tmp1 = tmp1.getAbajo();\r\n        }\r\n\r\n        tmp2 = tmp1.getArriba();\r\n        tmp2.setAbajo(nodoNuevo);\r\n        nodoNuevo.setAbajo(tmp1);\r\n        nodoNuevo.setArriba(tmp2);\r\n        tmp1.setArriba(nodoNuevo);\r\n    }\r\n\r\n    insertarFinal = (nodoNuevo) => {\r\n\r\n        this.getUltimo().setAbajo(nodoNuevo);\r\n        nodoNuevo.setArriba(this.getUltimo());\r\n        this.setUltimo(nodoNuevo);\r\n    }\r\n\r\n\r\n\r\n    delete = (y) => {\r\n\r\n        if(this.vacia()==true){\r\n            console.log(\"Empty!\")\r\n        }else{\r\n\r\n            if(this.getPrimero().getY() == y){ // Eliminar al Inicio\r\n                if(this.getPrimero().getAbajo() != null){\r\n\r\n                    let temp = this.getPrimero().getAbajo();\r\n                    this.getPrimero().setAbajo(null);\r\n                    temp.setArriba(null);\r\n                    this.setPrimero(temp);\r\n                    return true;\r\n\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                    return true;\r\n                }\r\n            }else if (this.getUltimo().getY() == y){ // Eliminar en Final\r\n\r\n                if(this.getUltimo().getArriba() != null){\r\n\r\n                    let temp = this.getUltimo().getArriba();\r\n                    this.getUltimo().setArriba(null);\r\n                    temp.setAbajo(null);\r\n                    this.setUltimo(temp);\r\n                    return true;\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                    return true;\r\n                }\r\n                \r\n            }else{  // Eliminar en Medio\r\n                \r\n                let nodo_actual = this.getPrimero().getAbajo();\r\n                let anterior = this.getPrimero();\r\n                do {\r\n                    console.log(nodo_actual)\r\n                    if (nodo_actual.getY() == y){\r\n                        \r\n                        let siguiente = nodo_actual.getAbajo();\r\n\r\n                        nodo_actual.setAbajo(null)\r\n                        nodo_actual.setArriba(null)\r\n                        anterior.setAbajo(siguiente)\r\n                        siguiente.setArriba(anterior)\r\n\r\n                        console.log(\"Delete!\");\r\n                        return true;\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.getAbajo();\r\n                    anterior = anterior.getAbajo();\r\n\r\n                } while (nodo_actual != null);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return null\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    print = () => {\r\n        if(this.vacia()==false) {\r\n            let tmp = this.getPrimero();\r\n            while (tmp != null) {\r\n                console.log(\"dato: \" + tmp.getDato() + \" posicion (x,y): \" + tmp.getX()  +  \",\" + tmp.getY());\r\n                tmp = tmp.getAbajo();\r\n            }\r\n        }else{\r\n            console.log(\"Empty\");\r\n        }\r\n    }\r\n\r\n    vacia = () => {\r\n            if (this.getPrimero() == null){\r\n                return true;\r\n            }else{\r\n                return false;\r\n            }\r\n    }\r\n\r\n\r\n    getPrimero = () => { return this.primero; }\r\n    setPrimero = (primero) => { this.primero = primero; }\r\n    getUltimo = () => { return this.ultimo; }\r\n    setUltimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n}\r\n\r\n\r\nexport default ListaVertical;\r\n// module.exports = ListaVertical;","import ListaVertical from './ListaVertical.js';\r\n// const ListaVertical = require('./ListaVertical.js')\r\nclass NodoCabeceraColumna {\r\n   \r\n    constructor(x) {\r\n        this.x = x;\r\n        this.siguiente = null;\r\n        this.anterior = null;\r\n        this.columna = new ListaVertical();\r\n    }\r\n\r\n    getSiguiente() { return this.siguiente; }\r\n\r\n    setSiguiente(siguiente) { this.siguiente = siguiente; }\r\n\r\n    getAnterior() { return this.anterior; }\r\n\r\n    setAnterior(anterior) { this.anterior = anterior; }\r\n\r\n    getColumna() { return this.columna; }\r\n\r\n    setColumna(columna) { this.columna = columna; }\r\n\r\n    getX() { return this.x; }\r\n\r\n    setX(x) { this.x = x; }\r\n}\r\n\r\n\r\nexport default NodoCabeceraColumna;\r\n// module.exports = NodoCabeceraColumna;\r\n","class NodoOrtogonal {\r\n \r\n    constructor(x, y, dato) {\r\n        this.dato = dato;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.arriba = null;\r\n        this.abajo = null;\r\n        this.izquierda = null;\r\n        this.derecha = null;\r\n    }\r\n\r\n    getDato = () => { return this.dato; }\r\n    setDato = (dato) =>{ this.dato = dato; }\r\n\r\n    getX = () => {return this.x; }\r\n\r\n    getY = () => {return this.y; }\r\n\r\n    getArriba = () => {return this.arriba; }\r\n\r\n    setArriba = (arriba) => {this.arriba = arriba; }\r\n\r\n    getAbajo = () => {return this.abajo; }\r\n\r\n    setAbajo = (abajo) => { this.abajo = abajo; }\r\n\r\n    getIzquierda = () => {return this.izquierda; }\r\n\r\n    setIzquierda = (izquierda) => {this.izquierda = izquierda; }\r\n\r\n    getDerecha = () => {return this.derecha; }\r\n\r\n    setDerecha = (derecha) => {this.derecha = derecha; }\r\n}\r\n\r\n\r\n\r\nexport default NodoOrtogonal;\r\n// module.exports = NodoOrtogonal;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport MatrizOrtogonal from './Modelo/Compuesta/MatrizDispersa/MatrizOrtogonal.js'; // Importar la Estructura Lista Simple.\r\nvar matrizDispersa = new MatrizOrtogonal(); // Instancia de la matrizDispersa.\r\nvar getNodes = new DataSet(matrizDispersa.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(matrizDispersa.setEdgesDataSet());\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 120,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 20,\r\n        color: {\r\n            background: '#F2FF9D',\r\n            border:  '#6CCECD',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    },\r\n    layout:{\r\n\t\thierarchical: {\r\n\t\t  direction: \"UD\",\r\n\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass MatrizDispersa extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\ttextX: '',\r\n\t\t\ttextY: '',\r\n\t\t\testado: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\tlet dato = matrizDispersa.search(this.state.textX, this.state.textY, this.state.text);\r\n\t\tconsole.log(dato)\r\n\t\tif(dato==null){\r\n\r\n\t\t\tmatrizDispersa.insertar(this.state.textX, this.state.textY, this.state.text);\r\n\t\t\tgetNodes = new DataSet(matrizDispersa.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(matrizDispersa.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\t}else{\r\n\r\n\t\t\talert(\"YA EXISTE UN DATO EN ESA POSICION\")\r\n\t\t}\r\n\t\t\t\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tmatrizDispersa.delete(this.state.textX, this.state.textY, this.state.text);\r\n\t\tgetNodes = new DataSet(matrizDispersa.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(matrizDispersa.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tmatrizDispersa.update(this.state.textX, this.state.textY, this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(matrizDispersa.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(matrizDispersa.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet dato = matrizDispersa.getNodesDataSet(this.state.textX, this.state.textY, this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n\t\t\tgetNodes = new DataSet(matrizDispersa.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(matrizDispersa.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tconsole.log(dato)\r\n\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Compuesta\"){\r\n\r\n\t\t\t\r\n\t\t\t// for (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t// \tconsole.log(dataJson.valores[i]);\r\n\t\t\t// \t// matrizDispersa.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t// }\r\n\t\t\tvar posicionX  = null;\r\n\t\t\tvar posicionY = null; \r\n\t\t\tvar i = 0;\r\n\t\t\tdataJson.valores.forEach(function(element){\r\n\t\t\t\ti = 1\r\n\t\t\t\telement.indices.forEach(function(posicion){\r\n\t\t\t\t\tif(i==1){\r\n\t\t\t\t\t\tposicionX = posicion;\r\n\t\t\t\t\t}else if(i==2){\r\n\t\t\t\t\t\tposicionY = posicion;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(posicionX+\",\"+posicionY+\"->\"+element.valor);\r\n\t\t\t\tlet dato = matrizDispersa.getData(posicionX, posicionY);\r\n\t\t\t\tif(dato!=null){\r\n\t\t\t\t\tmatrizDispersa.update(posicionX, posicionY, dato, element.valor);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tmatrizDispersa.insertar(posicionX, posicionY, element.valor);\t\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\r\n\t\t\tgetNodes = new DataSet(matrizDispersa.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(matrizDispersa.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\t\tconst element = document.createElement(\"a\");\r\n\t\tvar contenido = matrizDispersa.generateJSON(matrizDispersa)\r\n\t\tconst blob = new Blob([contenido]);                   \r\n\t\telement.href = URL.createObjectURL(blob);\r\n\t    element.download = \"matrizdispersa.json\";\r\n\t    document.body.appendChild(element);\r\n\t    element.click();\r\n\t    alert(\"Documento Creado!\")\r\n\t\t\r\n\t}\r\n\r\n\thandleCabecera = () => {\r\n\t\tmatrizDispersa.desactivarEncabezado(this.state.estado)\r\n\t\tgetNodes = new DataSet(matrizDispersa.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(matrizDispersa.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"textX\" className=\"form-control\" placeholder=\"Posicion: X\" id=\"InputCola\" value={this.state.textX} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"textY\" className=\"form-control\" placeholder=\"Posicion: Y\" id=\"InputCola\" value={this.state.textY} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<input type=\"text\" name=\"estado\" className=\"form-control\" placeholder=\"True/False\" id=\"InputCola\" value={this.state.estado} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleCabecera()} >Cabecera</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default MatrizDispersa;","import ListaCabeceraFilas from './ListaCabeceraFilas.js';\r\n// const ListaCabeceraFilas = require('./ListaCabeceraFilas.js')\r\nimport ListaCabeceraColumnas from './ListaCabeceraColumnas.js';\r\n// const ListaCabeceraColumnas = require('./ListaCabeceraColumnas.js')\r\nimport NodoCabeceraFila from './NodoCabeceraFila.js';\r\n// const NodoCabeceraFila = require('./NodoCabeceraFila.js')\r\nimport NodoCabeceraColumna from './NodoCabeceraColumna.js';\r\n// const NodoCabeceraColumna = require('./NodoCabeceraColumna.js')\r\nimport NodoOrtogonal from './NodoOrtogonal.js';\r\n// const NodoOrtogonal = require('./NodoOrtogonal.js')\r\n\r\nclass MatrizOrtogonal {\r\n\r\n    constructor() {\r\n        this.filas = new ListaCabeceraFilas();\r\n        this.columnas = new ListaCabeceraColumnas();\r\n        this.estado = false;\r\n    }\r\n\r\n    insertar = (x, y, dato) =>{\r\n        \r\n        var nodoNuevo = new NodoOrtogonal(x, y, dato);\r\n        if(this.getColumna().busqueda(x) == null){ // VERIFICA QUE EXISTA LA CABECERA COLUMNAS.\r\n            this.getColumna().insertar(new NodoCabeceraColumna(x));\r\n        }\r\n        if(this.getFila().busqueda(y) == null){ // VERIFICA QUE EXISTA LA CABECERA FILAS.\r\n            this.getFila().insertar(new NodoCabeceraFila(y));\r\n        }\r\n\r\n        this.getColumna().busqueda(x).getColumna().insertar(nodoNuevo);\r\n        this.getFila().busqueda(y).getFila().insertar(nodoNuevo);\r\n\r\n    }\r\n\r\n    print = () => {\r\n\r\n        var nodo_cabecera = this.getFila().getPrimero();\r\n        var nodo_actual = null;\r\n        if(nodo_cabecera != null){\r\n            do{\r\n                console.log(nodo_cabecera.getY());\r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();\r\n                if(nodo_actual != null){\r\n                    do{\r\n                        console.log(\"dato: \" + nodo_actual.getDato() + \" posicion (x,y): \" + nodo_actual.getX()  +  \",\" + nodo_actual.getY());\r\n                        nodo_actual = nodo_actual.getDerecha();\r\n                    }while(nodo_actual != null);   \r\n                }   \r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n            \r\n\r\n        console.log(\"-\")\r\n        nodo_cabecera = this.getColumna().getPrimero();\r\n        nodo_actual = null;\r\n        if(nodo_cabecera != null){\r\n             do{\r\n                console.log(nodo_cabecera.getX());\r\n                let nodo_actual = nodo_cabecera.getColumna().getPrimero();\r\n                if(nodo_actual != null){\r\n                     do{\r\n                        console.log(\"dato: \" + nodo_actual.getDato() + \" posicion (x,y): \" + nodo_actual.getX()  +  \",\" + nodo_actual.getY());\r\n                        nodo_actual = nodo_actual.getAbajo();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n           \r\n    }\r\n\r\n    search = (x, y, dato) => {\r\n\r\n        var nodo_cabecera = this.getFila().getPrimero();\r\n        var nodo_actual = null;\r\n        if (nodo_cabecera != null){\r\n            do{\r\n               \r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();\r\n                if (nodo_actual != null){\r\n                    do{\r\n                    if (nodo_actual.getDato() == dato && nodo_actual.getX() == x && nodo_actual.getY() == y){\r\n                        console.log(\"dato: \" + nodo_actual.getDato() + \" posicion (x,y): \" + nodo_actual.getX()  +  \",\" + nodo_actual.getY());\r\n                        return nodo_actual    \r\n                    }\r\n                    nodo_actual = nodo_actual.getDerecha();\r\n                }while(nodo_actual != null);   \r\n                }\r\n                \r\n                \r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n                \r\n            }while(nodo_cabecera != null);\r\n        }\r\n        console.log(\"Data not Found\")\r\n        return null\r\n    }\r\n\r\n    getData = (x, y) => {\r\n\r\n        var nodo_cabecera = this.getFila().getPrimero();\r\n        var nodo_actual = null;\r\n        if (nodo_cabecera != null){\r\n            do{\r\n               \r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();\r\n                if (nodo_actual != null){\r\n                    do{\r\n                    if (nodo_actual.getX() == x && nodo_actual.getY() == y){\r\n                        console.log(\"dato: \" + nodo_actual.getDato() + \" posicion (x,y): \" + nodo_actual.getX()  +  \",\" + nodo_actual.getY());\r\n                        return nodo_actual.getDato()    \r\n                    }\r\n                    nodo_actual = nodo_actual.getDerecha();\r\n                }while(nodo_actual != null);   \r\n                }\r\n                \r\n                \r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n                \r\n            }while(nodo_cabecera != null);\r\n        }\r\n        console.log(\"Data not Found\")\r\n        return null\r\n    }\r\n\r\n\r\n    update = (x, y, dato, cambio) => {\r\n\r\n\r\n        var nodo_cabecera = this.getFila().getPrimero();\r\n        var nodo_actual = null;\r\n        if(nodo_cabecera != null){\r\n            do{\r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();\r\n                if (nodo_actual != null){\r\n                    do{\r\n                        if (nodo_actual.getDato() == dato && nodo_actual.getX() == x && nodo_actual.getY() == y){\r\n                            nodo_actual.setDato(cambio)\r\n                            console.log(\"UPDATE -> dato: \" + nodo_actual.getDato() + \" posicion (x,y): \" + nodo_actual.getX()  +  \",\" + nodo_actual.getY());\r\n                            return nodo_actual    \r\n                        }\r\n                        nodo_actual = nodo_actual.getDerecha();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n                \r\n            }while(nodo_cabecera != null);\r\n        }\r\n        console.log(\"Data not Found\")\r\n        return null\r\n\r\n\r\n    }\r\n\r\n    delete = (x, y, dato) => {\r\n\r\n        if(this.search(x, y, dato) != null){\r\n            this.getColumna().busqueda(x).getColumna().delete(y)\r\n            this.getFila().busqueda(y).getFila().delete(x);\r\n        }\r\n        if(this.getColumna().busqueda(x).getColumna().getPrimero() == null){ \r\n            this.getColumna().delete(x); \r\n        }\r\n        if (this.getFila().busqueda(y).getFila().getPrimero()==null){ \r\n            this.getFila().delete(y); \r\n        }\r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var nodo_cabecera = this.getColumna().getPrimero();\r\n        var nodo_actual = null;\r\n        var dot = [];\r\n        var contador = 1;\r\n\r\n        if(nodo_cabecera != null){\r\n            do{\r\n                if(this.estado == true){\r\n                    dot.push({id:parseInt(contador), label:\"Fila: \"+String(nodo_cabecera.getX()), level:parseInt(nodo_cabecera.getX()+1)});\r\n                }\r\n                contador++;\r\n                let nodo_actual = nodo_cabecera.getColumna().getPrimero();\r\n                if(nodo_actual != null){\r\n                    do{\r\n                        dot.push({id:parseInt(contador), label:\"(\"+String(nodo_actual.getX())+\",\"+String(nodo_actual.getY())+\")\"+String(nodo_actual.getDato()), level:parseInt(nodo_actual.getX()+1)}); \r\n                        contador++;\r\n                        nodo_actual = nodo_actual.getAbajo();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n\r\n        nodo_cabecera = this.getFila().getPrimero();\r\n        nodo_actual = null;\r\n        if(nodo_cabecera != null){\r\n            \r\n            do{\r\n                if(this.estado==true){\r\n                dot.push({id:parseInt(contador), label: \"Columna: \"+String(nodo_cabecera.getY()), level:0});\r\n                } \r\n                contador++;\r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();    \r\n                if (nodo_actual != null){\r\n                    do{\r\n                        contador++;\r\n                        nodo_actual = nodo_actual.getDerecha();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n\r\n        return dot;\r\n\r\n    }\r\n\r\n    getNodesDataSet = (x,y,dato) =>{\r\n        var nodo_cabecera = this.getColumna().getPrimero();\r\n        var nodo_actual = null;\r\n        var contador = 1;\r\n\r\n        if(nodo_cabecera != null){\r\n            do{\r\n                contador++;\r\n                let nodo_actual = nodo_cabecera.getColumna().getPrimero();\r\n                if(nodo_actual != null){\r\n                    do{ \r\n                        if (nodo_actual.getX()==x && nodo_actual.getY()==y && nodo_actual.getDato()==dato){\r\n                            // console.log(nodo_actual.getX()+\",\"+nodo_actual.getY()+\"->(\"+contador+\")\"+nodo_actual.getDato())\r\n                            return contador\r\n                        }\r\n                        contador++;\r\n                        nodo_actual = nodo_actual.getAbajo();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        var nodo_cabecera = this.getColumna().getPrimero();\r\n        var nodo_actual = null;\r\n        var dot = [];\r\n        var contador = 1;\r\n        var tempContador = 1;\r\n\r\n        if(nodo_cabecera != null){\r\n            do{\r\n                tempContador = contador\r\n                contador++;\r\n                let nodo_actual = nodo_cabecera.getColumna().getPrimero();\r\n                if(nodo_actual != null){\r\n                    let aux = this.getNodesDataSet(nodo_actual.getX(), nodo_actual.getY(), nodo_actual.getDato())\r\n                    if(aux!=null){\r\n                        dot.push({from:parseInt(tempContador), to:aux, arrows: \"to\"});\r\n                    }\r\n                    do{\r\n\r\n                        if(nodo_actual.getAbajo()!=null){\r\n                            dot.push({from:parseInt(contador), to:parseInt(contador+1), arrows: \"to\"});\r\n                            dot.push({from:parseInt(contador+1), to:parseInt(contador), arrows: \"to\"});\r\n                        } \r\n                        contador++;\r\n                        nodo_actual = nodo_actual.getAbajo();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n\r\n                if (nodo_cabecera.getSiguiente() != null){\r\n                        dot.push({from:parseInt(tempContador), to:parseInt(contador), arrows: \"to\"});\r\n                }\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n\r\n        nodo_cabecera = this.getFila().getPrimero();\r\n        nodo_actual = null;\r\n        if(nodo_cabecera != null){\r\n            \r\n            do{\r\n\r\n                tempContador = contador;\r\n                contador++;\r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();    \r\n                if (nodo_actual != null){\r\n                    let aux = this.getNodesDataSet(nodo_actual.getX(), nodo_actual.getY(), nodo_actual.getDato())\r\n                    if(aux!=null){\r\n                        dot.push({from:parseInt(tempContador), to:aux, arrows: \"to\"});\r\n                    }\r\n                    do{\r\n                        if(nodo_actual.getDerecha()!=null){\r\n                            console.log(\"prro\")\r\n                            let auxNodoUno = this.getNodesDataSet(nodo_actual.getX(), nodo_actual.getY(), nodo_actual.getDato())\r\n                            let auxNodoDos = this.getNodesDataSet(nodo_actual.getDerecha().getX(), nodo_actual.getDerecha().getY(), nodo_actual.getDerecha().getDato())\r\n                            console.log(nodo_actual.getDato() +\" \"+auxNodoDos+\"-> \" + nodo_actual.getDerecha().getDato()+ \" \"+auxNodoUno)\r\n                            dot.push({from:parseInt(auxNodoDos), to:parseInt(auxNodoUno), arrows: \"to\"});\r\n                            dot.push({from:parseInt(auxNodoUno), to:parseInt(auxNodoDos), arrows: \"to\"});\r\n                        }\r\n                        contador++;\r\n                        nodo_actual = nodo_actual.getDerecha();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n                if (nodo_cabecera.getSiguiente() != null){\r\n                        dot.push({from:parseInt(tempContador), to:parseInt(contador), arrows: \"to\"});\r\n                }\r\n\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n\r\n        return dot;\r\n    }\r\n\r\n    desactivarEncabezado = (state) => {\r\n        if(state==\"True\"){\r\n            this.estado = true;\r\n        }else if(state==\"False\"){\r\n            this.estado = false;\r\n        }\r\n    }\r\n\r\n\r\n    generateJSON = () => {\r\n\r\n        var json = \"{\\n  \\\"categoria\\\" : \\\"Estructura Compuesta\\\",\\n  \\\"nombre\\\" : \\\"Matriz Dispersa\\\",\\n  \\\"animacion\\\" : 10,\\n  \\\"valores\\\": [\\n\"\r\n        \r\n        var nodo_cabecera = this.getFila().getPrimero();\r\n        var nodo_actual = null;\r\n        if(nodo_cabecera != null){\r\n            do{\r\n                console.log(nodo_cabecera.getY());\r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();\r\n                if(nodo_actual != null){\r\n                    do{\r\n                        if(nodo_cabecera.getSiguiente()!=null){\r\n                            if(typeof(parseInt(nodo_actual.getDato())) == \"number\"  && 0 <= parseInt(nodo_actual.getDato())){\r\n                                json = json + \"\\n\\t{\\n\\t\\\"indices\\\": [\\n\\t\\t\" + String(nodo_actual.getX()) + \",\\n\\t\\t\" + String(nodo_actual.getY()) + \"\\n\\t  ],\\n\\t  \\\"valor\\\": \" + parseInt(nodo_actual.getDato())+\"\\n\\t},\"\r\n\r\n                            }else if (typeof(nodo_actual.getDato()) == \"string\" ){\r\n                                json = json + \"\\n\\t{\\n\\t\\\"indices\\\": [\\n\\t\\t\" + String(nodo_actual.getX()) + \",\\n\\t\\t\" + String(nodo_actual.getY()) + \"\\n\\t  ],\\n\\t  \\\"valor\\\": \" + \"\\\"\" + nodo_actual.getDato()+ \"\\\"\" + \"\\n\\t},\"\r\n\r\n                            }\r\n                        }else{\r\n                            if(typeof(parseInt(nodo_actual.getDato())) == \"number\"  && 0 <= parseInt(nodo_actual.getDato())){\r\n                                json = json + \"\\n\\t{\\n\\t\\\"indices\\\": [\\n\\t\\t\" + String(nodo_actual.getX()) + \",\\n\\t\\t\" + String(nodo_actual.getY()) + \"\\n\\t  ],\\n\\t  \\\"valor\\\": \" + parseInt(nodo_actual.getDato())+\"\\n\\t}\"\r\n\r\n                            }else if (typeof(nodo_actual.getDato()) == \"string\" ){\r\n                                json = json + \"\\n\\t{\\n\\t\\\"indices\\\": [\\n\\t\\t\" + String(nodo_actual.getX()) + \",\\n\\t\\t\" + String(nodo_actual.getY()) + \"\\n\\t  ],\\n\\t  \\\"valor\\\": \" + \"\\\"\" + nodo_actual.getDato()+ \"\\\"\" + \"\\n\\t}\"\r\n\r\n                            }\r\n                        }\r\n                        nodo_actual = nodo_actual.getDerecha();\r\n                    }while(nodo_actual != null);   \r\n                }   \r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n        json = json + \"\\n  ]\\n}\"\r\n        \r\n        return json\r\n            \r\n    }\r\n\r\n    getColumna = () =>{ return this.columnas; }\r\n    setColumna = (columna) => { this.columnas = columna; }\r\n    getFila = () =>{ return this.filas; }\r\n    setFila = (fila) => { this.filas = fila; }\r\n\r\n}\r\n\r\nexport default MatrizOrtogonal;\r\n// module.exports = MatrizOrtogonal;\r\n","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport HashAbierta from './Modelo/NoLineal/HashAbierta'; // Importar la Estructura Lista Simple.\r\nvar tablahash = new HashAbierta(5,30,80);\r\nvar getNodes = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        shape: \"box\",\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"DU\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass TablaHashAbierta extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topcion: 'Simple',\r\n\t\t\ttamanio: '',\r\n\t\t\tminimo: '',\r\n\t\t\tmaximo: '',\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t\t//this.tablahash;\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleGenerate = () => {\r\n\t\ttablahash.set_m(parseInt(this.state.tamanio));\r\n\t\ttablahash.set_min(parseInt(this.state.minimo));\r\n\t\ttablahash.set_max(parseInt(this.state.maximo));\r\n\t\ttablahash.InicializarArreglo();\r\n\t\tlet numero = 2\r\n\t\tconsole.log(typeof numero);\r\n\t\tconsole.log(\"Generado\");\r\n\t}\r\n\r\n\thandleAdd = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.InsertarSimple(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.InsertarSimple(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.InsertarDivision(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.InsertarDivision(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Div\");\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.InsertarMultiplicacion(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.InsertarMultiplicacion(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Mult\");\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.EliminarSimple(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.EliminarSimple(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.EliminarDivision(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.EliminarDivision(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Div\");\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.EliminarMultiplicacion(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.EliminarMultiplicacion(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Mult\");\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tlet esentero2 = true;\r\n\t\tlet entero2 = parseInt(this.state.dato_actualizado); \r\n\t\tif(isNaN(entero2)){\r\n\t\t\tesentero2=false;\r\n\t\t}\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),parseInt(this.state.dato_actualizado),\"Simple\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),this.state.dato_actualizado,\"Simple\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,parseInt(this.state.dato_actualizado),\"Simple\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,\"Simple\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,\"Simple\");\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),parseInt(this.state.dato_actualizado),\"Division\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.log(\"DIVIVIIVIVIVI\");\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),this.state.dato_actualizado,\"Division\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,parseInt(this.state.dato_actualizado),\"Division\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,\"Division\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),parseInt(this.state.dato_actualizado),\"Multiplicacion\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),this.state.dato_actualizado,\"Multiplicacion\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,parseInt(this.state.dato_actualizado),\"Multiplicacion\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,\"Multiplicacion\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tlet indicei=0;\r\n\t\t\tlet indicej=0;\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tindicei=tablahash.BuscarSimple(parseInt(this.state.text))[0];\r\n\t\t\t\tindicej=tablahash.BuscarSimple(parseInt(this.state.text))[1];\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,parseInt(this.state.text))[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,parseInt(this.state.text))[1]);\r\n\t\t\t}else{\r\n\t\t\t\tindicei=tablahash.BuscarSimple(this.state.text)[0];\r\n\t\t\t\tindicej=tablahash.BuscarSimple(this.state.text)[1];\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,this.state.text)[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,this.state.text)[1]);\r\n\t\t\t}\r\n\t\t\tconsole.log(\"indicei: \"+indicei);\r\n\t\t\tconsole.log(\"indicej: \"+indicej);\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tlet indicei=0;\r\n\t\t\tlet indicej=0;\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tindicei=tablahash.BuscarDivision(parseInt(this.state.text))[0];\r\n\t\t\t\tindicej=tablahash.BuscarDivision(parseInt(this.state.text))[1];\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,parseInt(this.state.text))[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,parseInt(this.state.text))[1]);\r\n\t\t\t}else{\r\n\t\t\t\tindicei=tablahash.BuscarDivision(this.state.text)[0];\r\n\t\t\t\tindicej=tablahash.BuscarDivision(this.state.text)[1];\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,this.state.text)[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,this.state.text)[1]);\r\n\t\t\t}\r\n\t\t\tconsole.log(\"indicei: \"+indicei);\r\n\t\t\tconsole.log(\"indicej: \"+indicej);\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tlet indicei=0;\r\n\t\t\tlet indicej=0;\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tindicei=tablahash.BuscarMultiplicacion(parseInt(this.state.text))[0];\r\n\t\t\t\tindicej=tablahash.BuscarMultiplicacion(parseInt(this.state.text))[1];\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,parseInt(this.state.text))[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,parseInt(this.state.text))[1]);\r\n\t\t\t}else{\r\n\t\t\t\tindicei=tablahash.BuscarMultiplicacion(this.state.text)[0];\r\n\t\t\t\tindicej=tablahash.BuscarMultiplicacion(this.state.text)[1];\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,this.state.text)[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,this.state.text)[1]);\r\n\t\t\t}\r\n\t\t\tconsole.log(\"indicei: \"+indicei);\r\n\t\t\tconsole.log(\"indicej: \"+indicej);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\t\tlet paraarreglo=[]\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\t//let nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura No Lineal\"){\r\n\r\n\t\t\ttablahash.set_m(parseInt(dataJson.m));\r\n\t\t\ttablahash.set_min(parseInt(dataJson.minimo));\r\n\t\t\ttablahash.set_max(parseInt(dataJson.maximo));\r\n\t\t\ttablahash.InicializarArreglo();\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tif(dataJson.funcion==\"Simple\"){\r\n\t\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\t\ttablahash.InsertarSimple(dataJson.valores[i].toString())\r\n\t\t\t\t}else if(dataJson.funcion==\"Division\"){\r\n\t\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\t\ttablahash.InsertarDivision(dataJson.valores[i].toString())\r\n\t\t\t\t}else if(dataJson.funcion==\"Multiplicacion\"){\r\n\t\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\t\ttablahash.InsertarMultiplicacion(dataJson.valores[i].toString())\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA NO LINEAL!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\r\n\t\t//listaSimple.generateJSON(listaSimple)\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"tamanio\" name=\"tamanio\" className=\"form-control\" placeholder=\"Ingresar Tamaño Tabla\" id=\"InputTamanio\" value={this.state.tamanio} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"minimo\" name=\"minimo\" className=\"form-control\" placeholder=\"Ingresar Minimo\" id=\"InputMinimo\" value={this.state.minimo} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"maximo\" name=\"maximo\" className=\"form-control\" placeholder=\"Ingresar Maximo\" id=\"InputMaximo\" value={this.state.maximo} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleGenerate()}>Generar Tabla</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<select type=\"opcion\" name=\"opcion\" className=\"form-select\" onChange={this.handleInputChange}>\r\n        \t\t\t\t<option value=\"Simple\">Simple</option>\r\n        \t\t\t\t<option value=\"Division\">Division</option>\r\n        \t\t\t\t<option value=\"Multiplicacion\">Multiplicacion</option>\r\n      \t\t\t\t</select>\r\n      \t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default TablaHashAbierta;","class HashAbierta{\r\n\tinsertados=0;\r\n\tarrreglo=[];\r\n\tconstructor(m, min, max){\r\n\t\tthis.m = m;\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\t\tthis.InicializarArreglo();\r\n\t}\r\n\tConvertirString=(cadena)=>{\r\n\t\tlet result=0;\r\n\t\tfor(let i=0;i<cadena.length;i++){\r\n\t\t\tresult+=cadena.charCodeAt(i);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tConvertirArreglo=(arreglo)=>{\r\n\t\tlet nuevoarreglo=[]\r\n\t\tfor(let i=0;i<arreglo.length;i++){\r\n\t\t\tlet result=0;\r\n\t\t\tfor(let j=0;j<arreglo[i].length;j++){\r\n\t\t\t\tresult+=arreglo[i].charCodeAt(j);\r\n\t\t\t}\r\n\t\t\tnuevoarreglo.push(result);\r\n\t\t}\r\n\t\treturn nuevoarreglo;\r\n\t}\r\n\tInicializarArreglo=()=>{\r\n\t\tthis.insertados=0;\r\n\t\tthis.arrreglo=[];\r\n\t\tlet tamanio = this.get_m();\r\n\t\tfor(let i=0;i<tamanio;i++){\r\n\t\t\tthis.arrreglo.push([-1]);\r\n\t\t}\r\n\t}\r\n\tCapacidad=()=>{\r\n\t\tlet raro=0;\r\n\t\tfor(let i=0; i<this.get_sizearreglo() ;i++){\r\n\t\t\tlet aux = [ -1 ];\r\n\t\t\tif(this.arrreglo[i]==-1){\r\n\t\t\t\traro= raro + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet ocupado= this.get_sizearreglo()-raro;\r\n\t\treturn ocupado;\r\n\t}\r\n\tget_sizearreglo=()=>{\r\n\t\treturn this.arrreglo.length;\r\n\t}\r\n\tset_m=(m)=>{this.m=m;}\r\n\tget_m=()=>{return this.m;}\r\n\tset_min=(min)=>{this.min=min}\r\n\tget_min=()=>{return this.min;}\r\n\tset_max=(max)=>{this.max=max;}\r\n\tget_max=()=>{return this.max;}\r\n\tget_numarreglo=(indice)=>{\r\n\t\treturn this.arrreglo[indice];\r\n\t}\r\n\tImprimir=()=>{\r\n\t\tlet linea=\"[\";\r\n\t\tfor(let i=0; i<this.get_m();i++){\r\n\t\t\tlinea += \" \"+this.arrreglo[i];\r\n\t\t}\r\n\t\tlet porcetaje = (this.Capacidad()*100/this.get_m())+ \"%\";\r\n\t\tlinea+=\" ]\"+porcetaje;\r\n\t\tconsole.log(linea);\r\n\t}\r\n\tFuncionDivision = (k) =>{\r\n\t\treturn ( k % this.get_m() );\r\n\t}\r\n\tFuncionSimple = (k)=>{\r\n\t\tlet reducido = parseInt(k);\r\n\t\tlet retorno=0;\r\n\t\twhile(reducido>=1){\r\n\t\t\treducido = reducido/2;\r\n\t\t}\r\n\t\tretorno= Math.round( reducido * parseInt(this.m));\r\n\t\tif(parseInt(retorno)==this.get_m()){\r\n\t\t\tretorno=parseInt(retorno)-1;\r\n\t\t}\r\n\t\treturn (parseInt(retorno));\r\n\t}\r\n\tFuncionMultiplicacion=(k)=>{\r\n\t\tlet a = 0.1625277911;\r\n\t\treturn (Math.round(this.get_m()*((a*k)%1)));\r\n\t}\r\n\tRehashing=(tipo)=>{\r\n\t\tif(((this.Capacidad()*100)/this.get_m())>=this.get_max()){\r\n\t\t\tlet aux = this.arrreglo;\r\n\t\t\tthis.Imprimir();\r\n\t\t\tlet m_anterior = this.get_m();\r\n\t\t\tthis.set_m(this.Capacidad()*100/this.get_min());\r\n\t\t\tthis.InicializarArreglo();\r\n\t\t\tfor(let i=0; i<m_anterior; i++){\r\n\t\t\t\tconsole.log(aux[i]);\r\n\t\t\t\tif(aux[i]!=-1){\r\n\t\t\t\t\tif(tipo==\"Division\"){\r\n\t\t\t\t\t\tconsole.log(\"Division reh\"+aux[i]);\r\n\t\t\t\t\t\tfor(let j=0;j<aux[i].length;j++){\r\n\t\t\t\t\t\t\tlet esono = typeof aux[i][j];\r\n\t\t\t\t\t\t\tif(esono==\"string\"){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+aux[i][j];\r\n\t\t\t\t\t\t\t\tthis.InsertarDivision(aux[i][j]);\r\n\t\t\t\t\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\t\t\t\t\tthis.InsertarDivision(parseInt(aux[i][j]));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(tipo==\"Multiplicacion\"){\r\n\t\t\t\t\t\tfor(let j=0;j<aux[i].length;j++){\r\n\t\t\t\t\t\t\tlet esono = typeof aux[i][j];\r\n\t\t\t\t\t\t\tif(esono==\"string\"){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+aux[i][j];\r\n\t\t\t\t\t\t\t\tthis.InsertarMultiplicacion(aux[i][j]);\r\n\t\t\t\t\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\t\t\t\t\tthis.InsertarMultiplicacion(parseInt(aux[i][j]));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(tipo==\"Simple\"){\r\n\t\t\t\t\t\tfor(let j=0;j<aux[i].length;j++){\r\n\t\t\t\t\t\t\tlet esono = typeof aux[i][j];\r\n\t\t\t\t\t\t\tif(esono==\"string\"){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+aux[i][j];\r\n\t\t\t\t\t\t\t\tthis.InsertarSimple(aux[i][j]);\r\n\t\t\t\t\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\t\t\t\t\tthis.InsertarSimple(parseInt(aux[i][j]));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.Imprimir();\r\n\t\t}\r\n\t}\r\n\tInsertarDivision=(k)=>{\r\n\t\tconsole.log(\"Aqui\");\r\n\t\tlet esono = typeof k;\r\n\t\tconsole.log(typeof k);\r\n\t\tlet valordivision=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalordivision = parseInt(this.FuncionDivision(this.ConvertirString(k)));\r\n\t\t}else if(esono==\"number\"){\r\n\t\t\tvalordivision = this.FuncionDivision(parseInt(k));\r\n\t\t}\r\n\t\tconsole.log(\"Convertido: \"+valordivision);\r\n\t\tif(this.arrreglo[valordivision]!=-1){\r\n\t\t\tthis.arrreglo[valordivision].push(k);\r\n\t\t\t//this.arrreglo[valordivision] = valordearreglo.push(k);\r\n\t\t\tthis.insertados++;\r\n\t\t}else{\r\n\t\t\tthis.arrreglo[valordivision]=[k];\r\n\t\t\tthis.insertados++;\r\n\t\t}\r\n\t\tthis.Rehashing(\"Division\");\r\n\t}\r\n\tInsertarSimple=(k)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valorsimple=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t}else if(esono==\"number\"){\r\n\t\t\tvalorsimple = this.FuncionSimple(parseInt(k));\r\n\t\t}\r\n\t\tif(this.arrreglo[valorsimple]!=-1){\r\n\t\t\tthis.arrreglo[valorsimple].push(k);\r\n\t\t\t//let valordearreglo = this.arrreglo[valorsimple];\r\n\t\t\t//this.arrreglo[valorsimple] = valordearreglo.push(k);\r\n\t\t\tthis.insertados++;\r\n\t\t}else{\r\n\t\t\tthis.arrreglo[valorsimple]=[k];\r\n\t\t\tthis.insertados++;\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\");\r\n\t}\r\n\tInsertarMultiplicacion=(k)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valormultiplicacion=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalormultiplicacion = parseInt(this.FuncionMultiplicacion(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valormultiplicacion]!=-1){\r\n\t\t\tthis.arrreglo[valormultiplicacion].push(k);\r\n\t\t\t//this.arrreglo[valormultiplicacion] = valordearreglo.push(k);\r\n\t\t\tthis.insertados++;\r\n\t\t}else{\r\n\t\t\tthis.arrreglo[valormultiplicacion]=[k];\r\n\t\t\tthis.insertados++;\r\n\t\t}\r\n\t\tthis.Rehashing(\"Multiplicacion\");\r\n\t}\r\n\r\n\tEliminarSimple=(k)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valorsimple=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalorsimple = this.FuncionSimple(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valorsimple]!=-1){\r\n\t\t\tif(this.arrreglo[valorsimple].length>1){\r\n\t\t\t\tfor(let i=0;i<this.arrreglo[valorsimple].length;i++){\r\n\t\t\t\t\tif(this.arrreglo[valorsimple][i]==k){\r\n\t\t\t\t\t\tlet auxarreglo = this.arrreglo[valorsimple];\r\n\t\t\t\t\t\tauxarreglo.splice(i,1);\r\n\t\t\t\t\t\tthis.arrreglo[valorsimple] = auxarreglo;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.arrreglo[valorsimple]=[-1];\r\n\t\t\t\tthis.insertados--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\");\r\n\t}\r\n\tEliminarDivision=(k)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valordivision=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalordivision = parseInt(this.FuncionDivision(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalordivision = this.FuncionDivision(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valordivision]!=-1){\r\n\t\t\tif(this.arrreglo[valordivision].length>1){\r\n\t\t\t\tfor(let i=0;i<this.arrreglo[valordivision].length;i++){\r\n\t\t\t\t\tif(this.arrreglo[valordivision][i]==k){\r\n\t\t\t\t\t\tlet auxarreglo = this.arrreglo[valordivision];\r\n\t\t\t\t\t\tauxarreglo.splice(i,1);\r\n\t\t\t\t\t\tthis.arrreglo[valordivision] = auxarreglo;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.arrreglo[valordivision]=[-1];\r\n\t\t\t\tthis.insertados--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Division\");\r\n\t}\r\n\tEliminarMultiplicacion=(k)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valormultiplicacion=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalormultiplicacion = parseInt(this.FuncionMultiplicacion(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valormultiplicacion]!=-1){\r\n\t\t\tif(this.arrreglo[valormultiplicacion].length>1){\r\n\t\t\t\tfor(let i=0;i<this.arrreglo[valormultiplicacion].length;i++){\r\n\t\t\t\t\tif(this.arrreglo[valormultiplicacion][i]==k){\r\n\t\t\t\t\t\tlet auxarreglo = this.arrreglo[valormultiplicacion];\r\n\t\t\t\t\t\tauxarreglo.splice(i,1);\r\n\t\t\t\t\t\tthis.arrreglo[valormultiplicacion] = auxarreglo;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.arrreglo[valormultiplicacion]=[-1];\r\n\t\t\t\tthis.insertados--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Multiplicacion\");\r\n\t}\r\n\r\n\tBuscarSimple=(k)=>{\r\n\t\tlet indice=-1;\r\n\t\tlet segundoindice=0;\r\n\t\tlet esono = typeof k;\r\n\t\tlet valorsimple=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalorsimple = this.FuncionSimple(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valorsimple]!=-1){\r\n\t\t\tif(this.arrreglo[valorsimple].length>1){\r\n\t\t\t\tfor(let i=0;i<this.arrreglo[valorsimple].length;i++){\r\n\t\t\t\t\tif(this.arrreglo[valorsimple][i]==k){\r\n\t\t\t\t\t\tindice=valorsimple;\r\n\t\t\t\t\t\tsegundoindice=i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tindice=valorsimple;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\");\r\n\t\treturn [indice,segundoindice];\r\n\t}\r\n\tBuscarDivision=(k)=>{\r\n\t\tlet indice=-1;\r\n\t\tlet segundoindice=0;\r\n\t\tlet esono = typeof k;\r\n\t\tlet valordivision=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalordivision = parseInt(this.FuncionDivision(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalordivision = this.FuncionDivision(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valordivision]!=-1){\r\n\t\t\tif(this.arrreglo[valordivision].length>1){\r\n\t\t\t\tfor(let i=0;i<this.arrreglo[valordivision].length;i++){\r\n\t\t\t\t\tif(this.arrreglo[valordivision][i]==k){\r\n\t\t\t\t\t\tindice=valordivision;\r\n\t\t\t\t\t\tsegundoindice=i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tindice=valordivision;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Division\");\r\n\t\treturn [indice,segundoindice];\r\n\t}\r\n\tBuscarMultiplicacion=(k)=>{\r\n\t\tlet indice=-1;\r\n\t\tlet segundoindice=0;\r\n\t\tlet esono = typeof k;\r\n\t\tlet valormultiplicacion=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalormultiplicacion = parseInt(this.FuncionMultiplicacion(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valormultiplicacion]!=-1){\r\n\t\t\tif(this.arrreglo[valormultiplicacion].length>1){\r\n\t\t\t\tfor(let i=0;i<this.arrreglo[valormultiplicacion].length;i++){\r\n\t\t\t\t\tif(this.arrreglo[valormultiplicacion][i]==k){\r\n\t\t\t\t\t\tindice=valormultiplicacion;\r\n\t\t\t\t\t\tsegundoindice=i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tindice=valormultiplicacion;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Multiplicacion\");\r\n\t\treturn [indice,segundoindice];\r\n\t}\r\n\r\n\tActualizar=(k,nuevo,tipo)=>{\r\n\t\tif(tipo==\"Simple\"){\r\n\t\t\tlet esono = typeof k;\r\n\t\t\tlet valorsimple=0;\r\n\t\t\tif(esono==\"string\"){\r\n\t\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t\t}else{\r\n\t\t\t\tvalorsimple = this.FuncionSimple(k);\r\n\t\t\t}\r\n\t\t\tif(this.arrreglo[valorsimple]!=-1){\r\n\t\t\t\tif(this.arrreglo[valorsimple].length>1){\r\n\t\t\t\t\tfor(let i=0;i<this.arrreglo[valorsimple].length;i++){\r\n\t\t\t\t\t\tif(this.arrreglo[valorsimple][i]==k){\r\n\t\t\t\t\t\t\tlet auxarreglo = this.arrreglo[valorsimple];\r\n\t\t\t\t\t\t\tauxarreglo.splice(i,1);\r\n\t\t\t\t\t\t\tthis.arrreglo[valorsimple] = auxarreglo;\r\n\t\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\t\tthis.InsertarSimple(nuevo);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.arrreglo[valorsimple]=[-1];\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\tthis.InsertarSimple(nuevo);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.Rehashing(\"Simple\");\r\n\t\t}else if(tipo==\"Division\"){\r\n\t\t\tlet esono = typeof k;\r\n\t\t\tlet valordivision=0;\r\n\t\t\tif(esono==\"string\"){\r\n\t\t\t\tvalordivision = parseInt(this.FuncionDivision(this.ConvertirString(k)));\r\n\t\t\t}else{\r\n\t\t\t\tvalordivision = this.FuncionDivision(k);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.arrreglo[valordivision]!=-1){\r\n\t\t\t\tif(this.arrreglo[valordivision].length>1){\r\n\t\t\t\t\tfor(let i=0;i<this.arrreglo[valordivision].length;i++){\r\n\t\t\t\t\t\tif(this.arrreglo[valordivision][i]==k){\r\n\t\t\t\t\t\t\tlet auxarreglo = this.arrreglo[valordivision];\r\n\t\t\t\t\t\t\tauxarreglo.splice(i,1);\r\n\t\t\t\t\t\t\tthis.arrreglo[valordivision] = auxarreglo;\r\n\t\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\t\tthis.InsertarDivision(nuevo);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.arrreglo[valordivision]=[-1];\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\tthis.InsertarDivision(nuevo);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.Rehashing(\"Division\");\r\n\t\t}else if(tipo==\"Multiplicacion\"){\r\n\t\t\tlet esono = typeof k;\r\n\t\t\tlet valormultiplicacion=0;\r\n\t\t\tif(esono==\"string\"){\r\n\t\t\t\tvalormultiplicacion = parseInt(this.FuncionMultiplicacion(this.ConvertirString(k)));\r\n\t\t\t}else{\r\n\t\t\t\tvalormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t\t}\r\n\t\t\tif(this.arrreglo[valormultiplicacion]!=-1){\r\n\t\t\t\tif(this.arrreglo[valormultiplicacion].length>1){\r\n\t\t\t\t\tfor(let i=0;i<this.arrreglo[valormultiplicacion].length;i++){\r\n\t\t\t\t\t\tif(this.arrreglo[valormultiplicacion][i]==k){\r\n\t\t\t\t\t\t\tlet auxarreglo = this.arrreglo[valormultiplicacion];\r\n\t\t\t\t\t\t\tauxarreglo.splice(i,1);\r\n\t\t\t\t\t\t\tthis.arrreglo[valormultiplicacion] = auxarreglo;\r\n\t\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\t\tthis.InsertarMultiplicacion(nuevo);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.arrreglo[valormultiplicacion]=[-1];\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\tthis.InsertarMultiplicacion(nuevo);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.Rehashing(\"Multiplicacion\");\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tsetDataSet = () => { // Esto Genera los nodos de Vis.\r\n\t\tvar dotNode = [];\r\n\t\tvar dotEdges = [];\r\n\t\tlet contador = 0\r\n\t\tfor(let i=0;i<this.get_sizearreglo();i++){\r\n\t\t\tdotNode.push({id:i, label: \"/\", level:0});\r\n\t\t\tif(i+1<this.arrreglo.length){\r\n\t\t\t\tdotEdges.push({from:i, to:i+1, arrows: \"to\"});\r\n\t\t\t}\r\n\t\t\tcontador++;\r\n\t\t}\r\n\t\tconsole.log(contador);\r\n\t\tfor(let i=0;i<this.get_sizearreglo();i++){\r\n\t\t\tif(this.arrreglo[i]!=-1){\r\n\t\t\t\tif(this.arrreglo[i].length>1){\r\n\t\t\t\t\tfor(let j=0;j<this.arrreglo[i].length;j++){\r\n\t\t\t\t\t\tif(j==0){\r\n\t\t\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][j];\r\n\t\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:j+1});\r\n\t\t\t\t\t\t\tdotEdges.push({from:i, to:contador, arrows: \"to\"});\r\n\t\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t\t\tif((j+1)<=this.arrreglo[i].length){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][j+1];\r\n\t\t\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:j+2});\r\n\t\t\t\t\t\t\t\tdotEdges.push({from:contador-1, to:contador, arrows: \"to\"});\r\n\t\t\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif((j+1)<this.arrreglo[i].length){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][j+1];\r\n\t\t\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:j+2});\r\n\t\t\t\t\t\t\t\tdotEdges.push({from:contador-1, to:contador, arrows: \"to\"});\r\n\t\t\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//contador++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][0];\r\n\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:1});\r\n\t\t\t\t\tdotEdges.push({from:i, to:contador, arrows: \"to\"});\r\n\t\t\t\t\tcontador++\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n        return [dotNode,dotEdges];\r\n    } \r\n\r\n    setDataSetBuscar=(indicei,indicej,dato)=>{\r\n    \tvar dotNode = [];\r\n\t\tvar dotEdges = [];\r\n\t\tlet contador = 0\r\n\t\tfor(let i=0;i<this.get_sizearreglo();i++){\r\n\t\t\tdotNode.push({id:i, label: \"/\", level:0});\r\n\t\t\tif(i+1<this.arrreglo.length){\r\n\t\t\t\tdotEdges.push({from:i, to:i+1, arrows: \"to\"});\r\n\t\t\t}\r\n\t\t\tcontador++;\r\n\t\t}\r\n\t\tconsole.log(contador);\r\n\t\tfor(let i=0;i<this.get_sizearreglo();i++){\r\n\t\t\tif(this.arrreglo[i]!=-1){\r\n\t\t\t\tif(this.arrreglo[i].length>1){\r\n\t\t\t\t\tfor(let j=0;j<this.arrreglo[i].length;j++){\r\n\t\t\t\t\t\tif(j==0){\r\n\t\t\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][j];\r\n\t\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:j+1});\r\n\t\t\t\t\t\t\tdotEdges.push({from:i, to:contador, arrows: \"to\"});\r\n\t\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t\t\tif((j+1)<=this.arrreglo[i].length){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][j+1];\r\n\t\t\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:j+2});\r\n\t\t\t\t\t\t\t\tdotEdges.push({from:contador-1, to:contador, arrows: \"to\"});\r\n\t\t\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif((j+1)<this.arrreglo[i].length){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][j+1];\r\n\t\t\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:j+2});\r\n\t\t\t\t\t\t\t\tdotEdges.push({from:contador-1, to:contador, arrows: \"to\"});\r\n\t\t\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\tif((indicei==i)&&(indicej==j)&&(dato==this.arrreglo[i][j])){\r\n\t\t\t\t\t\t\tdotEdges.push({from: contador-1, to: contador-1, value:contador,color:{color:'#ff383f'}});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//contador++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][0];\r\n\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:1});\r\n\t\t\t\t\tdotEdges.push({from:i, to:contador, arrows: \"to\"});\r\n\t\t\t\t\tif((indicei==i)&&(indicej==0)&&(dato==this.arrreglo[i][0])){\r\n\t\t\t\t\t\tdotEdges.push({from: contador, to: contador, value:contador,color:{color:'#ff383f'}});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontador++\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n        return [dotNode,dotEdges];\r\n    }\r\n\r\n}\r\nexport default HashAbierta;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport HashCerrada from './Modelo/NoLineal/HashCerrada'; // Importar la Estructura Lista Simple.\r\nvar tablahash = new HashCerrada(5,30,80);\r\nvar getNodes = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        shape: \"box\",\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"DU\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass TablaHashCerrada extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topcion: 'Simple',\r\n\t\t\tmodo: 'Lineal',\r\n\t\t\ttamanio: '',\r\n\t\t\tminimo: '',\r\n\t\t\tmaximo: '',\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t\t//this.tablahash;\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleGenerate = () => {\r\n\t\ttablahash.set_m(parseInt(this.state.tamanio));\r\n\t\ttablahash.set_min(parseInt(this.state.minimo));\r\n\t\ttablahash.set_max(parseInt(this.state.maximo));\r\n\t\ttablahash.InicializarArreglo();\r\n\t\tlet numero = 2\r\n\t\tconsole.log(typeof numero);\r\n\t\tconsole.log(\"Generado\");\r\n\t}\r\n\r\n\thandleAdd = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.InsertarSimple(parseInt(this.state.text),this.state.modo);\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.InsertarSimple(this.state.text,this.state.modo);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.InsertarDivision(parseInt(this.state.text),this.state.modo);\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.InsertarDivision(this.state.text,this.state.modo);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Div\");\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.InsertarMultiplicacion(parseInt(this.state.text),this.state.modo);\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.InsertarMultiplicacion(this.state.text,this.state.modo);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Mult\");\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.EliminarSimple(parseInt(this.state.text),this.state.modo);\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.EliminarSimple(this.state.text,this.state.modo);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.EliminarDivision(parseInt(this.state.text),this.state.modo);\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.EliminarDivision(this.state.text,this.state.modo);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Div\");\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.EliminarMultiplicacion(parseInt(this.state.text),this.state.modo);\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.EliminarMultiplicacion(this.state.text,this.state.modo);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Mult\");\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tlet esentero2 = true;\r\n\t\tlet entero2 = parseInt(this.state.dato_actualizado); \r\n\t\tif(isNaN(entero2)){\r\n\t\t\tesentero2=false;\r\n\t\t}\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),parseInt(this.state.dato_actualizado),this.state.modo,\"Simple\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),this.state.dato_actualizado,this.state.modo,\"Simple\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,parseInt(this.state.dato_actualizado),this.state.modo,\"Simple\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,this.state.modo,\"Simple\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,this.state.modo,\"Simple\");\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),parseInt(this.state.dato_actualizado),this.state.modo,\"Division\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.log(\"DIVIVIIVIVIVI\");\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),this.state.dato_actualizado,this.state.modo,\"Division\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,parseInt(this.state.dato_actualizado),this.state.modo,\"Division\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,this.state.modo,\"Division\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),parseInt(this.state.dato_actualizado),this.state.modo,\"Multiplicacion\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),this.state.dato_actualizado,this.state.modo,\"Multiplicacion\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,parseInt(this.state.dato_actualizado),this.state.modo,\"Multiplicacion\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,this.state.modo,\"Multiplicacion\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tconsole.log(\"Entro Buscar\");\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tconsole.log(\"Simple\");\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(parseInt(this.state.text))[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(parseInt(this.state.text))[1]);\r\n\t\t\t}else{\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(this.state.text)[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(this.state.text)[1]);\r\n\t\t\t}\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tconsole.log(\"Division\");\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(parseInt(this.state.text))[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(parseInt(this.state.text))[1]);\r\n\t\t\t}else{\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(this.state.text)[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(this.state.text)[1]);\r\n\t\t\t}\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tconsole.log(\"Multiplicacion\");\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(parseInt(this.state.text))[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(parseInt(this.state.text))[1]);\r\n\t\t\t}else{\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(this.state.text)[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(this.state.text)[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\t\tlet paraarreglo=[]\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\t//let nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura No Lineal\"){\r\n\r\n\t\t\ttablahash.set_m(parseInt(dataJson.m));\r\n\t\t\ttablahash.set_min(parseInt(dataJson.minimo));\r\n\t\t\ttablahash.set_max(parseInt(dataJson.maximo));\r\n\t\t\ttablahash.InicializarArreglo();\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tif(dataJson.funcion==\"Simple\"){\r\n\t\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\t\ttablahash.InsertarSimple(dataJson.valores[i].toString(),dataJson.prueba.toString());\r\n\t\t\t\t}else if(dataJson.funcion==\"Division\"){\r\n\t\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\t\ttablahash.InsertarDivision(dataJson.valores[i].toString(),dataJson.prueba.toString());\r\n\t\t\t\t}else if(dataJson.funcion==\"Multiplicacion\"){\r\n\t\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\t\ttablahash.InsertarMultiplicacion(dataJson.valores[i].toString(),dataJson.prueba.toString());\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA NO LINEAL!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\r\n\t\t//listaSimple.generateJSON(listaSimple)\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"tamanio\" name=\"tamanio\" className=\"form-control\" placeholder=\"Ingresar Tamaño Tabla\" id=\"InputTamanio\" value={this.state.tamanio} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"minimo\" name=\"minimo\" className=\"form-control\" placeholder=\"Ingresar Minimo\" id=\"InputMinimo\" value={this.state.minimo} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"maximo\" name=\"maximo\" className=\"form-control\" placeholder=\"Ingresar Maximo\" id=\"InputMaximo\" value={this.state.maximo} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleGenerate()}>Generar Tabla</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<select type=\"opcion\" name=\"opcion\" className=\"form-select\" onChange={this.handleInputChange}>\r\n        \t\t\t\t<option value=\"Simple\">Simple</option>\r\n        \t\t\t\t<option value=\"Division\">Division</option>\r\n        \t\t\t\t<option value=\"Multiplicacion\">Multiplicacion</option>\r\n      \t\t\t\t</select>\r\n      \t\t\t</div>\r\n      \t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<select type=\"opcion\" name=\"modo\" className=\"form-select\" onChange={this.handleInputChange}>\r\n        \t\t\t\t<option value=\"Lineal\">Lineal</option>\r\n        \t\t\t\t<option value=\"Cuadratica\">Cuadratica</option>\r\n        \t\t\t\t<option value=\"Doble\">Doble</option>\r\n      \t\t\t\t</select>\r\n      \t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default TablaHashCerrada;","class HashCerrada{\r\n\tinsertados=0;\r\n\tarrreglo=[];\r\n\tconstructor(m, min, max){\r\n\t\tthis.m = m;\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\t\tthis.InicializarArreglo();\r\n\t}\r\n\tConvertirString=(cadena)=>{\r\n\t\tlet result=0;\r\n\t\tfor(let i=0;i<cadena.length;i++){\r\n\t\t\tresult+=cadena.charCodeAt(i);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tConvertirArreglo=(arreglo)=>{\r\n\t\tlet nuevoarreglo=[]\r\n\t\tfor(let i=0;i<arreglo.length;i++){\r\n\t\t\tlet result=0;\r\n\t\t\tfor(let j=0;j<arreglo[i].length;j++){\r\n\t\t\t\tresult+=arreglo[i].charCodeAt(j);\r\n\t\t\t}\r\n\t\t\tnuevoarreglo.push(result);\r\n\t\t}\r\n\t\treturn nuevoarreglo;\r\n\t}\r\n\tget_sizearreglo=()=>{\r\n\t\treturn this.arrreglo.length;\r\n\t}\r\n\tInicializarArreglo=()=>{\r\n\t\tthis.insertados=0;\r\n\t\tthis.arrreglo=[];\r\n\t\tlet tamanio = this.get_m();\r\n\t\tfor(let i=0;i<tamanio;i++){\r\n\t\t\tthis.arrreglo.push(-1);\r\n\t\t}\r\n\t}\r\n\tset_m=(m)=>{this.m=m;}\r\n\tget_m=()=>{return parseInt(this.m,10);}\r\n\tset_min=(min)=>{this.min=min}\r\n\tget_min=()=>{return this.min;}\r\n\tset_max=(max)=>{this.max=max;}\r\n\tget_max=()=>{return this.max;}\r\n\tget_numarreglo=(indice)=>{\r\n\t\t//let str = \"Valor: \" + this.arrreglo[indice];\r\n\t\t//console.log(str);\r\n\t\treturn this.arrreglo[indice];\r\n\t}\r\n\tImprimir=()=>{\r\n\t\tlet linea=\"[\";\r\n\t\tfor(let i=0; i<this.get_m();i++){\r\n\t\t\tlinea += \" \"+this.arrreglo[i];\r\n\t\t}\r\n\t\tlet porcetaje = (this.insertados*100/this.get_m())+ \"%\";\r\n\t\tlinea+=\" ]\"+porcetaje;\r\n\t\tconsole.log(linea);\r\n\t}\r\n\tFuncionDivision = (k) =>{\r\n\t\treturn ( k % this.get_m() );\r\n\t}\r\n\tFuncionSimple = (k)=>{\r\n\t\tlet reducido = k;\r\n\t\twhile(reducido>1){\r\n\t\t\treducido = Math.round(reducido/2);\r\n\t\t}\r\n\t\tlet retorno= Math.round(reducido * this.get_m());\r\n\t\tif(retorno==this.get_m()){\r\n\t\t\tretorno=retorno-1;\r\n\t\t}\r\n\t\treturn (retorno);\r\n\t}\r\n\tFuncionMultiplicacion=(k)=>{\r\n\t\tlet a = 0.1625277911;\r\n\t\treturn (Math.round(this.get_m()*((a*k)%1)));\r\n\t}\r\n\tFuncionAcomodarLineal=(k,i)=>{\r\n\t\treturn ((k + 1) % this.get_m() );\r\n\t}\r\n\tFuncionAcomodarCuadratica=(k,i)=>{\r\n\t\treturn ((k+(i*i)) % this.get_m());\r\n\t}\r\n\tFuncionAcomodarDoble=(h1,i,h2)=>{\t\r\n\t\treturn ((h1+i*h2) % this.get_m());\r\n\t}\r\n\tRehashing=(tipo,modo)=>{\r\n\t\tif(((this.insertados*100)/this.get_m())>=this.get_max()){\r\n\t\t\tlet aux = this.arrreglo;\r\n\t\t\tthis.Imprimir();\r\n\t\t\tlet m_anterior = this.get_m();\r\n\t\t\tthis.set_m(this.insertados*100/this.get_min());\r\n\t\t\tthis.InicializarArreglo();\r\n\t\t\tfor(let i=0; i<m_anterior; i++){\r\n\t\t\t\t//console.log(aux[i]);\r\n\t\t\t\tif(aux[i]!=-1){\r\n\t\t\t\t\tif(tipo==\"Division\"){\r\n\t\t\t\t\t\t\tlet esono = typeof aux[i];\r\n\t\t\t\t\t\t\tif(esono==\"string\"){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+aux[i];\r\n\t\t\t\t\t\t\t\tthis.InsertarDivision(aux[i],modo);\r\n\t\t\t\t\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\t\t\t\t\tthis.InsertarDivision(parseInt(aux[i]),modo);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(tipo==\"Multiplicacion\"){\r\n\t\t\t\t\t\t\tlet esono = typeof aux[i];\r\n\t\t\t\t\t\t\tif(esono==\"string\"){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+aux[i];\r\n\t\t\t\t\t\t\t\tthis.InsertarMultiplicacion(aux[i],modo);\r\n\t\t\t\t\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\t\t\t\t\tthis.InsertarMultiplicacion(parseInt(aux[i]),modo);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(tipo==\"Simple\"){\r\n\t\t\t\t\t\t\tlet esono = typeof aux[i];\r\n\t\t\t\t\t\t\tif(esono==\"string\"){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+aux[i];\r\n\t\t\t\t\t\t\t\tthis.InsertarSimple(aux[i],modo);\r\n\t\t\t\t\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\t\t\t\t\tthis.InsertarSimple(parseInt(aux[i]),modo);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.Imprimir();\r\n\t\t}\r\n\t}\r\n\tInsertarDivision=(k,modo)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tconsole.log(typeof k);\r\n\t\tlet valordivision=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalordivision = parseInt(this.FuncionDivision(this.ConvertirString(k)));\r\n\t\t}else if(esono==\"number\"){\r\n\t\t\tvalordivision = this.FuncionDivision(parseInt(k));\r\n\t\t}\r\n\r\n\t\tif(modo==\"Lineal\"){\r\n\t\t\twhile(this.arrreglo[valordivision]!=-1){\r\n\t\t\t\tvalordivision = this.FuncionAcomodarLineal(valordivision);\r\n\t\t\t}\r\n\t\t\tthis.arrreglo[valordivision]=k;\r\n\t\t\tthis.insertados++;\r\n\t\t}else if(modo==\"Cuadratica\"){\r\n\t\t\tlet contador=1;\r\n\t\t\tlet nuevovalor=valordivision;\r\n\t\t\twhile(this.arrreglo[nuevovalor]!=-1){\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarCuadratica(valordivision,contador);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t\tthis.arrreglo[nuevovalor]=k;\r\n\t\t\tthis.insertados++;\r\n\t\t}else if(modo==\"Doble\"){\r\n\t\t\tlet esono = typeof k;\r\n\t\t\tconsole.log(typeof k);\r\n\t\t\tlet h2=0;\r\n\t\t\tif(esono==\"string\"){\r\n\t\t\t\th2 = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\th2 = this.FuncionSimple(parseInt(k));\r\n\t\t\t}\r\n\t\t\tlet contador=1;\r\n\t\t\tlet nuevovalor=valordivision;\r\n\t\t\twhile(this.arrreglo[nuevovalor]!=-1){\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarDoble(valordivision,contador,h2);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t\tthis.arrreglo[nuevovalor]=k;\r\n\t\t\tthis.insertados++;\r\n\t\t}\r\n\t\tthis.Rehashing(\"Division\",modo);\r\n\t}\r\n\tInsertarSimple=(k,modo)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valorsimple=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t}else if(esono==\"number\"){\r\n\t\t\tvalorsimple = this.FuncionSimple(parseInt(k));\r\n\t\t}\r\n\t\tif(modo==\"Lineal\"){\r\n\t\t\twhile(this.arrreglo[valorsimple]!=-1){\r\n\t\t\t\tvalorsimple = this.FuncionAcomodarLineal(valorsimple);\r\n\t\t\t}\r\n\t\t\tthis.arrreglo[valorsimple]=k;\r\n\t\t\tthis.insertados++; \r\n\t\t}else if(modo==\"Cuadratica\"){\r\n\t\t\tlet contador=1;\r\n\t\t\tlet nuevovalor=valorsimple;\r\n\t\t\twhile(this.arrreglo[nuevovalor]!=-1){\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarCuadratica(valorsimple,contador);\r\n\t\t\t\tconsole.log(nuevovalor);\r\n\t\t\t\tconsole.log(\"VVV:\"+contador)\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t\tthis.arrreglo[nuevovalor]=k;\r\n\t\t\tthis.insertados++;\r\n\t\t}else if(modo==\"Doble\"){\r\n\t\t\tlet contador=1;\r\n\t\t\tlet nuevovalor=valorsimple;\r\n\t\t\twhile(this.arrreglo[nuevovalor]!=-1){\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarDoble(valorsimple,contador,valorsimple);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t\tthis.arrreglo[nuevovalor]=k;\r\n\t\t\tthis.insertados++;\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\",modo);\r\n\t}\r\n\tInsertarMultiplicacion=(k,modo)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valormultiplicacion=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalormultiplicacion = parseInt(this.FuncionMultiplicacion(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t}\r\n\t\tif(modo==\"Lineal\"){\r\n\t\t\twhile(this.arrreglo[valormultiplicacion]!=-1){\r\n\t\t\t\tvalormultiplicacion = this.FuncionAcomodarLineal(valormultiplicacion);\r\n\t\t\t}\r\n\t\t\tthis.arrreglo[valormultiplicacion]=k;\r\n\t\t\tthis.insertados++;\r\n\t\t}else if(modo==\"Cuadratica\"){\r\n\t\t\tlet contador=1;\r\n\t\t\tlet nuevovalor=valormultiplicacion;\r\n\t\t\twhile(this.arrreglo[nuevovalor]!=-1){\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarCuadratica(valormultiplicacion,contador);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t\tthis.arrreglo[nuevovalor]=k;\r\n\t\t\tthis.insertados++;\r\n\t\t}else if(modo==\"Doble\"){\r\n\t\t\tlet contador=1;\r\n\t\t\tlet nuevovalor=valormultiplicacion;\r\n\t\t\twhile(this.arrreglo[nuevovalor]!=-1){\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarDoble(valormultiplicacion,contador,valormultiplicacion);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t\tthis.arrreglo[nuevovalor]=k;\r\n\t\t\tthis.insertados++;\r\n\t\t}\r\n\t\tthis.Rehashing(\"Multiplicacion\",modo);\r\n\t}\r\n\tEliminarSimple=(k,modo)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valorsimple=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalorsimple = this.FuncionSimple(k);\r\n\t\t}\r\n\t\tif(modo==\"Lineal\"){\r\n\t\t\tlet valorsimple = this.FuncionSimple(k);\r\n\t\t\tlet eliminado=false;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(eliminado==false){\r\n\t\t\t\tif(this.arrreglo[valorsimple]==k){\r\n\t\t\t\t\tthis.arrreglo[valorsimple]=-1;\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\tvalorsimple = this.FuncionAcomodarLineal(valorsimple);\r\n\t\t\t} \r\n\t\t}else if(modo==\"Cuadratica\"){\r\n\t\t\tlet valorsimple = this.FuncionSimple(k);\r\n\t\t\tlet contador=1;\r\n\t\t\tlet eliminado=false;\r\n\t\t\tlet nuevovalor=valorsimple;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(eliminado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarCuadratica(valorsimple,contador);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}else if(modo==\"Doble\"){\r\n\t\t\tlet valorsimple = this.FuncionSimple(k);\r\n\t\t\tlet eliminado=false;\r\n\t\t\tlet contador=1;\r\n\t\t\tlet i=0;\r\n\t\t\tlet nuevovalor=valorsimple;\r\n\t\t\twhile(eliminado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarDoble(valorsimple,contador,valorsimple);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\",modo);\r\n\t}\r\n\tEliminarDivision=(k,modo)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valordivision=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalordivision = parseInt(this.FuncionDivision(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalordivision = this.FuncionDivision(k);\r\n\t\t}\r\n\t\tif(modo==\"Lineal\"){\r\n\t\t\tlet valordivision = this.FuncionDivision(k);\r\n\t\t\tlet eliminado=false;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(eliminado==false){\r\n\t\t\t\tif(this.arrreglo[valordivision]==k){\r\n\t\t\t\t\tthis.arrreglo[valordivision]=-1;\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\tvalordivision = this.FuncionAcomodarLineal(valordivision);\r\n\t\t\t} \r\n\t\t}else if(modo==\"Cuadratica\"){\r\n\t\t\tlet valordivision = this.FuncionDivision(k);\r\n\t\t\tlet contador=1;\r\n\t\t\tlet eliminado=false;\r\n\t\t\tlet nuevovalor=valordivision;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(eliminado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarCuadratica(valordivision,contador);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}else if(modo==\"Doble\"){\r\n\t\t\tlet esono = typeof k;\r\n\t\t\tconsole.log(typeof k);\r\n\t\t\tlet h2=0;\r\n\t\t\tif(esono==\"string\"){\r\n\t\t\t\th2 = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\th2 = this.FuncionSimple(parseInt(k));\r\n\t\t\t}\r\n\t\t\tlet eliminado=false;\r\n\t\t\tlet contador=1;\r\n\t\t\tlet i=0;\r\n\t\t\tlet nuevovalor=valordivision;\r\n\t\t\twhile(eliminado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarDoble(valordivision,contador,h2);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Division\",modo);\r\n\t}\r\n\tEliminarMultiplicacion=(k,modo)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valormultiplicacion=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalormultiplicacion = parseInt(this.FuncionMultiplicacion(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t}\r\n\t\tif(modo==\"Lineal\"){\r\n\t\t\tlet valormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t\tlet eliminado=false;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(eliminado==false){\r\n\t\t\t\tif(this.arrreglo[valormultiplicacion]==k){\r\n\t\t\t\t\tthis.arrreglo[valormultiplicacion]=-1;\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\tvalormultiplicacion = this.FuncionAcomodarLineal(valormultiplicacion);\r\n\t\t\t} \r\n\t\t}else if(modo==\"Cuadratica\"){\r\n\t\t\tlet valormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t\tlet contador=1;\r\n\t\t\tlet eliminado=false;\r\n\t\t\tlet nuevovalor=valormultiplicacion;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(eliminado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarCuadratica(valormultiplicacion,contador);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}else if(modo==\"Doble\"){\r\n\t\t\tlet valormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t\tlet eliminado=false;\r\n\t\t\tlet contador=1;\r\n\t\t\tlet i=0;\r\n\t\t\tlet nuevovalor=valormultiplicacion;\r\n\t\t\twhile(eliminado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarDoble(valormultiplicacion,contador,valormultiplicacion);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\",modo);\r\n\t}\r\n\r\n\tBuscar=(k,modo)=>{\r\n\t\tlet indice=-1;\r\n\t\tlet segundoindice=0;\r\n\t\tlet esono = typeof k;\r\n\t\tlet valorsimple=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalorsimple = this.FuncionSimple(k);\r\n\t\t}\r\n\t\tif(modo==\"Lineal\"){\r\n\t\t\tlet encontrado=false;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(encontrado==false){\r\n\t\t\t\tif(this.arrreglo[valorsimple]==k){\r\n\t\t\t\t\tindice=valorsimple;\r\n\t\t\t\t\tencontrado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\tencontrado=true;\r\n\t\t\t\t}\r\n\t\t\t\tvalorsimple = this.FuncionAcomodarLineal(valorsimple);\r\n\t\t\t}\r\n\t\t}else if(modo==\"Cuadratica\"){\r\n\t\t\tlet contador=1;\r\n\t\t\tlet encontrado=false;\r\n\t\t\tlet nuevovalor=valorsimple;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(encontrado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tindice=nuevovalor;\r\n\t\t\t\t\tencontrado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\tencontrado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarCuadratica(valorsimple,contador);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}else if(modo==\"Doble\"){\r\n\t\t\tlet encontrado=false;\r\n\t\t\tlet contador=1;\r\n\t\t\tlet i=0;\r\n\t\t\tlet nuevovalor=valorsimple;\r\n\t\t\twhile(encontrado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tindice=nuevovalor;\r\n\t\t\t\t\tencontrado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\tencontrado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarDoble(valorsimple,contador,valorsimple);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\",modo);\r\n\t\treturn indice;\r\n\t}\r\n\tActualizar=(k,nuevo,modo,tipo)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valorsimple=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalorsimple = this.FuncionSimple(k);\r\n\t\t}\r\n\t\tif(modo==\"Lineal\"){\r\n\t\t\tlet actualizado=false;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(actualizado==false){\r\n\t\t\t\tif(this.arrreglo[valorsimple]==k){\r\n\t\t\t\t\tif(tipo==\"Simple\"){\r\n\t\t\t\t\t\tthis.arrreglo[valorsimple]=-1;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tthis.InsertarSimple(nuevo,modo);\r\n\t\t\t\t\t}else if(tipo==\"Division\"){\r\n\t\t\t\t\t\tthis.arrreglo[valorsimple]=-1;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tthis.InsertarDivision(nuevo,modo);\r\n\t\t\t\t\t}else if(tipo==\"Multiplicacion\"){\r\n\t\t\t\t\t\tthis.arrreglo[valorsimple]=-1;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tthis.InsertarMultiplicacion(nuevo,modo);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactualizado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\tactualizado=true;\r\n\t\t\t\t}\r\n\t\t\t\tvalorsimple = this.FuncionAcomodarLineal(valorsimple);\r\n\t\t\t} \r\n\t\t}else if(modo==\"Cuadratica\"){\r\n\t\t\tlet contador=1;\r\n\t\t\tlet actualizado=false;\r\n\t\t\tlet nuevovalor=valorsimple;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(actualizado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tif(tipo==\"Simple\"){\r\n\t\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tthis.InsertarSimple(nuevo,modo);\r\n\t\t\t\t\t}else if(tipo==\"Division\"){\r\n\t\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tthis.InsertarDivision(nuevo,modo);\r\n\t\t\t\t\t}else if(tipo==\"Multiplicacion\"){\r\n\t\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tthis.InsertarMultiplicacion(nuevo,modo);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactualizado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\tactualizado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarCuadratica(valorsimple,contador);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}else if(modo==\"Doble\"){\r\n\t\t\tlet actualizado=false;\r\n\t\t\tlet contador=1;\r\n\t\t\tlet i=0;\r\n\t\t\tlet nuevovalor=valorsimple;\r\n\t\t\twhile(actualizado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tif(tipo==\"Simple\"){\r\n\t\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tthis.InsertarSimple(nuevo,modo);\r\n\t\t\t\t\t}else if(tipo==\"Division\"){\r\n\t\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tthis.InsertarDivision(nuevo,modo);\r\n\t\t\t\t\t}else if(tipo==\"Multiplicacion\"){\r\n\t\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tthis.InsertarMultiplicacion(nuevo,modo);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactualizado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\tactualizado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarDoble(valorsimple,contador,valorsimple);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\",modo);\r\n\t}\r\n\tsetDataSet = () => { // Esto Genera los nodos de Vis.\r\n\t\tvar dotNode = [];\r\n\t\tvar dotEdges = [];\r\n\t\tlet contador = 0\r\n\t\tfor(let i=0;i<this.get_sizearreglo();i++){\r\n\t\t\tdotNode.push({id:i, label: \"/\", level:0});\r\n\t\t\tif(i+1<this.arrreglo.length){\r\n\t\t\t\tdotEdges.push({from:i, to:i+1, arrows: \"to\"});\r\n\t\t\t}\r\n\t\t\tcontador++;\r\n\t\t}\r\n\t\tconsole.log(contador);\r\n\t\tfor(let i=0;i<this.get_sizearreglo();i++){\r\n\t\t\tif(this.arrreglo[i]!=-1){\r\n\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i];\r\n\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:1});\r\n\t\t\t\t\tdotEdges.push({from:i, to:contador, arrows: \"to\"});\r\n\t\t\t\t\tcontador++\r\n\t\t\t}\r\n\t\t}\r\n\r\n        return [dotNode,dotEdges];\r\n\r\n    } \r\n    setDataSetBuscar=(dato)=>{\r\n    \tvar dotNode = [];\r\n\t\tvar dotEdges = [];\r\n\t\tlet contador = 0\r\n\t\tfor(let i=0;i<this.get_sizearreglo();i++){\r\n\t\t\tdotNode.push({id:i, label: \"/\", level:0});\r\n\t\t\tif(i+1<this.arrreglo.length){\r\n\t\t\t\tdotEdges.push({from:i, to:i+1, arrows: \"to\"});\r\n\t\t\t}\r\n\t\t\tcontador++;\r\n\t\t}\r\n\t\tconsole.log(contador);\r\n\t\tfor(let i=0;i<this.get_sizearreglo();i++){\r\n\t\t\tif(this.arrreglo[i]!=-1){\r\n\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i];\r\n\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:1});\r\n\t\t\t\t\tdotEdges.push({from:i, to:contador, arrows: \"to\"});\r\n\t\t\t\t\tconsole.log(\"Entro Aqui\");\r\n\t\t\t\t\tif(dato==this.arrreglo[i]){\r\n\t\t\t\t\t\tconsole.log(\"Entro Aqui 2\");\r\n\t\t\t\t\t\tdotEdges.push({from: contador, to: contador, value:contador,color:{color:'#ff383f'}});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontador++\r\n\t\t\t}\r\n\t\t}\r\n\r\n        return [dotNode,dotEdges];\r\n    }\r\n\r\n}\r\n\r\nexport default HashCerrada;","class Nodo{\r\n\r\n\tconstructor(){\r\n\t\tthis.principal = null; // Hace Referencia a la primero Estructura.\r\n\t\tthis.secundaria = null; // Hace Referencia a la segunda Estructura.\r\n\t}\r\n\r\n\tgetPrincipal = () => { return this.principal; }\r\n\tsetPrincipal = (principal) => { this.principal = principal; }\r\n\tgetSecundaria = () => { return this.secundaria; }\r\n\tsetSecundaria = (secundaria) => { this.secundaria = secundaria}\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport EstructuraCompuesta from './Modelo/Compuesta/EstructuraCompuesta/Compuesta.js'; // Importar la Estructura Lista Simple.\r\nvar filePath;\r\nvar compuesta = new EstructuraCompuesta(); // Instancia de la compuesta.\r\nvar data, data2;\r\nvar options, options2;\r\nclass Compuesta extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\tdato1: '',\r\n\t\t\tdato2: '',\r\n\t\t\testructura1: '',\r\n\t\t\testructura2: '',\r\n\t\t\tupdate1: '',\r\n\t\t\tupdate2: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t\tthis.network2 = {};\r\n\t  \tthis.appRef = createRef();\r\n\t  \tthis.appRef2 = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\tcomponentDidMount2() {\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\t\r\n\t\tcompuesta.insertar(this.state.estructura1, this.state.estructura2, this.state.dato1, this.state.dato2);\r\n\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar data ={\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\r\n\t\tvar options = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#F2FF9D',\r\n\t\t            border:  '#df77e7',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\tvar data2 ={\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\r\n\t\tvar options2 = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#ffffff',\r\n\t\t            border:  '#ffef50',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t\r\n\t\t\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tcompuesta.eliminar(this.state.estructura1, this.state.estructura2, this.state.dato1, this.state.dato2);\r\n\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar data ={\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\r\n\t\tvar options = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#F2FF9D',\r\n\t\t            border:  '#df77e7',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\tvar data2 ={\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\r\n\t\tvar options2 = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#ffffff',\r\n\t\t            border:  '#ffef50',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tcompuesta.update(this.state.estructura1, this.state.estructura2, this.state.dato1, this.state.dato2, this.state.update1, this.state.update2);\r\n\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar data ={\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\r\n\t\tvar options = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#F2FF9D',\r\n\t\t            border:  '#df77e7',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\tvar data2 ={\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\r\n\t\tvar options2 = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#ffffff',\r\n\t\t            border:  '#ffef50',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tvar {nodo1, nodo2} = compuesta.search(this.state.estructura1, this.state.estructura2, this.state.dato1, this.state.dato2)\r\n\t\tconsole.log(\"pero bueno\")\r\n\t\tconsole.log(String(nodo1)+\"->\"+String(nodo2))\r\n\t\tif (0 <= parseInt(nodo1) || 0 <= parseInt(nodo2)){\r\n\t\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\t\tvar data ={\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\r\n\t\t\tvar options = {\r\n\t\t\t\tphysics: {\r\n\t\t\t\t\tstabilization: false,\r\n\t\t\t\t\tbarnesHut: {\r\n\t\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tnodes:{\r\n\t\t\t        borderWidth: 20,\r\n\t\t\t        color: {\r\n\t\t\t            background: '#F2FF9D',\r\n\t\t\t            border:  '#df77e7',\r\n\t\t\t            highlight: {\r\n\t\t\t                border: '#00F3B8',\r\n\t\t\t                background: '#FF1F00'\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\r\n\t\t\tvar data2 ={\r\n\t\t\t\tnodes: getNodes2,\r\n\t\t\t\tedges: getEdges2\r\n\t\t\t}\r\n\r\n\t\t\tvar options2 = {\r\n\t\t\t\tphysics: {\r\n\t\t\t\t\tstabilization: false,\r\n\t\t\t\t\tbarnesHut: {\r\n\t\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tnodes:{\r\n\t\t\t        borderWidth: 20,\r\n\t\t\t        color: {\r\n\t\t\t            background: '#ffffff',\r\n\t\t\t            border:  '#ffef50',\r\n\t\t\t            highlight: {\r\n\t\t\t                border: '#00F3B8',\r\n\t\t\t                background: '#FF1F00'\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tgetEdges.add({from: parseInt(nodo1), to: parseInt(nodo1), value:parseInt(nodo1),color:{color:'#ff383f'}});\r\n\t\t\tgetEdges2.add({from: parseInt(nodo2), to: parseInt(nodo2), value:parseInt(nodo2),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\t\tvar data ={\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\r\n\t\t\tvar options = {\r\n\t\t\t\tphysics: {\r\n\t\t\t\t\tstabilization: false,\r\n\t\t\t\t\tbarnesHut: {\r\n\t\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tnodes:{\r\n\t\t\t        borderWidth: 20,\r\n\t\t\t        color: {\r\n\t\t\t            background: '#F2FF9D',\r\n\t\t\t            border:  '#df77e7',\r\n\t\t\t            highlight: {\r\n\t\t\t                border: '#00F3B8',\r\n\t\t\t                background: '#FF1F00'\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\r\n\t\t\tvar data2 ={\r\n\t\t\t\tnodes: getNodes2,\r\n\t\t\t\tedges: getEdges2\r\n\t\t\t}\r\n\r\n\t\t\tvar options2 = {\r\n\t\t\t\tphysics: {\r\n\t\t\t\t\tstabilization: false,\r\n\t\t\t\t\tbarnesHut: {\r\n\t\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tnodes:{\r\n\t\t\t        borderWidth: 20,\r\n\t\t\t        color: {\r\n\t\t\t            background: '#ffffff',\r\n\t\t\t            border:  '#ffef50',\r\n\t\t\t            highlight: {\r\n\t\t\t                border: '#00F3B8',\r\n\t\t\t                background: '#FF1F00'\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\t\r\n\r\n\r\n\t\t}\r\n\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\r\n\thandleAddTop = () => {\r\n\t\tcompuesta.insertar_inicio(this.state.estructura1, this.state.estructura2, this.state.dato1, this.state.dato2);\r\n\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar data ={\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\r\n\t\tvar options = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#F2FF9D',\r\n\t\t            border:  '#df77e7',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\tvar data2 ={\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\r\n\t\tvar options2 = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#ffffff',\r\n\t\t            border:  '#ffef50',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t\t\r\n\t}\r\n\thandleAddLower = () => {\r\n\t\tcompuesta.insertar_ultimo(this.state.estructura1, this.state.estructura2, this.state.dato1, this.state.dato2);\r\n\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar data ={\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\r\n\t\tvar options = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#F2FF9D',\r\n\t\t            border:  '#df77e7',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\tvar data2 ={\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\r\n\t\tvar options2 = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#ffffff',\r\n\t\t            border:  '#ffef50',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Compuesta\"){\r\n\t\t\tdataJson.valores.forEach(element =>{\t\t\r\n\t\t\t\tconsole.log(element.principal + \"->\"+element.secundario)\r\n\t\t\t\tcompuesta.insertar(this.state.estructura1, this.state.estructura2, String(element.principal), String(element.secundario));\r\n\t\t\t});\r\n\r\n\r\n\t\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\t\tvar data ={\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\r\n\t\t\tvar options = {\r\n\t\t\t\tphysics: {\r\n\t\t\t\t\tstabilization: false,\r\n\t\t\t\t\tbarnesHut: {\r\n\t\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tnodes:{\r\n\t\t\t        borderWidth: 20,\r\n\t\t\t        color: {\r\n\t\t\t            background: '#F2FF9D',\r\n\t\t\t            border:  '#df77e7',\r\n\t\t\t            highlight: {\r\n\t\t\t                border: '#00F3B8',\r\n\t\t\t                background: '#FF1F00'\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\r\n\t\t\tvar data2 ={\r\n\t\t\t\tnodes: getNodes2,\r\n\t\t\t\tedges: getEdges2\r\n\t\t\t}\r\n\r\n\t\t\tvar options2 = {\r\n\t\t\t\tphysics: {\r\n\t\t\t\t\tstabilization: false,\r\n\t\t\t\t\tbarnesHut: {\r\n\t\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tnodes:{\r\n\t\t\t        borderWidth: 20,\r\n\t\t\t        color: {\r\n\t\t\t            background: '#ffffff',\r\n\t\t\t            border:  '#ffef50',\r\n\t\t\t            highlight: {\r\n\t\t\t                border: '#00F3B8',\r\n\t\t\t                background: '#FF1F00'\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\t\t// compuesta.generateJSON(compuesta)\r\n\t\tconsole.log(\"Guardar :c\")\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"estructura1\" className=\"form-control\" placeholder=\"Estructura 1\" id=\"InputCola\" value={this.state.estructura1} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato1\" className=\"form-control\" placeholder=\"Dato 1\" id=\"InputCola\" value={this.state.dato1} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<input type=\"text\" name=\"update1\" className=\"form-control\" placeholder=\"Update 1\" id=\"InputCola\" value={this.state.update1} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"estructura2\" className=\"form-control\" placeholder=\"Estructura 2\" id=\"InputCola\" value={this.state.estructura2} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato2\" className=\"form-control\" placeholder=\"Dato 2\" id=\"InputCola\" value={this.state.dato2} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<input type=\"text\" name=\"update2\" className=\"form-control\" placeholder=\"Update 2\" id=\"InputCola\" value={this.state.update2} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<div style={{height: 20 + 'em'}} ref={this.appRef} />\r\n\t\t\t<div style={{height: 20 + 'em'}} ref={this.appRef2} />\r\n\t\t\t{/*<tr>\r\n\t\t\t\t<td><div style={{height: 30 + 'em'}} ref={this.appRef} /></td>\r\n\t\t\t\t<td><div style={{height: 30 + 'em'}} ref={this.appRef2} /></td>\r\n\t\t\t</tr>*/}\r\n\t\t\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default Compuesta;","import ListaSimple from '../../Lineales/ListaSimple/ListaSimple'; \r\nimport ListaDoble from '../../Lineales/ListaDoble/ListaDoble';\r\nimport ListaCircular from '../../Lineales/ListaCircular/ListaCircular';\r\nimport ListaCircularDoble from '../../Lineales/ListaCircularDoble/ListaCDE';\r\nimport Pila from '../../Lineales/Pila/Stack';\r\nimport Cola from '../../Lineales/Cola/EstructuraCola';\r\nimport Nodo from './Nodo.js';\r\n\r\n\r\nclass Compuesta{\r\n\tconstructor(){\r\n\t\tthis.estructuraPrimaria = null;\r\n\t\tthis.estructuraSecundaria = null;\r\n\t\tthis.primaria = null;\r\n\t\tthis.secundaria = null;\r\n\t\tthis.lista = [];\r\n\t}\r\n\r\n\r\n\tinsertar = (primaria, secundaria, dato1, dato2) => {\r\n\t\tif (this.getPrimaria() == null && this.getSecundaria() == null){ // Aca crea una instancia de la estructura\r\n\t\t\tthis.setPrimaria(primaria);\r\n\t\t\tthis.setSecundaria(secundaria);\r\n\t\t\tthis.creatorPrimaria();\r\n\t\t\tthis.creatorSecundaria();\r\n\t\t}\r\n\t\tif(this.getPrimaria()!=null && this.getPrimaria()!= primaria){\r\n\t\t\tthis.setPrimaria(primaria);\r\n\t\t\tthis.creatorPrimaria();\r\n\t\t\tthis.getLista().forEach(element => {\r\n\t\t\t\tif (element.getPrincipal()!=null){\r\n\t\t\t\t\telement.setPrincipal(null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(this.getSecundaria()!=null && this.getSecundaria()!= secundaria){\r\n\t\t\tthis.setSecundaria(secundaria);\r\n\t\t\tthis.creatorSecundaria();\r\n\t\t\tthis.getLista().forEach(element => {\r\n\t\t\t\tif (element.getSecundaria()!=null){\r\n\t\t\t\t\telement.setSecundaria(null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t\tlet nodo_principal = this.getEstructuraPrimaria().search(dato1); // Busca el dato1\r\n\t\tlet nodo_secundario = this.getEstructuraPrimaria().search(dato2); // Buscael dato2\r\n\r\n\t\tlet nodo_nuevo = new Nodo(); // Se crea un nuevo Nodo.\r\n\r\n\t\tif(nodo_principal != false){ // Si es diferente de null es por que existe un dato\r\n\t\t\tnodo_nuevo.setPrincipal(dato1);\r\n\t\t\tthis.getLista().forEach(element => { //Busca en la lista si existe el dato.\r\n\t\t\t\tif(dato1 == element.getPrincipal()){\r\n\t\t\t\t\tif(nodo_secundario != false){\r\n\t\t\t\t\tnodo_nuevo.setSecundaria(dato2);\r\n\t\t\t\t\tthis.getEstructuraSecundaria().insertar(dato2);\r\n\t\t\t\t\tthis.lista.push(nodo_nuevo)\r\n\t\t\t\t\tconsole.log(\"Dato 1: \"+dato1+\" - Ya Existe.\\nDato 2: \"+dato2+\" - No Existe\")\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.log('Datos ya agregados')\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}) \r\n\t\t}else{\r\n\r\n\t\t\tif(nodo_secundario != false){\r\n\t\t\t\tthis.getLista().forEach(element => {\r\n\t\t\t\tnodo_nuevo.setSecundaria(dato2);\r\n\t\t\t\tif(dato2 == element.getSecundaria()){\r\n\t\t\t\t\tif(nodo_secundario != false){\r\n\t\t\t\t\tnodo_nuevo.setPrincipal(dato1);\r\n\t\t\t\t\tthis.getEstructuraPrimaria().insertar(dato1);\r\n\t\t\t\t\tthis.lista.push(nodo_nuevo)\r\n\t\t\t\t\tconsole.log(\"Dato 1: \"+dato1+\" - No Existe.\\nDato 2: \"+dato2+\" - Ya Existe\")\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.log(\"Datos ya agregados\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}); \r\n\t\t\t}else{\r\n\r\n\t\t\tthis.getEstructuraPrimaria().insertar(dato1);\r\n\t\t\tthis.getEstructuraSecundaria().insertar(dato2);\r\n\r\n\t\t\tnodo_nuevo.setPrincipal(dato1);\r\n\t\t\tnodo_nuevo.setSecundaria(dato2);\r\n\t\t\tthis.lista.push(nodo_nuevo);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\teliminar = (primaria, secundaria, dato1, dato2) => {\r\n\r\n\t\tif (this.getPrimaria() == null && this.getSecundaria() == null){\r\n\t\t\talert(\"INGRESA AMBAS ESTRUCTURAS\");\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\tif(this.getPrimaria() == \"Pila\"){\r\n\t\tthis.getEstructuraPrimaria().pop();\r\n\t\t}else if(this.getPrimaria() == \"Cola\"){\r\n\t\tthis.getEstructuraPrimaria().Desencolar();\r\n\t\t}else{\r\n\t\tthis.getEstructuraPrimaria().eliminar(dato1);\r\n\t\t}\r\n\r\n\t\tif(this.getSecundaria() == \"Pila\"){\r\n\t\t\tthis.getEstructuraSecundaria().pop();\r\n\t\t}else if(this.getSecundaria() == \"Cola\"){\r\n\t\t\tthis.getEstructuraSecundaria().Desencolar();\r\n\t\t}else{\r\n\t\tthis.getEstructuraSecundaria().eliminar(dato2);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tsearch = (primaria, secundaria, dato1, dato2) => {\r\n\r\n\t\tif (this.getPrimaria() == null && this.getSecundaria() == null){\r\n\t\t\talert(\"INGRESA AMBAS ESTRUCTURAS\");\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\tlet valor1 = this.getEstructuraPrimaria().search(dato1)\r\n\t\tlet valor2 = this.getEstructuraSecundaria().search(dato2)\r\n\r\n\t\tconsole.log('search')\r\n\t\tconsole.log(String(valor1)+\"-\"+String(valor2))\r\n\t\treturn {\r\n\t\t\tnodo1: valor1,\r\n\t\t\tnodo2: valor2\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate = (primaria, secundaria, dato1, dato2, update1, update2) =>{\r\n\r\n\r\n\t\tif (this.getPrimaria() == null && this.getSecundaria() == null){\r\n\t\t\talert(\"INGRESA AMBAS ESTRUCTURAS\");\r\n\t\t\treturn null\r\n\t\t}\r\n\t\tlet valor1 = this.getEstructuraPrimaria().search(dato1);\r\n\t\tlet valor2 = this.getEstructuraSecundaria().search(dato2);\r\n\r\n\t\tif (valor1!=null){ this.getEstructuraPrimaria().update(dato1, update1); }\r\n\r\n\t\tif(valor2!=null){ this.getEstructuraSecundaria().update(dato2, update2); }\r\n\r\n\t}\r\n\r\n\tinsertar_inicio = (primaria, secundaria, dato1, dato2) => {\r\n\t\tif (this.getPrimaria() == null && this.getSecundaria() == null){\r\n\t\t\talert(\"INGRESA AMBAS ESTRUCTURAS\");\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\t\r\n\t\t\r\n\t\tif (this.getPrimaria() != \"Pila\" && this.getPrimaria() != \"Cola\"){\r\n\t\t\tlet valor1 = this.getEstructuraPrimaria().search(dato1);\r\n\t\t\tif (valor1==false){\r\n\t\t\t\tthis.getEstructuraPrimaria().insertar_inicio(dato1)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.getSecundaria() != \"Pila\" && this.getSecundaria() != \"Cola\"){\r\n\t\t\tlet valor2 = this.getEstructuraSecundaria().search(dato2);\r\n\t\t\tif (valor2==false){\r\n\t\t\t\tthis.getEstructuraSecundaria().insertar_inicio(dato2)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tinsertar_ultimo = (primaria, secundaria, dato1, dato2) => {\r\n\r\n\t\tif (this.getPrimaria() == null && this.getSecundaria() == null){\r\n\t\t\talert(\"INGRESA AMBAS ESTRUCTURAS\");\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\r\n\t\tif (this.getPrimaria() != \"Pila\" && this.getPrimaria() != \"Cola\"){\r\n\t\tlet valor1 = this.getEstructuraPrimaria().search(dato1);\r\n\t\t\tif (valor1==false){\r\n\t\t\t\tthis.getEstructuraPrimaria().insertar_ultimo(dato1)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.getSecundaria() != \"Pila\" && this.getSecundaria() != \"Cola\"){\r\n\t\tlet valor2 = this.getEstructuraSecundaria().search(dato2);\r\n\t\t\tif (valor2==false){\r\n\t\t\t\tthis.getEstructuraSecundaria().insertar_ultimo(dato2)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcreatorPrimaria = () => {\r\n\t\tif(this.primaria == \"Lista Simple\"){ \r\n\t\t\tthis.estructuraPrimaria = new ListaSimple(); \r\n\t\t}else if(this.primaria == \"Lista Doble\"){ \r\n\t\t\t\tthis.estructuraPrimaria = new ListaDoble(); \r\n\t\t}else if(this.primaria == \"Lista Circular\"){ \r\n\t\t\t\tthis.estructuraPrimaria = new ListaCircular(); \r\n\t\t}else if(this.primaria == \"Lista Circular Doble\"){ \r\n\t\t\t\tthis.estructuraPrimaria = new ListaCircularDoble(); \r\n\t\t}else if(this.primaria == \"Pila\"){ \r\n\t\t\t\tthis.estructuraPrimaria = new Pila(); \r\n\t\t}else if(this.primaria == \"Cola\"){ \r\n\t\t\t\tthis.estructuraPrimaria = new Cola(); \r\n\t\t}\r\n\t}\r\n\tcreatorSecundaria = () =>{\r\n\t\tif(this.secundaria == \"Lista Simple\"){ \r\n\t\t\tthis.estructuraSecundaria = new ListaSimple(); \r\n\t\t}else if(this.secundaria == \"Lista Doble\"){ \r\n\t\t\tthis.estructuraSecundaria = new ListaDoble(); \r\n\t\t}else if(this.secundaria == \"Lista Circular\"){ \r\n\t\t\tthis.estructuraSecundaria = new ListaCircular(); \r\n\t\t}else if(this.secundaria == \"Lista Circular Doble\"){ \r\n\t\t\tthis.estructuraSecundaria = new ListaCircularDoble(); \r\n\t\t}else if(this.secundaria == \"Pila\"){ \r\n\t\t\tthis.estructuraSecundaria = new Pila(); \r\n\t\t}else if(this.secundaria == \"Cola\"){ \r\n\t\t\tthis.estructuraSecundaria = new Cola(); \r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\r\n\r\n\tgetEstructuraPrimaria = () => { return this.estructuraPrimaria; }\r\n\tsetEstructuraPrimaria = (primaria) => { this.estructuraPrimaria = primaria; }\r\n\t\r\n\tgetEstructuraSecundaria = () => { return this.estructuraSecundaria; }\r\n\tsetEstructuraSecundaria = (secundaria) => { this.estructuraSecundaria = secundaria }\r\n\r\n\tgetLista = () => { return this.lista; }\r\n\r\n\tgetPrimaria = () => { return this.primaria; }\r\n\tsetPrimaria = (primaria) => { this.primaria = primaria}  \r\n\tgetSecundaria = () => { return this.secundaria; }\r\n\tsetSecundaria = (secundaria) => { this.secundaria = secundaria; }\r\n}\r\n\r\n\r\nexport default Compuesta;\r\n// module.exports = Compuesta;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport EncodeHamming from './Modelo/Codificacion/Hamming/Hamming.js'; // Importar la Estructura Lista Simple.\r\nvar encodeHamming = new EncodeHamming(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(encodeHamming.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(encodeHamming.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 400,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 20,\r\n        shape: \"box\",\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#00e53f',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    },\r\n    layout:{\r\n\t\thierarchical: {\r\n\t\t  direction: \"UD\",\r\n\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass Hamming extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttext: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst encodeText = this.state.fileContent;\r\n\t\tconsole.log(encodeText)\r\n\t\t\t\t\r\n\t\tencodeHamming.encode(encodeText)\r\n\t\tgetNodes = new DataSet(encodeHamming.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(encodeHamming.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\r\n\t\r\n\t}\r\n\r\n\thandleEncode = () => {\r\n\t\tif(this.state.text!=\"\"){\r\n\t\t\tencodeHamming.encode(this.state.text)\r\n\t\t\tgetNodes = new DataSet(encodeHamming.setNodesDataSet());\r\n\t\t\t\tgetEdges = new DataSet(encodeHamming.setEdgesDataSet());\r\n\t\t\t\tdata = {\r\n\t\t\t\t\tnodes: getNodes,\r\n\t\t\t\t\tedges: getEdges\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\t}else{\r\n\t\t\talert(\"Debes de ingresar un numero Binario.\")\r\n\t\t}\r\n\t\t\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleEncode()}>Codificar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default Hamming;","class Hamming{\r\n\r\n\tconstructor(){\r\n\t\tthis.listaDatos =[];\r\n\t\tthis.tabla = [];\r\n\t\tthis.filaEncode = [];\r\n\t\tthis.resultado = []; //Est es una cadena.\r\n\t\tthis.nivel = 1;\r\n\t}\r\n\r\n\tencode = (text) => { // Inicio de codificacion\r\n\t\tvar size  = text.length; //Obteniendo el tamaño del binario.\r\n\r\n\t\tvar i = 0;\r\n\t\twhile(i<size){\r\n\t\t\tthis.listaDatos.push(text.charAt(i)); // Se descompone la variable y se guarda.\r\n\t\t\ti++;\r\n\t\t}\r\n\t\t\r\n\t\ti = 0;\r\n\t\tvar tempSize = 1;\r\n\t\tthis.tabla.push({id:\"Datos:\", dato:null, Nivel:parseInt(this.nivel)});\r\n\t\tthis.resultado.push({id:\"Resultado:\", dato:null, Nivel:parseInt(this.nivel)});\r\n\t\twhile(i<size){\t\r\n\t\t\tif(this.potencia(i+1)==(i+1)){\r\n\t\t\t\tthis.tabla.push({id:\"p\"+String(i+1), dato:null, Nivel:parseInt(this.nivel)});\r\n\t\t\t\tthis.resultado.push({id:\"p\"+String(i+1), dato:null, Nivel:parseInt(this.nivel)});\r\n\t\t\t\tsize++;\t\r\n\t\t\t}else{\r\n\t\t\t\tthis.tabla.push({id:\"d\"+String(tempSize), dato:this.listaDatos[tempSize-1], Nivel:parseInt(this.nivel)});\r\n\t\t\t\tthis.resultado.push({id:\"d\"+String(tempSize), dato:this.listaDatos[tempSize-1], Nivel:parseInt(this.nivel)});\r\n\t\t\t\ttempSize++;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\t\t\r\n\t\tthis.nivel ++;\r\n\r\n\t\tvar sizeFila = 0;\r\n\t\t// ----------------------------------------------\r\n\t\t// INICIA LA CODIFICACION DE FILAS DE p1, p2, etc.\r\n\t\t// ----------------------------------------------\r\n\t\tthis.tabla.forEach(element => { \r\n\t\t\tif(element.id.charAt(0)==\"p\"){\r\n\t\t\t\tthis.filaEncode.push({id:\"P\"+element.id.charAt(1), dato:null, Nivel:this.nivel});\r\n\t\t\t\tlet aux = this.llenarTabla(size, element.id.charAt(1), this.nivel);\r\n\t\t\t\tthis.update(element.id, aux, this.nivel)\r\n\t\t\t\tthis.nivel++;\r\n\t\t\t} \r\n\t\t});\r\n\r\n\t\tvar tempResultado;\r\n\t\ti = 0;\r\n\t\twhile(i<this.resultado.length){\r\n\t\t\tvar j = 0;\r\n\t\t\twhile(j<this.filaEncode.length){\r\n\t\t\t\tif(this.resultado[i].id == this.filaEncode[j].id && this.filaEncode[j].dato != null){\r\n\t\t\t\t\tthis.resultado[i].dato = this.filaEncode[j].dato \r\n\t\t\t\t\tthis.resultado[i].Nivel = this.nivel\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.resultado[i].id == \"Resultado:\"){\r\n\t\t\t\t\tthis.resultado[i].Nivel = this.nivel\r\n\t\t\t\t}\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\tllenarTabla = (size, saltos, nivel) =>{\r\n\t\tvar i = 1;\r\n\t\tvar valor = null;\r\n\t\tvar estado = true;\r\n\t\tvar moverse = 0;\r\n\t\tconsole.log(\"Cantidad: \"+size+\" Move: \"+saltos+\" Nivel: \"+nivel)\r\n\t\twhile(i<=size){\r\n\t\t\tlet temp = this.search(i);\r\n\t\t\tif(saltos<=i){\r\n\t\t\t\tif(moverse<saltos && estado == true){\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(temp.id.charAt(0)==\"p\"){\r\n\t\t\t\t\t\tthis.filaEncode.push({id:temp.id, dato:null, Nivel:parseInt(nivel)});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(valor == null){\r\n\t\t\t\t\t\t\tvalor = temp.dato;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// ----------------------------------------------\r\n\t\t\t\t\t\t\t// SE COMPARA EL VALOR CON EL ID EN LA TABLA XOR.\r\n\t\t\t\t\t\t\t// ----------------------------------------------\r\n\t\t\t\t\t\t\tif(temp.dato == 1 && valor == 1){ valor = 0; }\r\n\t\t\t\t\t\t\telse if(temp.dato == 1 && valor == 0){ valor = 1; }\r\n\t\t\t\t\t\t\telse if(temp.dato == 0 && valor == 1){ valor = 1; }\r\n\t\t\t\t\t\t\telse if(temp.dato == 0 && valor == 0){ valor = 0;  }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.filaEncode.push({id:temp.id, dato:temp.dato, Nivel:parseInt(nivel)});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmoverse++;\r\n\t\t\t\t\tif(moverse==saltos){\r\n\t\t\t\t\t\testado=false\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tmoverse--;\r\n\t\t\t\t\tif(moverse==0){\r\n\t\t\t\t\t\testado=true;\t\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\testado=false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.filaEncode.push({id:temp.id, dato:null, Nivel:parseInt(nivel)});\r\n\t\t\t\t}\t\r\n\t\t\t}else{\r\n\t\t\t\tthis.filaEncode.push({id:temp.id, dato:null, Nivel:parseInt(nivel)});\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\r\n\t\treturn valor;\r\n\t}\r\n\r\n\r\n\tsearch = (posicion) =>{\r\n\t\tvar i = 0;\r\n\t\tvar aux = null;\r\n\t\twhile(i<this.tabla.length){\r\n\t\t\taux = this.tabla[i]\r\n\t\t\tif(posicion==i){\r\n\t\t\t\treturn aux\r\n\t\t\t}\t\t\r\n\t\t\ti++;\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\tupdate = (id, cambio, nivel) => {\r\n\t\tvar i = 0;\r\n\t\tvar aux = null;\r\n\t\twhile(i<this.filaEncode.length){\r\n\t\t\tif(this.filaEncode[i].id==id && this.filaEncode[i].Nivel == nivel){\r\n\t\t\t\tthis.filaEncode[i].dato=String(cambio);\r\n\t\t\t}\t\t\r\n\t\t\ti++;\r\n\t\t}\r\n\t\treturn false\r\n\r\n\t}\r\n\r\n\tpotencia = (size) => {\r\n\t\tvar i = 0 ;\r\n\t\twhile(i<size){\r\n\t\t\tif(2**i == size){\r\n\t\t\t\treturn 2**i\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\r\n\t setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        var i = 0;\r\n        var nodoId = 0;\r\n        while(i<this.tabla.length){\r\n        \tdot.push({id:nodoId, label:String(this.tabla[i].id), level:this.tabla[i].Nivel});\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n       \ti = 0;\r\n        while(i<this.filaEncode.length){\r\n        \tif(this.filaEncode[i].id.charAt(0)==\"P\"){\r\n        \t\tdot.push({id:nodoId, label:this.filaEncode[i].id, level:this.filaEncode[i].Nivel});\r\n        \t}else{\r\n\t        \tif(this.filaEncode[i].dato == null){\r\n\t        \t\tdot.push({id:nodoId, label:\" \", level:this.filaEncode[i].Nivel});\r\n\t        \t\r\n\t        \t}else{\r\n\t        \t\tdot.push({id:nodoId, label:String(this.filaEncode[i].dato), level:this.filaEncode[i].Nivel});\r\n\t        \t}\r\n\t        }\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n        i = 0;\r\n        while(i<this.resultado.length){\r\n        \tif(this.resultado[i].id == \"Resultado:\"){\r\n        \t\tdot.push({id:nodoId, label:String(this.resultado[i].id), level:this.resultado[i].Nivel});\r\n        \t}else{\r\n        \t\tdot.push({id:nodoId, label:String(this.resultado[i].dato), level:this.resultado[i].Nivel});\r\n        \t}\r\n        \t\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n        return dot;\r\n\r\n    }\r\n\r\n    getNodeDataSet = (lista, id, nivel) => {\r\n    \tvar i = 0\r\n    \tvar nodoId = 0;\r\n    \twhile(i<this.tabla.length){\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n       \ti = 0;\r\n        while(i<this.filaEncode.length){\r\n        \t\r\n        \tif(lista[i].id == id && lista[i].Nivel == nivel){\r\n        \t\treturn nodoId;\r\n        \t}\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n\r\n        i = 0;\r\n        while(i<this.resultado.length){\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n\r\n    \treturn false\r\n    } \r\n\r\n\r\n    setEdgesDataSet = () => {\r\n    \tvar i = 0\r\n    \tvar dot = [];\r\n    \tvar nodoId = 0;\r\n    \twhile(i<this.tabla.length){\r\n        \tif(this.tabla[i+1]!=null){\r\n        \t\tdot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n        \t}\r\n        \tlet temp = this.getNodeDataSet(this.filaEncode, this.tabla[i].id, this.tabla[i].Nivel+1)\r\n        \tif(temp!=null){\r\n        \t\tdot.push({from:nodoId, to:temp, arrows: \"to\"});\r\n        \t}\r\n        \t\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n       \ti = 0;\r\n        while(i<this.filaEncode.length){\r\n        \tif(this.filaEncode[i+1]!=null && this.filaEncode[i].Nivel == this.filaEncode[i+1].Nivel){\r\n        \t\tdot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n        \t}\r\n        \tlet temp = this.getNodeDataSet(this.filaEncode, this.filaEncode[i].id, this.filaEncode[i].Nivel+1)\r\n        \tif(temp!=null){\r\n        \t\tdot.push({from:nodoId, to:temp, arrows: \"to\"});\r\n        \t}\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n        i = 0;\r\n        while(i<this.resultado.length){\r\n        \tif(this.resultado[i+1]!=null && this.resultado[i].Nivel == this.resultado[i+1].Nivel){\r\n        \t\tdot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n        \t\t\r\n        \t}\r\n        \tlet temp = this.getNodeDataSet(this.filaEncode, this.resultado[i].id, this.resultado[i].Nivel-1)\t\r\n        \tif(temp!=null){\r\n        \t\tdot.push({from:temp, to:nodoId, arrows: \"to\"});\r\n        \t}\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n        \r\n\r\n        \r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\nexport default Hamming;\r\n// module.exports = Hamming;","class Grafo{\r\n\tconstructor(){\r\n\t\tthis.comienzo=null;\r\n\t\tthis.fin=null;\r\n\t\tthis.vertices=[];\r\n\t\tthis.matriz=[];\r\n\t\tthis.lista=[];\r\n\t}\r\n\tset_comienzo=(dato)=>{\r\n\t\tthis.comienzo=dato;\r\n\t}\r\n\tset_fin=(dato)=>{\r\n\t\tthis.fin=dato;\r\n\t}\r\n\tget_comienzo=()=>{ return this.comienzo;}\r\n\tget_fin=()=>{ return this.fin;}\r\n\tAgregarArista=(inicio,fin,distancia)=>{\r\n\t\tlet indice=this.Buscar(inicio);\r\n\t\tif(indice!=-1){\r\n\t\t\tthis.vertices[indice][1].push([fin,distancia]);\r\n\t\t}\r\n\t}\r\n\tInsertar=(dato,aristas)=>{\r\n\t\tthis.vertices.push([dato,aristas]);\r\n\t}\r\n\tActualizar=(datoviejo,datonuevo,aristasnuevas)=>{\r\n\t\tlet indice= this.Buscar(datoviejo);\r\n\t\tthis.vertices[indice]=[datonuevo,[]];\r\n\t}\r\n\tBuscar=(dato)=>{\r\n\t\tlet indice=-1;\r\n\t\tfor(let i=0; i<this.vertices.length; i++){\r\n\t\t\tif(this.vertices[i][0]==dato){\r\n\t\t\t\tindice=i;\r\n\t\t\t\treturn indice;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn indice;\r\n\t}\r\n\tEliminar=(dato)=>{\r\n\t\tfor(let i=0; i<this.vertices.length; i++){\r\n\t\t\tif(this.vertices[i][0]==dato){\r\n\t\t\t\tthis.vertices.splice(i,1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tgetDataSetNoDirigido=()=>{\r\n\t\tlet dotNode=[];\r\n\t\tlet dotEdges=[];\r\n\t\tconsole.log(this.vertices);\r\n\t\tfor(let i=0; i<this.vertices.length;i++){\r\n\t\t\tlet etiqueta=\"\"+ this.vertices[i][0];\r\n\t\t\tdotNode.push({id:i, label: etiqueta});\r\n\t\t\tif(this.vertices[i][1].length!=0){\r\n\t\t\t\tfor(let j=0; j<this.vertices[i][1].length; j++){\r\n\t\t\t\t\tlet indice=-1;\r\n\t\t\t\t\tindice = this.Buscar(this.vertices[i][1][j][0]);\r\n\t\t\t\t\tif(indice!=-1){\r\n\t\t\t\t\t\tlet label= \"\" + this.vertices[i][1][j][1];\r\n\t\t\t\t\t\tdotEdges.push({from:i, to:indice, label: label});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [dotNode,dotEdges];\r\n\t}\r\n\tgetDataSetDirigido=()=>{\r\n\t\tlet dotNode=[];\r\n\t\tlet dotEdges=[];\r\n\t\tconsole.log(this.vertices);\r\n\t\tfor(let i=0; i<this.vertices.length;i++){\r\n\t\t\tlet etiqueta=\"\"+ this.vertices[i][0];\r\n\t\t\tdotNode.push({id:i, label: etiqueta});\r\n\t\t\tif(this.vertices[i][1].length!=0){\r\n\t\t\t\tfor(let j=0; j<this.vertices[i][1].length; j++){\r\n\t\t\t\t\tlet indice=-1;\r\n\t\t\t\t\tindice = this.Buscar(this.vertices[i][1][j][0]);\r\n\t\t\t\t\tif(indice!=-1){\r\n\t\t\t\t\t\tlet label= \"\"+this.vertices[i][1][j][1];\r\n\t\t\t\t\t\tdotEdges.push({from:i, to:indice, label: label, arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t}\r\n\t\treturn [dotNode,dotEdges];\r\n\t}\r\n\tGenerarMatriz=()=>{\r\n\t\tfor(let i=0; i<this.vertices.length; i++){\r\n\t\t\tlet ingreso=[];\r\n\t\t\tfor(let j=0; j<this.vertices.length; j++){\r\n\t\t\t\tingreso.push(0);\r\n\t\t\t}\r\n\t\t\tthis.matriz.push(ingreso);\r\n\t\t}\r\n\t\tfor(let i=0; i<this.vertices.length; i++){\r\n\t\t\tif(this.vertices[i][1].length!=0){\r\n\t\t\t\tfor(let j=0; j<this.vertices[i][1].length;j++){\r\n\t\t\t\t\tlet indice = 0;\r\n\t\t\t\t\tindice = this.Buscar(this.vertices[i][1][j][0]);\r\n\t\t\t\t\tthis.matriz[i][indice]=1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tgetDataSetMatriz=()=>{\r\n\t\tthis.GenerarMatriz();\r\n\t\tlet dotNode=[];\r\n\t\tlet dotEdges=[];\r\n\t\tlet contador=0;\r\n\t\tfor(let i=0; i<this.vertices.length;i++){\r\n\t\t\tfor(let j=0; j<this.vertices.length;j++){\r\n\t\t\t\tlet etiqueta = \"\" + this.matriz[i][j];\r\n\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:i});\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(let j=0; j<this.vertices.length;j++){\r\n\t\t\tlet aux=0+j;\r\n\t\t\tfor(let i=0; i<this.vertices.length;i++){\r\n\t\t\t\tif((i+1)<this.vertices.length){\r\n\t\t\t\t\tdotEdges.push({from:aux, to: aux+this.vertices.length, color:{ opacity: 0.1 }})\r\n\t\t\t\t}\r\n\t\t\t\taux=aux+this.vertices.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [dotNode, dotEdges];\r\n\t}\r\n\tgetDataSetLista=()=>{\r\n\t\tlet dotNode=[];\r\n\t\tlet dotEdges=[];\r\n\t\tlet contador=0;\r\n\t\tfor(let i=0; i<this.vertices.length;i++){\r\n\t\t\tlet etiqueta=\"\"+ this.vertices[i][0];\r\n\t\t\tdotNode.push({id:contador, label: etiqueta, level:i});\r\n\t\t\tif((i+1)<this.vertices.length){\r\n\t\t\t\tdotEdges.push({from:contador, to: contador+1, color:{ opacity: 0.3 }});\r\n\t\t\t}\r\n\t\t\tcontador++;\r\n\t\t}\r\n\t\tfor(let i=0;i<this.vertices.length;i++){\r\n\t\t\tif(this.vertices[i][1].length!=0){\r\n\t\t\t\tfor(let j=0; j<this.vertices[i][1].length; j++){\r\n\t\t\t\t\tif(j==0){\r\n\t\t\t\t\t\tlet etiqueta=\"\"+ this.vertices[i][1][j][0];\r\n\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:i});\r\n\t\t\t\t\t\tdotEdges.push({from:i, to: contador, arrows: \"to\"});\r\n\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlet etiqueta=\"\"+ this.vertices[i][1][j][0];\r\n\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:i});\r\n\t\t\t\t\t\tdotEdges.push({from:contador-1, to: contador, arrows: \"to\"});\r\n\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [dotNode,dotEdges];\r\n\t}\r\n\tRecorridoProfundidad=()=>{\r\n\t\tlet ordencorrecto=[];\r\n\t\tlet indice = -1;\r\n\t\tlet auxiliar=[];\r\n\t\tindice = this.Buscar(this.comienzo);\r\n\t\tdo{\r\n\t\t\t\r\n\t\t\tauxiliar.push(this.vertices[indice][0]);\r\n\t\t\tordencorrecto.push(auxiliar.shift());\r\n\t\t\tfor(let i=this.vertices[indice][1].length; i<0; i--){\r\n\t\t\t\tauxiliar.shift(this.vertices[indice][1][i][0]);\r\n\t\t\t}\r\n\t\t\t//indice\r\n\r\n\t\t}while(auxiliar!=[])\r\n\t}\r\n}\r\nexport default Grafo;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport Grafo from './Modelo/NoLineal/Grafo'; // Importar la Estructura Lista Simple.\r\nvar grafo = new Grafo();\r\nvar getNodes = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar getNodes2 = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges2 = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar data2 = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar options = {\r\n\tnodes:{\r\n\t\tshape: \"box\",\r\n    \tmargin: 10,\r\n    \twidthConstraint: {\r\n    \t  maximum: 300,\r\n    \t},\r\n        borderWidth: 30,\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"UD\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n};\r\nvar options2 = {\r\n\tnodes:{\r\n\t\tshape: \"box\",\r\n    \tmargin: 10,\r\n    \twidthConstraint: {\r\n    \t  maximum: 300,\r\n    \t},\r\n        borderWidth: 30,\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"UD\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass GrafoProfundidad extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topcion: 'No Dirigido',\r\n\t\t\torigen: '',\r\n\t\t\tdonde: '',\r\n\t\t\tdistancia: '',\r\n\t\t\tinicio: '',\r\n\t\t\tfin: '',\r\n\t\t\tbuscar: '',\r\n\t\t\ttext: '',\r\n\t\t\tactualizar: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\t//this.tablahash;\r\n\t  \tthis.network = {};\r\n\t\tthis.network2 = {};\r\n\t  \tthis.appRef = createRef();\r\n\t  \tthis.appRef2 = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\tcomponentDidMount2() {\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleAgregarArista=()=>{\r\n\t\tgrafo.AgregarArista(this.state.origen,this.state.donde,this.state.distancia);\r\n\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleRecorrer=()=>{\r\n\r\n\t}\r\n\thandleBusqueda=()=>{\r\n\r\n\t}\r\n\r\n\thandleAdd = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(esentero==true){\r\n\t\t\tgrafo.Insertar(parseInt(this.state.text),[]);\r\n\t\t}else{\r\n\t\t\tgrafo.Insertar(this.state.text,[]);\r\n\t\t}\r\n\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleLista=()=>{\r\n\t\tgetNodes2 = new DataSet(grafo.getDataSetLista()[0]);\r\n\t\tgetEdges2 = new DataSet(grafo.getDataSetLista()[1]);\r\n\t\tdata2 = {\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\thandleMatriz=()=>{\r\n\t\tgetNodes2 = new DataSet(grafo.getDataSetMatriz()[0]);\r\n\t\tgetEdges2 = new DataSet(grafo.getDataSetMatriz()[1]);\r\n\t\tdata2 = {\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(esentero==true){\r\n\t\t\tgrafo.Eliminar(parseInt(this.state.text));\r\n\t\t}else{\r\n\t\t\tgrafo.Eliminar(this.state.text);\r\n\t\t}\r\n\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tgrafo.Actualizar(this.state.text,this.state.actualizar);\r\n\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet indice=grafo.Buscar(this.state.text);\r\n\t\tif(indice!=-1){\r\n\t\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(indice), to: parseInt(indice),color:{color:'#ff383f'}});\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\t\tlet paraarreglo=[]\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\t//let nombre = \"Estructura Compuesta\";\r\n\t\tif (dataJson.categoria == \"Estructura No Lineal\"){\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tlet aristas=[];\r\n\t\t\t\tif(dataJson.valores[i].aristas.length!=0){\r\n\t\t\t\t\tfor(let j=0; j<dataJson.valores[i].aristas.length; j++){\r\n\t\t\t\t\t\tconsole.log(\"Aqui1 \"+dataJson.valores[i].aristas[j].arista);\r\n\t\t\t\t\t\tconsole.log(\"Aqui2 \"+dataJson.valores[i].aristas[j].distancia);\r\n\t\t\t\t\t\tlet aux1=dataJson.valores[i].aristas[j].arista;\r\n\t\t\t\t\t\tlet aux2=dataJson.valores[i].aristas[j].distancia;\r\n\t\t\t\t\t\taristas.push([aux1,aux2]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tgrafo.Insertar(dataJson.valores[i].vertice,aristas);\r\n\t\t\t}\r\n\t\t\tif(dataJson.nombre==\"Grafo Dirigido\"){\r\n\t\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t\t}else{\r\n\t\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t\t}\r\n\t\t\tif(dataJson.almacenamiento==\"Matriz\"){\r\n\t\t\t\tgetNodes2 = new DataSet(grafo.getDataSetMatriz()[0]);\r\n\t\t\t\tgetEdges2 = new DataSet(grafo.getDataSetMatriz()[1]);\r\n\t\t\t}else{\r\n\t\t\t\tgetNodes2 = new DataSet(grafo.getDataSetLista()[0]);\r\n\t\t\t\tgetEdges2 = new DataSet(grafo.getDataSetLista()[1]);\r\n\t\t\t}\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tdata2 = {\r\n\t\t\t\tnodes: getNodes2,\r\n\t\t\t\tedges: getEdges2\r\n\t\t\t}\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA COMPUESTA O DE COLUMN MAJOR!! \")\r\n\t\t}\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\r\n\t\t//listaSimple.generateJSON(listaSimple)\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"minimo\" name=\"origen\" className=\"form-control\" placeholder=\"Ingresar Origen\" id=\"InputFilas\" value={this.state.origen} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"maximo\" name=\"donde\" className=\"form-control\" placeholder=\"Ingresar Hacia Donde\" id=\"InputColumnas\" value={this.state.donde} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"maximo\" name=\"distancia\" className=\"form-control\" placeholder=\"Ingresar Distancia\" id=\"InputColumnas\" value={this.state.distancia} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAgregarArista()}>Agregar Arista</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleLista()}>Generar Lista</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"actualizar\" className=\"form-control\" placeholder=\"Ingresar Dato a Actualizar\" id=\"InputCola\" value={this.state.actualizar} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<select type=\"opcion\" name=\"opcion\" className=\"form-select\" onChange={this.handleInputChange}>\r\n        \t\t\t\t<option value=\"No Dirigido\">No Dirigido</option>\r\n        \t\t\t\t<option value=\"Dirigido\">Dirigido</option>\r\n      \t\t\t\t</select>\r\n      \t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleMatriz()}>Generar Matriz</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Vertice</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar Vertice</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Vertice</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleUpdate()} >Actualizar Vertice</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleRecorrer()}>Recorrer</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"inicio\" className=\"form-control\" placeholder=\"Ingresar Inicio\" id=\"InputCola\" value={this.state.inicio} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"fin\" className=\"form-control\" placeholder=\"Ingresar Fin\" id=\"InputCola\" value={this.state.fin} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"buscar\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.buscar} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleBusqueda()}>Busqueda</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 30 + 'em'}} ref={this.appRef2} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default GrafoProfundidad;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport Grafo from './Modelo/NoLineal/Grafo'; // Importar la Estructura Lista Simple.\r\nvar grafo = new Grafo();\r\nvar getNodes = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar getNodes2 = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges2 = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar data2 = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar options = {\r\n\tnodes:{\r\n\t\tshape: \"box\",\r\n    \tmargin: 10,\r\n    \twidthConstraint: {\r\n    \t  maximum: 300,\r\n    \t},\r\n        borderWidth: 30,\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"UD\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n};\r\nvar options2 = {\r\n\tnodes:{\r\n\t\tshape: \"box\",\r\n    \tmargin: 10,\r\n    \twidthConstraint: {\r\n    \t  maximum: 300,\r\n    \t},\r\n        borderWidth: 30,\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"UD\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass GrafoAnchura extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topcion: 'No Dirigido',\r\n\t\t\torigen: '',\r\n\t\t\tdonde: '',\r\n\t\t\tdistancia: '',\r\n\t\t\tinicio: '',\r\n\t\t\tfin: '',\r\n\t\t\tbuscar: '',\r\n\t\t\ttext: '',\r\n\t\t\tactualizar: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\t//this.tablahash;\r\n\t  \tthis.network = {};\r\n\t\tthis.network2 = {};\r\n\t  \tthis.appRef = createRef();\r\n\t  \tthis.appRef2 = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\tcomponentDidMount2() {\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleAgregarArista=()=>{\r\n\t\tgrafo.AgregarArista(this.state.origen,this.state.donde,this.state.distancia);\r\n\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleRecorrer=()=>{\r\n\r\n\t}\r\n\thandleBusqueda=()=>{\r\n\r\n\t}\r\n\r\n\thandleAdd = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(esentero==true){\r\n\t\t\tgrafo.Insertar(parseInt(this.state.text),[]);\r\n\t\t}else{\r\n\t\t\tgrafo.Insertar(this.state.text,[]);\r\n\t\t}\r\n\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleLista=()=>{\r\n\t\tgetNodes2 = new DataSet(grafo.getDataSetLista()[0]);\r\n\t\tgetEdges2 = new DataSet(grafo.getDataSetLista()[1]);\r\n\t\tdata2 = {\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\thandleMatriz=()=>{\r\n\t\tgetNodes2 = new DataSet(grafo.getDataSetMatriz()[0]);\r\n\t\tgetEdges2 = new DataSet(grafo.getDataSetMatriz()[1]);\r\n\t\tdata2 = {\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(esentero==true){\r\n\t\t\tgrafo.Eliminar(parseInt(this.state.text));\r\n\t\t}else{\r\n\t\t\tgrafo.Eliminar(this.state.text);\r\n\t\t}\r\n\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tgrafo.Actualizar(this.state.text,this.state.actualizar);\r\n\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet indice=grafo.Buscar(this.state.text);\r\n\t\tif(indice!=-1){\r\n\t\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(indice), to: parseInt(indice),color:{color:'#ff383f'}});\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\t\tlet paraarreglo=[]\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\t//let nombre = \"Estructura Compuesta\";\r\n\t\tif (dataJson.categoria == \"Estructura No Lineal\"){\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tlet aristas=[];\r\n\t\t\t\tif(dataJson.valores[i].aristas.length!=0){\r\n\t\t\t\t\tfor(let j=0; j<dataJson.valores[i].aristas.length; j++){\r\n\t\t\t\t\t\tconsole.log(\"Aqui1 \"+dataJson.valores[i].aristas[j].arista);\r\n\t\t\t\t\t\tconsole.log(\"Aqui2 \"+dataJson.valores[i].aristas[j].distancia);\r\n\t\t\t\t\t\tlet aux1=dataJson.valores[i].aristas[j].arista;\r\n\t\t\t\t\t\tlet aux2=dataJson.valores[i].aristas[j].distancia;\r\n\t\t\t\t\t\taristas.push([aux1,aux2]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tgrafo.Insertar(dataJson.valores[i].vertice,aristas);\r\n\t\t\t}\r\n\t\t\tif(dataJson.nombre==\"Grafo Dirigido\"){\r\n\t\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t\t}else{\r\n\t\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t\t}\r\n\t\t\tif(dataJson.almacenamiento==\"Matriz\"){\r\n\t\t\t\tgetNodes2 = new DataSet(grafo.getDataSetMatriz()[0]);\r\n\t\t\t\tgetEdges2 = new DataSet(grafo.getDataSetMatriz()[1]);\r\n\t\t\t}else{\r\n\t\t\t\tgetNodes2 = new DataSet(grafo.getDataSetLista()[0]);\r\n\t\t\t\tgetEdges2 = new DataSet(grafo.getDataSetLista()[1]);\r\n\t\t\t}\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tdata2 = {\r\n\t\t\t\tnodes: getNodes2,\r\n\t\t\t\tedges: getEdges2\r\n\t\t\t}\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA COMPUESTA O DE COLUMN MAJOR!! \")\r\n\t\t}\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\r\n\t\t//listaSimple.generateJSON(listaSimple)\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"minimo\" name=\"origen\" className=\"form-control\" placeholder=\"Ingresar Origen\" id=\"InputFilas\" value={this.state.origen} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"maximo\" name=\"donde\" className=\"form-control\" placeholder=\"Ingresar Hacia Donde\" id=\"InputColumnas\" value={this.state.donde} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"maximo\" name=\"distancia\" className=\"form-control\" placeholder=\"Ingresar Distancia\" id=\"InputColumnas\" value={this.state.distancia} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAgregarArista()}>Agregar Arista</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleLista()}>Generar Lista</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"actualizar\" className=\"form-control\" placeholder=\"Ingresar Dato a Actualizar\" id=\"InputCola\" value={this.state.actualizar} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<select type=\"opcion\" name=\"opcion\" className=\"form-select\" onChange={this.handleInputChange}>\r\n        \t\t\t\t<option value=\"No Dirigido\">No Dirigido</option>\r\n        \t\t\t\t<option value=\"Dirigido\">Dirigido</option>\r\n      \t\t\t\t</select>\r\n      \t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleMatriz()}>Generar Matriz</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Vertice</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar Vertice</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Vertice</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleUpdate()} >Actualizar Vertice</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleRecorrer()}>Recorrer</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"inicio\" className=\"form-control\" placeholder=\"Ingresar Inicio\" id=\"InputCola\" value={this.state.inicio} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"fin\" className=\"form-control\" placeholder=\"Ingresar Fin\" id=\"InputCola\" value={this.state.fin} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"buscar\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.buscar} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleBusqueda()}>Busqueda</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 30 + 'em'}} ref={this.appRef2} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default GrafoAnchura;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Navbar from './Componentes/Navbar';\r\nimport Home from './Componentes/Paginas/Home';\r\nimport ListaSE from './Componentes/Paginas/ListaSE';\r\nimport ListaDE from './Componentes/Paginas/ListaDE';\r\nimport ListaCSE from './Componentes/Paginas/ListaCSE';\r\nimport ListaCDE from './Componentes/Paginas/ListaCDE';\r\nimport Pila from './Componentes/Paginas/Pila';\r\nimport Cola from './Componentes/Paginas/Cola';\r\nimport ColaPrioridad from './Componentes/Paginas/ColaPrioridad';\r\nimport Burbuja from './Componentes/Paginas/Burbuja';\r\nimport Seleccion from './Componentes/Paginas/Seleccion';\r\nimport Insercion from './Componentes/Paginas/Insercion';\r\nimport Rapido from './Componentes/Paginas/Rapido';\r\nimport AVL from './Componentes/Paginas/AVL';\r\nimport ArbolB from './Componentes/Paginas/Arbolb';\r\nimport ArbolBPlus from './Componentes/Paginas/Arbolbplus';\r\nimport ArbolMerkle from './Componentes/Paginas/Arbolmerkle';\r\nimport MatrizColumnMajor from './Componentes/Paginas/ColumnMajor';\r\nimport MatrizRowMajor from './Componentes/Paginas/RowMajor';\r\nimport MatrizDispersa from './Componentes/Paginas/MatrizDispersa';\r\nimport TablaHashAbierta from './Componentes/Paginas/HashAbierta';\r\nimport TablaHashCerrada from './Componentes/Paginas/HashCerrada';\r\nimport Compuesta from './Componentes/Paginas/Compuesta'\r\nimport Hamming from './Componentes/Paginas/Hamming.js';\r\nimport GrafoProfundidad from './Componentes/Paginas/GrafoProfundidad';\r\nimport GrafoAnchura from './Componentes/Paginas/GrafoAnchura';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path='/GrafoAnchura' exact component={GrafoAnchura} />\r\n        <Route path='/GrafoProfundidad' exact component={GrafoProfundidad} />\r\n        <Route path='/' exact component={Home} />\r\n        <Route path='/HashAbierta' exact component={TablaHashAbierta} />\r\n        <Route path='/HashCerrada' exact component={TablaHashCerrada} />\r\n        <Route path='/ColumnMajor' exact component={MatrizColumnMajor} />\r\n        <Route path='/RowMajor' exact component={MatrizRowMajor} />\r\n        <Route path='/Listasimplementeenlazada' component={ListaSE} />\r\n        <Route path='/Listadoblementeenlazada' component={ListaDE} />\r\n        <Route path='/Listacircularsimplementeenlazada' component={ListaCSE} />\r\n        <Route path='/Listacirculardoblementeenlazada' component={ListaCDE} />\r\n        <Route path='/Pila' component={Pila} />\r\n        <Route path='/Cola' component={Cola} />\r\n        <Route path='/Colaprioridad' component={ColaPrioridad} />\r\n        <Route path='/Burbuja' component={Burbuja} />\r\n        <Route path='/Seleccion' component={Seleccion} />\r\n        <Route path='/Insercion' component={Insercion} />\r\n        <Route path='/Rapido' component={Rapido} />\r\n        <Route path='/AVL' component={AVL} />\r\n        <Route path='/Arbolb' component={ArbolB} />\r\n        <Route path='/Arbolbplus' component={ArbolBPlus} />\r\n        <Route path='/Arbolmerkle' component={ArbolMerkle} />\r\n        <Route path='/MatrizDispersa' component={MatrizDispersa} />\r\n        <Route path='/Compuesta' component={Compuesta} />\r\n        <Route path='/Hamming' component={Hamming} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}