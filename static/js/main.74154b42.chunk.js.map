{"version":3,"sources":["Componentes/MenuItemsLineales.js","Componentes/MenuItemsOrdenamientos.js","Componentes/MenuItemsArboreas.js","Componentes/MenuItemsCompuesta.js","Componentes/MenuItemsNoLineales.js","Componentes/MenuItemsCodificacion.js","Componentes/Navbar.js","Componentes/Paginas/Home.js","Componentes/Paginas/Modelo/Lineales/ListaSimple/Nodo.js","Componentes/Paginas/Modelo/Lineales/ListaSimple/ListaSimple.js","Componentes/Paginas/ListaSE.js","Componentes/Paginas/Modelo/Lineales/ListaDoble/Nodo.js","Componentes/Paginas/Modelo/Lineales/ListaDoble/ListaDoble.js","Componentes/Paginas/ListaDE.js","Componentes/Paginas/Modelo/Lineales/ListaCircular/Nodo.js","Componentes/Paginas/Modelo/Lineales/ListaCircular/ListaCircular.js","Componentes/Paginas/ListaCSE.js","Componentes/Paginas/Modelo/Lineales/ListaCircularDoble/Nodo.js","Componentes/Paginas/Modelo/Lineales/ListaCircularDoble/ListaCDE.js","Componentes/Paginas/ListaCDE.js","Componentes/Paginas/Modelo/Lineales/Pila/Nodo.js","Componentes/Paginas/Modelo/Lineales/Pila/Stack.js","Componentes/Paginas/Pila.js","Componentes/Paginas/Modelo/Lineales/Cola/Nodo.js","Componentes/Paginas/Modelo/Lineales/Cola/EstructuraCola.js","Componentes/Paginas/Cola.js","Componentes/Paginas/Modelo/Lineales/ColaPrioridad/Nodo.js","Componentes/Paginas/ColaPrioridad.js","Componentes/Paginas/Modelo/Lineales/ColaPrioridad/ColaPrioridad.js","Componentes/Paginas/Burbuja.js","Componentes/Paginas/Modelo/Ordenamientos/OrBurbuja.js","Componentes/Paginas/Seleccion.js","Componentes/Paginas/Modelo/Ordenamientos/OrSeleccion.js","Componentes/Paginas/Insercion.js","Componentes/Paginas/Modelo/Ordenamientos/OrInsercion.js","Componentes/Paginas/Rapido.js","Componentes/Paginas/AVL.js","Componentes/Paginas/Arbolb.js","Componentes/Paginas/Arbolbplus.js","Componentes/Paginas/Arbolmerkle.js","Componentes/Paginas/Modelo/Compuesta/Major/RowColumnMajor.js","Componentes/Paginas/ColumnMajor.js","Componentes/Paginas/RowMajor.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/ListaCabeceraFilas.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/ListaCabeceraColumnas.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/ListaHorizontal.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/NodoCabeceraFila.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/ListaVertical.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/NodoCabeceraColumna.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/NodoOrtogonal.js","Componentes/Paginas/MatrizDispersa.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/MatrizOrtogonal.js","Componentes/Paginas/HashAbierta.js","Componentes/Paginas/Modelo/NoLineal/HashAbierta.js","Componentes/Paginas/HashCerrada.js","Componentes/Paginas/Modelo/NoLineal/HashCerrada.js","Componentes/Paginas/Modelo/Compuesta/EstructuraCompuesta/Nodo.js","Componentes/Paginas/Compuesta.js","Componentes/Paginas/Modelo/Compuesta/EstructuraCompuesta/Compuesta.js","Componentes/Paginas/Hamming.js","Componentes/Paginas/Modelo/Codificacion/Hamming/Hamming.js","Componentes/Paginas/Modelo/NoLineal/Grafo.js","Componentes/Paginas/GrafoProfundidad.js","Componentes/Paginas/GrafoAnchura.js","Componentes/Paginas/Feistel.js","Componentes/Paginas/Modelo/Codificacion/Feistel/Feistel.js","Componentes/Paginas/LZW.js","Componentes/Paginas/Modelo/Codificacion/LZW/LZW.js","App.js","reportWebVitals.js","index.js"],"names":["MenuItemsLineales","title","path","cName","MenuItemsOrdenamientos","MenuItemsArboreas","MenuItemsCompuesta","MenuItemsNoLineales","MenuItemsCodificacion","Navbar","useState","setClick","className","href","id","data-bs-toggle","role","aria-haspopup","aria-expanded","map","item","index","to","onClick","Home","scope","Nodo","dato","this","siguiente","ListaSimple","cabeza","insertar","nodo_nuevo","get_vacia","set_cabeza","set_ultimo","get_ultimo","set_siguiente","insertar_inicio","get_cabeza","insertar_ultimo","eliminar","console","log","nodo_actual","get_siguiente","anterior","get_dato","update","cambio","set_dato","search","i","mostrar","setNodesDataSet","dot","push","label","setEdgesDataSet","nodoUno","parseInt","nodoDos","from","arrows","generateJSON","dic","toString","valores","dictstring","JSON","stringify","ultimo","listaSimple","getNodes","DataSet","getEdges","data","nodes","edge","options","physics","stabilization","barnesHut","springLength","borderWidth","color","background","border","highlight","ListaSE","props","handleFileChange","e","file","target","files","reader","FileReader","readAsText","onload","setState","fileName","name","fileContent","result","handleAdd","state","text","edges","network","Network","appRef","current","handleDelete","handleUpdate","dato_actualizado","handleAddTop","handleAddLower","handleSearch","add","value","handleOpenFile","dataJson","parse","categoria","nombre","length","alert","handleSaveFile","element","document","createElement","contenido","blob","Blob","URL","createObjectURL","download","body","appendChild","click","createRef","handleInputChange","bind","style","marginLeft","type","placeholder","onChange","class","min","max","step","defaultValue","height","ref","Component","ListaDoble","vacia","set_primero","set_anterior","get_primero","temp","get_anterior","print","primero","listaDoble","ListaDE","ListaCircular","size","listaCircular","ListaCSE","ListaCircularDE","valor","aux","Imprimir","etiqueta","listacde","ListaCDE","Stack","empty","pop","pila","Pila","nuevonodo","EstructuraCola","nodo","Desencolar","get_valor","set_valor","nodoactual","nodosiguiente","estructuracola","nodos","flechas","datos","Cola","AgregarDato","agregar","EliminarDato","ActualizarDato","BuscarDato","valoreliminar","valorbuscar","rango","prioridad","colaprioridad","Encolar","set_prioridad","salir","get_prioridad","Buscar","GenerarNodosDOT","GenerarEdgesDOT","ColaPrioridad","burbuja","array","ordenamiento_burbuja","j","Burbuja","handleOrdenamiento","marginRight","seleccion","ordenamiento_seleccion","Seleccion","insercion","ordenamiento_insercion","Insercion","Rapido","setRango","AVL","ArbolB","ArbolBPlus","ArbolMerkle","Major","matriz","arrreglo","get_i","set_i","get_j","set_j","InicializarMatriz","filas","columnas","auxfila","InsertarDato","ConvertirRowMajor","ConvertirColumnMajor","BuscarDatoRowMajor","fila","columna","indice","BuscarDatoColumnMajor","setData","dotNode","dotEdges","setDataNodes","contador","level","opacity","generateJSONRowMajor","json","esentero","entero","isNaN","generateJSONColumnMajor","columnmajor","getNodes2","getEdges2","data2","shape","margin","widthConstraint","maximum","layout","hierarchical","direction","sortMethod","options2","MatrizColumnMajor","handleGenerate","filaingresar","columnaingresar","handleGenerar","appRef2","m","indices","opcion","tamanio","network2","rowmajor","MatrizRowMajor","ListaCabeceraFilas","nodoNuevo","setPrimero","setUltimo","getY","getPrimero","insertarInicio","getUltimo","insertarFinal","insertarMedio","setAnterior","setSiguiente","tmp1","tmp2","getSiguiente","getAnterior","delete","y","tmp","busqueda","ListaCabeceraColumnas","getX","x","ListaHorizontal","setIzquierda","setDerecha","getDerecha","getIzquierda","getDato","NodoCabeceraFila","antertior","ListaVertical","setArriba","setAbajo","getAbajo","getArriba","NodoCabeceraColumna","NodoOrtogonal","setDato","arriba","abajo","izquierda","derecha","matrizDispersa","getColumna","getFila","nodo_cabecera","getData","estado","String","getNodesDataSet","tempContador","auxNodoUno","auxNodoDos","desactivarEncabezado","setColumna","setFila","MatrizDispersa","textX","textY","posicionX","posicionY","forEach","posicion","handleCabecera","tablahash","insertados","ConvertirString","cadena","charCodeAt","ConvertirArreglo","arreglo","nuevoarreglo","InicializarArreglo","get_m","Capacidad","raro","get_sizearreglo","set_m","set_min","get_min","set_max","get_max","get_numarreglo","linea","FuncionDivision","k","FuncionSimple","reducido","retorno","Math","round","FuncionMultiplicacion","Rehashing","tipo","m_anterior","esono","InsertarDivision","InsertarMultiplicacion","InsertarSimple","valordivision","valorsimple","valormultiplicacion","EliminarSimple","auxarreglo","splice","EliminarDivision","EliminarMultiplicacion","BuscarSimple","segundoindice","BuscarDivision","BuscarMultiplicacion","Actualizar","nuevo","setDataSet","setDataSetBuscar","indicei","indicej","funcion","TablaHashAbierta","minimo","maximo","esentero2","entero2","FuncionAcomodarLineal","FuncionAcomodarCuadratica","FuncionAcomodarDoble","h1","h2","modo","nuevovalor","eliminado","encontrado","actualizado","prueba","TablaHashCerrada","getPrincipal","principal","setPrincipal","getSecundaria","secundaria","setSecundaria","compuesta","primaria","dato1","dato2","getPrimaria","setPrimaria","creatorPrimaria","creatorSecundaria","getLista","getEstructuraPrimaria","getEstructuraSecundaria","lista","valor1","valor2","nodo1","nodo2","update1","update2","estructuraPrimaria","ListaCircularDoble","estructuraSecundaria","setEstructuraPrimaria","setEstructuraSecundaria","Compuesta","estructura1","estructura2","secundario","encodeHamming","encode","listaDatos","charAt","tempSize","tabla","Nivel","nivel","resultado","potencia","filaEncode","llenarTabla","saltos","moverse","nodoId","getNodeDataSet","Hamming","encodeText","handleEncode","Grafo","set_comienzo","comienzo","set_fin","fin","get_comienzo","get_fin","AgregarArista","inicio","distancia","vertices","Insertar","aristas","datoviejo","datonuevo","aristasnuevas","Eliminar","getDataSetNoDirigido","getDataSetDirigido","GenerarMatriz","ingreso","getDataSetMatriz","getDataSetLista","RecorridoProfundidad","ordencorrecto","auxiliar","shift","generateJSONMatriz","dirigido","generateJSONFila","grafo","GrafoProfundidad","handleAgregarArista","origen","donde","handleRecorrer","handleBusqueda","handleLista","handleMatriz","actualizar","arista","aux1","aux2","vertice","almacenamiento","handleSaveFileMatriz","handleSaveFileLista","buscar","GrafoAnchura","encodeFeistel","texto","key","ciclo","binario","toBinario","concatenar","toASCII","left","right","n","r","shiftCircular","c","l","floor","reverse","join","Feistel","encodeLZW","kw","split","tokens","tk_id","ascii","token","salida","w","wK","searchDic","fromCharCode","resultadoDecode","palabbra","diccionario","regresoFrase","LZW","handleDecode","decode","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"uKAAaA,EAAoB,CAChC,CACCC,MAAM,6BACNC,KAAK,4BACLC,MAAM,iBAEP,CACCF,MAAM,4BACNC,KAAK,2BACLC,MAAM,iBAEP,CACCF,MAAM,sCACNC,KAAK,oCACLC,MAAM,iBAEP,CACCF,MAAM,qCACNC,KAAK,mCACLC,MAAM,iBAEP,CACCF,MAAM,OACNC,KAAK,QACLC,MAAM,iBAEP,CACCF,MAAM,OACNC,KAAK,QACLC,MAAM,iBAEP,CACCF,MAAM,oBACNC,KAAK,iBACLC,MAAM,kBClCKC,EAAyB,CACrC,CACCH,MAAM,UACNC,KAAK,WACLC,MAAM,iBAEP,CACCF,MAAM,YACNC,KAAK,aACLC,MAAM,iBAEP,CACCF,MAAM,YACNC,KAAK,aACLC,MAAM,iBAEP,CACCF,MAAM,SACNC,KAAK,UACLC,MAAM,kBCnBKE,EAAoB,CAChC,CACCJ,MAAM,4BACNC,KAAK,gBACLC,MAAM,iBAEP,CACCF,MAAM,MACNC,KAAK,OACLC,MAAM,iBAEP,CACCF,MAAM,UACNC,KAAK,UACLC,MAAM,iBAEP,CACCF,MAAM,WACNC,KAAK,cACLC,MAAM,iBAEP,CACCF,MAAM,kBACNC,KAAK,eACLC,MAAM,kBCxBKG,EAAqB,CACjC,CACCL,MAAM,kBACNC,KAAK,kBACLC,MAAM,iBAEP,CACCF,MAAM,qBACNC,KAAK,YACLC,MAAM,iBAEP,CACCF,MAAM,qBACNC,KAAK,eACLC,MAAM,iBAEP,CACCF,MAAM,yBACNC,KAAK,aACLC,MAAM,kBCnBKI,EAAsB,CAClC,CACCN,MAAM,qBACNC,KAAK,eACLC,MAAM,iBAEP,CACCF,MAAM,qBACNC,KAAK,eACLC,MAAM,iBAEP,CACCF,MAAM,6CACNC,KAAK,gBACLC,MAAM,iBAEP,CACCF,MAAM,iDACNC,KAAK,oBACLC,MAAM,iBAEP,CACCF,MAAM,8BACNC,KAAK,IACLC,MAAM,iBAEP,CACCF,MAAM,gCACNC,KAAK,IACLC,MAAM,kBC7BKK,EAAwB,CACpC,CACCP,MAAM,iBACNC,KAAK,WACLC,MAAM,iBAEP,CACCF,MAAM,uBACNC,KAAK,IACLC,MAAM,iBAEP,CACCF,MAAM,gBACNC,KAAK,OACLC,MAAM,iBAEP,CACCF,MAAM,kBACNC,KAAK,WACLC,MAAM,kB,qBCgGOM,MAxGf,WACC,MAA0BC,oBAAS,GAAnC,mBAAcC,GAAd,WACA,OACC,mCACC,qBAAKC,UAAU,8CAAf,SACM,sBAAKA,UAAU,kBAAf,UACC,mBAAGA,UAAU,eAAeC,KAAK,KAAjC,iCACA,qBAAKD,UAAU,2BAA2BE,GAAG,gBAA7C,SACG,qBAAIF,UAAU,qBAAd,UACE,qBAAIA,UAAU,oBAAd,UACG,mBAAGA,UAAU,2BAA2BG,iBAAe,WAAWC,KAAK,SAASC,gBAAc,OAAOC,gBAAc,QAAnH,kCACA,qBAAKN,UAAU,gBAAf,SACGZ,EAAkBmB,KAAI,SAACC,EAAMC,GAC7B,OACC,6BACC,cAAC,IAAD,CAAMT,UAAWQ,EAAKjB,MAAOmB,GAAIF,EAAKlB,KAAMqB,QAAS,kBAAMZ,GAAS,IAApE,SACES,EAAKnB,SAFCoB,WAShB,qBAAIT,UAAU,oBAAd,UACE,mBAAGA,UAAU,2BAA2BG,iBAAe,WAAWC,KAAK,SAASC,gBAAc,OAAOC,gBAAc,QAAnH,2BACA,qBAAKN,UAAU,gBAAf,SACGR,EAAuBe,KAAI,SAACC,EAAMC,GACjC,OACC,6BACC,cAAC,IAAD,CAAMT,UAAWQ,EAAKjB,MAAOmB,GAAIF,EAAKlB,KAAMqB,QAAS,kBAAMZ,GAAS,IAApE,SACES,EAAKnB,SAFCoB,WAShB,qBAAIT,UAAU,oBAAd,UACE,mBAAGA,UAAU,2BAA2BG,iBAAe,WAAWC,KAAK,SAASC,gBAAc,OAAOC,gBAAc,QAAnH,iCACA,qBAAKN,UAAU,gBAAf,SACGP,EAAkBc,KAAI,SAACC,EAAMC,GAC5B,OACC,6BACC,cAAC,IAAD,CAAMT,UAAWQ,EAAKjB,MAAOmB,GAAIF,EAAKlB,KAAMqB,QAAS,kBAAMZ,GAAS,IAApE,SACES,EAAKnB,SAFCoB,WAUhB,qBAAIT,UAAU,oBAAd,UACE,mBAAGA,UAAU,2BAA2BG,iBAAe,WAAWC,KAAK,SAASC,gBAAc,OAAOC,gBAAc,QAAnH,yBACA,qBAAKN,UAAU,gBAAf,SACGL,EAAoBY,KAAI,SAACC,EAAMC,GAC9B,OACC,6BACC,cAAC,IAAD,CAAMT,UAAWQ,EAAKjB,MAAOmB,GAAIF,EAAKlB,KAAMqB,QAAS,kBAAMZ,GAAS,IAApE,SACES,EAAKnB,SAFCoB,WAUhB,qBAAIT,UAAU,oBAAd,UACE,mBAAGA,UAAU,2BAA2BG,iBAAe,WAAWC,KAAK,SAASC,gBAAc,OAAOC,gBAAc,QAAnH,0BACA,qBAAKN,UAAU,gBAAf,SACGJ,EAAsBW,KAAI,SAACC,EAAMC,GAChC,OACC,6BACC,cAAC,IAAD,CAAMT,UAAWQ,EAAKjB,MAAOmB,GAAIF,EAAKlB,KAAMqB,QAAS,kBAAMZ,GAAS,IAApE,SACES,EAAKnB,SAFCoB,WAUhB,qBAAIT,UAAU,oBAAd,UACE,mBAAGA,UAAU,2BAA2BG,iBAAe,WAAWC,KAAK,SAASC,gBAAc,OAAOC,gBAAc,QAAnH,uBACA,qBAAKN,UAAU,gBAAf,SACGN,EAAmBa,KAAI,SAACC,EAAMC,GAC7B,OACC,6BACC,cAAC,IAAD,CAAMT,UAAWQ,EAAKjB,MAAOmB,GAAIF,EAAKlB,KAAMqB,QAAS,kBAAMZ,GAAS,IAApE,SACES,EAAKnB,SAFCoB,wBC9FhB,SAASG,IACvB,OACC,mCACC,uBAAOZ,UAAU,oBAAjB,SACG,gCACE,+BACC,oBAAIa,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACT,oBAAIA,MAAM,MAAV,SACC,sBAAKb,UAAU,yBAAf,UACF,qBAAKA,UAAU,YAAf,SAA2B,qBAAKA,UAAU,cAAf,SAA6B,mEACxD,qBAAKA,UAAU,YAAf,SACE,+BACK,6BAAI,sDACJ,+BACE,6BAAI,mBAAGC,KAAK,6BAAR,SAAqC,gEACzC,6BAAI,mBAAGA,KAAK,4BAAR,SAAoC,+DACxC,6BAAI,mBAAGA,KAAK,qCAAR,SAA6C,yEACjD,6BAAI,mBAAGA,KAAK,oCAAR,SAA4C,wEAChD,6BAAI,mBAAGA,KAAK,SAAR,SAAiB,0CACrB,6BAAI,mBAAGA,KAAK,SAAR,SAAiB,0CACrB,6BAAI,mBAAGA,KAAK,kBAAR,SAA0B,0DAEhC,6BAAI,iDACJ,+BACE,6BAAI,mBAAGA,KAAK,YAAR,SAAoB,6CACxB,6BAAI,mBAAGA,KAAK,cAAR,SAAsB,kDAC1B,6BAAI,mBAAGA,KAAK,cAAR,SAAsB,kDAC1B,6BAAI,mBAAGA,KAAK,WAAR,SAAmB,kDAEzB,6BAAI,2DACJ,+BACE,6BAAI,mBAAGA,KAAK,iBAAR,SAAyB,qEAC7B,6BAAI,mBAAGA,KAAK,QAAR,SAAgB,yCACpB,6BAAI,mBAAGA,KAAK,WAAR,SAAmB,gDACvB,6BAAI,mBAAGA,KAAK,eAAR,SAAuB,iDAC3B,6BAAI,mBAAGA,KAAK,gBAAR,SAAwB,qEAMpC,oBAAIY,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACX,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,QACV,oBAAIA,MAAM,iB,qDC/BJC,E,WAzBX,WAAYC,GAAO,oBACfC,KAAKC,UAAY,KACjBD,KAAKD,KAAOA,E,iDAKhB,WAEI,OAAOC,KAAKC,Y,2BAGhB,SAAcA,GACVD,KAAKC,UAAYA,I,sBAGrB,WACI,OAAOD,KAAKD,O,sBAGhB,SAASA,GACLC,KAAKD,KAAOA,M,KCoMLG,EArNX,aAAc,IAAD,gCAFbC,OAAS,KAEI,KAMbC,SAAW,SAACL,GACR,IAAIM,EAAa,IAAIP,EAAKC,GACF,GAApB,EAAKO,aACL,EAAKC,WAAWF,GAChB,EAAKG,WAAWH,KAGhB,EAAKI,aAAaC,cAAcL,GAChC,EAAKG,WAAWH,KAdX,KAoBbM,gBAAkB,SAACZ,GACf,IAAIM,EAAa,IAAIP,EAAKC,GAE1BM,EAAWK,cAAc,EAAKE,cAC9B,EAAKL,WAAWF,IAxBP,KA2BbQ,gBAAkB,SAACd,GACf,IAAIM,EAAa,IAAIP,EAAKC,GAC1B,EAAKU,aAAaC,cAAcL,GAChC,EAAKG,WAAWH,IA9BP,KAkCbS,SAAW,SAACf,GAER,GAAwB,GAApB,EAAKO,YAyBF,OAAOS,QAAQC,IAAI,UAvBtB,IAAIC,EAAc,EAAKL,aAAaM,gBAChCC,EAAW,EAAKP,aACpB,GAAI,EAAKA,aAAaQ,YAAcrB,EAEhC,OADA,EAAKQ,WAAW,EAAKK,aAAaM,iBAC3BH,QAAQC,IAAI,WAEnB,EAAG,CACC,GAAIC,EAAYG,YAAcrB,EAC1B,OAAIkB,EAAYG,YAAc,EAAKX,aAAaW,YAC5CD,EAAST,cAAc,MACvB,EAAKF,WAAWW,GACTJ,QAAQC,IAAI,aAEnBG,EAAST,cAAcO,EAAYC,iBAC5BH,QAAQC,IAAI,YAG3BC,EAAcA,EAAYC,gBAC1BC,EAAWA,EAASD,sBAEA,MAAfD,GAKjB,OAAOF,QAAQC,IAAI,oBA/DV,KAkEbK,OAAS,SAACtB,EAAMuB,GACZ,IAAIL,EAAc,EAAKL,aAEvB,GAAwB,GAApB,EAAKN,YAEL,EAAE,CACE,GAAIW,EAAYG,YAAcrB,EAE1B,OADAkB,EAAYM,SAASD,GACdP,QAAQC,IAAI,gBAEvBC,EAAcA,EAAYC,sBACR,MAAfD,GAEX,OAAOF,QAAQC,IAAI,oBA/EV,KAmFbQ,OAAS,SAACzB,GACN,IAAIkB,EAAc,EAAKL,aAEvB,GAAwB,GAApB,EAAKN,YAeL,OADAS,QAAQC,IAAI,WACL,EAdP,IAAIS,EAAI,EACR,EAAE,CAEE,GAAIR,EAAYG,YAAcrB,EAE1B,OADAgB,QAAQC,IAAI,eAAiBC,EAAYG,WAAW,cAAcK,GAC3DA,EAEXA,IACAR,EAAcA,EAAYC,sBAER,MAAfD,GASX,OADAF,QAAQC,IAAI,oBACL,GA1GE,KA6GbU,QAAU,WACN,IAAIT,EAAc,EAAKL,aACvB,GAAwB,GAApB,EAAKN,YAEL,GACIS,QAAQC,IAAIC,EAAYG,YACxBH,EAAcA,EAAYC,sBACN,MAAfD,IApHJ,KAwHbX,UAAY,WACR,OAAyB,MAArB,EAAKM,cAzHA,KAgIbe,gBAAkB,WAEd,IAAIV,EAAc,EAAKL,aACnBgB,EAAM,GACV,GAAwB,GAApB,EAAKtB,YAAqB,CAC1B,IAAImB,EAAI,EACR,GACRG,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOb,EAAYG,aACvBH,EAAcA,EAAYC,gBAC1BO,UACoB,MAAfR,GAGb,OAAOW,GA7IE,KAiJbG,gBAAkB,WAEd,IAAId,EAAc,EAAKL,aACnBgB,EAAM,GACV,GAAwB,GAApB,EAAKtB,YAAqB,CAC1B,IAAImB,EAAI,EACR,EAAG,CACC,GAAmC,MAA/BR,EAAYC,gBAAwB,CAEpC,IAAIc,EAAUC,SAASR,GACnBS,EAAUD,SAASD,GAAWC,SAAS,GACpC,GAAHR,GACAG,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG,EAAG0C,OAAQ,OAErB,GAAVJ,GAA8B,GAAXE,GACpBN,EAAIC,KAAK,CAACM,KAAKF,SAASD,GAAUtC,GAAGuC,SAASC,GAAUE,OAAQ,OAGxEnB,EAAcA,EAAYC,gBAC1BO,UACoB,MAAfR,GAGb,OAAOW,GAxKE,KA6KbS,aAAe,WAEX,IAAIC,EAAM,CAEVA,UAAgB,oBAChBA,OAAa,kFACTV,EAAM,GACV,GAAwB,GAApB,EAAKtB,YAAqB,CAC1B,IAAIW,EAAc,EAAKL,aACvB,GACmD,iBAArCqB,SAAShB,EAAYG,aAA6B,GAAKa,SAAShB,EAAYG,YAElFQ,EAAIC,KAAKI,SAAShB,EAAYG,aAEU,iBAA3BH,EAAYG,YAEzBQ,EAAIC,KAAKZ,EAAYG,WAAWmB,YAIpCtB,EAAcA,EAAYC,sBACR,MAAfD,GAEXqB,EAAIE,QAAUZ,EACdb,QAAQC,IAAIsB,GACZ,IAAIG,EAAaC,KAAKC,UAAUL,GAEhC,OADAvB,QAAQC,IAAIyB,GACLA,GAxME,KA+Mb7B,WAAa,WAAO,OAAO,EAAKT,QA/MnB,KAgNbI,WAAa,SAACJ,GAAY,EAAKA,OAASA,GAhN3B,KAiNbM,WAAa,WAAQ,OAAO,EAAKmC,QAjNpB,KAkNbpC,WAAa,SAACoC,GAAa,EAAKA,OAASA,GAjNrC5C,KAAKG,OAAS,KACdH,KAAK4C,OAAS,MCLlBC,EAAc,IAAI3C,EAClB4C,EAAW,IAAIC,UAAQF,EAAYlB,mBACnCqB,EAAW,IAAID,UAAQF,EAAYd,mBAGnCkB,EAAO,CACVC,MAAOJ,EACPK,KAAMH,GAGHI,EAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cA8PXG,E,kDArPhB,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAyBPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA/BvC,EAsCnBC,UAAY,WACXjC,EAAYzC,SAAS,EAAK2E,MAAMC,MAChClC,EAAW,IAAIC,UAAQF,EAAYlB,mBACnCqB,EAAW,IAAID,UAAQF,EAAYd,mBACnCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IA/CpC,EAkDnBkC,aAAe,WACdzC,EAAY/B,SAAS,EAAKiE,MAAMC,MAChClC,EAAW,IAAIC,UAAQF,EAAYlB,mBACnCqB,EAAW,IAAID,UAAQF,EAAYd,mBACnCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IA3DpC,EA8DnBmC,aAAe,WACd1C,EAAYxB,OAAO,EAAK0D,MAAMC,KAAM,EAAKD,MAAMS,kBAC/C1C,EAAW,IAAIC,UAAQF,EAAYlB,mBACnCqB,EAAW,IAAID,UAAQF,EAAYd,mBACnCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IAvEpC,EA0EnBqC,aAAe,WACd5C,EAAYlC,gBAAgB,EAAKoE,MAAMC,MACvClC,EAAW,IAAIC,UAAQF,EAAYlB,mBACnCqB,EAAW,IAAID,UAAQF,EAAYd,mBACnCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IAnFpC,EAsFnBsC,eAAiB,WAChB7C,EAAYhC,gBAAgB,EAAKkE,MAAMC,MACvClC,EAAW,IAAIC,UAAQF,EAAYlB,mBACnCqB,EAAW,IAAID,UAAQF,EAAYd,mBACnCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IA/FpC,EAkGnBuC,aAAe,WACd,IAAI5F,EAAO8C,EAAYrB,OAAO,EAAKuD,MAAMC,MACrC,GAAK/C,SAASlC,IACjBgB,QAAQC,IAAIjB,EAAK,eACjB+C,EAAW,IAAIC,UAAQF,EAAYlB,mBACnCqB,EAAW,IAAID,UAAQF,EAAYd,mBACnCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAERA,EAAS4C,IAAI,CAACzD,KAAMF,SAASlC,GAAOL,GAAIuC,SAASlC,GAAO8F,MAAM5D,SAASlC,GAAM2D,MAAM,CAACA,MAAM,cAG1F3C,QAAQC,IAAIjB,GAIb,EAAKmF,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IAnHpC,EAsHnB0C,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,qBAAtBmB,EAASE,WADA,kFACoCF,EAASG,OAAiB,CAG1E,IAAK,IAAIzE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAC1CV,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7BoB,EAAYzC,SAAS2F,EAASvD,QAAQf,GAAGc,YAG1CO,EAAW,IAAIC,UAAQF,EAAYlB,mBACnCqB,EAAW,IAAID,UAAQF,EAAYd,mBACnCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,QAKtDgD,MAAM,6CA9IW,EAmJnBC,eAAiB,WAChB,IAAMC,EAAUC,SAASC,cAAc,KACnCC,EAAY5D,EAAYR,eACtBqE,EAAO,IAAIC,KAAK,CAACF,IACvBH,EAAQrH,KAAO2H,IAAIC,gBAAgBH,GAChCJ,EAAQQ,SAAW,mBACnBP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAQW,QACRb,MAAM,oBAzJT,EAAKrB,MAAQ,CAEZC,KAAM,GACNQ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAXP,E,qDAcnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,EAAMG,K,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAyIX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,4BAED,qBAAK9F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,mBAAmB3F,UAAU,eAAewI,YAAY,oBAAoBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMS,iBAAkBiC,SAAUzH,KAAKmH,sBAEvK,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4F,gBAAtE,+BAED,qBAAKvG,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,wBAG7D,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK8F,gBAAtE,iCAED,qBAAKzG,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+F,kBAAtE,gCAED,qBAAK1G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,2BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAMF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAhPxB6C,aClBPnI,E,WAfX,WAAYC,GAAM,oBACdC,KAAKD,KAAOA,EACZC,KAAKC,UAAY,KACjBD,KAAKmB,SAAW,K,4CAGpB,WAAY,OAAOnB,KAAKD,O,sBACxB,SAASA,GAAOC,KAAKD,KAAOA,I,2BAE5B,WAAiB,OAAOC,KAAKC,Y,2BAC7B,SAAcA,GAAYD,KAAKC,UAAYA,I,0BAE3C,WAAgB,OAAOD,KAAKmB,W,0BAC5B,SAAaA,GAAWnB,KAAKmB,SAAWA,M,KC+N7B+G,EA1OX,aAAc,IAAD,gCAKb9H,SAAW,SAACL,GAER,IAAIM,EAAa,IAAIP,EAAKC,GAEN,GAAhB,EAAKoI,SACL,EAAKC,YAAY/H,GACjB,EAAKG,WAAWH,KAGhB,EAAKI,aAAaC,cAAcL,GAChCA,EAAWgI,aAAa,EAAK5H,cAC7B,EAAKD,WAAWH,KAhBX,KAqBbM,gBAAkB,SAACZ,GACf,IAAIM,EAAa,IAAIP,EAAKC,GAE1BM,EAAWK,cAAc,EAAK4H,eAC9B,EAAKA,cAAcD,aAAahI,GAChC,EAAK+H,YAAY/H,IA1BR,KA6BbQ,gBAAkB,SAACd,GACf,IAAIM,EAAa,IAAIP,EAAKC,GAE1B,EAAKU,aAAaC,cAAcL,GAChCA,EAAWgI,aAAa,EAAK5H,cAC7B,EAAKD,WAAWH,IAlCP,KAsCbS,SAAW,SAACf,GAER,GAAoB,GAAhB,EAAKoI,QA2DF,OAAOpH,QAAQC,IAAI,UAxDtB,GAAI,EAAKsH,cAAclH,YAAcrB,EAAK,CAEtC,GAA0C,MAAtC,EAAKuI,cAAcpH,gBAAwB,CAE3C,IAAIqH,EAAO,EAAKD,cAAcpH,gBAK9B,OAJA,EAAKoH,cAAcpH,gBAAgBmH,aAAa,MAChD,EAAKC,cAAc5H,cAAc,MACjC,EAAK0H,YAAYG,GAEVxH,QAAQC,IAAI,WAEnB,EAAKoH,YAAY,MACjB,EAAK5H,WAAW,UAGlB,IAAI,EAAKC,aAAaW,YAAcrB,EAAK,CAE3C,GAAwC,MAApC,EAAKU,aAAa+H,eAAuB,CAEzC,IAAID,EAAO,EAAK9H,aAAa+H,eAK7B,OAJA,EAAK/H,aAAa+H,eAAe9H,cAAc,MAC/C,EAAKD,aAAa4H,aAAa,MAC/B,EAAK7H,WAAW+H,GAETxH,QAAQC,IAAI,WAKnB,OAHA,EAAKoH,YAAY,MACjB,EAAK5H,WAAW,MAETO,QAAQC,IAAI,WAKvB,IAAIC,EAAc,EAAKqH,cAAcpH,gBACjCC,EAAW,EAAKmH,cACpB,EAAG,CAEC,GAAIrH,EAAYG,YAAcrB,EAAK,CAE/B,IAAIE,EAAYgB,EAAYC,gBAO5B,OALAD,EAAYP,cAAc,MAC1BO,EAAYoH,aAAa,MACzBlH,EAAST,cAAcT,GACvBA,EAAUoI,aAAalH,GAEhBJ,QAAQC,IAAI,WAGvBC,EAAcA,EAAYC,gBAC1BC,EAAWA,EAASD,sBAEA,MAAfD,GAKjB,OAAOF,QAAQC,IAAI,oBArGV,KAwGbK,OAAS,SAACtB,EAAMuB,GACZ,IAAIL,EAAc,EAAKqH,cAEvB,GAAoB,GAAhB,EAAKH,QAEL,EAAE,CACE,GAAIlH,EAAYG,YAAcrB,EAE1B,OADAkB,EAAYM,SAASD,GACdP,QAAQC,IAAI,gBAEvBC,EAAcA,EAAYC,sBACR,MAAfD,GAEX,OAAOF,QAAQC,IAAI,oBArHV,KAyHbQ,OAAS,SAACzB,GACN,IAAIkB,EAAc,EAAKqH,cACnB7G,EAAI,EACR,GAAoB,GAAhB,EAAK0G,QAaL,OADApH,QAAQC,IAAI,WACL,EAXP,EAAE,CACE,GAAIC,EAAYG,YAAcrB,EAE1B,OADAgB,QAAQC,IAAI,eAAiBC,EAAYG,YAClCK,EAEXA,IACAR,EAAcA,EAAYC,sBACR,MAAfD,GASX,OADAF,QAAQC,IAAI,oBACL,GA9IE,KAmJbyH,MAAQ,WACJ1H,QAAQC,IAAI,SACZ,IAAIC,EAAc,EAAKqH,cACvB,GAAoB,GAAhB,EAAKH,QAAiB,CACtB,GACIpH,QAAQC,IAAIC,EAAYG,YACxBH,EAAcA,EAAYC,sBACR,MAAfD,GAEPF,QAAQC,IAAI,SACZC,EAAc,EAAKR,aACnB,GACIM,QAAQC,IAAIC,EAAYG,YACxBH,EAAcA,EAAYuH,qBACR,MAAfvH,QAEPF,QAAQC,IAAI,WAnKP,KAwKbmH,MAAQ,WACJ,OAA0B,MAAtB,EAAKG,eAzKA,KAgLb3G,gBAAkB,WAEd,IAAIV,EAAc,EAAKqH,cACnB1G,EAAM,GACV,GAAoB,GAAhB,EAAKuG,QAAiB,CACtB,IAAI1G,EAAI,EACR,GACRG,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOb,EAAYG,aACvBH,EAAcA,EAAYC,gBAC1BO,UACoB,MAAfR,GAGb,OAAOW,GA7LE,KAiMbG,gBAAkB,WAEd,IAAId,EAAc,EAAKqH,cACnB1G,EAAM,GACV,GAAoB,GAAhB,EAAKuG,QAAiB,CACtB,IAAI1G,EAAI,EACR,EAAG,CACC,GAAmC,MAA/BR,EAAYC,gBAAwB,CAEpC,IAAIc,EAAUC,SAASR,GACnBS,EAAUD,SAASD,GAAWC,SAAS,GACpC,GAAHR,IACAG,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG,EAAG0C,OAAQ,OAChCR,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG,EAAG0C,OAAQ,QAErB,GAAVJ,GAA8B,GAAXE,IACpBN,EAAIC,KAAK,CAACM,KAAKF,SAASD,GAAUtC,GAAGuC,SAASC,GAAUE,OAAQ,OAChER,EAAIC,KAAK,CAACM,KAAKF,SAASC,GAAUxC,GAAGuC,SAASD,GAAUI,OAAQ,QAGxEnB,EAAcA,EAAYC,gBAC1BO,UACoB,MAAfR,GAIb,OAAOW,GA3NE,KAiOb0G,YAAc,WAAQ,OAAO,EAAKI,SAjOrB,KAkObN,YAAc,SAACM,GAAa,EAAKA,QAAUA,GAlO9B,KAmObjI,WAAa,WAAQ,OAAO,EAAKmC,QAnOpB,KAoObpC,WAAa,SAACoC,GAAa,EAAKA,OAASA,GAnOrC5C,KAAK0I,QAAU,KACf1I,KAAK4C,OAAS,MCFlB+F,EAAa,IAAIT,EAEjBpF,EAAW,IAAIC,UAAQ4F,EAAWhH,mBAClCqB,EAAW,IAAID,UAAQ4F,EAAW5G,mBAElCkB,EAAO,CACVC,MAAOJ,EACPK,KAAMH,GAGHI,EAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACTC,aAAc,MAGdN,MAAM,CACFO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cA4OXiF,E,kDArOhB,WAAY7E,GAAQ,IAAD,8BAClB,cAAMA,IA0BPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WAhCvC,EAsCnBC,UAAY,WACX6D,EAAWvI,SAAS,EAAK2E,MAAMC,MAC/BlC,EAAW,IAAIC,UAAQ4F,EAAWhH,mBAClCqB,EAAW,IAAID,UAAQ4F,EAAW5G,mBAClCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IA/CpC,EAkDnBkC,aAAe,WACdqD,EAAW7H,SAAS,EAAKiE,MAAMC,MAC/BlC,EAAW,IAAIC,UAAQ4F,EAAWhH,mBAClCqB,EAAW,IAAID,UAAQ4F,EAAW5G,mBAClCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IA3DpC,EA8DnBmC,aAAe,WACdoD,EAAWtH,OAAO,EAAK0D,MAAMC,KAAM,EAAKD,MAAMS,kBAC9C1C,EAAW,IAAIC,UAAQ4F,EAAWhH,mBAClCqB,EAAW,IAAID,UAAQ4F,EAAW5G,mBAClCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IAvEpC,EA0EnBqC,aAAe,WACdkD,EAAWhI,gBAAgB,EAAKoE,MAAMC,MACtClC,EAAW,IAAIC,UAAQ4F,EAAWhH,mBAClCqB,EAAW,IAAID,UAAQ4F,EAAW5G,mBAClCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IAnFpC,EAsFnBsC,eAAiB,WAChBiD,EAAW9H,gBAAgB,EAAKkE,MAAMC,MACtClC,EAAW,IAAIC,UAAQ4F,EAAWhH,mBAClCqB,EAAW,IAAID,UAAQ4F,EAAW5G,mBAClCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IA/FpC,EAkGnBuC,aAAe,WACd,IAAI5F,EAAO4I,EAAWnH,OAAO,EAAKuD,MAAMC,MACpC,GAAK/C,SAASlC,KACjBgB,QAAQC,IAAIjB,EAAK,eACR+C,EAAW,IAAIC,UAAQ4F,EAAWhH,mBAClCqB,EAAW,IAAID,UAAQ4F,EAAW5G,mBAC3CkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAERA,EAAS4C,IAAI,CAACzD,KAAMF,SAASlC,GAAOL,GAAIuC,SAASlC,GAAO8F,MAAM5D,SAASlC,GAAM2D,MAAM,CAACA,MAAM,cAI3F,EAAKwB,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IAhHpC,EAmHnB0C,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,qBAAtBmB,EAASE,WADA,kFACoCF,EAASG,OAAiB,CAG1E,IAAK,IAAIzE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAC1CV,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7BkH,EAAWvI,SAAS2F,EAASvD,QAAQf,GAAGc,YAGzCO,EAAW,IAAIC,UAAQ4F,EAAWhH,mBAClCqB,EAAW,IAAID,UAAQ4F,EAAW5G,mBAClCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,QAItDgD,MAAM,6CAxIP,EAAKrB,MAAQ,CAEZC,KAAM,GACNQ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAXP,E,qDAcnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,EAAMG,K,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBA4HX,WAAU,IAAD,OACP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,uBAGD,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,mBAAmB3F,UAAU,eAAewI,YAAY,oBAAoBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMS,iBAAkBiC,SAAUzH,KAAKmH,sBAEvK,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4F,gBAAtE,0BAED,qBAAKvG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAeW,QAAS,kBAAM,EAAKgG,gBAAnE,sBAED,qBAAK3G,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,WAAWuI,SAAUzH,KAAKgE,wBAG3E,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK8F,gBAAtE,sCAED,qBAAKzG,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+F,kBAAtE,qCAED,qBAAK1G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAeW,QAAS,kBAAM,EAAKmG,kBAAnE,sCAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,gCAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAhOxB6C,aCpBPnI,E,WAXX,WAAYC,GAAM,oBACdC,KAAKD,KAAOA,EACZC,KAAKC,UAAY,K,4CAGrB,WAAY,OAAOD,KAAKD,O,sBACxB,SAASA,GAAOC,KAAKD,KAAOA,I,2BAE5B,WAAiB,OAAOC,KAAKC,Y,2BAC7B,SAAcA,GAAYD,KAAKC,UAAYA,M,KC8RhC4I,EArSX,aAAc,IAAD,gCAObzI,SAAW,SAACL,GACR,IAAIM,EAAa,IAAIP,EAAKC,GACN,GAAhB,EAAKoI,SACL,EAAKC,YAAY/H,GACjB,EAAKG,WAAWH,GAChB,EAAKiI,cAAc5H,cAAc,EAAKD,cACtC,EAAKA,aAAaC,cAAc,EAAK4H,iBAGrC,EAAK7H,aAAaC,cAAcL,GAChCA,EAAWK,cAAc,EAAK4H,eAC9B,EAAK9H,WAAWH,IAGpB,EAAKyI,QArBI,KAyBbnI,gBAAkB,SAACZ,GACf,IAAIM,EAAa,IAAIP,EAAKC,GAE1BM,EAAWK,cAAc,EAAK4H,eAC9B,EAAK7H,aAAaC,cAAcL,GAChC,EAAK+H,YAAY/H,GACjB,EAAKyI,QA/BI,KAkCbjI,gBAAkB,SAACd,GACf,IAAIM,EAAa,IAAIP,EAAKC,GAE1B,EAAKU,aAAaC,cAAcL,GAChCA,EAAWK,cAAc,EAAK4H,eAC9B,EAAK9H,WAAWH,GAChB,EAAKyI,QAxCI,KA4CbhI,SAAW,SAACf,GACR,GAAmB,GAAhB,EAAKoI,QAgHD,OAAOpH,QAAQC,IAAI,UA9GrB,GAAI,EAAKsH,cAAclH,YAAcrB,EAAK,CAEvC,GAA0C,MAAtC,EAAKuI,cAAcpH,gBAAwB,CAE3C,IAAIqH,EAAO,EAAKD,cAAcpH,gBAK9B,OAJA,EAAKoH,cAAc5H,cAAc,MACjC,EAAKD,aAAaC,cAAc6H,GAChC,EAAKH,YAAYG,GACjB,EAAKO,OACE/H,QAAQC,IAAI,WAOnB,OALA,EAAKoH,YAAY1H,cAAc,MAC/B,EAAKF,WAAWE,cAAc,MAC9B,EAAK0H,YAAY,MACjB,EAAK5H,WAAW,MAChB,EAAKsI,OACE/H,QAAQC,IAAI,WAGrB,GAAI,EAAKP,aAAaW,YAAcrB,EAAK,CAE3C,GAAyC,MAArC,EAAKuI,cAAcpH,gBAAuB,CAM1C,IALA,IAAID,EAAc,EAAKqH,cAAcpH,gBACjCC,EAAW,EAAKmH,cAEhB7G,EAAI,EAEDA,EAAI,EAAKqH,MAAK,CACjB,GAAG7H,EAAYG,YAAYrB,EAAK,CAC5B,GAAK0B,EAAE,GAAM,EAAKqH,KAAK,CAEnB,IAAIP,EAAO,EAAK9H,aAAaS,gBAK7B,OAJA,EAAKT,aAAaC,cAAc,MAChCS,EAAST,cAAc6H,GACvB,EAAK/H,WAAWW,GAChB,EAAK2H,OACE/H,QAAQC,IAAI,WAInB,IAAIuH,EAAOtH,EAAYC,gBAKvB,OAJAD,EAAYP,cAAc,MAC1BS,EAAST,cAAc6H,GACvB,EAAK/H,WAAWW,GAChB,EAAK2H,OACE/H,QAAQC,IAAI,WAK3BC,EAAcA,EAAYC,gBAC1BC,EAAWA,EAASD,gBAEpBO,IAKJ,OAAOV,QAAQC,IAAI,WAOnB,OALA,EAAKoH,YAAY1H,cAAc,MAC/B,EAAKF,WAAWE,cAAc,MAC9B,EAAK0H,YAAY,MACjB,EAAK5H,WAAW,MAChB,EAAKsI,OACE/H,QAAQC,IAAI,WAKvB,GAAyC,MAArC,EAAKsH,cAAcpH,gBAAuB,CAM1C,IALA,IAAID,EAAc,EAAKqH,cAAcpH,gBACjCC,EAAW,EAAKmH,cAEhB7G,EAAI,EAEDA,EAAI,EAAKqH,MAAK,CACjB,GAAG7H,EAAYG,YAAYrB,EAAK,CAC5B,GAAK0B,EAAE,GAAM,EAAKqH,KAAK,CAEnB,IAAIP,EAAO,EAAK9H,aAAaS,gBAK7B,OAJA,EAAKT,aAAaC,cAAc,MAChCS,EAAST,cAAc6H,GACvB,EAAK/H,WAAWW,GAChB,EAAK2H,OACE/H,QAAQC,IAAI,WAInB,IAAIuH,EAAOtH,EAAYC,gBAKvB,OAJAD,EAAYP,cAAc,MAC1BS,EAAST,cAAc6H,GACvB,EAAK/H,WAAWW,GAChB,EAAK2H,OACE/H,QAAQC,IAAI,WAK3BC,EAAcA,EAAYC,gBAC1BC,EAAWA,EAASD,gBAEpBO,IAIJ,OAAOV,QAAQC,IAAI,WAM/B,OAAOD,QAAQC,IAAI,oBA/JV,KAqKbK,OAAS,SAACtB,EAAMuB,GACZ,IAAIL,EAAc,EAAKqH,cAEvB,GAAoB,GAAhB,EAAKH,QAGL,IADA,IAAI1G,EAAI,EACFA,EAAE,EAAKqH,MAAK,CAEd,GAAI7H,EAAYG,YAAcrB,EAE1B,OADAkB,EAAYM,SAASD,GACdP,QAAQC,IAAI,gBAEvBC,EAAcA,EAAYC,gBAC1BO,IAGR,OAAOV,QAAQC,IAAI,oBArLV,KAyLbQ,OAAS,SAACzB,GACN,IAAIkB,EAAc,EAAKqH,cAEvB,GAAoB,GAAhB,EAAKH,QAeL,OADApH,QAAQC,IAAI,WACL,EAZP,IADA,IAAIS,EAAI,EACFA,EAAE,EAAKqH,MAAK,CAEd,GAAI7H,EAAYG,YAAcrB,EAE1B,OADAgB,QAAQC,IAAI,eAAiBC,EAAYG,YAClCK,EAEXR,EAAcA,EAAYC,gBAC1BO,IAUR,OADAV,QAAQC,IAAI,oBACL,GAhNE,KAmNbyH,MAAQ,WAIJ,IAFA,IAAIhH,EAAI,EACJR,EAAc,EAAKqH,cACjB7G,EAAE,EAAKqH,MACT/H,QAAQC,IAAIC,EAAYG,YACxBH,EAAcA,EAAYC,gBAC1BO,IAGJV,QAAQC,IAAI,mBACZD,QAAQC,IAAIC,EAAYG,YACxBL,QAAQC,IAAI,wBAAwB,EAAKsH,cAAclH,YACvDL,QAAQC,IAAIC,EAAYC,gBAAgBE,YACxCL,QAAQC,IAAI,UACZD,QAAQC,IAAI,EAAKP,aAAaW,YAC9BL,QAAQC,IAAI,EAAKP,aAAaS,gBAAgBE,aAnOrC,KAsOb+G,MAAQ,WACJ,OAA0B,MAAtB,EAAKG,eAvOA,KA8Ob3G,gBAAkB,WAEd,IAAIV,EAAc,EAAKqH,cACnB1G,EAAM,GACV,GAAoB,GAAhB,EAAKuG,QAEL,IADA,IAAI1G,EAAI,EACFA,EAAE,EAAKqH,MACrBlH,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOb,EAAYG,aACvBH,EAAcA,EAAYC,gBAC1BO,IAIR,OAAOG,GA3PE,KA+PbG,gBAAkB,WAEd,IAAId,EAAc,EAAKqH,cACnB1G,EAAM,GACV,GAAoB,GAAhB,EAAKuG,QAEL,IADA,IAAI1G,EAAI,EACFA,EAAE,EAAKqH,MAAK,CAEd,IAAI9G,EAAUC,SAASR,GACnBS,EAAUD,SAASD,GAAWC,SAAS,GACpC,GAAHR,GACAG,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG,EAAG0C,OAAQ,OAErB,GAAVJ,GAA8B,GAAXE,GACpBN,EAAIC,KAAK,CAACM,KAAKF,SAASD,GAAUtC,GAAGuC,SAASC,GAAUE,OAAQ,OAE/DX,EAAE,GAAI,EAAKqH,MACZlH,EAAIC,KAAK,CAACM,KAAKV,EAAG/B,GAAG,EAAG0C,OAAQ,OAEpCnB,EAAcA,EAAYC,gBAC1BO,IAIR,OAAOG,GAvRE,KA6Rb0G,YAAc,WAAQ,OAAO,EAAKI,SA7RrB,KA8RbN,YAAc,SAACM,GAAa,EAAKA,QAAUA,GA9R9B,KAgSbjI,WAAa,WAAQ,OAAO,EAAKmC,QAhSpB,KAiSbpC,WAAa,SAACoC,GAAa,EAAKA,OAASA,GAhSrC5C,KAAK0I,QAAU,KACf1I,KAAK4C,OAAS,KACd5C,KAAK8I,KAAO,GCHhBC,EAAgB,IAAIF,EAEpB/F,EAAW,IAAIC,UAAQgG,EAAcpH,mBACrCqB,EAAW,IAAID,UAAQgG,EAAchH,mBAErCkB,EAAO,CACVC,MAAOJ,EACPK,KAAMH,GAGHI,EAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACTC,aAAc,MAGdN,MAAM,CACFO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cAkPXqF,E,kDA3OhB,WAAYjF,GAAQ,IAAD,8BAClB,cAAMA,IA0BPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WAhCvC,EAqCnBC,UAAY,WACXiE,EAAc3I,SAAS,EAAK2E,MAAMC,MAClClC,EAAW,IAAIC,UAAQgG,EAAcpH,mBACrCqB,EAAW,IAAID,UAAQgG,EAAchH,mBACrCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IA9CpC,EAiDnBkC,aAAe,WACdyD,EAAcjI,SAAS,EAAKiE,MAAMC,MAClClC,EAAW,IAAIC,UAAQgG,EAAcpH,mBACrCqB,EAAW,IAAID,UAAQgG,EAAchH,mBACrCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IA1DpC,EA6DnBmC,aAAe,WACdwD,EAAc1H,OAAO,EAAK0D,MAAMC,KAAM,EAAKD,MAAMS,kBACjD1C,EAAW,IAAIC,UAAQgG,EAAcpH,mBACrCqB,EAAW,IAAID,UAAQgG,EAAchH,mBACrCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IAtEpC,EAyEnBqC,aAAe,WACdsD,EAAcpI,gBAAgB,EAAKoE,MAAMC,MACzClC,EAAW,IAAIC,UAAQgG,EAAcpH,mBACrCqB,EAAW,IAAID,UAAQgG,EAAchH,mBACrCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IAlFpC,EAqFnBsC,eAAiB,WAChBqD,EAAclI,gBAAgB,EAAKkE,MAAMC,MACzClC,EAAW,IAAIC,UAAQgG,EAAcpH,mBACrCqB,EAAW,IAAID,UAAQgG,EAAchH,mBACrCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IA9FpC,EAiGnBuC,aAAe,WACd,IAAI5F,EAAOgJ,EAAcvH,OAAO,EAAKuD,MAAMC,MAEvC,GAAK/C,SAASlC,KACjBgB,QAAQC,IAAIjB,EAAK,eACR+C,EAAW,IAAIC,UAAQgG,EAAcpH,mBACrCqB,EAAW,IAAID,UAAQgG,EAAchH,mBAC9CkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAERA,EAAS4C,IAAI,CAACzD,KAAMF,SAASlC,GAAOL,GAAIuC,SAASlC,GAAO8F,MAAM5D,SAASlC,GAAM2D,MAAM,CAACA,MAAM,cAI3F,EAAKwB,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,IAhHpC,EAmHnB0C,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,qBAAtBmB,EAASE,WADA,kFACoCF,EAASG,OAAiB,CAG1E,IAAK,IAAIzE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAC1CV,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7BsH,EAAc3I,SAAS2F,EAASvD,QAAQf,GAAGc,YAG5CO,EAAW,IAAIC,UAAQgG,EAAcpH,mBACrCqB,EAAW,IAAID,UAAQgG,EAAchH,mBACrCkB,EAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,QAItDgD,MAAM,6CAxIP,EAAKrB,MAAQ,CAEZC,KAAM,GACNQ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAXP,E,qDAcnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,EAAMG,K,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBA4HX,WAAU,IAAD,OACP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,uBAGD,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,mBAAmB3F,UAAU,eAAewI,YAAY,oBAAoBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMS,iBAAkBiC,SAAUzH,KAAKmH,sBAEvK,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4F,gBAAtE,0BAED,qBAAKvG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAeW,QAAS,kBAAM,EAAKgG,gBAAnE,sBAED,qBAAK3G,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,WAAWuI,SAAUzH,KAAKgE,wBAG3E,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAKnB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK8F,gBAAtE,sCAED,qBAAKzG,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+F,kBAAtE,qCAGD,qBAAK1G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAeW,QAAS,kBAAM,EAAKmG,kBAAnE,sCAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,gCAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAKnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAnOvB6C,aClBRnI,E,WAdd,WAAYC,GAAM,oBACXC,KAAKD,KAAOA,EACZC,KAAKC,UAAY,KACjBD,KAAKmB,SAAW,K,4CAEpB,WAAY,OAAOnB,KAAKD,O,sBACxB,SAASA,GAAOC,KAAKD,KAAOA,I,2BAE5B,WAAiB,OAAOC,KAAKC,Y,2BAC7B,SAAcA,GAAYD,KAAKC,UAAYA,I,0BAE3C,WAAgB,OAAOD,KAAKmB,W,0BAC5B,SAAaA,GAAWnB,KAAKmB,SAAWA,M,KCiN7B8H,EAvNd,aAAc,IAAD,gCAHbP,QAAQ,KAGK,KAFb9F,OAAO,KAEM,KAMVwF,YAAY,SAACM,GAAW,EAAKA,QAAQA,GAN3B,KAOVJ,YAAY,WAAM,OAAO,EAAKI,SAPpB,KAQVlI,WAAW,SAACoC,GAAU,EAAKA,OAAOA,GARxB,KASVnC,WAAW,WAAM,OAAO,EAAKmC,QATnB,KAUVuF,MAAQ,WACJ,OAA0B,MAAtB,EAAKG,eAXH,KAkBblI,SAAW,SAAC8I,GACX,IAAI7I,EAAa,IAAIP,EAAKoJ,GACA,GAAhB,EAAKf,SACX,EAAKC,YAAY/H,GACX,EAAKG,WAAWH,GAChB,EAAKiI,cAAc5H,cAAc,EAAKD,cACtC,EAAKA,aAAaC,cAAc,EAAK4H,iBAErC,EAAK7H,aAAaC,cAAcL,GAChCA,EAAWgI,aAAa,EAAK5H,cAC7BJ,EAAWK,cAAc,EAAK4H,eAC9B,EAAK9H,WAAWH,IAEpB,EAAKyI,QA/BC,KAiCbjI,gBAAkB,SAACqI,GAClB,IAAI7I,EAAa,IAAIP,EAAKoJ,GACA,GAAhB,EAAKf,SACX,EAAKC,YAAY/H,GACX,EAAKG,WAAWH,GAChB,EAAKiI,cAAc5H,cAAc,EAAKD,cACtC,EAAKA,aAAaC,cAAc,EAAK4H,iBAErC,EAAK7H,aAAaC,cAAcL,GAChCA,EAAWgI,aAAa,EAAK5H,cAC7BJ,EAAWK,cAAc,EAAK4H,eAC9B,EAAK9H,WAAWH,IAEpB,EAAKyI,QA9CC,KAgDbnI,gBAAkB,SAACuI,GAClB,IAAI7I,EAAa,IAAIP,EAAKoJ,GACA,GAAhB,EAAKf,SACX,EAAKC,YAAY/H,GACX,EAAKG,WAAWH,GAChB,EAAKiI,cAAc5H,cAAc,EAAKD,cACtC,EAAKA,aAAaC,cAAc,EAAK4H,iBAExCjI,EAAWK,cAAc,EAAK4H,eAC9BjI,EAAWgI,aAAa,EAAK5H,cAC7B,EAAKA,aAAaC,cAAcL,GAChC,EAAKiI,cAAcD,aAAahI,GAChC,EAAK+H,YAAY/H,IAElB,EAAKyI,QA9DC,KAgEbhI,SAAW,SAACf,GACX,GAAoB,GAAhB,EAAKoI,QACC,GAAI,EAAKG,cAAclH,YAAcrB,EACjC,GAAI,EAAKuI,cAAcpH,iBAAmB,EAAKoH,cAAc,CACzD,IAAIa,EAAM,EAAKb,cAAcpH,gBAC7B,EAAKoH,cAAcpH,gBAAgBmH,aAAa,EAAK5H,cACrD,EAAKA,aAAaC,cAAcyI,GAChC,EAAKb,cAAc5H,cAAc,MACjC,EAAK4H,cAAcD,aAAa,MAChC,EAAKD,YAAYe,GACjB,EAAKL,YAEL,EAAKV,YAAY,MACjB,EAAK5H,WAAW,MAChB,EAAKsI,YAGP,GAAI,EAAKrI,aAAaW,YAAcrB,EAEtC,GAAI,EAAKU,aAAa+H,gBAAkB,EAAK/H,aAAa,CAEtD,IAAI0I,EAAM,EAAK1I,aAAa+H,eAC5B,EAAK/H,aAAa+H,eAAe9H,cAAc,EAAK4H,eACpD,EAAKA,cAAcD,aAAac,GAChC,EAAK1I,aAAa4H,aAAa,MAC/B,EAAK5H,aAAaC,cAAc,MAChC,EAAKF,WAAW2I,GAChB,EAAKL,YAEL,EAAKV,YAAY,MACjB,EAAK5H,WAAW,MAEhB,EAAKsI,WAIR,CACD,IAAI7H,EAAc,EAAKqH,cAAcpH,gBACjCC,EAAW,EAAKmH,cACpB,EAAG,CAEC,GAAIrH,EAAYG,YAAcrB,EAAK,CAE/B,IAAIE,EAAYgB,EAAYC,gBAE5BD,EAAYP,cAAc,MAC1BO,EAAYoH,aAAa,MACzBlH,EAAST,cAAcT,GACvBA,EAAUoI,aAAalH,GACvB,EAAK2H,OAGT7H,EAAcA,EAAYC,gBAC1BC,EAAWA,EAASD,sBAEA,MAAfD,KAvHX,KA4HVmI,SAAS,WAGL,IAFA,IAAI3H,EAAI,EACJR,EAAc,EAAKqH,cACjB7G,EAAE,EAAKqH,MACT/H,QAAQC,IAAIC,EAAYG,YACxBH,EAAcA,EAAYC,gBAC1BO,KAlIE,KAqIVJ,OAAS,SAACtB,EAAMuB,GACZ,IAAIL,EAAc,EAAKqH,cACvB,GAAoB,GAAhB,EAAKH,QAEL,IADA,IAAI1G,EAAI,EACFA,EAAE,EAAKqH,MACL7H,EAAYG,YAAcrB,GAC1BkB,EAAYM,SAASD,GAEzBL,EAAcA,EAAYC,gBAC1BO,KA9IF,KAkJVD,OAAO,SAACzB,GACJ,IAAIkB,EAAc,EAAKqH,cACvB,GAAoB,GAAhB,EAAKH,QAYL,OAAO,EAVP,IADA,IAAI1G,EAAI,EACFA,EAAE,EAAKqH,MAAK,CACd,GAAI7H,EAAYG,YAAcrB,EAG1B,OAFAgB,QAAQC,IAAI,eAAiBC,EAAYG,YACzCL,QAAQC,IAAIS,GACLA,EAEXR,EAAcA,EAAYC,gBAC1BO,IAKR,OAAO,GAlKD,KAoKVE,gBAAkB,WACd,IAAIV,EAAc,EAAKqH,cACnB1G,EAAM,GACV,GAAoB,GAAhB,EAAKuG,QAEL,IADA,IAAI1G,EAAI,EACFA,EAAE,EAAKqH,MAAK,CACd,GAAM,GAAHrH,EAAK,CACJ,IAAI4H,EAASpI,EAAYG,WAAW,YACpCQ,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOuH,SACrB,GAAG5H,EAAE,GAAG,EAAKqH,KAAK,CACpB,IAAIO,EAASpI,EAAYG,WAAW,WACpCQ,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOuH,SAEvBzH,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOb,EAAYG,aAEvCH,EAAcA,EAAYC,gBAC1BO,IAGR,OAAOG,GAvLD,KAyLVG,gBAAkB,WACd,IAAId,EAAc,EAAKqH,cACnB1G,EAAM,GACG,EAAKkH,KACN,EAAKA,KACjB,GAAoB,GAAhB,EAAKX,QAEL,IADA,IAAI1G,EAAI,EACFA,EAAE,EAAKqH,MAAK,CACd,IAAI9G,EAAUC,SAASR,GACnBS,EAAUD,SAASD,GAAWC,SAAS,GACpC,GAAHR,IACAG,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG,EAAG0C,OAAQ,OAChCR,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG,EAAG0C,OAAQ,QAErB,GAAVJ,GAA8B,GAAXE,IACpBN,EAAIC,KAAK,CAACM,KAAKF,SAASD,GAAUtC,GAAGuC,SAASC,GAAUE,OAAQ,OAChER,EAAIC,KAAK,CAACM,KAAKF,SAASC,GAAUxC,GAAGuC,SAASD,GAAUI,OAAQ,QAE/DX,EAAE,GAAI,EAAKqH,OACZlH,EAAIC,KAAK,CAACM,KAAKV,EAAG/B,GAAG,EAAG0C,OAAQ,OAChCR,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG+B,EAAGW,OAAQ,QAEpCnB,EAAcA,EAAYC,gBAC1BO,IAGR,OAAOG,GAlNb5B,KAAK0I,QAAU,KACT1I,KAAK4C,OAAS,KACd5C,KAAK8I,KAAO,GCPhBQ,EAAW,IAAIL,EACfnG,EAAW,IAAIC,UAAQuG,EAAS3H,mBAChCqB,EAAW,IAAID,UAAQuG,EAASvH,mBAGhCkB,GAAO,CACVC,MAAOJ,EACPK,KAAMH,GAGHI,GAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cA0NX4F,G,kDApNhB,WAAYxF,GAAO,IAAD,8BACjB,cAAMA,IAqBPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA3BxC,EA8BfC,UAAY,WACXwE,EAASlJ,SAAS,EAAK2E,MAAMC,MAChClC,EAAW,IAAIC,UAAQuG,EAAS3H,mBAChCqB,EAAW,IAAID,UAAQuG,EAASvH,mBAChCkB,GAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAtCrC,EAwClBkC,aAAe,WACdgE,EAASxI,SAAS,EAAKiE,MAAMC,MAC7BlC,EAAW,IAAIC,UAAQuG,EAAS3H,mBAChCqB,EAAW,IAAID,UAAQuG,EAASvH,mBAChCkB,GAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAjDrC,EAmDlBqC,aAAe,WACd6D,EAAS3I,gBAAgB,EAAKoE,MAAMC,MACpClC,EAAW,IAAIC,UAAQuG,EAAS3H,mBAChCqB,EAAW,IAAID,UAAQuG,EAASvH,mBAChCkB,GAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA5DrC,EA8DlBsC,eAAiB,WAChB4D,EAASzI,gBAAgB,EAAKkE,MAAMC,MACpClC,EAAW,IAAIC,UAAQuG,EAAS3H,mBAChCqB,EAAW,IAAID,UAAQuG,EAASvH,mBAChCkB,GAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAvErC,EAyElBuC,aAAe,WACd,IAAI5F,EAAOuJ,EAAS9H,OAAO,EAAKuD,MAAMC,MAClC,GAAK/C,SAASlC,KACjB+C,EAAW,IAAIC,UAAQuG,EAAS3H,mBAChCqB,EAAW,IAAID,UAAQuG,EAASvH,mBAChCkB,GAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAERA,EAAS4C,IAAI,CAACzD,KAAMF,SAASlC,GAAOL,GAAIuC,SAASlC,GAAO8F,MAAM5D,SAASlC,GAAM2D,MAAM,CAACA,MAAM,cAI3F,EAAKwB,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAtFrC,EAwFlBmC,aAAe,WACd+D,EAASjI,OAAO,EAAK0D,MAAMC,KAAM,EAAKD,MAAMS,kBAC5C1C,EAAW,IAAIC,UAAQuG,EAAS3H,mBAChCqB,EAAW,IAAID,UAAQuG,EAASvH,mBAChCkB,GAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAjGrC,EAmGlB0C,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,qBAAtBmB,EAASE,WADA,kFACoCF,EAASG,OAAiB,CAE1E,IAAK,IAAIzE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAC1CV,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7B6H,EAASlJ,SAAS2F,EAASvD,QAAQf,IAGpCqB,EAAW,IAAIC,UAAQuG,EAAS3H,mBAChCqB,EAAW,IAAID,UAAQuG,EAASvH,mBAChCkB,GAAO,CACNC,MAAOJ,EACPmC,MAAOjC,GAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAItDgD,MAAM,4CAtHP,EAAKrB,MAAQ,CACZC,KAAK,GACLQ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAQ,GACb,EAAKE,OAAO8B,sBACZ,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAVR,E,qDAYlB,WACGpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAEvD,SAAkBa,GAChB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBA2GX,WAAU,IAAD,OAGV,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,4BAED,qBAAK9F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,mBAAmB3F,UAAU,eAAewI,YAAY,oBAAoBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMS,iBAAkBiC,SAAUzH,KAAKmH,sBAEvK,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4F,gBAAtE,+BAED,qBAAKvG,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,wBAG7D,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK8F,gBAAtE,iCAED,qBAAKzG,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+F,kBAAtE,gCAED,qBAAK1G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,2BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,0BAMF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GA9MvB6C,aCnBRnI,G,WAXX,WAAYC,GAAM,oBACdC,KAAKD,KAAOA,EACZC,KAAKC,UAAY,K,4CAGrB,WAAY,OAAOD,KAAKD,O,sBACxB,SAASA,GAAOC,KAAKD,KAAOA,I,2BAE5B,WAAiB,OAAOC,KAAKC,Y,2BAC7B,SAAcA,GAAYD,KAAKC,UAAYA,M,KCyJhCuJ,GAhKX,aAAc,IAAD,gCAIbpJ,SAAW,SAACL,GACR,IAAKM,EAAa,IAAIP,GAAKC,GACP,GAAhB,EAAK0J,SACLpJ,EAAWK,cAAc,EAAK4H,eAC9B,EAAKF,YAAY/H,IAEjB,EAAK+H,YAAY/H,IAVZ,KAebqJ,IAAM,WAEF,GAAmB,GAAhB,EAAKD,QAeJ,OADA1I,QAAQC,IAAI,WACL,EAbP,GAA0C,MAAtC,EAAKsH,cAAcpH,gBAAwB,CAE3C,IAAIqH,EAAO,EAAKD,cAAcpH,gBAI9B,OAHA,EAAKoH,cAAc5H,cAAc,MACjC,EAAK0H,YAAYG,GAEVxH,QAAQC,IAAI,WAEnB,EAAKoH,YAAY,OA3BhB,KAyCb/G,OAAS,SAACtB,EAAMuB,GACZ,IAAIL,EAAc,EAAKqH,cAEvB,GAAoB,GAAhB,EAAKmB,QAEL,EAAE,CACE,GAAIxI,EAAYG,YAAcrB,EAE1B,OADAkB,EAAYM,SAASD,GACdP,QAAQC,IAAI,gBAEvBC,EAAcA,EAAYC,sBACR,MAAfD,GAEX,OAAOF,QAAQC,IAAI,oBAtDV,KA0DbQ,OAAS,SAACzB,GACN,IAAIkB,EAAc,EAAKqH,cAEvB,GAAoB,GAAhB,EAAKmB,QAaL,OADA1I,QAAQC,IAAI,WACL,EAZP,IAAIS,EAAI,EACR,EAAE,CACE,GAAIR,EAAYG,YAAcrB,EAE1B,OADAgB,QAAQC,IAAI,eAAiBC,EAAYG,YAClCK,EAEXR,EAAcA,EAAYC,gBAC1BO,UACkB,MAAfR,GASX,OADAF,QAAQC,IAAI,oBACL,GA/EE,KAmFbyH,MAAQ,WAEJ,GAAmB,GAAhB,EAAKgB,QASJ,OADA1I,QAAQC,IAAI,WACL,EARP,IAAIC,EAAc,EAAKqH,cACvB,GACIvH,QAAQC,IAAIC,EAAYG,YACxBH,EAAcA,EAAYC,sBACN,MAAfD,IA1FJ,KAqGbwI,MAAQ,WACJ,OAA0B,MAAtB,EAAKnB,eAtGA,KA8Gb3G,gBAAkB,WAEd,IAAIV,EAAc,EAAKqH,cACnB1G,EAAM,GACV,GAAoB,GAAhB,EAAK6H,QAAiB,CACtB,IAAIhI,EAAI,EACR,GACRG,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOb,EAAYG,aACvBH,EAAcA,EAAYC,gBAC1BO,UACoB,MAAfR,GAGb,OAAOW,GA3HE,KA+HbG,gBAAkB,WAEd,IAAId,EAAc,EAAKqH,cACnB1G,EAAM,GACV,GAAoB,GAAhB,EAAK6H,QAAiB,CACtB,IAAIhI,EAAI,EACR,EAAG,CACC,GAAmC,MAA/BR,EAAYC,gBAAwB,CAEpC,IAAIc,EAAUC,SAASR,GACnBS,EAAUD,SAASD,GAAWC,SAAS,GACpC,GAAHR,GACAG,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG,EAAG0C,OAAQ,OAErB,GAAVJ,GAA8B,GAAXE,GACpBN,EAAIC,KAAK,CAACM,KAAKF,SAASD,GAAUtC,GAAGuC,SAASC,GAAUE,OAAQ,OAGxEnB,EAAcA,EAAYC,gBAC1BO,UACoB,MAAfR,GAGb,OAAOW,GAtJE,KA2Jb0G,YAAc,WAAQ,OAAO,EAAKI,SA3JrB,KA4JbN,YAAc,SAACM,GAAc,EAAKA,QAAUA,GA3JxC1I,KAAK0I,QAAU,MCDnBiB,GAAO,IAAIH,GAEX1G,GAAW,IAAIC,UAAQ4G,GAAKhI,mBAC5BqB,GAAW,IAAID,UAAQ4G,GAAK5H,mBAE5BkB,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAGHI,GAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACTC,aAAc,MAGdN,MAAM,CACFO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cA4LXiG,G,kDArLhB,WAAY7F,GAAQ,IAAD,8BAClB,cAAMA,IAyBPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA/BvC,EAmCnBC,UAAY,WACX6E,GAAKvJ,SAAS,EAAK2E,MAAMC,MACzBlC,GAAW,IAAIC,UAAQ4G,GAAKhI,mBAC5BqB,GAAW,IAAID,UAAQ4G,GAAK5H,mBAC5BkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA5CpC,EA+CnBkC,aAAe,WACdqE,GAAKD,MACL5G,GAAW,IAAIC,UAAQ4G,GAAKhI,mBAC5BqB,GAAW,IAAID,UAAQ4G,GAAK5H,mBAC5BkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAxDpC,EA2DnBmC,aAAe,WACdoE,GAAKtI,OAAO,EAAK0D,MAAMC,KAAM,EAAKD,MAAMS,kBACxC1C,GAAW,IAAIC,UAAQ4G,GAAKhI,mBAC5BqB,GAAW,IAAID,UAAQ4G,GAAK5H,mBAC5BkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KApEpC,EAuEnBuC,aAAe,WACd,IAAI5F,EAAO4J,GAAKnI,OAAO,EAAKuD,MAAMC,MAC9B,GAAK/C,SAASlC,KACjBgB,QAAQC,IAAIjB,EAAK,eACR+C,GAAW,IAAIC,UAAQ4G,GAAKhI,mBAC5BqB,GAAW,IAAID,UAAQ4G,GAAK5H,mBACrCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERA,GAAS4C,IAAI,CAACzD,KAAMF,SAASlC,GAAOL,GAAIuC,SAASlC,GAAO8F,MAAM5D,SAASlC,GAAM2D,MAAM,CAACA,MAAM,cAI3F,EAAKwB,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KArFpC,EAyFnB0C,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,qBAAtBmB,EAASE,WAAuD,QAAnBF,EAASG,OAAiB,CAG1E,IAAK,IAAIzE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAC1CV,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7BkI,GAAKvJ,SAAS2F,EAASvD,QAAQf,GAAGc,YAGnCO,GAAW,IAAIC,UAAQ4G,GAAKhI,mBAC5BqB,GAAW,IAAID,UAAQ4G,GAAK5H,mBAC5BkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAKtDgD,MAAM,oDA/GP,EAAKrB,MAAQ,CAEZC,KAAM,GACNQ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAXP,E,qDAcnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAgGX,WAAU,IAAD,OACP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,OAAOtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAElI,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,uBAED,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,mBAAmB3F,UAAU,eAAewI,YAAY,SAAStI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMS,iBAAkBiC,SAAUzH,KAAKmH,sBAE5J,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4F,gBAAtE,0BAED,qBAAKvG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAeW,QAAS,kBAAM,EAAKgG,gBAAnE,sBAED,qBAAK3G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAeW,QAAS,kBAAM,EAAKmG,kBAAnE,yBAED,qBAAK9G,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,WAAWuI,SAAUzH,KAAKgE,qBAE1E,qBAAKhF,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAhL3B6C,aCrBJnI,G,WAVd,WAAYoJ,GAAO,oBAClBlJ,KAAKC,UAAY,KACjBD,KAAKkJ,MAAQA,E,iDAGd,WAAiB,OAAOlJ,KAAKC,Y,2BAC7B,SAAc4J,GAAY7J,KAAKC,UAAU4J,I,uBACzC,WAAa,OAAO7J,KAAKkJ,Q,uBACzB,SAAUA,GAAQlJ,KAAKkJ,MAAMA,M,KCiGfY,G,4DAxGdpB,QAAQ,K,KAMRJ,YAAc,WAAO,OAAO,EAAKI,S,KACjCN,YAAc,SAACM,GAAa,EAAKA,QAAUA,G,KAC3CjI,WAAa,WAAO,OAAO,EAAKmC,Q,KAChCpC,WAAa,SAACoC,GAAY,EAAKA,OAASA,G,KACxCtC,UAAY,WACX,OAAuB,MAApB,EAAKgI,e,KAMTlI,SAAW,SAAC8I,GACX,IAAIa,EAAO,IAAIjK,GAAKoJ,GACC,GAAlB,EAAK5I,aACP,EAAK8H,YAAY2B,GACjB,EAAKvJ,WAAWuJ,KAEhB,EAAKtJ,aAAaC,cAAcqJ,GAChC,EAAKvJ,WAAWuJ,K,KAGlBC,WAAa,WACD,EAAKtB,QAEhB,EAAKN,YAAY,EAAKE,cAAcpH,kB,KAErCM,OAAS,SAACzB,GACT,IAAIgK,EAAO,EAAKzB,cACZ7G,EAAE,EACN,GAAuB,GAApB,EAAKnB,YASP,OAAO,EARP,EAAE,CACD,GAAGyJ,EAAKE,aAAelK,EACtB,OAAO0B,EAERA,IACAsI,EAAOA,EAAK7I,sBACE,MAAR6I,GAIR,OAAO,G,KAER1I,OAAS,SAACtB,EAAMuB,GACT,IAAIL,EAAc,EAAKqH,cACvB,GAAwB,GAApB,EAAKhI,YACL,GACQW,EAAYgJ,aAAelK,GAC3BkB,EAAYiJ,UAAU5I,GAE1BL,EAAcA,EAAYC,sBACR,MAAfD,I,KAIlBmI,SAAW,WACV,IAAIW,EAAO,EAAKzB,cAChB,GACCvH,QAAQC,IAAI+I,EAAKE,aACjBF,EAAKA,EAAK7I,sBACE,MAAN6I,I,KAERpI,gBAAkB,WACjB,IAAIoI,EAAO,EAAKzB,cACZ1G,EAAM,GACV,GAAqB,GAAlB,EAAKtB,YAAmB,CAC1B,IAAIpB,EAAK,EACT,GACC0C,EAAIC,KAAK,CAAC3C,GAAIA,EAAI4C,MAAOiI,EAAKE,cAC9BF,EAAKA,EAAK7I,gBACVhC,UACc,MAAR6K,GAER,OAAOnI,G,KAERG,gBAAkB,WACjB,IAAIgI,EAAO,EAAKzB,cACZ1G,EAAM,GACV,GAAqB,GAAlB,EAAKtB,YAAmB,CAC1B,IAAImB,EAAI,EACR,EAAE,CACD,GAA6B,MAAxBsI,EAAK7I,gBAAyB,CAClC,IAAIiJ,EAAWlI,SAASR,GACpB2I,EAAgBnI,SAASkI,GAAclI,SAAS,GAC9C,GAAHR,GACFG,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG,EAAG0C,OAAQ,OAEhB,GAAd+H,GAAwC,GAAjBC,GACzBxI,EAAIC,KAAK,CAACM,KAAKF,SAASkI,GAAazK,GAAGuC,SAASmI,GAAgBhI,OAAQ,OAG3E2H,EAAOA,EAAK7I,gBACZO,UACc,MAARsI,GAER,OAAOnI,G,+CAlGR,WACC5B,KAAK0I,QAAS,KACd1I,KAAK4C,OAAO,S,KCDVyH,GAAiB,IAAIP,GACrBQ,GAAQ,IAAIvH,UAAQsH,GAAe1I,mBACnC4I,GAAU,IAAIxH,UAAQsH,GAAetI,mBACrCyI,GAAQ,CAACtH,MAAMoH,GAAOrF,MAAMsF,IAC5BnH,GAAU,CACZC,QAAS,CACPC,eAAe,EACfC,UAAW,CACTC,aAAc,MAGlBN,MAAM,CACAO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cA+Lb8G,G,kDAtLb,WAAY1G,GAAQ,IAAD,8BACjB,cAAMA,IA0BRC,iBAAmB,SAACC,GAClB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACd,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WAhCzC,EAqCnB6F,YAAc,WACZL,GAAejK,SAAS,EAAK2E,MAAM4F,SACnCL,GAAQ,IAAIvH,UAAQsH,GAAe1I,mBACnC4I,GAAU,IAAIxH,UAAQsH,GAAetI,mBACrCyI,GAAQ,CAACtH,MAAMoH,GAAOrF,MAAMsF,IAC5B,EAAKrF,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASmF,GAAOpH,KA1CtC,EA4CnBwH,aAAe,WACbP,GAAeL,aACfM,GAAQ,IAAIvH,UAAQsH,GAAe1I,mBACnC4I,GAAU,IAAIxH,UAAQsH,GAAetI,mBACrCyI,GAAQ,CAACtH,MAAMoH,GAAOrF,MAAMsF,IAC5B,EAAKrF,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASmF,GAAOpH,KAjDtC,EAmDnByH,eAAiB,WACfR,GAAehJ,OAAO,EAAK0D,MAAM4F,QAAS,EAAK5F,MAAMS,kBACrD8E,GAAQ,IAAIvH,UAAQsH,GAAe1I,mBACnC4I,GAAU,IAAIxH,UAAQsH,GAAetI,mBACrCyI,GAAQ,CAACtH,MAAMoH,GAAOrF,MAAMsF,IAC5B,EAAKrF,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASmF,GAAOpH,KAxDtC,EA0DnB0H,WAAa,WACX,IAAI/K,EAAOsK,GAAe7I,OAAO,EAAKuD,MAAM4F,SACxC,GAAK5K,IACPuK,GAAQ,IAAIvH,UAAQsH,GAAe1I,mBACnC4I,GAAU,IAAIxH,UAAQsH,GAAetI,mBACrCyI,GAAQ,CACNtH,MAAOoH,GACPrF,MAAOsF,IAETA,GAAQ3E,IAAI,CAACzD,KAAMF,SAASlC,GAAOL,GAAIuC,SAASlC,GAAO8F,MAAM5D,SAASlC,GAAM2D,MAAM,CAACA,MAAM,cAE3F,EAAKwB,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASmF,GAAOpH,KArEtC,EAwEnB0C,eAAiB,WAEjB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,qBAAtBmB,EAASE,WAAuD,QAAnBF,EAASG,OAAiB,CAG1E,IAAK,IAAIzE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAC1CV,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7B4I,GAAejK,SAAS2F,EAASvD,QAAQf,GAAGc,YAG7C+H,GAAQ,IAAIvH,UAAQsH,GAAe1I,mBAChC4I,GAAU,IAAIxH,UAAQsH,GAAetI,mBACrCyI,GAAQ,CACNtH,MAAOoH,GACPrF,MAAOsF,IAGT,EAAKrF,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASmF,GAAOpH,SAK1DgD,MAAM,oDA9FL,EAAKrB,MAAQ,CACX4F,QAAS,GACTnF,iBAAkB,GAClBuF,cAAc,GACdC,YAAa,GACbC,MAAO,IACVvG,SAAU,GACVE,YAAa,IAEZ,EAAKM,QAAU,GACf,EAAKE,OAAS8B,sBACd,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAbR,E,qDAgBnB,WACEpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASmF,GAAOpH,M,+BAEzD,SAAkBa,GAChB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBA6EZ,WAAU,IAAD,OACP,OACE,qCACA,qBAAK7G,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBAAOA,UAAU,0BAGrB,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,uBAAOC,KAAK,OAAO5C,KAAK,UAAU3F,UAAU,eAAewI,YAAY,OAAOtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM4F,QAASlD,SAAUzH,KAAKmH,sBAEzI,qBAAKnI,UAAU,WAAf,SACE,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+K,eAAtE,uBAEF,qBAAK1L,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,uBAAOC,KAAK,OAAO5C,KAAK,mBAAmB3F,UAAU,eAAewI,YAAY,SAAStI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMS,iBAAkBiC,SAAUzH,KAAKmH,sBAE7J,qBAAKnI,UAAU,WAAf,SACE,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKkL,kBAAtE,+BAEF,qBAAK7L,UAAU,WAAf,SACE,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAKiL,gBAArE,wBAEF,qBAAK5L,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,wBAAQC,KAAK,SAASvI,UAAU,eAAeW,QAAS,kBAAM,EAAKmL,cAAnE,sBAEF,qBAAK9L,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,wBAAQC,KAAK,SAASvI,UAAU,eAAeW,QAAS,kBAAM,EAAKmG,kBAAnE,yBAEF,qBAAK9G,UAAU,WAAf,SACE,uBAAOA,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,WAAWuI,SAAUzH,KAAKgE,qBAE3E,qBAAKhF,UAAU,WAAf,SACE,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,0BAGJ,qBAAK1I,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAaqI,MAAO,CAACC,WAAY,OAAhD,SACE,2BAAUI,MAAM,aAAhB,UACE,+CACA,qBAAKA,MAAM,aAAX,SACE,wBAAOA,MAAM,mBAAb,UACE,uBAAOH,KAAK,QAAQG,MAAM,mBAAmB/C,KAAK,gBAAgBzF,GAAG,iBAAiB2G,MAAM,YAD9F,UAKF,qBAAK6B,MAAM,aAAX,SACE,wBAAOA,MAAM,mBAAb,UACE,uBAAOH,KAAK,QAAQG,MAAM,mBAAmB/C,KAAK,gBAAgBzF,GAAG,iBAAiB2G,MAAM,YAD9F,iBAQR,qBAAK7G,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBAAOA,UAAU,0BAGrB,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,sDAEF,qBAAKtI,UAAU,WAAf,SACE,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,QAAQ8C,SAAUzH,KAAKmH,sBAEpH,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,8CAAiBtH,KAAK+E,MAAMkG,cAIhC,qBAAKjM,UAAU,QAGf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAlL9B6C,aCfJnI,G,WAdd,WAAYoJ,GAAO,oBAClBlJ,KAAKC,UAAY,KACjBD,KAAKkJ,MAAQA,EACblJ,KAAKkL,UAAY,E,iDAGlB,WAAiB,OAAOlL,KAAKC,Y,2BAC7B,SAAc4J,GAAY7J,KAAKC,UAAU4J,I,uBACzC,WAAa,OAAO7J,KAAKkJ,Q,uBACzB,SAAUA,GAAQlJ,KAAKkJ,MAAMA,I,2BAC7B,WAAgB,OAAOlJ,KAAKkL,Y,2BAC5B,SAAchC,GAAOlJ,KAAKkL,UAAUhC,M,KCVjCiC,GAAgB,I,4DCCnBzC,QAAQ,K,KAMRJ,YAAc,WAAO,OAAO,EAAKI,S,KACjCN,YAAc,SAACM,GAAa,EAAKA,QAAUA,G,KAC3CjI,WAAa,WAAO,OAAO,EAAKmC,Q,KAChCpC,WAAa,SAACoC,GAAY,EAAKA,OAASA,G,KACxCtC,UAAY,WACX,OAAuB,MAApB,EAAKgI,e,KAMT8C,QAAU,SAAClC,EAAOgC,GACjB,IAAIrB,EAAY,IAAI/J,GAAKoJ,GACX,MAAXgC,GAA8B,IAAXA,IACrBnK,QAAQC,IAAI,SACZ6I,EAAUwB,cAAcH,IAEzB,IAAInB,EAAO,EAAKzB,cACZgD,GAAO,EACX,GAAqB,GAAlB,EAAKhL,YACP,EAAK8H,YAAYyB,GACjB,EAAKrJ,WAAWqJ,QAIhB,GAFA9I,QAAQC,IAAI+I,EAAKwB,iBACjBxK,QAAQC,IAAIkK,GACE,MAAXA,GAA8B,IAAXA,EACrB,GACCnK,QAAQC,IAAI,kBACa,MAAtB+I,EAAK7I,iBACP,EAAKT,aAAaC,cAAcmJ,GAChC,EAAKrJ,WAAWqJ,GAChByB,GAAM,IAENvK,QAAQC,IAAI+I,EAAKwB,iBACjBxK,QAAQC,IAAIkK,GACRA,GAAanB,EAAKwB,iBACrBxK,QAAQC,IAAI,eACZ6I,EAAUnJ,cAAcqJ,EAAK7I,iBAC7B6I,EAAKrJ,cAAcmJ,GACnByB,GAAM,GACEJ,EAAUnB,EAAKwB,kBACvBxK,QAAQC,IAAI,qBAC6B,GAAtC+I,EAAK7I,gBAAgBqK,iBAMfL,GAAWnB,EAAK7I,gBAAgBqK,mBALxC1B,EAAUnJ,cAAcqJ,EAAK7I,iBAC7B6I,EAAKrJ,cAAcmJ,GACnB,EAAKpJ,aAAaC,cAAcmJ,GAChC,EAAKrJ,WAAWqJ,GAChByB,GAAM,KAUTvB,EAAOA,EAAK7I,sBACE,MAAR6I,GAAuB,GAAPuB,QAEvB,EAAK7K,aAAaC,cAAcmJ,GAChC,EAAKrJ,WAAWqJ,I,KAInBG,WAAa,WACD,EAAKtB,QAEhB,EAAKN,YAAY,EAAKE,cAAcpH,kB,KAErCsK,OAAS,SAACzL,GACT,IAAIgK,EAAO,EAAKzB,cACZ7G,EAAE,EACN,GAAuB,GAApB,EAAKnB,YASP,OAAO,EARP,EAAE,CACD,GAAGyJ,EAAKE,aAAelK,EACtB,OAAO0B,EAERA,IACAsI,EAAOA,EAAK7I,sBACE,MAAR6I,GAIR,OAAO,G,KAGRX,SAAW,WACV,IAAIW,EAAO,EAAKzB,cAChB,GACCvH,QAAQC,IAAI+I,EAAKE,aACjBF,EAAKA,EAAK7I,sBACE,MAAN6I,I,KAER0B,gBAAkB,WACjB,IAAI1B,EAAO,EAAKzB,cACZ1G,EAAM,GACV,GAAqB,GAAlB,EAAKtB,YAAmB,CAC1B,IAAIpB,EAAK,EACT,GACC0C,EAAIC,KAAK,CAAC3C,GAAIA,EAAI4C,MAAOiI,EAAKE,cAC9BF,EAAKA,EAAK7I,gBACVhC,UACc,MAAR6K,GAER,OAAOnI,G,KAER8J,gBAAkB,WACjB,IAAI3B,EAAO,EAAKzB,cACZ1G,EAAM,GACV,GAAqB,GAAlB,EAAKtB,YAAmB,CAC1B,IAAImB,EAAI,EACR,EAAE,CACD,GAA6B,MAAxBsI,EAAK7I,gBAAyB,CAClC,IAAIiJ,EAAWlI,SAASR,GACpB2I,EAAgBnI,SAASkI,GAAclI,SAAS,GAC9C,GAAHR,GACFG,EAAIC,KAAK,CAACM,KAAK,EAAGzC,GAAG,EAAG0C,OAAQ,OAEhB,GAAd+H,GAAwC,GAAjBC,GACzBxI,EAAIC,KAAK,CAACM,KAAKF,SAASkI,GAAazK,GAAGuC,SAASmI,GAAgBhI,OAAQ,OAG3E2H,EAAOA,EAAK7I,gBACZO,UACc,MAARsI,GAER,OAAOnI,G,+CAnIR,WACC5B,KAAK0I,QAAS,KACd1I,KAAK4C,OAAO,S,MDJV0H,GAAQ,IAAIvH,UAAQoI,GAAcM,mBAClClB,GAAU,IAAIxH,UAAQoI,GAAcO,mBAGpClB,GAAQ,CACXtH,MAAOoH,GACPnH,KAAMoH,IAGHnH,GAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cAoHbgI,G,kDA5Gb,WAAY5H,GAAQ,IAAD,8BACjB,cAAMA,IAsBR2G,YAAc,WACZS,GAAcC,QAAQ,EAAKrG,MAAM4F,QAAS,EAAK5F,MAAMmG,WACrDZ,GAAQ,IAAIvH,UAAQoI,GAAcM,mBAClClB,GAAU,IAAIxH,UAAQoI,GAAcO,mBACpClB,GAAQ,CAACtH,MAAMoH,GAAOrF,MAAMsF,IAC5B,EAAKrF,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASmF,GAAOpH,KA5BtC,EA8BnBwH,aAAe,WACbO,GAAcnB,aACdM,GAAQ,IAAIvH,UAAQoI,GAAcM,mBAClClB,GAAU,IAAIxH,UAAQoI,GAAcO,mBACpClB,GAAQ,CAACtH,MAAMoH,GAAOrF,MAAMsF,IAC5B,EAAKrF,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASmF,GAAOpH,KAnCtC,EAqCnB0H,WAAa,WACX,IAAI/K,EAAOoL,GAAcK,OAAO,EAAKzG,MAAM4F,SACvC,GAAK5K,IACPuK,GAAQ,IAAIvH,UAAQoI,GAAcM,mBAClClB,GAAU,IAAIxH,UAAQoI,GAAcO,mBACpClB,GAAQ,CACNtH,MAAOoH,GACPrF,MAAOsF,IAETA,GAAQ3E,IAAI,CAACzD,KAAMF,SAASlC,GAAOL,GAAIuC,SAASlC,GAAO8F,MAAM5D,SAASlC,GAAM2D,MAAM,CAACA,MAAM,cAE3F,EAAKwB,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASmF,GAAOpH,KA9CvD,EAAK2B,MAAQ,CACX4F,QAAS,GACTO,UAAU,GACVF,YAAa,GACbC,MAAO,KAET,EAAK/F,QAAU,GACf,EAAKE,OAAS8B,sBACd,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAVR,E,qDAanB,WACEpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASmF,GAAOpH,M,+BAEzD,SAAkBa,GAChB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBA+BZ,WAAU,IAAD,OACP,OACE,qCACA,qBAAK7G,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBAAOA,UAAU,0BAGrB,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,uBAAOC,KAAK,OAAO5C,KAAK,UAAU3F,UAAU,eAAewI,YAAY,OAAOtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM4F,QAASlD,SAAUzH,KAAKmH,sBAEzI,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,uBAAOC,KAAK,OAAO5C,KAAK,YAAY3F,UAAU,eAAewI,YAAY,YAAYtI,GAAG,iBAAiB2G,MAAO7F,KAAK+E,MAAMmG,UAAWzD,SAAUzH,KAAKmH,sBAEvJ,qBAAKnI,UAAU,WAAf,SACE,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+K,eAAtE,uBAEF,qBAAK1L,UAAU,WAAf,SACE,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAKiL,gBAArE,wBAEF,qBAAK5L,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,wBAAQC,KAAK,SAASvI,UAAU,eAAeW,QAAS,kBAAM,EAAKmL,cAAnE,sBAEF,qBAAK9L,UAAU,WAAf,SACE,uBAAOA,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,eAEjD,qBAAKF,UAAU,WAAf,SACE,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,0BAGJ,qBAAK1I,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBAAOA,UAAU,0BAGrB,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,sDAEF,qBAAKtI,UAAU,WAAf,SACE,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,QAAQ8C,SAAUzH,KAAKmH,sBAEpH,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACE,8CAAiBtH,KAAK+E,MAAMkG,cAIhC,qBAAKjM,UAAU,QAGf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAxGrB6C,aE7BxB2D,GAAU,ICFV,aAAc,IAAD,gCAIbxL,SAAW,SAACL,GACR,EAAK8L,MAAMhK,KAAK9B,IALP,KAQb+L,qBAAuB,WAEnB,IAAK,IAAIrK,EAAK,EAAKoK,MAAM1F,OAAS,EAAI1E,GAAK,EAAGA,IAC1C,IAAK,IAAIsK,EAAI,EAAGA,EAAItK,EAAGsK,IACnB,GAAG,EAAKF,MAAME,GAAI,EAAKF,MAAME,EAAE,GAAG,CAC9B,IAAIxD,EAAO,EAAKsD,MAAME,GACtB,EAAKF,MAAME,GAAK,EAAKF,MAAME,EAAE,GAC7B,EAAKF,MAAME,EAAE,GAAKxD,IAfrB,KAqBb5G,gBAAkB,WAGd,IADA,IAAIC,EAAM,GACDH,EAAI,EAAGA,EAAE,EAAKoK,MAAM1F,OAAO1E,IAChCV,QAAQC,IAAI,EAAK6K,MAAMpK,IACvBG,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAO,EAAK+J,MAAMpK,KAGtC,OAAOG,GA7BE,KAiCbG,gBAAkB,WAGd,IADA,IAAIH,EAAM,GACDH,EAAI,EAAGA,EAAE,EAAKoK,MAAM1F,OAAO1E,IAEhC,GAAuB,MAAnB,EAAKoK,MAAMpK,EAAE,GAAW,CAExB,IAAIO,EAAUC,SAASR,GACnBS,EAAUD,SAASD,GAAWC,SAAS,GAC3CL,EAAIC,KAAK,CAACM,KAAKH,EAAStC,GAAGwC,EAASE,OAAQ,OAIpD,OAAOR,GA7CP5B,KAAK6L,MAAQ,IDEjB/I,GAAW,IAAIC,UAAQ6I,GAAQjK,mBAC/BqB,GAAW,IAAID,UAAQ6I,GAAQ7J,mBAG/BkB,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAGHI,GAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cAuIXqI,G,kDA9HhB,WAAYjI,GAAQ,IAAD,8BAClB,cAAMA,IAsBPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA5BvC,EAgCnBiB,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aACvC,GAA0B,qBAAtBmB,EAASE,WAAuD,gBAAnBF,EAASG,OAAyB,CAGlF,IAAK,IAAIzE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAE1CmK,GAAQxL,SAAS2F,EAASvD,QAAQf,GAAGc,YAGtCO,GAAW,IAAIC,UAAQ6I,GAAQjK,mBAC/BqB,GAAW,IAAID,UAAQ6I,GAAQ7J,mBAC/BkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAKtDgD,MAAM,6DAvDW,EA4DnB6F,mBAAqB,WAEpBL,GAAQE,uBACRhJ,GAAW,IAAIC,UAAQ6I,GAAQjK,mBAC9BqB,GAAW,IAAID,UAAQ6I,GAAQ7J,mBAC/BkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KApEvD,EAAK2B,MAAQ,CACZL,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBARP,E,qDAWnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAwDX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOtI,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,qBAE5D,qBAAKhF,UAAU,aAEf,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKsM,sBAAtE,uBAED,qBAAKjN,UAAU,WAAWqI,MAAO,CAAC6E,YAAa,OAA/C,SACC,wBAAQ3E,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAzHxB6C,aE/BlBkE,GAAY,ICFf,aAAc,IAAD,gCAIb/L,SAAW,SAACL,GACX,EAAK8L,MAAMhK,KAAK9B,IALJ,KASVqM,uBAAyB,WAE3B,IAAI,IAAI3K,EAAI,EAAGA,EAAI,EAAKoK,MAAM1F,OAAQ1E,IAAI,CAGzC,IAFA,IAAI0H,EAAM,EAAK0C,MAAMpK,GACjB8G,EAAO9G,EAAI,EACT0H,EAAM,EAAK0C,MAAMtD,IAASA,GAAQ,GACvC,EAAKsD,MAAMtD,EAAK,GAAK,EAAKsD,MAAMtD,GAChCA,GAAc,EAIX,EAAKsD,MAAMtD,IAASY,EACtB,EAAK0C,MAAMtD,EAAK,GAAKY,GAEtB,EAAK0C,MAAMtD,EAAK,GAAK,EAAKsD,MAAMtD,GAChC,EAAKsD,MAAMtD,GAAQY,KAxBT,KAgCVxH,gBAAkB,WAGd,IADA,IAAIC,EAAM,GACDH,EAAI,EAAGA,EAAE,EAAKoK,MAAM1F,OAAO1E,IAChCV,QAAQC,IAAI,EAAK6K,MAAMpK,IACvBG,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAO,EAAK+J,MAAMpK,KAGtC,OAAOG,GAxCD,KA4CVG,gBAAkB,WAGd,IADA,IAAIH,EAAM,GACDH,EAAI,EAAGA,EAAE,EAAKoK,MAAM1F,OAAO1E,IAEhC,GAAuB,MAAnB,EAAKoK,MAAMpK,EAAE,GAAW,CAExB,IAAIO,EAAUC,SAASR,GACnBS,EAAUD,SAASD,GAAWC,SAAS,GAC3CL,EAAIC,KAAK,CAACM,KAAKH,EAAStC,GAAGwC,EAASE,OAAQ,OAIpD,OAAOR,GAxDb5B,KAAK6L,MAAQ,IDEX/I,GAAW,IAAIC,UAAQoJ,GAAUxK,mBACjCqB,GAAW,IAAID,UAAQoJ,GAAUpK,mBAGjCkB,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAGHI,GAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cAuIb0I,G,kDA9Hd,WAAYtI,GAAQ,IAAD,8BAClB,cAAMA,IAsBPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA5BvC,EAgCnBiB,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aACvC,GAA0B,qBAAtBmB,EAASE,WAAuD,gBAAnBF,EAASG,OAAyB,CAGlF,IAAK,IAAIzE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAE1C0K,GAAU/L,SAAS2F,EAASvD,QAAQf,GAAGc,YAGxCO,GAAW,IAAIC,UAAQoJ,GAAUxK,mBACjCqB,GAAW,IAAID,UAAQoJ,GAAUpK,mBACjCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAKtDgD,MAAM,6DAvDW,EA4DnB6F,mBAAqB,WAEpBE,GAAUC,yBACVtJ,GAAW,IAAIC,UAAQoJ,GAAUxK,mBACjCqB,GAAW,IAAID,UAAQoJ,GAAUpK,mBACjCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KApEtD,EAAK2B,MAAQ,CACZL,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBARP,E,qDAWnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAwDX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOtI,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,qBAE5D,qBAAKhF,UAAU,aAEf,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKsM,sBAAtE,uBAED,qBAAKjN,UAAU,WAAWqI,MAAO,CAAC6E,YAAa,OAA/C,SACC,wBAAQ3E,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAzHtB6C,aE/BpBqE,GAAY,ICFf,aAAc,IAAD,gCAIblM,SAAW,SAACL,GACX,EAAK8L,MAAMhK,KAAK9B,IALJ,KASbwM,uBAAyB,WAEb,EAAKV,MAAM1F,OAEtB,IAFA,IAA8BoC,EAAMY,EAE1B1H,EAAI,EAAGA,EAAI,EAAKoK,MAAM1F,OAAQ1E,IAAM,CAE7C,IADD0H,EAAM,EAAK0C,MAAMpK,GACV8G,EAAO9G,EAAI,EAAG8G,GAAQ,GAAK,EAAKsD,MAAMtD,GAAQY,EAAKZ,IACxD,EAAKsD,MAAOtD,EAAO,GAAM,EAAKsD,MAAMtD,GAEtC,EAAKsD,MAAOtD,EAAO,GAAMY,IAlBb,KAwBVxH,gBAAkB,WAGd,IADA,IAAIC,EAAM,GACDH,EAAI,EAAGA,EAAE,EAAKoK,MAAM1F,OAAO1E,IAChCV,QAAQC,IAAI,EAAK6K,MAAMpK,IACvBG,EAAIC,KAAK,CAAC3C,GAAGuC,EAAGK,MAAO,EAAK+J,MAAMpK,KAGtC,OAAOG,GAhCD,KAoCVG,gBAAkB,WAGd,IADA,IAAIH,EAAM,GACDH,EAAI,EAAGA,EAAE,EAAKoK,MAAM1F,OAAO1E,IAEhC,GAAuB,MAAnB,EAAKoK,MAAMpK,EAAE,GAAW,CAExB,IAAIO,EAAUC,SAASR,GACnBS,EAAUD,SAASD,GAAWC,SAAS,GAC3CL,EAAIC,KAAK,CAACM,KAAKH,EAAStC,GAAGwC,EAASE,OAAQ,OAIpD,OAAOR,GAhDb5B,KAAK6L,MAAQ,IDEX/I,GAAW,IAAIC,UAAQuJ,GAAU3K,mBACjCqB,GAAW,IAAID,UAAQuJ,GAAUvK,mBAGjCkB,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAGHI,GAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cAuIb6I,G,kDA9Hd,WAAYzI,GAAQ,IAAD,8BAClB,cAAMA,IAsBPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA5BvC,EAgCnBiB,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aACvC,GAA0B,qBAAtBmB,EAASE,WAAuD,gBAAnBF,EAASG,OAAyB,CAGlF,IAAK,IAAIzE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAE1C6K,GAAUlM,SAAS2F,EAASvD,QAAQf,GAAGc,YAGxCO,GAAW,IAAIC,UAAQuJ,GAAU3K,mBACjCqB,GAAW,IAAID,UAAQuJ,GAAUvK,mBACjCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAKtDgD,MAAM,6DAvDW,EA4DnB6F,mBAAqB,WAEpBK,GAAUC,yBACVzJ,GAAW,IAAIC,UAAQuJ,GAAU3K,mBACjCqB,GAAW,IAAID,UAAQuJ,GAAUvK,mBACjCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KApEtD,EAAK2B,MAAQ,CACZL,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBARP,E,qDAWnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAwDX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOtI,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,qBAE5D,qBAAKhF,UAAU,aAEf,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKsM,sBAAtE,uBAED,qBAAKjN,UAAU,WAAWqI,MAAO,CAAC6E,YAAa,OAA/C,SACC,wBAAQ3E,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAzHtB6C,aEjCT,SAASwE,KACvB,MAAyB3N,mBAAS,IAAlC,mBACA,GADA,UACyBA,mBAAS,MAAlC,mBAAOmM,EAAP,KAAayB,EAAb,KAEA,OACC,qCACC,qBAAK1N,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOtI,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,eAEhD,qBAAKF,UAAU,aAEf,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAhC,uBAED,qBAAKA,UAAU,WAAWqI,MAAO,CAAC6E,YAAa,OAA/C,SACC,wBAAQ3E,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,YAAY8C,SAAU,SAACxD,GAAD,OAAOyI,EAASzI,EAAEE,OAAO0B,YAE3I,qBAAK7G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,8CAAiB2D,UAGnB,qBAAKjM,UAAU,WCxCH,SAAS2N,KACvB,MAAyB7N,mBAAS,IAAlC,mBACA,GADA,UACyBA,mBAAS,MAAlC,mBAAOmM,EAAP,KAAayB,EAAb,KAEA,OACC,qCACC,qBAAK1N,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAOvI,UAAU,eAAewI,YAAY,eAAetI,GAAG,gBAE3E,qBAAKF,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAhC,uBAED,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAhC,wBAED,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAhC,0BAED,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAhC,sBAED,qBAAKA,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,eAEhD,qBAAKF,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,YAAY8C,SAAU,SAACxD,GAAD,OAAOyI,EAASzI,EAAEE,OAAO0B,YAE3I,qBAAK7G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,8CAAiB2D,UAGnB,qBAAKjM,UAAU,WClDH,SAAS4N,KACvB,MAAyB9N,mBAAS,IAAlC,mBACA,GADA,UACyBA,mBAAS,MAAlC,mBAAOmM,EAAP,KAAayB,EAAb,KAEA,OACC,qCACC,qBAAK1N,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAOvI,UAAU,eAAewI,YAAY,eAAetI,GAAG,gBAE3E,qBAAKF,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAhC,uBAED,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAhC,wBAED,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAhC,0BAED,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAhC,sBAED,qBAAKA,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,eAEhD,qBAAKF,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,YAAY8C,SAAU,SAACxD,GAAD,OAAOyI,EAASzI,EAAEE,OAAO0B,YAE3I,qBAAK7G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,8CAAiB2D,UAGnB,qBAAKjM,UAAU,WClDH,SAAS6N,KACvB,MAAyB/N,mBAAS,IAAlC,mBACA,GADA,UACyBA,mBAAS,MAAlC,mBAAOmM,EAAP,KAAayB,EAAb,KAEA,OACC,qCACC,qBAAK1N,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAOvI,UAAU,eAAewI,YAAY,eAAetI,GAAG,gBAE3E,qBAAKF,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAhC,uBAED,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAhC,wBAED,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAhC,0BAED,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAhC,sBAED,qBAAKA,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,eAEhD,qBAAKF,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,YAAY8C,SAAU,SAACxD,GAAD,OAAOyI,EAASzI,EAAEE,OAAO0B,YAE3I,qBAAK7G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,8CAAiB2D,UAGnB,qBAAKjM,UAAU,WClDH,SAAS8N,KACvB,MAAyBhO,mBAAS,IAAlC,mBACA,GADA,UACyBA,mBAAS,MAAlC,mBAAOmM,EAAP,KAAayB,EAAb,KAEA,OACC,qCACC,qBAAK1N,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAOvI,UAAU,eAAewI,YAAY,eAAetI,GAAG,gBAE3E,qBAAKF,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAhC,uBAED,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAhC,wBAED,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAhC,0BAED,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,eAAhC,sBAED,qBAAKA,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOrI,GAAG,eAEhD,qBAAKF,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAA5B,0BAGF,qBAAK1I,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,YAAY8C,SAAU,SAACxD,GAAD,OAAOyI,EAASzI,EAAEE,OAAO0B,YAE3I,qBAAK7G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,8CAAiB2D,UAGnB,qBAAKjM,UAAU,W,UCkGH+N,GAnJd,WAAYtL,EAAEsK,GAAG,IAAD,gCAFhBiB,OAAO,GAES,KADhBC,SAAS,GACO,KAIhBC,MAAM,WAAK,OAAO,EAAKzL,GAJP,KAKhB0L,MAAM,SAAC1L,GAAK,EAAKA,EAAEA,GALH,KAMhB2L,MAAM,WAAK,OAAO,EAAKrB,GANP,KAOhBsB,MAAM,SAACtB,GAAK,EAAKA,EAAEA,GAPH,KAShBuB,kBAAkB,WACjB,EAAKN,OAAO,GACZ,EAAKC,SAAS,GAGd,IAFA,IAAIM,EAAQ,EAAKL,QACbM,EAAW,EAAKJ,QACZ3L,EAAE,EAAEA,EAAE8L,EAAM9L,IAAI,CAEvB,IADA,IAAIgM,EAAQ,GACJ1B,EAAE,EAAEA,EAAEyB,EAASzB,IACtB0B,EAAQ5L,KAAK,KAEd,EAAKmL,OAAOnL,KAAK4L,KAnBH,KAsBhBC,aAAa,SAACjM,EAAEsK,EAAEhM,GACb0B,EAAE,EAAKyL,SAAWnB,EAAE,EAAKqB,UAC5B,EAAKJ,OAAOvL,GAAGsK,GAAGhM,EAClBgB,QAAQC,IAAI,EAAKgM,UAzBH,KA4BhBW,kBAAkB,WACjB,EAAKV,SAAS,GACd,IAAI,IAAIxL,EAAE,EAAEA,EAAE,EAAKyL,QAAQzL,IAC1B,IAAI,IAAIsK,EAAE,EAAGA,EAAE,EAAKqB,QAAQrB,IAC3B,EAAKkB,SAASpL,KAAK,EAAKmL,OAAOvL,GAAGsK,KAhCrB,KAoChB6B,qBAAqB,WACpB,EAAKX,SAAS,GACd,IAAI,IAAIlB,EAAE,EAAGA,EAAE,EAAKqB,QAASrB,IAC5B,IAAI,IAAItK,EAAE,EAAGA,EAAE,EAAKyL,QAASzL,IAC5B,EAAKwL,SAASpL,KAAK,EAAKmL,OAAOvL,GAAGsK,KAxCrB,KA4ChB8B,mBAAmB,SAACC,EAAKC,GACxB,IAAIC,GAAQ,EAIZ,OAHIF,EAAK,EAAKZ,SAAWa,EAAQ,EAAKX,UACrCY,EAAQ/L,SAAS,EAAKmL,SAASU,EAAMC,GAE/BC,GAjDQ,KAmDhBC,sBAAsB,SAACH,EAAKC,GAC3B,IAAIC,GAAQ,EAIZ,OAHIF,EAAK,EAAKZ,SAAWa,EAAQ,EAAKX,UACrCY,EAAQ/L,SAAS,EAAKiL,SAASa,EAASD,GAElCE,GAxDQ,KA0DhBpD,aAAa,SAACkD,EAAKC,GACdD,EAAK,EAAKZ,SAAWa,EAAQ,EAAKX,UACrC,EAAKJ,OAAOc,GAAMC,GAAS,MA5Db,KA+DhBG,QAAQ,WAGP,IAFA,IAAIC,EAAU,GACVC,EAAW,GACP3M,EAAE,EAAEA,EAAE,EAAKwL,SAAS9G,OAAO1E,IAAI,CACtC,IAAI4H,EAAW,GAAK,EAAK4D,SAASxL,GAClC0M,EAAQtM,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOuH,IACxB5H,EAAE,GAAG,EAAKwL,SAAS9G,QACrBiI,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG+B,EAAE,EAAGW,OAAQ,OAGzC,MAAO,CAAC+L,EAAQC,IAzED,KA2EhBC,aAAa,WAIZ,IAHA,IAAIF,EAAU,GACVC,EAAW,GACXE,EAAS,EACL7M,EAAE,EAAGA,EAAE,EAAKyL,QAAQzL,IAC3B,IAAI,IAAIsK,EAAE,EAAGA,EAAE,EAAKqB,QAAQrB,IAAI,CAC/BhL,QAAQC,IAAI,MAAMS,EAAE,OAAQsK,EAAG,EAAKiB,OAAOvL,GAAGsK,IAC9C,IAAI1C,EAAW,GAAK,EAAK2D,OAAOvL,GAAGsK,GACnCoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAM9M,IAClD6M,IAIF,IAAI,IAAIvC,EAAE,EAAGA,EAAE,EAAKqB,QAASrB,IAE5B,IADA,IAAI5C,EAAI,EAAE4C,EACFtK,EAAE,EAAGA,EAAE,EAAKyL,QAAQzL,IACxBA,EAAE,EAAE,EAAKyL,SACXkB,EAASvM,KAAK,CAACM,KAAKgH,EAAKzJ,GAAIyJ,EAAI,EAAKiE,QAAS1J,MAAM,CAAE8K,QAAS,MAEjErF,GAAQ,EAAKiE,QAIf,MAAO,CAACe,EAAQC,IAlGD,KAoGhBK,qBAAqB,WAEjB,IADA,IAAIC,EAAO,wGAAoH,EAAKjN,EAAE,QAAQ,EAAKsK,EAAE,2BAC7ItK,EAAE,EAAGA,EAAE,EAAKuL,OAAO7G,OAAQ1E,IAClC,IAAI,IAAIsK,EAAE,EAAGA,EAAE,EAAKiB,OAAOvL,GAAG0E,OAAQ4F,IAAI,CACzC,IAAI4C,GAAW,EACdC,EAAS3M,SAAS,EAAK+K,OAAOvL,GAAGsK,IAClC8C,MAAMD,KACRD,GAAS,GAEG,GAAVA,EAEFD,GADAA,EAAOA,EAAO,4BAA8BjN,EAAE,SAASsK,EAAE,UAC3C,gBAAkB,EAAKiB,OAAOvL,GAAGsK,GAAG,YAE5B,KAAnB,EAAKiB,OAAOvL,GAAGsK,KAEjB2C,GADAA,EAAOA,EAAO,4BAA8BjN,EAAE,SAASsK,EAAE,UAC3C,gBAAmB,EAAKiB,OAAOvL,GAAGsK,GAAI,cAMrD,OADA2C,GAAa,UAxHD,KA2HbI,wBAAwB,WAEvB,IADA,IAAIJ,EAAO,2GAAuH,EAAKjN,EAAE,QAAQ,EAAKsK,EAAE,2BAChJtK,EAAE,EAAGA,EAAE,EAAKuL,OAAO7G,OAAQ1E,IAClC,IAAI,IAAIsK,EAAE,EAAGA,EAAE,EAAKiB,OAAOvL,GAAG0E,OAAQ4F,IAAI,CACzC,IAAI4C,GAAW,EACdC,EAAS3M,SAAS,EAAK+K,OAAOvL,GAAGsK,IAClC8C,MAAMD,KACRD,GAAS,GAEG,GAAVA,EAEFD,GADAA,EAAOA,EAAO,4BAA8BjN,EAAE,SAASsK,EAAE,UAC3C,gBAAkB,EAAKiB,OAAOvL,GAAGsK,GAAG,YAE5B,KAAnB,EAAKiB,OAAOvL,GAAGsK,KAEjB2C,GADAA,EAAOA,EAAO,4BAA8BjN,EAAE,SAASsK,EAAE,UAC3C,gBAAmB,EAAKiB,OAAOvL,GAAGsK,GAAI,cAMrD,OADA2C,GAAa,UA9IhB1O,KAAKyB,EAAEA,EACPzB,KAAK+L,EAAEA,GCFLgD,GAAc,IAAIhC,GAAM,EAAE,GAC1BjK,GAAW,IAAIC,UAAQ,IACvBC,GAAW,IAAID,UAAQ,IACvBiM,GAAY,IAAIjM,UAAQ,IACxBkM,GAAY,IAAIlM,UAAQ,IAGxBE,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAEHkM,GAAQ,CACXhM,MAAOJ,GACPK,KAAMH,IAEHI,GAAU,CACbF,MAAM,CACLiM,MAAO,MACJC,OAAQ,GACRC,gBAAiB,CACfC,QAAS,KAER7L,YAAa,IAEjB8L,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cAIjBC,GAAW,CACdzM,MAAM,CACLiM,MAAO,MACJC,OAAQ,GACRC,gBAAiB,CACfC,QAAS,KAER7L,YAAa,IAEjB8L,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cAkQJE,G,kDA1PhB,WAAY7L,GAAQ,IAAD,8BAClB,cAAMA,IAoCPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA1CvC,EA8CnBgL,eAAiB,WAChBd,GAAY5B,MAAMlL,SAAS,EAAK8C,MAAMwI,QACtCwB,GAAY1B,MAAMpL,SAAS,EAAK8C,MAAMyI,WACtCuB,GAAYzB,oBACZxK,GAAW,IAAIC,UAAQgM,GAAYV,eAAe,IAClDrL,GAAW,IAAID,UAAQgM,GAAYV,eAAe,IAClDpL,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,IACtDrC,QAAQC,IAAI,aA3DM,EA8DnB8D,UAAY,WACXiK,GAAYrB,aAAazL,SAAS,EAAK8C,MAAM+K,cAAc7N,SAAS,EAAK8C,MAAMgL,iBAAiB,EAAKhL,MAAMC,MAC3GlC,GAAW,IAAIC,UAAQgM,GAAYV,eAAe,IAClDrL,GAAW,IAAID,UAAQgM,GAAYV,eAAe,IAClDtN,QAAQC,IAAI8B,IACZG,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAvEpC,EA0EnBkC,aAAe,WACdyJ,GAAYnE,aAAa3I,SAAS,EAAK8C,MAAM+K,cAAc7N,SAAS,EAAK8C,MAAMgL,kBAC/EjN,GAAW,IAAIC,UAAQgM,GAAYV,eAAe,IAClDrL,GAAW,IAAID,UAAQgM,GAAYV,eAAe,IAClDtN,QAAQC,IAAI8B,IACZG,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAnFpC,EAsFnB4M,cAAgB,WACfjB,GAAYnB,uBACZoB,GAAY,IAAIjM,UAAQgM,GAAYb,UAAU,IAC9Ce,GAAY,IAAIlM,UAAQgM,GAAYb,UAAU,IAC9CnN,QAAQC,IAAI8B,IACZoM,GAAQ,CACPhM,MAAO8L,GACP/J,MAAOgK,IAER,EAAK/J,QAAU,IAAIC,UAAQ,EAAK8K,QAAQ5K,QAAS6J,GAAOS,KA/FtC,EAkGnBhK,aAAe,WACdqJ,GAAY,IAAIjM,UAAQgM,GAAYb,UAAU,IAC9Ce,GAAY,IAAIlM,UAAQgM,GAAYb,UAAU,IAC9C,IAAIF,EAASe,GAAYd,sBAAsBhM,SAAS,EAAK8C,MAAM+K,cAAc7N,SAAS,EAAK8C,MAAMgL,kBACrGd,GAAUrJ,IAAI,CAACzD,KAAMF,SAAS+L,GAAStO,GAAIuC,SAAS+L,GAAQnI,MAAM5D,SAAS+L,GAAQtK,MAAM,CAACA,MAAM,aAChGwL,GAAQ,CACPhM,MAAO8L,GACP/J,MAAOgK,IAER,EAAK/J,QAAU,IAAIC,UAAQ,EAAK8K,QAAQ5K,QAAS6J,GAAOS,KA3GtC,EA8GnB7J,eAAiB,WAChB,IACMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA2B,wBAAtBmB,EAASE,WAAwD,gBAAjBF,EAASG,OAAwB,CACrF6I,GAAY5B,MAAMlL,SAAS8D,EAASmK,EAAE,KACtCnB,GAAY1B,MAAMpL,SAAS8D,EAASmK,EAAE,KACtCnB,GAAYzB,oBACZ,IAAK,IAAI7L,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAC1CsN,GAAYrB,aAAazL,SAAS8D,EAASvD,QAAQf,GAAG0O,QAAQ,IAAIlO,SAAS8D,EAASvD,QAAQf,GAAG0O,QAAQ,IAAIpK,EAASvD,QAAQf,GAAGyH,OAEhIpG,GAAW,IAAIC,UAAQgM,GAAYV,eAAe,IAClDrL,GAAW,IAAID,UAAQgM,GAAYV,eAAe,IAClDpL,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAGtDgD,MAAM,kEAlIW,EAsInBC,eAAiB,WAChB,IAAMC,EAAUC,SAASC,cAAc,KACnCC,EAAYsI,GAAYD,0BACtBpI,EAAO,IAAIC,KAAK,CAACF,IACvBH,EAAQrH,KAAO2H,IAAIC,gBAAgBH,GAChCJ,EAAQQ,SAAW,mBACnBP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAQW,QACRb,MAAM,sBA5IT,EAAKrB,MAAQ,CACZqL,OAAQ,SACRC,QAAS,GACT9C,MAAO,GACPC,SAAU,GACVsC,aAAc,GACdC,gBAAiB,GACjB/K,KAAM,GACNQ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAGZ,EAAKM,QAAU,GACjB,EAAKoL,SAAW,GACd,EAAKlL,OAAS8B,sBACd,EAAK+I,QAAU/I,sBACjB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAnBP,E,qDAsBnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,gCAEvD,WACCpD,KAAKsQ,SAAW,IAAInL,UAAQnF,KAAKiQ,QAAQ5K,QAAS6J,GAAOS,M,+BAG1D,SAAkB1L,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAiHX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,QAAQ3F,UAAU,eAAewI,YAAY,qBAAqBtI,GAAG,aAAa2G,MAAO7F,KAAK+E,MAAMwI,MAAO9F,SAAUzH,KAAKmH,sBAErJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,WAAW3F,UAAU,eAAewI,YAAY,wBAAwBtI,GAAG,gBAAgB2G,MAAO7F,KAAK+E,MAAMyI,SAAU/F,SAAUzH,KAAKmH,sBAEjK,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKkQ,kBAAtE,iCAGF,qBAAK7Q,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,eAAe3F,UAAU,eAAewI,YAAY,WAAWtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM+K,aAAcrI,SAAUzH,KAAKmH,sBAEtJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,kBAAkB3F,UAAU,eAAewI,YAAY,cAActI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMgL,gBAAiBtI,SAAUzH,KAAKmH,sBAE/J,qBAAKnI,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,wBAG7D,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,4BAED,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,2BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKqQ,iBAAtE,oCAED,qBAAKhR,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAMF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKA,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,SAC3C,qBAAKpG,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKiQ,iB,GArPdhI,aCjD5BsI,GAAW,IAAIxD,GAAM,EAAE,GACvBjK,GAAW,IAAIC,UAAQ,IACvBC,GAAW,IAAID,UAAQ,IACvBiM,GAAY,IAAIjM,UAAQ,IACxBkM,GAAY,IAAIlM,UAAQ,IAGxBE,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAEHkM,GAAQ,CACXhM,MAAOJ,GACPK,KAAMH,IAEHI,GAAU,CACbF,MAAM,CACLiM,MAAO,MACJC,OAAQ,GACRC,gBAAiB,CACfC,QAAS,KAER7L,YAAa,IAEjB8L,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cAIjBC,GAAW,CACdzM,MAAM,CACLiM,MAAO,MACJC,OAAQ,GACRC,gBAAiB,CACfC,QAAS,KAER7L,YAAa,IAEjB8L,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cAkQJc,G,kDA1PhB,WAAYzM,GAAQ,IAAD,8BAClB,cAAMA,IAoCPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA1CvC,EA8CnBgL,eAAiB,WAChBU,GAASpD,MAAMlL,SAAS,EAAK8C,MAAMwI,QACnCgD,GAASlD,MAAMpL,SAAS,EAAK8C,MAAMyI,WACnC+C,GAASjD,oBACTxK,GAAW,IAAIC,UAAQwN,GAASlC,eAAe,IAC/CrL,GAAW,IAAID,UAAQwN,GAASlC,eAAe,IAC/CpL,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,IACtDrC,QAAQC,IAAI,aA3DM,EA8DnB8D,UAAY,WACXyL,GAAS7C,aAAazL,SAAS,EAAK8C,MAAM+K,cAAc7N,SAAS,EAAK8C,MAAMgL,iBAAiB,EAAKhL,MAAMC,MACxGlC,GAAW,IAAIC,UAAQwN,GAASlC,eAAe,IAC/CrL,GAAW,IAAID,UAAQwN,GAASlC,eAAe,IAC/CtN,QAAQC,IAAI8B,IACZG,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAvEpC,EA0EnBkC,aAAe,WACdiL,GAAS3F,aAAa3I,SAAS,EAAK8C,MAAM+K,cAAc7N,SAAS,EAAK8C,MAAMgL,kBAC5EjN,GAAW,IAAIC,UAAQwN,GAASlC,eAAe,IAC/CrL,GAAW,IAAID,UAAQwN,GAASlC,eAAe,IAC/CtN,QAAQC,IAAI8B,IACZG,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAnFpC,EAsFnB4M,cAAgB,WACfO,GAAS5C,oBACTqB,GAAY,IAAIjM,UAAQwN,GAASrC,UAAU,IAC3Ce,GAAY,IAAIlM,UAAQwN,GAASrC,UAAU,IAC3CnN,QAAQC,IAAI8B,IACZoM,GAAQ,CACPhM,MAAO8L,GACP/J,MAAOgK,IAER,EAAK/J,QAAU,IAAIC,UAAQ,EAAK8K,QAAQ5K,QAAS6J,GAAOS,KA/FtC,EAkGnBhK,aAAe,WACdqJ,GAAY,IAAIjM,UAAQwN,GAASrC,UAAU,IAC3Ce,GAAY,IAAIlM,UAAQwN,GAASrC,UAAU,IAC3C,IAAIF,EAASuC,GAAS1C,mBAAmB5L,SAAS,EAAK8C,MAAM+K,cAAc7N,SAAS,EAAK8C,MAAMgL,kBAC/Fd,GAAUrJ,IAAI,CAACzD,KAAMF,SAAS+L,GAAStO,GAAIuC,SAAS+L,GAAQnI,MAAM5D,SAAS+L,GAAQtK,MAAM,CAACA,MAAM,aAChGwL,GAAQ,CACPhM,MAAO8L,GACP/J,MAAOgK,IAER,EAAK/J,QAAU,IAAIC,UAAQ,EAAK8K,QAAQ5K,QAAS6J,GAAOS,KA3GtC,EA8GnB7J,eAAiB,WAChB,IACMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA2B,wBAAtBmB,EAASE,WAAwD,aAAjBF,EAASG,OAAqB,CAClFqK,GAASpD,MAAMlL,SAAS8D,EAASmK,EAAE,KACnCK,GAASlD,MAAMpL,SAAS8D,EAASmK,EAAE,KACnCK,GAASjD,oBACT,IAAK,IAAI7L,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAC1C8O,GAAS7C,aAAazL,SAAS8D,EAASvD,QAAQf,GAAG0O,QAAQ,IAAIlO,SAAS8D,EAASvD,QAAQf,GAAG0O,QAAQ,IAAIpK,EAASvD,QAAQf,GAAGyH,OAE7HpG,GAAW,IAAIC,UAAQwN,GAASlC,eAAe,IAC/CrL,GAAW,IAAID,UAAQwN,GAASlC,eAAe,IAC/CpL,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAGtDgD,MAAM,kEAlIW,EAsInBC,eAAiB,WAChB,IAAMC,EAAUC,SAASC,cAAc,KACnCC,EAAY8J,GAAS9B,uBACnB/H,EAAO,IAAIC,KAAK,CAACF,IACvBH,EAAQrH,KAAO2H,IAAIC,gBAAgBH,GAChCJ,EAAQQ,SAAW,gBACnBP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAQW,QACRb,MAAM,sBA5IT,EAAKrB,MAAQ,CACZqL,OAAQ,SACRC,QAAS,GACT9C,MAAO,GACPC,SAAU,GACVsC,aAAc,GACdC,gBAAiB,GACjB/K,KAAM,GACNQ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAGZ,EAAKM,QAAU,GACjB,EAAKoL,SAAW,GACd,EAAKlL,OAAS8B,sBACd,EAAK+I,QAAU/I,sBACjB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAnBP,E,qDAsBnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,gCAEvD,WACCpD,KAAKsQ,SAAW,IAAInL,UAAQnF,KAAKiQ,QAAQ5K,QAAS6J,GAAOS,M,+BAG1D,SAAkB1L,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAiHX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,QAAQ3F,UAAU,eAAewI,YAAY,qBAAqBtI,GAAG,aAAa2G,MAAO7F,KAAK+E,MAAMwI,MAAO9F,SAAUzH,KAAKmH,sBAErJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,WAAW3F,UAAU,eAAewI,YAAY,wBAAwBtI,GAAG,gBAAgB2G,MAAO7F,KAAK+E,MAAMyI,SAAU/F,SAAUzH,KAAKmH,sBAEjK,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKkQ,kBAAtE,iCAGF,qBAAK7Q,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,eAAe3F,UAAU,eAAewI,YAAY,WAAWtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM+K,aAAcrI,SAAUzH,KAAKmH,sBAEtJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,kBAAkB3F,UAAU,eAAewI,YAAY,cAActI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMgL,gBAAiBtI,SAAUzH,KAAKmH,sBAE/J,qBAAKnI,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,wBAG7D,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,4BAED,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,2BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKqQ,iBAAtE,iCAED,qBAAKhR,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAMF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKA,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,SAC3C,qBAAKpG,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKiQ,iB,GArPjBhI,aCyGdwI,GA3JX,aAAe,IAAD,gCAKdrQ,SAAW,SAACsQ,GACS,GAAd,EAAKvI,SACJ,EAAKwI,WAAWD,GAChB,EAAKE,UAAUF,IAEZA,EAAUG,OAAS,EAAKC,aAAaD,OACpC,EAAKE,eAAeL,GACdA,EAAUG,OAAS,EAAKG,YAAYH,OAC1C,EAAKI,cAAcP,GAEnB,EAAKQ,cAAcR,IAfjB,KAoBdK,eAAiB,SAACL,GACd,EAAKI,aAAaK,YAAYT,GAC9BA,EAAUU,aAAa,EAAKN,cAC5B,EAAKH,WAAWD,IAvBN,KA0BdQ,cAAgB,SAACR,GACb,IAAIW,EAAO,KACPC,EAAO,KAEX,IADAD,EAAO,EAAKP,aACNO,EAAKR,OAASH,EAAUG,QAC1BQ,EAAOA,EAAKE,gBAGhBD,EAAOD,EAAKG,eACPJ,aAAaV,GAClBA,EAAUU,aAAaC,GACvBX,EAAUS,YAAYG,GACtBD,EAAKF,YAAYT,IAtCP,KAyCdO,cAAgB,SAACP,GACb,EAAKM,YAAYI,aAAaV,GAC9BA,EAAUS,YAAY,EAAKH,aAC3B,EAAKJ,UAAUF,IA5CL,KAiDde,OAAS,SAACC,GAEN,GAAiB,GAAd,EAAKvJ,QACJpH,QAAQC,IAAI,eAIZ,GAAG,EAAK8P,aAAaD,QAAUa,EAC3B,GAAuC,MAApC,EAAKZ,aAAaS,eAAuB,CAExC,IAAIhJ,EAAO,EAAKuI,aAAaS,eAC7B,EAAKT,aAAaM,aAAa,MAC/B7I,EAAK4I,YAAY,MACjB,EAAKR,WAAWpI,QAIhB,EAAKoI,WAAW,MAChB,EAAKC,UAAU,WAEjB,GAAI,EAAKI,YAAYH,QAAUa,EAEjC,GAAqC,MAAlC,EAAKV,YAAYQ,cAAsB,CAEtC,IAAIjJ,EAAO,EAAKyI,YAAYQ,cAC5B,EAAKR,YAAYG,YAAY,MAC7B5I,EAAK6I,aAAa,MAClB,EAAKR,UAAUrI,QAGf,EAAKoI,WAAW,MAChB,EAAKC,UAAU,UAGlB,CAED,IAAI3P,EAAc,EAAK6P,aACvB,EAAG,CAEC,GADA/P,QAAQC,IAAI,EAAK8P,aAAaD,QAC1B5P,EAAY4P,QAAUa,EAAE,CAExB,IAAIvQ,EAAWF,EAAYuQ,cACvBvR,EAAYgB,EAAYsQ,eAO5B,OALAtQ,EAAYmQ,aAAa,MACzBnQ,EAAYkQ,YAAY,MACxBhQ,EAASiQ,aAAanR,GACtBA,EAAUkR,YAAYhQ,GAEfJ,QAAQC,IAAI,WAGvBC,EAAcA,EAAYsQ,qBAEN,MAAftQ,KAvGP,KAgHdwH,MAAQ,WACJ,GAAmB,GAAhB,EAAKN,QAEJ,IADA,IAAIwJ,EAAM,EAAKb,aACD,MAAPa,GACH5Q,QAAQC,IAAI,gBAAkB2Q,EAAId,QAClCc,EAAMA,EAAIJ,oBAGdxQ,QAAQC,IAAI,UAxHN,KA4Hd4Q,SAAW,SAACF,GACR,GAAmB,GAAhB,EAAKvJ,QAEJ,IADA,IAAIwJ,EAAM,EAAKb,aACF,MAAPa,GAAY,CACd,GAAGA,EAAId,QAAUa,EACb,OAAOC,EAEXA,EAAMA,EAAIJ,eAGlB,OAAO,MAtIG,KA0IdpJ,MAAQ,WACJ,OAAyB,MAArB,EAAK2I,cA3IC,KAmJdA,WAAa,WAAQ,OAAO,EAAKpI,SAnJnB,KAoJdiI,WAAa,SAACjI,GAAc,EAAKA,QAAUA,GApJ7B,KAqJdsI,UAAY,WAAQ,OAAO,EAAKpO,QArJlB,KAsJdgO,UAAY,SAAChO,GAAa,EAAKA,OAASA,GArJpC5C,KAAK0I,QAAU,KACf1I,KAAK4C,OAAS,MCwJPiP,GA1JX,aAAe,IAAD,gCAKdzR,SAAW,SAACsQ,GACW,GAAhB,EAAKvI,SACJ,EAAKwI,WAAWD,GAChB,EAAKE,UAAUF,IAEZA,EAAUoB,OAAS,EAAKhB,aAAagB,OACpC,EAAKf,eAAeL,GACdA,EAAUoB,OAAS,EAAKd,YAAYc,OAC1C,EAAKb,cAAcP,GAEnB,EAAKQ,cAAcR,IAfjB,KAoBdK,eAAiB,SAACL,GACd,EAAKI,aAAaK,YAAYT,GAC9BA,EAAUU,aAAa,EAAKN,cAC5B,EAAKH,WAAWD,IAvBN,KA0BdQ,cAAgB,SAACR,GACb,IAAIW,EAAO,KACPC,EAAO,KAEX,IADAD,EAAO,EAAKP,aACNO,EAAKS,OAASpB,EAAUoB,QAC1BT,EAAOA,EAAKE,gBAGhBD,EAAOD,EAAKG,eACPJ,aAAaV,GAClBA,EAAUU,aAAaC,GACvBX,EAAUS,YAAYG,GACtBD,EAAKF,YAAYT,IAtCP,KAyCdO,cAAgB,SAACP,GAEb,EAAKM,YAAYI,aAAaV,GAC9BA,EAAUS,YAAY,EAAKH,aAC3B,EAAKJ,UAAUF,IA7CL,KAiDde,OAAS,SAACM,GAEN,GAAiB,GAAd,EAAK5J,QACJpH,QAAQC,IAAI,eAIZ,GAAG,EAAK8P,aAAagB,QAAUC,EAC3B,GAAuC,MAApC,EAAKjB,aAAaS,eAAuB,CAExC,IAAIhJ,EAAO,EAAKuI,aAAaS,eAC7B,EAAKT,aAAaM,aAAa,MAC/B7I,EAAK4I,YAAY,MACjB,EAAKR,WAAWpI,QAIhB,EAAKoI,WAAW,MAChB,EAAKC,UAAU,WAEjB,GAAI,EAAKI,YAAYc,QAAUC,EAEjC,GAAqC,MAAlC,EAAKf,YAAYQ,cAAsB,CAEtC,IAAIjJ,EAAO,EAAKyI,YAAYQ,cAC5B,EAAKR,YAAYG,YAAY,MAC7B5I,EAAK6I,aAAa,MAClB,EAAKR,UAAUrI,QAGf,EAAKoI,WAAW,MAChB,EAAKC,UAAU,UAGlB,CAED,IAAI3P,EAAc,EAAK6P,aACvB,EAAG,CAEC,GADA/P,QAAQC,IAAI,EAAK8P,aAAagB,QAC1B7Q,EAAY6Q,QAAUC,EAAE,CAExB,IAAI5Q,EAAWF,EAAYuQ,cACvBvR,EAAYgB,EAAYsQ,eAO5B,OALAtQ,EAAYmQ,aAAa,MACzBnQ,EAAYkQ,YAAY,MACxBhQ,EAASiQ,aAAanR,GACtBA,EAAUkR,YAAYhQ,GAEfJ,QAAQC,IAAI,WAGvBC,EAAcA,EAAYsQ,qBAEN,MAAftQ,KAvGP,KA+GdwH,MAAQ,WACJ,GAAiB,GAAd,EAAKN,QAEJ,IADA,IAAIwJ,EAAM,EAAKb,aACD,MAAPa,GACH5Q,QAAQC,IAAI,gBAAkB2Q,EAAIG,QAClCH,EAAMA,EAAIJ,oBAGdxQ,QAAQC,IAAI,UAvHN,KA2Hd4Q,SAAW,SAACG,GACR,GAAiB,GAAd,EAAK5J,QAEJ,IADA,IAAIwJ,EAAM,EAAKb,aACF,MAAPa,GAAY,CACd,GAAGA,EAAIG,QAAUC,EACb,OAAOJ,EAEXA,EAAMA,EAAIJ,eAGlB,OAAO,MArIG,KAyIdpJ,MAAQ,WACJ,OAAyB,MAArB,EAAK2I,cA1IC,KAkJdA,WAAa,WAAQ,OAAO,EAAKpI,SAlJnB,KAmJdiI,WAAa,SAACjI,GAAc,EAAKA,QAAUA,GAnJ7B,KAoJdsI,UAAY,WAAQ,OAAO,EAAKpO,QApJlB,KAqJdgO,UAAY,SAAChO,GAAa,EAAKA,OAASA,GApJpC5C,KAAK0I,QAAU,KACf1I,KAAK4C,OAAS,MC4IPoP,GA/IX,aAAe,IAAD,gCAKd5R,SAAW,SAACsQ,GACS,GAAd,EAAKvI,SACJ,EAAKwI,WAAWD,GAChB,EAAKE,UAAUF,IAEZA,EAAUoB,OAAS,EAAKhB,aAAagB,OACpC,EAAKf,eAAeL,GACdA,EAAUoB,OAAS,EAAKd,YAAYc,OAC1C,EAAKb,cAAcP,GAEnB,EAAKQ,cAAcR,IAfjB,KAqBdK,eAAiB,SAACL,GACd,EAAKI,aAAamB,aAAavB,GAC/BA,EAAUwB,WAAW,EAAKpB,cAC1B,EAAKH,WAAWD,IAxBN,KA2BdQ,cAAgB,SAACR,GACb,IAAIW,EAAO,KACPC,EAAO,KAEX,IADAD,EAAO,EAAKP,aACNO,EAAKS,OAASpB,EAAUoB,QAC1BT,EAAOA,EAAKc,cAGhBb,EAAOD,EAAKe,gBACPF,WAAWxB,GAChBA,EAAUwB,WAAWb,GACrBX,EAAUuB,aAAaX,GACvBD,EAAKY,aAAavB,IAvCR,KA0CdO,cAAgB,SAACP,GACb,EAAKM,YAAYkB,WAAWxB,GAC5BA,EAAUuB,aAAa,EAAKjB,aAC5B,EAAKJ,UAAUF,IA7CL,KAgDdjI,MAAQ,WACJ,GAAiB,GAAd,EAAKN,QAEJ,IADA,IAAIwJ,EAAM,EAAKb,aACD,MAAPa,GACH5Q,QAAQC,IAAI,SAAW2Q,EAAIU,UAAY,oBAAsBV,EAAIG,OAAW,IAAMH,EAAId,QACtFc,EAAMA,EAAIQ,kBAGdpR,QAAQC,IAAI,UAxDN,KA8DdyQ,OAAS,SAACM,GAEN,GAAiB,GAAd,EAAK5J,QACJpH,QAAQC,IAAI,eAIZ,GAAG,EAAK8P,aAAagB,QAAUC,EAC3B,GAAqC,MAAlC,EAAKjB,aAAaqB,aAAqB,CAEtC,IAAI5J,EAAO,EAAKuI,aAAaqB,aAC7B,EAAKrB,aAAaoB,WAAW,MAC7B3J,EAAK0J,aAAa,MAClB,EAAKtB,WAAWpI,QAIhB,EAAKoI,WAAW,MAChB,EAAKC,UAAU,WAEjB,GAAI,EAAKI,YAAYc,QAAUC,EAEjC,GAAsC,MAAnC,EAAKf,YAAYoB,eAAuB,CAEvC,IAAI7J,EAAO,EAAKyI,YAAYoB,eAC5B,EAAKpB,YAAYiB,aAAa,MAC9B1J,EAAK2J,WAAW,MAChB,EAAKtB,UAAUrI,QAGf,EAAKoI,WAAW,MAChB,EAAKC,UAAU,UAGlB,CAED,IAAI3P,EAAc,EAAK6P,aAAaqB,aAChChR,EAAW,EAAK2P,aACpB,EAAG,CAEC,GAAI7P,EAAY6Q,QAAUC,EAAE,CAExB,IAAI9R,EAAYgB,EAAYkR,aAO5B,OALAlR,EAAYiR,WAAW,MACvBjR,EAAYgR,aAAa,MACzB9Q,EAAS+Q,WAAWjS,GACpBA,EAAUgS,aAAa9Q,GAEhBJ,QAAQC,IAAI,WAGvBC,EAAcA,EAAYkR,aAC1BhR,EAAWA,EAASgR,mBAEA,MAAflR,KArHP,KA+HdkH,MAAQ,WACJ,OAAyB,MAArB,EAAK2I,cAhIC,KAwIdA,WAAa,WAAQ,OAAO,EAAKpI,SAxInB,KAyIdiI,WAAa,SAACjI,GAAc,EAAKA,QAAUA,GAzI7B,KA0IdsI,UAAY,WAAQ,OAAO,EAAKpO,QA1IlB,KA2IdgO,UAAY,SAAChO,GAAa,EAAKA,OAASA,GA1IpC5C,KAAK0I,QAAU,KACf1I,KAAK4C,OAAS,MC0BP0P,G,WAzBX,WAAYZ,GAAI,oBACZ1R,KAAK0R,EAAIA,EACT1R,KAAKC,UAAY,KACjBD,KAAKmB,SAAW,KAChBnB,KAAK8N,KAAO,IAAIkE,G,gDAGpB,WAAiB,OAAOhS,KAAKC,Y,0BAE7B,SAAaA,GAAaD,KAAKC,UAAYA,I,yBAE3C,WAAgB,OAAOD,KAAKmB,W,yBAE5B,SAAYoR,GAAavS,KAAKmB,SAAWoR,I,qBAEzC,WAAY,OAAOvS,KAAK8N,O,qBAExB,SAAQA,GAAQ9N,KAAK8N,KAAOA,I,kBAE5B,WAAS,OAAO9N,KAAK0R,I,kBAErB,SAAKA,GAAK1R,KAAK0R,EAAIA,M,KCqIRc,GA5JX,aAAe,IAAD,gCAKdpS,SAAW,SAACsQ,GACS,GAAd,EAAKvI,SACJ,EAAKwI,WAAWD,GAChB,EAAKE,UAAUF,IAIZA,EAAUG,OAAS,EAAKC,aAAaD,OACpC,EAAKE,eAAeL,GACdA,EAAUG,OAAS,EAAKG,YAAYH,OAC1C,EAAKI,cAAcP,GAEnB,EAAKQ,cAAcR,IAjBjB,KAuBdK,eAAiB,SAACL,GACd,EAAKI,aAAa2B,UAAU/B,GAC5BA,EAAUgC,SAAS,EAAK5B,cACxB,EAAKH,WAAWD,IA1BN,KA6BdQ,cAAgB,SAACR,GAEb,IAAIW,EAAO,KACPC,EAAO,KAEX,IADAD,EAAO,EAAKP,aACNO,EAAKR,OAASH,EAAUG,QAC1BQ,EAAOA,EAAKsB,YAGhBrB,EAAOD,EAAKuB,aACPF,SAAShC,GACdA,EAAUgC,SAASrB,GACnBX,EAAU+B,UAAUnB,GACpBD,EAAKoB,UAAU/B,IA1CL,KA6CdO,cAAgB,SAACP,GAEb,EAAKM,YAAY0B,SAAShC,GAC1BA,EAAU+B,UAAU,EAAKzB,aACzB,EAAKJ,UAAUF,IAjDL,KAsDde,OAAS,SAACC,GAEN,GAAiB,GAAd,EAAKvJ,QACJpH,QAAQC,IAAI,cACX,CAED,GAAG,EAAK8P,aAAaD,QAAUa,EAAE,CAC7B,GAAmC,MAAhC,EAAKZ,aAAa6B,WAAmB,CAEpC,IAAIpK,EAAO,EAAKuI,aAAa6B,WAI7B,OAHA,EAAK7B,aAAa4B,SAAS,MAC3BnK,EAAKkK,UAAU,MACf,EAAK9B,WAAWpI,IACT,EAMP,OAFA,EAAKoI,WAAW,MAChB,EAAKC,UAAU,OACR,EAET,GAAI,EAAKI,YAAYH,QAAUa,EAAE,CAEnC,GAAmC,MAAhC,EAAKV,YAAY4B,YAAoB,CAEpC,IAAIrK,EAAO,EAAKyI,YAAY4B,YAI5B,OAHA,EAAK5B,YAAYyB,UAAU,MAC3BlK,EAAKmK,SAAS,MACd,EAAK9B,UAAUrI,IACR,EAKP,OAFA,EAAKoI,WAAW,MAChB,EAAKC,UAAU,OACR,EAKX,IAAI3P,EAAc,EAAK6P,aAAa6B,WAChCxR,EAAW,EAAK2P,aACpB,EAAG,CAEC,GADA/P,QAAQC,IAAIC,GACRA,EAAY4P,QAAUa,EAAE,CAExB,IAAIzR,EAAYgB,EAAY0R,WAQ5B,OANA1R,EAAYyR,SAAS,MACrBzR,EAAYwR,UAAU,MACtBtR,EAASuR,SAASzS,GAClBA,EAAUwS,UAAUtR,GAEpBJ,QAAQC,IAAI,YACL,EAGXC,EAAcA,EAAY0R,WAC1BxR,EAAWA,EAASwR,iBAEA,MAAf1R,GAOjB,OAAO,MAxHG,KA+HdwH,MAAQ,WACJ,GAAiB,GAAd,EAAKN,QAEJ,IADA,IAAIwJ,EAAM,EAAKb,aACD,MAAPa,GACH5Q,QAAQC,IAAI,SAAW2Q,EAAIU,UAAY,oBAAsBV,EAAIG,OAAW,IAAMH,EAAId,QACtFc,EAAMA,EAAIgB,gBAGd5R,QAAQC,IAAI,UAvIN,KA2IdmH,MAAQ,WACA,OAAyB,MAArB,EAAK2I,cA5IH,KAoJdA,WAAa,WAAQ,OAAO,EAAKpI,SApJnB,KAqJdiI,WAAa,SAACjI,GAAc,EAAKA,QAAUA,GArJ7B,KAsJdsI,UAAY,WAAQ,OAAO,EAAKpO,QAtJlB,KAuJdgO,UAAY,SAAChO,GAAa,EAAKA,OAASA,GAtJpC5C,KAAK0I,QAAU,KACf1I,KAAK4C,OAAS,MCyBPiQ,G,WAzBX,WAAYd,GAAI,oBACZ/R,KAAK+R,EAAIA,EACT/R,KAAKC,UAAY,KACjBD,KAAKmB,SAAW,KAChBnB,KAAK+N,QAAU,IAAIyE,G,gDAGvB,WAAiB,OAAOxS,KAAKC,Y,0BAE7B,SAAaA,GAAaD,KAAKC,UAAYA,I,yBAE3C,WAAgB,OAAOD,KAAKmB,W,yBAE5B,SAAYA,GAAYnB,KAAKmB,SAAWA,I,wBAExC,WAAe,OAAOnB,KAAK+N,U,wBAE3B,SAAWA,GAAW/N,KAAK+N,QAAUA,I,kBAErC,WAAS,OAAO/N,KAAK+R,I,kBAErB,SAAKA,GAAK/R,KAAK+R,EAAIA,M,KCaRe,GApCX,WAAYf,EAAGL,EAAG3R,GAAO,IAAD,gCAUxBsS,QAAU,WAAQ,OAAO,EAAKtS,MAVN,KAWxBgT,QAAU,SAAChT,GAAU,EAAKA,KAAOA,GAXT,KAaxB+R,KAAO,WAAO,OAAO,EAAKC,GAbF,KAexBlB,KAAO,WAAO,OAAO,EAAKa,GAfF,KAiBxBkB,UAAY,WAAO,OAAO,EAAKI,QAjBP,KAmBxBP,UAAY,SAACO,GAAY,EAAKA,OAASA,GAnBf,KAqBxBL,SAAW,WAAO,OAAO,EAAKM,OArBN,KAuBxBP,SAAW,SAACO,GAAY,EAAKA,MAAQA,GAvBb,KAyBxBb,aAAe,WAAO,OAAO,EAAKc,WAzBV,KA2BxBjB,aAAe,SAACiB,GAAe,EAAKA,UAAYA,GA3BxB,KA6BxBf,WAAa,WAAO,OAAO,EAAKgB,SA7BR,KA+BxBjB,WAAa,SAACiB,GAAa,EAAKA,QAAUA,GA9BtCnT,KAAKD,KAAOA,EACZC,KAAK+R,EAAIA,EACT/R,KAAK0R,EAAIA,EACT1R,KAAKgT,OAAS,KACdhT,KAAKiT,MAAQ,KACbjT,KAAKkT,UAAY,KACjBlT,KAAKmT,QAAU,MCNnBC,GAAiB,ICUjB,aAAe,IAAD,gCAMdhT,SAAW,SAAC2R,EAAGL,EAAG3R,GAEd,IAAI2Q,EAAY,IAAIoC,GAAcf,EAAGL,EAAG3R,GACJ,MAAjC,EAAKsT,aAAazB,SAASG,IAC1B,EAAKsB,aAAajT,SAAS,IAAIyS,GAAoBd,IAEtB,MAA9B,EAAKuB,UAAU1B,SAASF,IACvB,EAAK4B,UAAUlT,SAAS,IAAIkS,GAAiBZ,IAGjD,EAAK2B,aAAazB,SAASG,GAAGsB,aAAajT,SAASsQ,GACpD,EAAK4C,UAAU1B,SAASF,GAAG4B,UAAUlT,SAASsQ,IAjBpC,KAqBdjI,MAAQ,WAEJ,IAAI8K,EAAgB,EAAKD,UAAUxC,aAC/B7P,EAAc,KAClB,GAAoB,MAAjBsS,EACC,EAAE,CAGE,GAFAxS,QAAQC,IAAIuS,EAAc1C,QAER,OADlB5P,EAAcsS,EAAcD,UAAUxC,cAElC,GACI/P,QAAQC,IAAI,SAAWC,EAAYoR,UAAY,oBAAsBpR,EAAY6Q,OAAW,IAAM7Q,EAAY4P,QAC9G5P,EAAcA,EAAYkR,mBACR,MAAflR,GAEXsS,EAAgBA,EAAchC,qBACV,MAAjBgC,GAOX,GAHAxS,QAAQC,IAAI,KAEZC,EAAc,KACM,OAFpBsS,EAAgB,EAAKF,aAAavC,cAG7B,EAAE,CACC/P,QAAQC,IAAIuS,EAAczB,QAC1B,IAAI7Q,EAAcsS,EAAcF,aAAavC,aAC7C,GAAkB,MAAf7P,EACE,GACGF,QAAQC,IAAI,SAAWC,EAAYoR,UAAY,oBAAsBpR,EAAY6Q,OAAW,IAAM7Q,EAAY4P,QAC9G5P,EAAcA,EAAY0R,iBACR,MAAf1R,GAEXsS,EAAgBA,EAAchC,qBACV,MAAjBgC,IAtDD,KA2Dd/R,OAAS,SAACuQ,EAAGL,EAAG3R,GAEZ,IAAIwT,EAAgB,EAAKD,UAAUxC,aAC/B7P,EAAc,KAClB,GAAqB,MAAjBsS,EACA,EAAE,CAGE,GAAmB,OADnBtS,EAAcsS,EAAcD,UAAUxC,cAElC,EAAE,CACF,GAAI7P,EAAYoR,WAAatS,GAAQkB,EAAY6Q,QAAUC,GAAK9Q,EAAY4P,QAAUa,EAElF,OADA3Q,QAAQC,IAAI,SAAWC,EAAYoR,UAAY,oBAAsBpR,EAAY6Q,OAAW,IAAM7Q,EAAY4P,QACvG5P,EAEXA,EAAcA,EAAYkR,mBACR,MAAflR,GAIPsS,EAAgBA,EAAchC,qBAEV,MAAjBgC,GAGX,OADAxS,QAAQC,IAAI,kBACL,MAnFG,KAsFdwS,QAAU,SAACzB,EAAGL,GAEV,IAAI6B,EAAgB,EAAKD,UAAUxC,aAC/B7P,EAAc,KAClB,GAAqB,MAAjBsS,EACA,EAAE,CAGE,GAAmB,OADnBtS,EAAcsS,EAAcD,UAAUxC,cAElC,EAAE,CACF,GAAI7P,EAAY6Q,QAAUC,GAAK9Q,EAAY4P,QAAUa,EAEjD,OADA3Q,QAAQC,IAAI,SAAWC,EAAYoR,UAAY,oBAAsBpR,EAAY6Q,OAAW,IAAM7Q,EAAY4P,QACvG5P,EAAYoR,UAEvBpR,EAAcA,EAAYkR,mBACR,MAAflR,GAIPsS,EAAgBA,EAAchC,qBAEV,MAAjBgC,GAGX,OADAxS,QAAQC,IAAI,kBACL,MA9GG,KAkHdK,OAAS,SAAC0Q,EAAGL,EAAG3R,EAAMuB,GAGlB,IAAIiS,EAAgB,EAAKD,UAAUxC,aAC/B7P,EAAc,KAClB,GAAoB,MAAjBsS,EACC,EAAE,CAEE,GAAmB,OADnBtS,EAAcsS,EAAcD,UAAUxC,cAElC,EAAE,CACE,GAAI7P,EAAYoR,WAAatS,GAAQkB,EAAY6Q,QAAUC,GAAK9Q,EAAY4P,QAAUa,EAGlF,OAFAzQ,EAAY8R,QAAQzR,GACpBP,QAAQC,IAAI,mBAAqBC,EAAYoR,UAAY,oBAAsBpR,EAAY6Q,OAAW,IAAM7Q,EAAY4P,QACjH5P,EAEXA,EAAcA,EAAYkR,mBACR,MAAflR,GAEXsS,EAAgBA,EAAchC,qBAEV,MAAjBgC,GAGX,OADAxS,QAAQC,IAAI,kBACL,MAzIG,KA8IdyQ,OAAS,SAACM,EAAGL,EAAG3R,GAEkB,MAA3B,EAAKyB,OAAOuQ,EAAGL,EAAG3R,KACjB,EAAKsT,aAAazB,SAASG,GAAGsB,aAAa5B,OAAOC,GAClD,EAAK4B,UAAU1B,SAASF,GAAG4B,UAAU7B,OAAOM,IAEc,MAA3D,EAAKsB,aAAazB,SAASG,GAAGsB,aAAavC,cAC1C,EAAKuC,aAAa5B,OAAOM,GAE0B,MAAnD,EAAKuB,UAAU1B,SAASF,GAAG4B,UAAUxC,cACrC,EAAKwC,UAAU7B,OAAOC,IAxJhB,KA4Jd/P,gBAAkB,WAEd,IAAI4R,EAAgB,EAAKF,aAAavC,aAClC7P,EAAc,KACdW,EAAM,GACN0M,EAAW,EAEf,GAAoB,MAAjBiF,EACC,EAAE,CACoB,GAAf,EAAKE,QACJ7R,EAAIC,KAAK,CAAC3C,GAAG+C,SAASqM,GAAWxM,MAAM,SAAS4R,OAAOH,EAAczB,QAASvD,MAAMtM,SAASsR,EAAczB,OAAO,KAEtHxD,IACA,IAAIrN,EAAcsS,EAAcF,aAAavC,aAC7C,GAAkB,MAAf7P,EACC,GACIW,EAAIC,KAAK,CAAC3C,GAAG+C,SAASqM,GAAWxM,MAAM,IAAI4R,OAAOzS,EAAY6Q,QAAQ,IAAI4B,OAAOzS,EAAY4P,QAAQ,IAAI6C,OAAOzS,EAAYoR,WAAY9D,MAAMtM,SAAShB,EAAY6Q,OAAO,KAC1KxD,IACArN,EAAcA,EAAY0R,iBACR,MAAf1R,GAEXsS,EAAgBA,EAAchC,qBACV,MAAjBgC,GAKX,GADAtS,EAAc,KACM,OAFpBsS,EAAgB,EAAKD,UAAUxC,cAI3B,EAAE,CAME,GALgB,GAAb,EAAK2C,QACR7R,EAAIC,KAAK,CAAC3C,GAAG+C,SAASqM,GAAWxM,MAAO,YAAY4R,OAAOH,EAAc1C,QAAStC,MAAM,IAExFD,IAEmB,OADnBrN,EAAcsS,EAAcD,UAAUxC,cAElC,GACIxC,IACArN,EAAcA,EAAYkR,mBACR,MAAflR,GAGXsS,EAAgBA,EAAchC,qBACV,MAAjBgC,GAGX,OAAO3R,GA1MG,KA8Md+R,gBAAkB,SAAC5B,EAAEL,EAAE3R,GACnB,IAAIwT,EAAgB,EAAKF,aAAavC,aAElCxC,EAAW,EAEf,GAAoB,MAAjBiF,EACC,EAAE,CACEjF,IACA,IAAIrN,EAAcsS,EAAcF,aAAavC,aAC7C,GAAkB,MAAf7P,EACC,EAAE,CACE,GAAIA,EAAY6Q,QAAQC,GAAK9Q,EAAY4P,QAAQa,GAAKzQ,EAAYoR,WAAWtS,EAEzE,OAAOuO,EAEXA,IACArN,EAAcA,EAAY0R,iBACR,MAAf1R,GAEXsS,EAAgBA,EAAchC,qBACV,MAAjBgC,GAGX,OAAO,MArOG,KAwOdxR,gBAAkB,WAEd,IAAIwR,EAAgB,EAAKF,aAAavC,aAClC7P,EAAc,KACdW,EAAM,GACN0M,EAAW,EACXsF,EAAe,EAEnB,GAAoB,MAAjBL,EACC,EAAE,CACEK,EAAetF,EACfA,IACA,IAAIrN,EAAcsS,EAAcF,aAAavC,aAC7C,GAAkB,MAAf7P,EAAoB,CACnB,IAAIkI,EAAM,EAAKwK,gBAAgB1S,EAAY6Q,OAAQ7Q,EAAY4P,OAAQ5P,EAAYoR,WAC3E,MAALlJ,GACCvH,EAAIC,KAAK,CAACM,KAAKF,SAAS2R,GAAelU,GAAGyJ,EAAK/G,OAAQ,OAE3D,GAE+B,MAAxBnB,EAAY0R,aACX/Q,EAAIC,KAAK,CAACM,KAAKF,SAASqM,GAAW5O,GAAGuC,SAASqM,EAAS,GAAIlM,OAAQ,OACpER,EAAIC,KAAK,CAACM,KAAKF,SAASqM,EAAS,GAAI5O,GAAGuC,SAASqM,GAAWlM,OAAQ,QAExEkM,IACArN,EAAcA,EAAY0R,iBACR,MAAf1R,GAGyB,MAAhCsS,EAAchC,gBACV3P,EAAIC,KAAK,CAACM,KAAKF,SAAS2R,GAAelU,GAAGuC,SAASqM,GAAWlM,OAAQ,OAE9EmR,EAAgBA,EAAchC,qBACV,MAAjBgC,GAKX,GADAtS,EAAc,KACM,OAFpBsS,EAAgB,EAAKD,UAAUxC,cAI3B,EAAE,CAKE,GAHA8C,EAAetF,EACfA,IAEmB,OADnBrN,EAAcsS,EAAcD,UAAUxC,cACd,CACpB,IAAI3H,EAAM,EAAKwK,gBAAgB1S,EAAY6Q,OAAQ7Q,EAAY4P,OAAQ5P,EAAYoR,WAC3E,MAALlJ,GACCvH,EAAIC,KAAK,CAACM,KAAKF,SAAS2R,GAAelU,GAAGyJ,EAAK/G,OAAQ,OAE3D,EAAE,CACE,GAA6B,MAA1BnB,EAAYkR,aAAmB,CAC9BpR,QAAQC,IAAI,QACZ,IAAI6S,EAAa,EAAKF,gBAAgB1S,EAAY6Q,OAAQ7Q,EAAY4P,OAAQ5P,EAAYoR,WACtFyB,EAAa,EAAKH,gBAAgB1S,EAAYkR,aAAaL,OAAQ7Q,EAAYkR,aAAatB,OAAQ5P,EAAYkR,aAAaE,WACjItR,QAAQC,IAAIC,EAAYoR,UAAW,IAAIyB,EAAW,MAAQ7S,EAAYkR,aAAaE,UAAW,IAAIwB,GAClGjS,EAAIC,KAAK,CAACM,KAAKF,SAAS6R,GAAapU,GAAGuC,SAAS4R,GAAazR,OAAQ,OACtER,EAAIC,KAAK,CAACM,KAAKF,SAAS4R,GAAanU,GAAGuC,SAAS6R,GAAa1R,OAAQ,OAE1EkM,IACArN,EAAcA,EAAYkR,mBACR,MAAflR,GAEyB,MAAhCsS,EAAchC,gBACV3P,EAAIC,KAAK,CAACM,KAAKF,SAAS2R,GAAelU,GAAGuC,SAASqM,GAAWlM,OAAQ,OAG9EmR,EAAgBA,EAAchC,qBACV,MAAjBgC,GAGX,OAAO3R,GA/SG,KAkTdmS,qBAAuB,SAAChP,GACV,QAAPA,EACC,EAAK0O,QAAS,EACF,SAAP1O,IACL,EAAK0O,QAAS,IAtTR,KA2TdpR,aAAe,WAEX,IAAIqM,EAAO,qHAEP6E,EAAgB,EAAKD,UAAUxC,aAC/B7P,EAAc,KAClB,GAAoB,MAAjBsS,EACC,EAAE,CAGE,GAFAxS,QAAQC,IAAIuS,EAAc1C,QAER,OADlB5P,EAAcsS,EAAcD,UAAUxC,cAElC,GACqC,MAA9ByC,EAAchC,eACiC,iBAApCtP,SAAShB,EAAYoR,YAA4B,GAAKpQ,SAAShB,EAAYoR,WACjF3D,EAAOA,EAAO,8BAAkCgF,OAAOzS,EAAY6Q,QAAU,UAAY4B,OAAOzS,EAAY4P,QAAU,0BAA8B5O,SAAShB,EAAYoR,WAAW,SAE7I,iBAA1BpR,EAAYoR,YACzB3D,EAAOA,EAAO,8BAAkCgF,OAAOzS,EAAY6Q,QAAU,UAAY4B,OAAOzS,EAAY4P,QAArGnC,2BAAoJzN,EAAYoR,UAAhK3D,WAImC,iBAApCzM,SAAShB,EAAYoR,YAA4B,GAAKpQ,SAAShB,EAAYoR,WACjF3D,EAAOA,EAAO,8BAAkCgF,OAAOzS,EAAY6Q,QAAU,UAAY4B,OAAOzS,EAAY4P,QAAU,0BAA8B5O,SAAShB,EAAYoR,WAAW,QAE7I,iBAA1BpR,EAAYoR,YACzB3D,EAAOA,EAAO,8BAAkCgF,OAAOzS,EAAY6Q,QAAU,UAAY4B,OAAOzS,EAAY4P,QAArGnC,2BAAoJzN,EAAYoR,UAAhK3D,UAIfzN,EAAcA,EAAYkR,mBACR,MAAflR,GAEXsS,EAAgBA,EAAchC,qBACV,MAAjBgC,GAIX,OAFA7E,GAAc,YA9VJ,KAoWd2E,WAAa,WAAO,OAAO,EAAK7F,UApWlB,KAqWdwG,WAAa,SAACjG,GAAc,EAAKP,SAAWO,GArW9B,KAsWduF,QAAU,WAAO,OAAO,EAAK/F,OAtWf,KAuWd0G,QAAU,SAACnG,GAAW,EAAKP,MAAQO,GAtW/B9N,KAAKuN,MAAQ,IAAIkD,GACjBzQ,KAAKwN,SAAW,IAAIqE,GACpB7R,KAAKyT,QAAS,GDZlB3Q,GAAW,IAAIC,UAAQqQ,GAAezR,mBACtCqB,GAAW,IAAID,UAAQqQ,GAAerR,mBAGtCkB,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAGHI,GAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,aAIxB4L,OAAO,CACTC,aAAc,CACZC,UAAW,QAwREyE,G,kDAhRhB,WAAYnQ,GAAQ,IAAD,8BAClB,cAAMA,IA4BPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WAlCvC,EAuCnBC,UAAY,WACX,IAAI/E,EAAOqT,GAAe5R,OAAO,EAAKuD,MAAMoP,MAAO,EAAKpP,MAAMqP,MAAO,EAAKrP,MAAMC,MAChFjE,QAAQC,IAAIjB,GACH,MAANA,GAEFqT,GAAehT,SAAS,EAAK2E,MAAMoP,MAAO,EAAKpP,MAAMqP,MAAO,EAAKrP,MAAMC,MACvElC,GAAW,IAAIC,UAAQqQ,GAAezR,mBACtCqB,GAAW,IAAID,UAAQqQ,GAAerR,mBACtCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAGtDgD,MAAM,sCAvDW,EA4DnBd,aAAe,WACd8N,GAAe3B,OAAO,EAAK1M,MAAMoP,MAAO,EAAKpP,MAAMqP,MAAO,EAAKrP,MAAMC,MACrElC,GAAW,IAAIC,UAAQqQ,GAAezR,mBACtCqB,GAAW,IAAID,UAAQqQ,GAAerR,mBACtCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KArEpC,EAwEnBmC,aAAe,WACd6N,GAAe/R,OAAO,EAAK0D,MAAMoP,MAAO,EAAKpP,MAAMqP,MAAO,EAAKrP,MAAMC,KAAM,EAAKD,MAAMS,kBACtF1C,GAAW,IAAIC,UAAQqQ,GAAezR,mBACtCqB,GAAW,IAAID,UAAQqQ,GAAerR,mBACtCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAjFpC,EAoFnBuC,aAAe,WACd,IAAI5F,EAAOqT,GAAeO,gBAAgB,EAAK5O,MAAMoP,MAAO,EAAKpP,MAAMqP,MAAO,EAAKrP,MAAMC,MACrF,GAAK/C,SAASlC,IACjBgB,QAAQC,IAAIjB,EAAK,eACjB+C,GAAW,IAAIC,UAAQqQ,GAAezR,mBACtCqB,GAAW,IAAID,UAAQqQ,GAAerR,mBACtCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERA,GAAS4C,IAAI,CAACzD,KAAMF,SAASlC,GAAOL,GAAIuC,SAASlC,GAAO8F,MAAM5D,SAASlC,GAAM2D,MAAM,CAACA,MAAM,cAG1F3C,QAAQC,IAAIjB,GAIb,EAAKmF,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KArGpC,EAwGnB0C,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aACvC,GAA0B,wBAAtBmB,EAASE,UAAoC,CAQhD,IAAIoO,EAAa,KACbC,EAAY,KACZ7S,EAAI,EACRsE,EAASvD,QAAQ+R,SAAQ,SAASjO,GACjC7E,EAAI,EACJ6E,EAAQ6J,QAAQoE,SAAQ,SAASC,GAC1B,GAAH/S,EACF4S,EAAYG,EACD,GAAH/S,IACR6S,EAAYE,GAEb/S,OAEDV,QAAQC,IAAIqT,EAAU,IAAIC,EAAU,KAAKhO,EAAQ4C,OACjD,IAAInJ,EAAOqT,GAAeI,QAAQa,EAAWC,GACpC,MAANvU,EACFqT,GAAe/R,OAAOgT,EAAWC,EAAWvU,EAAMuG,EAAQ4C,OAE1DkK,GAAehT,SAASiU,EAAWC,EAAWhO,EAAQ4C,UAKxDpG,GAAW,IAAIC,UAAQqQ,GAAezR,mBACtCqB,GAAW,IAAID,UAAQqQ,GAAerR,mBACtCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAKtDgD,MAAM,6CAtJW,EA2JnBC,eAAiB,WAChB,IAAMC,EAAUC,SAASC,cAAc,KACnCC,EAAY2M,GAAe/Q,eACzBqE,EAAO,IAAIC,KAAK,CAACF,IACvBH,EAAQrH,KAAO2H,IAAIC,gBAAgBH,GAChCJ,EAAQQ,SAAW,sBACnBP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAQW,QACRb,MAAM,sBAnKS,EAuKnBqO,eAAiB,WAChBrB,GAAeW,qBAAqB,EAAKhP,MAAM0O,QAC/C3Q,GAAW,IAAIC,UAAQqQ,GAAezR,mBACrCqB,GAAW,IAAID,UAAQqQ,GAAerR,mBACtCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA9KvD,EAAK2B,MAAQ,CAEZC,KAAM,GACNmP,MAAO,GACPC,MAAO,GACPX,OAAQ,GACRjO,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAdP,E,qDAiBnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBA2JX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,4BAED,qBAAK9F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,mBAAmB3F,UAAU,eAAewI,YAAY,oBAAoBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMS,iBAAkBiC,SAAUzH,KAAKmH,sBAEvK,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4F,gBAAtE,+BAED,qBAAKvG,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,wBAG7D,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,QAAQ3F,UAAU,eAAewI,YAAY,cAActI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMoP,MAAO1M,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,QAAQ3F,UAAU,eAAewI,YAAY,cAActI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMqP,MAAO3M,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAf,SACC,uBAAOuI,KAAK,OAAO5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,aAAatI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM0O,OAAQhM,SAAUzH,KAAKmH,sBAE5I,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK8U,kBAArE,wBAED,qBAAKzV,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,2BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAMF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GA3QjB6C,aEnCzByM,GAAY,ICDf,WAAYxE,EAAGvI,EAAKC,GAAK,IAAD,gCAFxB+M,WAAW,EAEa,KADxB1H,SAAS,GACe,KAMxB2H,gBAAgB,SAACC,GAEhB,IADA,IAAIhQ,EAAO,EACHpD,EAAE,EAAEA,EAAEoT,EAAO1O,OAAO1E,IAC3BoD,GAAQgQ,EAAOC,WAAWrT,GAE3B,OAAOoD,GAXgB,KAaxBkQ,iBAAiB,SAACC,GAEjB,IADA,IAAIC,EAAa,GACTxT,EAAE,EAAEA,EAAEuT,EAAQ7O,OAAO1E,IAAI,CAEhC,IADA,IAAIoD,EAAO,EACHkH,EAAE,EAAEA,EAAEiJ,EAAQvT,GAAG0E,OAAO4F,IAC/BlH,GAAQmQ,EAAQvT,GAAGqT,WAAW/I,GAE/BkJ,EAAapT,KAAKgD,GAEnB,OAAOoQ,GAtBgB,KAwBxBC,mBAAmB,WAClB,EAAKP,WAAW,EAChB,EAAK1H,SAAS,GAEd,IADA,IAAIoD,EAAU,EAAK8E,QACX1T,EAAE,EAAEA,EAAE4O,EAAQ5O,IACrB,EAAKwL,SAASpL,KAAK,EAAE,KA7BC,KAgCxBuT,UAAU,WAET,IADA,IAAIC,EAAK,EACD5T,EAAE,EAAGA,EAAE,EAAK6T,kBAAmB7T,IAAI,EAEpB,GAAnB,EAAKwL,SAASxL,KAChB4T,GAAa,GAIf,OADa,EAAKC,kBAAkBD,GAxCb,KA2CxBC,gBAAgB,WACf,OAAO,EAAKrI,SAAS9G,QA5CE,KA8CxBoP,MAAM,SAACrF,GAAK,EAAKA,EAAEA,GA9CK,KA+CxBiF,MAAM,WAAK,OAAO,EAAKjF,GA/CC,KAgDxBsF,QAAQ,SAAC7N,GAAO,EAAKA,IAAIA,GAhDD,KAiDxB8N,QAAQ,WAAK,OAAO,EAAK9N,KAjDD,KAkDxB+N,QAAQ,SAAC9N,GAAO,EAAKA,IAAIA,GAlDD,KAmDxB+N,QAAQ,WAAK,OAAO,EAAK/N,KAnDD,KAoDxBgO,eAAe,SAAC5H,GACf,OAAO,EAAKf,SAASe,IArDE,KAuDxB5E,SAAS,WAER,IADA,IAAIyM,EAAM,IACFpU,EAAE,EAAGA,EAAE,EAAK0T,QAAQ1T,IAC3BoU,GAAS,IAAI,EAAK5I,SAASxL,GAG5BoU,GAAO,MAD2B,IAAjB,EAAKT,YAAgB,EAAKD,QAAU,KAErDpU,QAAQC,IAAI6U,IA9DW,KAgExBC,gBAAkB,SAACC,GAClB,OAASA,EAAI,EAAKZ,SAjEK,KAmExBa,cAAgB,SAACD,GAGhB,IAFA,IAAIE,EAAWhU,SAAS8T,GACpBG,EAAQ,EACND,GAAU,GACfA,GAAoB,EAMrB,OAJAC,EAASC,KAAKC,MAAOH,EAAWhU,SAAS,EAAKiO,IAC3CjO,SAASiU,IAAU,EAAKf,UAC1Be,EAAQjU,SAASiU,GAAS,GAEnBjU,SAASiU,IA7EM,KA+ExBG,sBAAsB,SAACN,GAEtB,OAAQI,KAAKC,MAAM,EAAKjB,SADhB,YAC4BY,EAAG,KAjFhB,KAmFxBO,UAAU,SAACC,GACV,GAAsB,IAAjB,EAAKnB,YAAiB,EAAKD,SAAU,EAAKQ,UAAU,CACxD,IAAIxM,EAAM,EAAK8D,SACf,EAAK7D,WACL,IAAIoN,EAAa,EAAKrB,QACtB,EAAKI,MAAuB,IAAjB,EAAKH,YAAgB,EAAKK,WACrC,EAAKP,qBACL,IAAI,IAAIzT,EAAE,EAAGA,EAAE+U,EAAY/U,IAE1B,GADAV,QAAQC,IAAImI,EAAI1H,KACJ,GAAT0H,EAAI1H,GACN,GAAS,YAAN8U,EAAiB,CACnBxV,QAAQC,IAAI,eAAemI,EAAI1H,IAC/B,IAAI,IAAIsK,EAAE,EAAEA,EAAE5C,EAAI1H,GAAG0E,OAAO4F,IAAI,CAC/B,IAAI0K,SAAetN,EAAI1H,GAAGsK,GAC1B,GAAU,UAAP0K,EAAgB,CACFtN,EAAI1H,GAAGsK,GACvB,EAAK2K,iBAAiBvN,EAAI1H,GAAGsK,QACd,UAAP0K,GACR,EAAKC,iBAAiBzU,SAASkH,EAAI1H,GAAGsK,WAGnC,GAAS,kBAANwK,EACR,IAAI,IAAIxK,EAAE,EAAEA,EAAE5C,EAAI1H,GAAG0E,OAAO4F,IAAI,CAC/B,IAAI0K,SAAetN,EAAI1H,GAAGsK,GAC1B,GAAU,UAAP0K,EAAgB,CACFtN,EAAI1H,GAAGsK,GACvB,EAAK4K,uBAAuBxN,EAAI1H,GAAGsK,QACpB,UAAP0K,GACR,EAAKE,uBAAuB1U,SAASkH,EAAI1H,GAAGsK,UAGzC,GAAS,UAANwK,EACR,IAAI,IAAIxK,EAAE,EAAEA,EAAE5C,EAAI1H,GAAG0E,OAAO4F,IAAI,CAC/B,IAAI0K,SAAetN,EAAI1H,GAAGsK,GAC1B,GAAU,UAAP0K,EAAgB,CACFtN,EAAI1H,GAAGsK,GACvB,EAAK6K,eAAezN,EAAI1H,GAAGsK,QACZ,UAAP0K,GACR,EAAKG,eAAe3U,SAASkH,EAAI1H,GAAGsK,WAOzC,EAAK3C,YAhIiB,KAmIxBsN,iBAAiB,SAACX,GACjBhV,QAAQC,IAAI,QACZ,IAAIyV,SAAeV,EACnBhV,QAAQC,WAAW+U,GACnB,IAAIc,EAAc,EACR,UAAPJ,EACFI,EAAgB5U,SAAS,EAAK6T,gBAAgB,EAAKlB,gBAAgBmB,KACpD,UAAPU,IACRI,EAAgB,EAAKf,gBAAgB7T,SAAS8T,KAE/ChV,QAAQC,IAAI,eAAe6V,IACO,GAA/B,EAAK5J,SAAS4J,IAChB,EAAK5J,SAAS4J,GAAehV,KAAKkU,GAElC,EAAKpB,eAEL,EAAK1H,SAAS4J,GAAe,CAACd,GAC9B,EAAKpB,cAEN,EAAK2B,UAAU,aAtJQ,KAwJxBM,eAAe,SAACb,GACf,IAAIU,SAAeV,EACfe,EAAY,EACN,UAAPL,EACFK,EAAc7U,SAAS,EAAK+T,cAAc,EAAKpB,gBAAgBmB,KAChD,UAAPU,IACRK,EAAc,EAAKd,cAAc/T,SAAS8T,MAEX,GAA7B,EAAK9I,SAAS6J,IAChB,EAAK7J,SAAS6J,GAAajV,KAAKkU,GAGhC,EAAKpB,eAEL,EAAK1H,SAAS6J,GAAa,CAACf,GAC5B,EAAKpB,cAEN,EAAK2B,UAAU,WAzKQ,KA2KxBK,uBAAuB,SAACZ,GACvB,IACIgB,EAAoB,EAEvBA,EADS,iBAFShB,EAGI9T,SAAS,EAAKoU,sBAAsB,EAAKzB,gBAAgBmB,KAEzD,EAAKM,sBAAsBN,IAEV,GAArC,EAAK9I,SAAS8J,IAChB,EAAK9J,SAAS8J,GAAqBlV,KAAKkU,GAExC,EAAKpB,eAEL,EAAK1H,SAAS8J,GAAqB,CAAChB,GACpC,EAAKpB,cAEN,EAAK2B,UAAU,mBA3LQ,KA8LxBU,eAAe,SAACjB,GACf,IACIe,EAAY,EAMhB,GAJCA,EADS,iBAFSf,EAGJ9T,SAAS,EAAK+T,cAAc,EAAKpB,gBAAgBmB,KAEjD,EAAKC,cAAcD,IAEF,GAA7B,EAAK9I,SAAS6J,GAChB,GAAG,EAAK7J,SAAS6J,GAAa3Q,OAAO,GACpC,IAAI,IAAI1E,EAAE,EAAEA,EAAE,EAAKwL,SAAS6J,GAAa3Q,OAAO1E,IAC/C,GAAG,EAAKwL,SAAS6J,GAAarV,IAAIsU,EAAE,CACnC,IAAIkB,EAAa,EAAKhK,SAAS6J,GAC/BG,EAAWC,OAAOzV,EAAE,GACpB,EAAKwL,SAAS6J,GAAeG,EAC7B,EAAKtC,aACL,YAIF,EAAK1H,SAAS6J,GAAa,EAAE,GAC7B,EAAKnC,aAGP,EAAK2B,UAAU,WAtNQ,KAwNxBa,iBAAiB,SAACpB,GACjB,IACIc,EAAc,EAMlB,GAJCA,EADS,iBAFSd,EAGF9T,SAAS,EAAK6T,gBAAgB,EAAKlB,gBAAgBmB,KAEnD,EAAKD,gBAAgBC,IAEJ,GAA/B,EAAK9I,SAAS4J,GAChB,GAAG,EAAK5J,SAAS4J,GAAe1Q,OAAO,GACtC,IAAI,IAAI1E,EAAE,EAAEA,EAAE,EAAKwL,SAAS4J,GAAe1Q,OAAO1E,IACjD,GAAG,EAAKwL,SAAS4J,GAAepV,IAAIsU,EAAE,CACrC,IAAIkB,EAAa,EAAKhK,SAAS4J,GAC/BI,EAAWC,OAAOzV,EAAE,GACpB,EAAKwL,SAAS4J,GAAiBI,EAC/B,EAAKtC,aACL,YAIF,EAAK1H,SAAS4J,GAAe,EAAE,GAC/B,EAAKlC,aAGP,EAAK2B,UAAU,aAhPQ,KAkPxBc,uBAAuB,SAACrB,GACvB,IACIgB,EAAoB,EAMxB,GAJCA,EADS,iBAFShB,EAGI9T,SAAS,EAAKoU,sBAAsB,EAAKzB,gBAAgBmB,KAEzD,EAAKM,sBAAsBN,IAEV,GAArC,EAAK9I,SAAS8J,GAChB,GAAG,EAAK9J,SAAS8J,GAAqB5Q,OAAO,GAC5C,IAAI,IAAI1E,EAAE,EAAEA,EAAE,EAAKwL,SAAS8J,GAAqB5Q,OAAO1E,IACvD,GAAG,EAAKwL,SAAS8J,GAAqBtV,IAAIsU,EAAE,CAC3C,IAAIkB,EAAa,EAAKhK,SAAS8J,GAC/BE,EAAWC,OAAOzV,EAAE,GACpB,EAAKwL,SAAS8J,GAAuBE,EACrC,EAAKtC,aACL,YAIF,EAAK1H,SAAS8J,GAAqB,EAAE,GACrC,EAAKpC,aAGP,EAAK2B,UAAU,mBA1QQ,KA6QxBe,aAAa,SAACtB,GACb,IAAI/H,GAAQ,EACRsJ,EAAc,EAEdR,EAAY,EAMhB,GAJCA,EADS,iBAFSf,EAGJ9T,SAAS,EAAK+T,cAAc,EAAKpB,gBAAgBmB,KAEjD,EAAKC,cAAcD,IAEF,GAA7B,EAAK9I,SAAS6J,GAChB,GAAG,EAAK7J,SAAS6J,GAAa3Q,OAAO,EACpC,IAAI,IAAI1E,EAAE,EAAEA,EAAE,EAAKwL,SAAS6J,GAAa3Q,OAAO1E,IAC5C,EAAKwL,SAAS6J,GAAarV,IAAIsU,IACjC/H,EAAO8I,EACPQ,EAAc7V,QAIhBuM,EAAO8I,EAIT,OADA,EAAKR,UAAU,UACR,CAACtI,EAAOsJ,IApSQ,KAsSxBC,eAAe,SAACxB,GACf,IAAI/H,GAAQ,EACRsJ,EAAc,EAEdT,EAAc,EAMlB,GAJCA,EADS,iBAFSd,EAGF9T,SAAS,EAAK6T,gBAAgB,EAAKlB,gBAAgBmB,KAEnD,EAAKD,gBAAgBC,IAEJ,GAA/B,EAAK9I,SAAS4J,GAChB,GAAG,EAAK5J,SAAS4J,GAAe1Q,OAAO,EACtC,IAAI,IAAI1E,EAAE,EAAEA,EAAE,EAAKwL,SAAS4J,GAAe1Q,OAAO1E,IAC9C,EAAKwL,SAAS4J,GAAepV,IAAIsU,IACnC/H,EAAO6I,EACPS,EAAc7V,QAIhBuM,EAAO6I,EAIT,OADA,EAAKP,UAAU,YACR,CAACtI,EAAOsJ,IA7TQ,KA+TxBE,qBAAqB,SAACzB,GACrB,IAAI/H,GAAQ,EACRsJ,EAAc,EAEdP,EAAoB,EAMxB,GAJCA,EADS,iBAFShB,EAGI9T,SAAS,EAAKoU,sBAAsB,EAAKzB,gBAAgBmB,KAEzD,EAAKM,sBAAsBN,IAEV,GAArC,EAAK9I,SAAS8J,GAChB,GAAG,EAAK9J,SAAS8J,GAAqB5Q,OAAO,EAC5C,IAAI,IAAI1E,EAAE,EAAEA,EAAE,EAAKwL,SAAS8J,GAAqB5Q,OAAO1E,IACpD,EAAKwL,SAAS8J,GAAqBtV,IAAIsU,IACzC/H,EAAO+I,EACPO,EAAc7V,QAIhBuM,EAAO+I,EAIT,OADA,EAAKT,UAAU,kBACR,CAACtI,EAAOsJ,IAtVQ,KAyVxBG,WAAW,SAAC1B,EAAE2B,EAAMnB,GACnB,GAAS,UAANA,EAAe,CACjB,IACIO,EAAY,EAMhB,GAJCA,EADS,iBAFSf,EAGJ9T,SAAS,EAAK+T,cAAc,EAAKpB,gBAAgBmB,KAEjD,EAAKC,cAAcD,IAEF,GAA7B,EAAK9I,SAAS6J,GAChB,GAAG,EAAK7J,SAAS6J,GAAa3Q,OAAO,GACpC,IAAI,IAAI1E,EAAE,EAAEA,EAAE,EAAKwL,SAAS6J,GAAa3Q,OAAO1E,IAC/C,GAAG,EAAKwL,SAAS6J,GAAarV,IAAIsU,EAAE,CACnC,IAAIkB,EAAa,EAAKhK,SAAS6J,GAC/BG,EAAWC,OAAOzV,EAAE,GACpB,EAAKwL,SAAS6J,GAAeG,EAC7B,EAAKtC,aACL,EAAKiC,eAAec,SAItB,EAAKzK,SAAS6J,GAAa,EAAE,GAC7B,EAAKnC,aACL,EAAKiC,eAAec,GAGtB,EAAKpB,UAAU,eACV,GAAS,YAANC,EAAiB,CACzB,IACIM,EAAc,EAOlB,GALCA,EADS,iBAFSd,EAGF9T,SAAS,EAAK6T,gBAAgB,EAAKlB,gBAAgBmB,KAEnD,EAAKD,gBAAgBC,IAGJ,GAA/B,EAAK9I,SAAS4J,GAChB,GAAG,EAAK5J,SAAS4J,GAAe1Q,OAAO,GACtC,IAAI,IAAI1E,EAAE,EAAEA,EAAE,EAAKwL,SAAS4J,GAAe1Q,OAAO1E,IACjD,GAAG,EAAKwL,SAAS4J,GAAepV,IAAIsU,EAAE,CACrC,IAAIkB,EAAa,EAAKhK,SAAS4J,GAC/BI,EAAWC,OAAOzV,EAAE,GACpB,EAAKwL,SAAS4J,GAAiBI,EAC/B,EAAKtC,aACL,EAAK+B,iBAAiBgB,SAIxB,EAAKzK,SAAS4J,GAAe,EAAE,GAC/B,EAAKlC,aACL,EAAK+B,iBAAiBgB,GAGxB,EAAKpB,UAAU,iBACV,GAAS,kBAANC,EAAuB,CAC/B,IACIQ,EAAoB,EAMxB,GAJCA,EADS,iBAFShB,EAGI9T,SAAS,EAAKoU,sBAAsB,EAAKzB,gBAAgBmB,KAEzD,EAAKM,sBAAsBN,IAEV,GAArC,EAAK9I,SAAS8J,GAChB,GAAG,EAAK9J,SAAS8J,GAAqB5Q,OAAO,GAC5C,IAAI,IAAI1E,EAAE,EAAEA,EAAE,EAAKwL,SAAS8J,GAAqB5Q,OAAO1E,IACvD,GAAG,EAAKwL,SAAS8J,GAAqBtV,IAAIsU,EAAE,CAC3C,IAAIkB,EAAa,EAAKhK,SAAS8J,GAC/BE,EAAWC,OAAOzV,EAAE,GACpB,EAAKwL,SAAS8J,GAAuBE,EACrC,EAAKtC,aACL,EAAKgC,uBAAuBe,SAI9B,EAAKzK,SAAS8J,GAAqB,EAAE,GACrC,EAAKpC,aACL,EAAKgC,uBAAuBe,GAG9B,EAAKpB,UAAU,oBAxaO,KA4axBqB,WAAa,WAIZ,IAHA,IAAIxJ,EAAU,GACVC,EAAW,GACXE,EAAW,EACP7M,EAAE,EAAEA,EAAE,EAAK6T,kBAAkB7T,IACpC0M,EAAQtM,KAAK,CAAC3C,GAAGuC,EAAGK,MAAO,IAAKyM,MAAM,IACnC9M,EAAE,EAAE,EAAKwL,SAAS9G,QACpBiI,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG+B,EAAE,EAAGW,OAAQ,OAExCkM,IAEDvN,QAAQC,IAAIsN,GACZ,IAAI,IAAI7M,EAAE,EAAEA,EAAE,EAAK6T,kBAAkB7T,IACpC,IAAsB,GAAnB,EAAKwL,SAASxL,GAChB,GAAG,EAAKwL,SAASxL,GAAG0E,OAAO,GAC1B,IAAI,IAAI4F,EAAE,EAAEA,EAAE,EAAKkB,SAASxL,GAAG0E,OAAO4F,IACrC,GAAM,GAAHA,EAAK,CACP,IAAI1C,EAAS,GAAG,EAAK4D,SAASxL,GAAGsK,GAIjC,GAHAoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAMxC,EAAE,IACpDqC,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG4O,EAAUlM,OAAQ,OAC5CkM,IACIvC,EAAE,GAAI,EAAKkB,SAASxL,GAAG0E,OAAO,CACjC,IAAIkD,EAAS,GAAG,EAAK4D,SAASxL,GAAGsK,EAAE,GACnCoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAMxC,EAAE,IACpDqC,EAASvM,KAAK,CAACM,KAAKmM,EAAS,EAAG5O,GAAG4O,EAAUlM,OAAQ,OACrDkM,UAGD,GAAIvC,EAAE,EAAG,EAAKkB,SAASxL,GAAG0E,OAAO,CAChC,IAAIkD,EAAS,GAAG,EAAK4D,SAASxL,GAAGsK,EAAE,GACnCoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAMxC,EAAE,IACpDqC,EAASvM,KAAK,CAACM,KAAKmM,EAAS,EAAG5O,GAAG4O,EAAUlM,OAAQ,OACrDkM,SAMC,CACJ,IAAIjF,EAAS,GAAG,EAAK4D,SAASxL,GAAG,GACjC0M,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAM,IAClDH,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG4O,EAAUlM,OAAQ,OAC5CkM,IAKG,MAAO,CAACH,EAAQC,IA3dC,KA8drBwJ,iBAAiB,SAACC,EAAQC,EAAQ/X,GAIpC,IAHG,IAAIoO,EAAU,GACbC,EAAW,GACXE,EAAW,EACP7M,EAAE,EAAEA,EAAE,EAAK6T,kBAAkB7T,IACpC0M,EAAQtM,KAAK,CAAC3C,GAAGuC,EAAGK,MAAO,IAAKyM,MAAM,IACnC9M,EAAE,EAAE,EAAKwL,SAAS9G,QACpBiI,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG+B,EAAE,EAAGW,OAAQ,OAExCkM,IAEDvN,QAAQC,IAAIsN,GACZ,IAAI,IAAI7M,EAAE,EAAEA,EAAE,EAAK6T,kBAAkB7T,IACpC,IAAsB,GAAnB,EAAKwL,SAASxL,GAChB,GAAG,EAAKwL,SAASxL,GAAG0E,OAAO,EAC1B,IAAI,IAAI4F,EAAE,EAAEA,EAAE,EAAKkB,SAASxL,GAAG0E,OAAO4F,IAAI,CACzC,GAAM,GAAHA,EAAK,CACP,IAAI1C,EAAS,GAAG,EAAK4D,SAASxL,GAAGsK,GAIjC,GAHAoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAMxC,EAAE,IACpDqC,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG4O,EAAUlM,OAAQ,OAC5CkM,IACIvC,EAAE,GAAI,EAAKkB,SAASxL,GAAG0E,OAAO,CACjC,IAAIkD,EAAS,GAAG,EAAK4D,SAASxL,GAAGsK,EAAE,GACnCoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAMxC,EAAE,IACpDqC,EAASvM,KAAK,CAACM,KAAKmM,EAAS,EAAG5O,GAAG4O,EAAUlM,OAAQ,OACrDkM,UAGD,GAAIvC,EAAE,EAAG,EAAKkB,SAASxL,GAAG0E,OAAO,CAChC,IAAIkD,EAAS,GAAG,EAAK4D,SAASxL,GAAGsK,EAAE,GACnCoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAMxC,EAAE,IACpDqC,EAASvM,KAAK,CAACM,KAAKmM,EAAS,EAAG5O,GAAG4O,EAAUlM,OAAQ,OACrDkM,IAIEuJ,GAASpW,GAAKqW,GAAS/L,GAAKhM,GAAM,EAAKkN,SAASxL,GAAGsK,IACtDqC,EAASvM,KAAK,CAACM,KAAMmM,EAAS,EAAG5O,GAAI4O,EAAS,EAAGzI,MAAMyI,EAAS5K,MAAM,CAACA,MAAM,iBAI3E,CACJ,IAAI2F,EAAS,GAAG,EAAK4D,SAASxL,GAAG,GACjC0M,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAM,IAClDH,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG4O,EAAUlM,OAAQ,OACxCyV,GAASpW,GAAc,GAATqW,GAAc/X,GAAM,EAAKkN,SAASxL,GAAG,IACtD2M,EAASvM,KAAK,CAACM,KAAMmM,EAAU5O,GAAI4O,EAAUzI,MAAMyI,EAAS5K,MAAM,CAACA,MAAM,aAE1E4K,IAKG,MAAO,CAACH,EAAQC,IAnhBC,KAqhBrB/L,aAAa,SAAC0V,GAEb,IADA,IAAIrJ,EAAO,wFAAkG,EAAKwB,EAAE,kBAAoB,EAAKvI,IAAI,kBAAoB,EAAKC,IAAI,oBAAuBmQ,EAAQ,2CACrMtW,EAAE,EAAGA,EAAE,EAAKwL,SAAS9G,OAAQ1E,IACpC,IAAI,IAAIsK,EAAE,EAAGA,EAAE,EAAKkB,SAASxL,GAAG0E,OAAQ4F,IAAI,CAC3C,IAAI4C,GAAW,EACdC,EAAS3M,SAAS,EAAKgL,SAASxL,GAAGsK,IACpC8C,MAAMD,KACRD,GAAS,GAEG,GAAVA,GACuB,GAAtB,EAAK1B,SAASxL,GAAGsK,KACnB2C,EAAOA,EAAO,KAAK,EAAKzB,SAASxL,GAAGsK,GAAG,OAGxC2C,EAAOA,EAAO,MAAQ,EAAKzB,SAASxL,GAAGsK,GAAI,OAK3C,OADA2C,GAAa,UAtiBhB1O,KAAKkQ,EAAIA,EACTlQ,KAAK2H,IAAMA,EACX3H,KAAK4H,IAAMA,EACX5H,KAAKkV,qBDHS,CAAgB,EAAE,GAAG,IACjCpS,GAAW,IAAIC,UAAQ,IACvBC,GAAW,IAAID,UAAQ,IAGvBE,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAGHI,GAAU,CACbF,MAAM,CACCO,YAAa,GACb0L,MAAO,MACPzL,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,aAIxB4L,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cAkbJsI,G,kDA1ahB,WAAYjU,GAAQ,IAAD,8BAClB,cAAMA,IA6BPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WAnCvC,EAuCnBgL,eAAiB,WAChB6E,GAAUa,MAAMtT,SAAS,EAAK8C,MAAMsL,UACpCqE,GAAUc,QAAQvT,SAAS,EAAK8C,MAAMkT,SACtCvD,GAAUgB,QAAQzT,SAAS,EAAK8C,MAAMmT,SACtCxD,GAAUQ,qBAEVnU,QAAQC,IAAI,UACZD,QAAQC,IAAI,aA9CM,EAiDnB8D,UAAY,WACX,IAAI6J,GAAW,EACXC,EAAS3M,SAAS,EAAK8C,MAAMC,MAC9B6J,MAAMD,KACRD,GAAS,GAEY,UAAnB,EAAK5J,MAAMqL,QACA,GAAVzB,EACF+F,GAAUkC,eAAe3U,SAAS,EAAK8C,MAAMC,OAE7C0P,GAAUkC,eAAe,EAAK7R,MAAMC,MAErClC,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,KACnB,YAAnB,EAAK5S,MAAMqL,QACN,GAAVzB,EACF+F,GAAUgC,iBAAiBzU,SAAS,EAAK8C,MAAMC,OAE/C0P,GAAUgC,iBAAiB,EAAK3R,MAAMC,MAEvClC,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,IAC9C5W,QAAQC,IAAI,QACe,kBAAnB,EAAK+D,MAAMqL,SACN,GAAVzB,EACF+F,GAAUiC,uBAAuB1U,SAAS,EAAK8C,MAAMC,OAErD0P,GAAUiC,uBAAuB,EAAK5R,MAAMC,MAE7ClC,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,IAC9C5W,QAAQC,IAAI,SAEbiC,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAxFpC,EA2FnBkC,aAAe,WACd,IAAIqJ,GAAW,EACXC,EAAS3M,SAAS,EAAK8C,MAAMC,MAC9B6J,MAAMD,KACRD,GAAS,GAEY,UAAnB,EAAK5J,MAAMqL,QACA,GAAVzB,EACF+F,GAAUsC,eAAe/U,SAAS,EAAK8C,MAAMC,OAE7C0P,GAAUsC,eAAe,EAAKjS,MAAMC,MAErClC,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,KACnB,YAAnB,EAAK5S,MAAMqL,QACN,GAAVzB,EACF+F,GAAUyC,iBAAiBlV,SAAS,EAAK8C,MAAMC,OAE/C0P,GAAUyC,iBAAiB,EAAKpS,MAAMC,MAEvClC,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,IAC9C5W,QAAQC,IAAI,QACe,kBAAnB,EAAK+D,MAAMqL,SACN,GAAVzB,EACF+F,GAAU0C,uBAAuBnV,SAAS,EAAK8C,MAAMC,OAErD0P,GAAU0C,uBAAuB,EAAKrS,MAAMC,MAE7ClC,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,IAC9C5W,QAAQC,IAAI,SAEbiC,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAlIpC,EAqInBmC,aAAe,WACd,IAAIoJ,GAAW,EACXC,EAAS3M,SAAS,EAAK8C,MAAMC,MAC9B6J,MAAMD,KACRD,GAAS,GAEV,IAAIwJ,GAAY,EACZC,EAAUnW,SAAS,EAAK8C,MAAMS,kBAC/BqJ,MAAMuJ,KACRD,GAAU,GAEW,UAAnB,EAAKpT,MAAMqL,QACA,GAAVzB,EACY,GAAXwJ,EACFzD,GAAU+C,WAAWxV,SAAS,EAAK8C,MAAMC,MAAM/C,SAAS,EAAK8C,MAAMS,kBAAkB,UAErFkP,GAAU+C,WAAWxV,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAMS,iBAAiB,UAG9D,GAAX2S,EACFzD,GAAU+C,WAAW,EAAK1S,MAAMC,KAAK/C,SAAS,EAAK8C,MAAMS,kBAAkB,UAE3EkP,GAAU+C,WAAW,EAAK1S,MAAMC,KAAK,EAAKD,MAAMS,iBAAiB,UAGnEkP,GAAU+C,WAAW,EAAK1S,MAAMC,KAAK,EAAKD,MAAMS,iBAAiB,UACjE1C,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,KACnB,YAAnB,EAAK5S,MAAMqL,QACN,GAAVzB,EACY,GAAXwJ,EACFzD,GAAU+C,WAAWxV,SAAS,EAAK8C,MAAMC,MAAM/C,SAAS,EAAK8C,MAAMS,kBAAkB,aAErFzE,QAAQC,IAAI,iBACZ0T,GAAU+C,WAAWxV,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAMS,iBAAiB,aAG9D,GAAX2S,EACFzD,GAAU+C,WAAW,EAAK1S,MAAMC,KAAK/C,SAAS,EAAK8C,MAAMS,kBAAkB,YAE3EkP,GAAU+C,WAAW,EAAK1S,MAAMC,KAAK,EAAKD,MAAMS,iBAAiB,YAGnE1C,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,KACnB,kBAAnB,EAAK5S,MAAMqL,SACN,GAAVzB,EACY,GAAXwJ,EACFzD,GAAU+C,WAAWxV,SAAS,EAAK8C,MAAMC,MAAM/C,SAAS,EAAK8C,MAAMS,kBAAkB,kBAErFkP,GAAU+C,WAAWxV,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAMS,iBAAiB,kBAG9D,GAAX2S,EACFzD,GAAU+C,WAAW,EAAK1S,MAAMC,KAAK/C,SAAS,EAAK8C,MAAMS,kBAAkB,kBAE3EkP,GAAU+C,WAAW,EAAK1S,MAAMC,KAAK,EAAKD,MAAMS,iBAAiB,kBAGnE1C,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,KAE/C1U,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAzMpC,EA4MnBuC,aAAe,WACd,IAAIgJ,GAAW,EACXC,EAAS3M,SAAS,EAAK8C,MAAMC,MAIjC,GAHG6J,MAAMD,KACRD,GAAS,GAEY,UAAnB,EAAK5J,MAAMqL,OAAiB,CAC9B,IAAIyH,EAAQ,EACRC,EAAQ,EACC,GAAVnJ,GACFkJ,EAAQnD,GAAU2C,aAAapV,SAAS,EAAK8C,MAAMC,OAAO,GAC1D8S,EAAQpD,GAAU2C,aAAapV,SAAS,EAAK8C,MAAMC,OAAO,GAC1DlC,GAAW,IAAIC,UAAQ2R,GAAUkD,iBAAiBC,EAAQC,EAAQ7V,SAAS,EAAK8C,MAAMC,OAAO,IAC7FhC,GAAW,IAAID,UAAQ2R,GAAUkD,iBAAiBC,EAAQC,EAAQ7V,SAAS,EAAK8C,MAAMC,OAAO,MAE7F6S,EAAQnD,GAAU2C,aAAa,EAAKtS,MAAMC,MAAM,GAChD8S,EAAQpD,GAAU2C,aAAa,EAAKtS,MAAMC,MAAM,GAChDlC,GAAW,IAAIC,UAAQ2R,GAAUkD,iBAAiBC,EAAQC,EAAQ,EAAK/S,MAAMC,MAAM,IACnFhC,GAAW,IAAID,UAAQ2R,GAAUkD,iBAAiBC,EAAQC,EAAQ,EAAK/S,MAAMC,MAAM,KAEpFjE,QAAQC,IAAI,YAAY6W,GACxB9W,QAAQC,IAAI,YAAY8W,QACnB,GAAsB,YAAnB,EAAK/S,MAAMqL,OAAmB,CACtC,IAAIyH,EAAQ,EACRC,EAAQ,EACC,GAAVnJ,GACFkJ,EAAQnD,GAAU6C,eAAetV,SAAS,EAAK8C,MAAMC,OAAO,GAC5D8S,EAAQpD,GAAU6C,eAAetV,SAAS,EAAK8C,MAAMC,OAAO,GAC5DlC,GAAW,IAAIC,UAAQ2R,GAAUkD,iBAAiBC,EAAQC,EAAQ7V,SAAS,EAAK8C,MAAMC,OAAO,IAC7FhC,GAAW,IAAID,UAAQ2R,GAAUkD,iBAAiBC,EAAQC,EAAQ7V,SAAS,EAAK8C,MAAMC,OAAO,MAE7F6S,EAAQnD,GAAU6C,eAAe,EAAKxS,MAAMC,MAAM,GAClD8S,EAAQpD,GAAU6C,eAAe,EAAKxS,MAAMC,MAAM,GAClDlC,GAAW,IAAIC,UAAQ2R,GAAUkD,iBAAiBC,EAAQC,EAAQ,EAAK/S,MAAMC,MAAM,IACnFhC,GAAW,IAAID,UAAQ2R,GAAUkD,iBAAiBC,EAAQC,EAAQ,EAAK/S,MAAMC,MAAM,KAEpFjE,QAAQC,IAAI,YAAY6W,GACxB9W,QAAQC,IAAI,YAAY8W,QACnB,GAAsB,kBAAnB,EAAK/S,MAAMqL,OAAyB,CAC5C,IAAIyH,EAAQ,EACRC,EAAQ,EACC,GAAVnJ,GACFkJ,EAAQnD,GAAU8C,qBAAqBvV,SAAS,EAAK8C,MAAMC,OAAO,GAClE8S,EAAQpD,GAAU8C,qBAAqBvV,SAAS,EAAK8C,MAAMC,OAAO,GAClElC,GAAW,IAAIC,UAAQ2R,GAAUkD,iBAAiBC,EAAQC,EAAQ7V,SAAS,EAAK8C,MAAMC,OAAO,IAC7FhC,GAAW,IAAID,UAAQ2R,GAAUkD,iBAAiBC,EAAQC,EAAQ7V,SAAS,EAAK8C,MAAMC,OAAO,MAE7F6S,EAAQnD,GAAU8C,qBAAqB,EAAKzS,MAAMC,MAAM,GACxD8S,EAAQpD,GAAU8C,qBAAqB,EAAKzS,MAAMC,MAAM,GACxDlC,GAAW,IAAIC,UAAQ2R,GAAUkD,iBAAiBC,EAAQC,EAAQ,EAAK/S,MAAMC,MAAM,IACnFhC,GAAW,IAAID,UAAQ2R,GAAUkD,iBAAiBC,EAAQC,EAAQ,EAAK/S,MAAMC,MAAM,KAEpFjE,QAAQC,IAAI,YAAY6W,GACxB9W,QAAQC,IAAI,YAAY8W,GAEzB7U,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAzQpC,EA4QnB0C,eAAiB,WAChB,IACMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,wBAAtBmB,EAASE,UAAoC,CAEhDyO,GAAUa,MAAMtT,SAAS8D,EAASmK,IAClCwE,GAAUc,QAAQvT,SAAS8D,EAASkS,SACpCvD,GAAUgB,QAAQzT,SAAS8D,EAASmS,SACpCxD,GAAUQ,qBACV,IAAK,IAAIzT,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IACrB,UAAlBsE,EAASgS,SACXhX,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7BiT,GAAUkC,eAAe7Q,EAASvD,QAAQf,GAAGc,aACnB,YAAlBwD,EAASgS,SACjBhX,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7BiT,GAAUgC,iBAAiB3Q,EAASvD,QAAQf,GAAGc,aACrB,kBAAlBwD,EAASgS,UACjBhX,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7BiT,GAAUiC,uBAAuB5Q,EAASvD,QAAQf,GAAGc,aAIvDO,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,IAC9C1U,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAKtDgD,MAAM,gDA/SW,EAoTnBC,eAAiB,WAChB,IAAMC,EAAUC,SAASC,cAAc,KACnCC,EAAYiO,GAAUrS,aAAa,EAAK0C,MAAMqL,QAC5C1J,EAAO,IAAIC,KAAK,CAACF,IACvBH,EAAQrH,KAAO2H,IAAIC,gBAAgBH,GAChCJ,EAAQQ,SAAW,wBACnBP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAQW,QACRb,MAAM,sBA1TT,EAAKrB,MAAQ,CACZqL,OAAQ,SACRC,QAAS,GACT4H,OAAQ,GACRC,OAAQ,GACRlT,KAAM,GACNQ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GAEb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAfP,E,qDAkBnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAsSX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,UAAU5C,KAAK,UAAU3F,UAAU,eAAewI,YAAY,2BAAwBtI,GAAG,eAAe2G,MAAO7F,KAAK+E,MAAMsL,QAAS5I,SAAUzH,KAAKmH,sBAE/J,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,kBAAkBtI,GAAG,cAAc2G,MAAO7F,KAAK+E,MAAMkT,OAAQxQ,SAAUzH,KAAKmH,sBAErJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,kBAAkBtI,GAAG,cAAc2G,MAAO7F,KAAK+E,MAAMmT,OAAQzQ,SAAUzH,KAAKmH,sBAErJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKkQ,kBAAtE,gCAGF,qBAAK7Q,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAf,SACC,yBAAQuI,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,cAAcyI,SAAUzH,KAAKmH,kBAA3E,UACO,wBAAQtB,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,iBAAd,iCAGR,qBAAK7G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,mBAAmB3F,UAAU,eAAewI,YAAY,oBAAoBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMS,iBAAkBiC,SAAUzH,KAAKmH,sBAEvK,qBAAKnI,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,wBAG7D,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,4BAED,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,2BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4F,gBAAtE,+BAED,qBAAKvG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAMF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAraf6C,aEhC3ByM,GAAY,ICDf,WAAYxE,EAAGvI,EAAKC,GAAK,IAAD,gCAFxB+M,WAAW,EAEa,KADxB1H,SAAS,GACe,KAMxB2H,gBAAgB,SAACC,GAEhB,IADA,IAAIhQ,EAAO,EACHpD,EAAE,EAAEA,EAAEoT,EAAO1O,OAAO1E,IAC3BoD,GAAQgQ,EAAOC,WAAWrT,GAE3B,OAAOoD,GAXgB,KAaxBkQ,iBAAiB,SAACC,GAEjB,IADA,IAAIC,EAAa,GACTxT,EAAE,EAAEA,EAAEuT,EAAQ7O,OAAO1E,IAAI,CAEhC,IADA,IAAIoD,EAAO,EACHkH,EAAE,EAAEA,EAAEiJ,EAAQvT,GAAG0E,OAAO4F,IAC/BlH,GAAQmQ,EAAQvT,GAAGqT,WAAW/I,GAE/BkJ,EAAapT,KAAKgD,GAEnB,OAAOoQ,GAtBgB,KAwBxBK,gBAAgB,WACf,OAAO,EAAKrI,SAAS9G,QAzBE,KA2BxB+O,mBAAmB,WAClB,EAAKP,WAAW,EAChB,EAAK1H,SAAS,GAEd,IADA,IAAIoD,EAAU,EAAK8E,QACX1T,EAAE,EAAEA,EAAE4O,EAAQ5O,IACrB,EAAKwL,SAASpL,MAAM,IAhCE,KAmCxB0T,MAAM,SAACrF,GAAK,EAAKA,EAAEA,GAnCK,KAoCxBiF,MAAM,WAAK,OAAOlT,SAAS,EAAKiO,EAAE,KApCV,KAqCxBsF,QAAQ,SAAC7N,GAAO,EAAKA,IAAIA,GArCD,KAsCxB8N,QAAQ,WAAK,OAAO,EAAK9N,KAtCD,KAuCxB+N,QAAQ,SAAC9N,GAAO,EAAKA,IAAIA,GAvCD,KAwCxB+N,QAAQ,WAAK,OAAO,EAAK/N,KAxCD,KAyCxBgO,eAAe,SAAC5H,GAGf,OAAO,EAAKf,SAASe,IA5CE,KA8CxB5E,SAAS,WAER,IADA,IAAIyM,EAAM,IACFpU,EAAE,EAAGA,EAAE,EAAK0T,QAAQ1T,IAC3BoU,GAAS,IAAI,EAAK5I,SAASxL,GAG5BoU,GAAO,MAD0B,IAAhB,EAAKlB,WAAe,EAAKQ,QAAU,KAEpDpU,QAAQC,IAAI6U,IArDW,KAuDxBC,gBAAkB,SAACC,GAClB,OAASA,EAAI,EAAKZ,SAxDK,KA0DxBa,cAAgB,SAACD,GAEhB,IADA,IAAIE,EAAWF,EACTE,EAAS,GACdA,EAAWE,KAAKC,MAAMH,EAAS,GAEhC,IAAIC,EAASC,KAAKC,MAAMH,EAAW,EAAKd,SAIxC,OAHGe,GAAS,EAAKf,UAChBe,GAAgB,GAETA,GAnEe,KAqExBG,sBAAsB,SAACN,GAEtB,OAAQI,KAAKC,MAAM,EAAKjB,SADhB,YAC4BY,EAAG,KAvEhB,KAyExBsC,sBAAsB,SAACtC,EAAEtU,GACxB,OAASsU,EAAI,GAAK,EAAKZ,SA1EA,KA4ExBmD,0BAA0B,SAACvC,EAAEtU,GAC5B,OAASsU,EAAGtU,EAAEA,GAAM,EAAK0T,SA7EF,KA+ExBoD,qBAAqB,SAACC,EAAG/W,EAAEgX,GAC1B,OAASD,EAAG/W,EAAEgX,GAAM,EAAKtD,SAhFF,KAkFxBmB,UAAU,SAACC,EAAKmC,GACf,GAAqB,IAAhB,EAAK/D,WAAgB,EAAKQ,SAAU,EAAKQ,UAAU,CACvD,IAAIxM,EAAM,EAAK8D,SACf,EAAK7D,WACL,IAAIoN,EAAa,EAAKrB,QACtB,EAAKI,MAAsB,IAAhB,EAAKZ,WAAe,EAAKc,WACpC,EAAKP,qBACL,IAAI,IAAIzT,EAAE,EAAGA,EAAE+U,EAAY/U,IAE1B,IAAY,GAAT0H,EAAI1H,GACN,GAAS,YAAN8U,EAAiB,CAClB,IAAIE,SAAetN,EAAI1H,GACvB,GAAU,UAAPgV,EAAgB,CACFtN,EAAI1H,GACpB,EAAKiV,iBAAiBvN,EAAI1H,GAAGiX,OACd,UAAPjC,GACR,EAAKC,iBAAiBzU,SAASkH,EAAI1H,IAAIiX,QAEpC,GAAS,kBAANnC,EAAuB,CAC9B,IAAIE,SAAetN,EAAI1H,GACvB,GAAU,UAAPgV,EAAgB,CACFtN,EAAI1H,GACpB,EAAKkV,uBAAuBxN,EAAI1H,GAAGiX,OACpB,UAAPjC,GACR,EAAKE,uBAAuB1U,SAASkH,EAAI1H,IAAIiX,QAE1C,GAAS,UAANnC,EAAe,CACtB,IAAIE,SAAetN,EAAI1H,GACvB,GAAU,UAAPgV,EAAgB,CACFtN,EAAI1H,GACpB,EAAKmV,eAAezN,EAAI1H,GAAGiX,OACZ,UAAPjC,GACR,EAAKG,eAAe3U,SAASkH,EAAI1H,IAAIiX,SAM1C,EAAKtP,YAxHiB,KA2HxBsN,iBAAiB,SAACX,EAAE2C,GACnB,IAAIjC,SAAeV,EACnBhV,QAAQC,WAAW+U,GACnB,IAAIc,EAAc,EAOlB,GANU,UAAPJ,EACFI,EAAgB5U,SAAS,EAAK6T,gBAAgB,EAAKlB,gBAAgBmB,KACpD,UAAPU,IACRI,EAAgB,EAAKf,gBAAgB7T,SAAS8T,KAGtC,UAAN2C,EAAe,CACjB,MAAqC,GAA/B,EAAKzL,SAAS4J,IACnBA,EAAgB,EAAKwB,sBAAsBxB,GAE5C,EAAK5J,SAAS4J,GAAed,EAC7B,EAAKpB,kBACA,GAAS,cAAN+D,EAAmB,CAG3B,IAFA,IAAIpK,EAAS,EACTqK,EAAW9B,GACmB,GAA5B,EAAK5J,SAAS0L,IACnBA,EAAa,EAAKL,0BAA0BzB,EAAcvI,GAC1DA,IAED,EAAKrB,SAAS0L,GAAY5C,EAC1B,EAAKpB,kBACA,GAAS,SAAN+D,EAAc,CACtB,IAAIjC,SAAeV,EACnBhV,QAAQC,WAAW+U,GACnB,IAAI0C,EAAG,EACG,UAAPhC,EACFgC,EAAKxW,SAAS,EAAK+T,cAAc,EAAKpB,gBAAgBmB,KACvC,UAAPU,IACRgC,EAAK,EAAKzC,cAAc/T,SAAS8T,KAIlC,IAFA,IAAIzH,EAAS,EACTqK,EAAW9B,GACmB,GAA5B,EAAK5J,SAAS0L,IACnBA,EAAa,EAAKJ,qBAAqB1B,EAAcvI,EAASmK,GAC9DnK,IAED,EAAKrB,SAAS0L,GAAY5C,EAC1B,EAAKpB,aAEN,EAAK2B,UAAU,WAAWoC,IAtKH,KAwKxB9B,eAAe,SAACb,EAAE2C,GACjB,IAAIjC,SAAeV,EACfe,EAAY,EAMhB,GALU,UAAPL,EACFK,EAAc7U,SAAS,EAAK+T,cAAc,EAAKpB,gBAAgBmB,KAChD,UAAPU,IACRK,EAAc,EAAKd,cAAc/T,SAAS8T,KAElC,UAAN2C,EAAe,CACjB,MAAmC,GAA7B,EAAKzL,SAAS6J,IACnBA,EAAc,EAAKuB,sBAAsBvB,GAE1C,EAAK7J,SAAS6J,GAAaf,EAC3B,EAAKpB,kBACA,GAAS,cAAN+D,EAAmB,CAG3B,IAFA,IAAIpK,EAAS,EACTqK,EAAW7B,GACmB,GAA5B,EAAK7J,SAAS0L,IACnBA,EAAa,EAAKL,0BAA0BxB,EAAYxI,GACxDvN,QAAQC,IAAI2X,GACZ5X,QAAQC,IAAI,OAAOsN,GACnBA,IAED,EAAKrB,SAAS0L,GAAY5C,EAC1B,EAAKpB,kBACA,GAAS,SAAN+D,EAAc,CAGtB,IAFA,IAAIpK,EAAS,EACTqK,EAAW7B,GACmB,GAA5B,EAAK7J,SAAS0L,IACnBA,EAAa,EAAKJ,qBAAqBzB,EAAYxI,EAASwI,GAC5DxI,IAED,EAAKrB,SAAS0L,GAAY5C,EAC1B,EAAKpB,aAEN,EAAK2B,UAAU,SAASoC,IA3MD,KA6MxB/B,uBAAuB,SAACZ,EAAE2C,GACzB,IACI3B,EAAoB,EAMxB,GAJCA,EADS,iBAFShB,EAGI9T,SAAS,EAAKoU,sBAAsB,EAAKzB,gBAAgBmB,KAEzD,EAAKM,sBAAsBN,GAEzC,UAAN2C,EAAe,CACjB,MAA2C,GAArC,EAAKzL,SAAS8J,IACnBA,EAAsB,EAAKsB,sBAAsBtB,GAElD,EAAK9J,SAAS8J,GAAqBhB,EACnC,EAAKpB,kBACA,GAAS,cAAN+D,EAAmB,CAG3B,IAFA,IAAIpK,EAAS,EACTqK,EAAW5B,GACmB,GAA5B,EAAK9J,SAAS0L,IACnBA,EAAa,EAAKL,0BAA0BvB,EAAoBzI,GAChEA,IAED,EAAKrB,SAAS0L,GAAY5C,EAC1B,EAAKpB,kBACA,GAAS,SAAN+D,EAAc,CAGtB,IAFA,IAAIpK,EAAS,EACTqK,EAAW5B,GACmB,GAA5B,EAAK9J,SAAS0L,IACnBA,EAAa,EAAKJ,qBAAqBxB,EAAoBzI,EAASyI,GACpEzI,IAED,EAAKrB,SAAS0L,GAAY5C,EAC1B,EAAKpB,aAEN,EAAK2B,UAAU,iBAAiBoC,IA9OT,KAgPxB1B,eAAe,SAACjB,EAAE2C,GAQjB,GALU,iBAFS3C,EAGJ9T,SAAS,EAAK+T,cAAc,EAAKpB,gBAAgBmB,KAEjD,EAAKC,cAAcD,GAEzB,UAAN2C,EAIF,IAHA,IAAI5B,EAAc,EAAKd,cAAcD,GACjC6C,GAAU,EACVnX,EAAE,EACW,GAAXmX,GACF,EAAK3L,SAAS6J,IAAcf,IAC9B,EAAK9I,SAAS6J,IAAc,EAC5B,EAAKnC,aACLiE,GAAU,KAEXnX,GACM,EAAK0T,UACVyD,GAAU,GAEX9B,EAAc,EAAKuB,sBAAsBvB,QAErC,GAAS,cAAN4B,EAMR,IALA,IAAI5B,EAAc,EAAKd,cAAcD,GACjCzH,EAAS,EACTsK,GAAU,EACVD,EAAW7B,EACXrV,EAAE,EACW,GAAXmX,GACF,EAAK3L,SAAS0L,IAAa5C,IAC7B,EAAK9I,SAAS0L,IAAa,EAC3B,EAAKhE,aACLiE,GAAU,KAEXnX,GACM,EAAK0T,UACVyD,GAAU,GAEXD,EAAa,EAAKL,0BAA0BxB,EAAYxI,GACxDA,SAEI,GAAS,SAANoK,EAMR,IALA,IAAI5B,EAAc,EAAKd,cAAcD,GACjC6C,GAAU,EACVtK,EAAS,EACT7M,EAAE,EACFkX,EAAW7B,EACE,GAAX8B,GACF,EAAK3L,SAAS0L,IAAa5C,IAC7B,EAAK9I,SAAS0L,IAAa,EAC3B,EAAKhE,aACLiE,GAAU,KAEXnX,GACM,EAAK0T,UACVyD,GAAU,GAEXD,EAAa,EAAKJ,qBAAqBzB,EAAYxI,EAASwI,GAC5DxI,IAGF,EAAKgI,UAAU,SAASoC,IA/SD,KAiTxBvB,iBAAiB,SAACpB,EAAE2C,GACnB,IACI7B,EAAc,EAMlB,GAJCA,EADS,iBAFSd,EAGF9T,SAAS,EAAK6T,gBAAgB,EAAKlB,gBAAgBmB,KAEnD,EAAKD,gBAAgBC,GAE7B,UAAN2C,EAIF,IAHA,IAAI7B,EAAgB,EAAKf,gBAAgBC,GACrC6C,GAAU,EACVnX,EAAE,EACW,GAAXmX,GACF,EAAK3L,SAAS4J,IAAgBd,IAChC,EAAK9I,SAAS4J,IAAgB,EAC9B,EAAKlC,aACLiE,GAAU,KAEXnX,GACM,EAAK0T,UACVyD,GAAU,GAEX/B,EAAgB,EAAKwB,sBAAsBxB,QAEvC,GAAS,cAAN6B,EAMR,IALA,IAAI7B,EAAgB,EAAKf,gBAAgBC,GACrCzH,EAAS,EACTsK,GAAU,EACVD,EAAW9B,EACXpV,EAAE,EACW,GAAXmX,GACF,EAAK3L,SAAS0L,IAAa5C,IAC7B,EAAK9I,SAAS0L,IAAa,EAC3B,EAAKhE,aACLiE,GAAU,KAEXnX,GACM,EAAK0T,UACVyD,GAAU,GAEXD,EAAa,EAAKL,0BAA0BzB,EAAcvI,GAC1DA,SAEI,GAAS,SAANoK,EAAc,CACtB,IAAIjC,SAAeV,EACnBhV,QAAQC,WAAW+U,GACnB,IAAI0C,EAAG,EACG,UAAPhC,EACFgC,EAAKxW,SAAS,EAAK+T,cAAc,EAAKpB,gBAAgBmB,KACvC,UAAPU,IACRgC,EAAK,EAAKzC,cAAc/T,SAAS8T,KAMlC,IAJA,IAAI6C,GAAU,EACVtK,EAAS,EACT7M,EAAE,EACFkX,EAAW9B,EACE,GAAX+B,GACF,EAAK3L,SAAS0L,IAAa5C,IAC7B,EAAK9I,SAAS0L,IAAa,EAC3B,EAAKhE,aACLiE,GAAU,KAEXnX,GACM,EAAK0T,UACVyD,GAAU,GAEXD,EAAa,EAAKJ,qBAAqB1B,EAAcvI,EAASmK,GAC9DnK,IAGF,EAAKgI,UAAU,WAAWoC,IAvXH,KAyXxBtB,uBAAuB,SAACrB,EAAE2C,GAQzB,GALU,iBAFS3C,EAGI9T,SAAS,EAAKoU,sBAAsB,EAAKzB,gBAAgBmB,KAEzD,EAAKM,sBAAsBN,GAEzC,UAAN2C,EAIF,IAHA,IAAI3B,EAAsB,EAAKV,sBAAsBN,GACjD6C,GAAU,EACVnX,EAAE,EACW,GAAXmX,GACF,EAAK3L,SAAS8J,IAAsBhB,IACtC,EAAK9I,SAAS8J,IAAsB,EACpC,EAAKpC,aACLiE,GAAU,KAEXnX,GACM,EAAK0T,UACVyD,GAAU,GAEX7B,EAAsB,EAAKsB,sBAAsBtB,QAE7C,GAAS,cAAN2B,EAMR,IALA,IAAI3B,EAAsB,EAAKV,sBAAsBN,GACjDzH,EAAS,EACTsK,GAAU,EACVD,EAAW5B,EACXtV,EAAE,EACW,GAAXmX,GACF,EAAK3L,SAAS0L,IAAa5C,IAC7B,EAAK9I,SAAS0L,IAAa,EAC3B,EAAKhE,aACLiE,GAAU,KAEXnX,GACM,EAAK0T,UACVyD,GAAU,GAEXD,EAAa,EAAKL,0BAA0BvB,EAAoBzI,GAChEA,SAEI,GAAS,SAANoK,EAMR,IALA,IAAI3B,EAAsB,EAAKV,sBAAsBN,GACjD6C,GAAU,EACVtK,EAAS,EACT7M,EAAE,EACFkX,EAAW5B,EACE,GAAX6B,GACF,EAAK3L,SAAS0L,IAAa5C,IAC7B,EAAK9I,SAAS0L,IAAa,EAC3B,EAAKhE,aACLiE,GAAU,KAEXnX,GACM,EAAK0T,UACVyD,GAAU,GAEXD,EAAa,EAAKJ,qBAAqBxB,EAAoBzI,EAASyI,GACpEzI,IAGF,EAAKgI,UAAU,SAASoC,IAxbD,KA2bxBlN,OAAO,SAACuK,EAAE2C,GACT,IAAI1K,GAAQ,EAGR8I,EAAY,EAMhB,GAJCA,EADS,iBAFSf,EAGJ9T,SAAS,EAAK+T,cAAc,EAAKpB,gBAAgBmB,KAEjD,EAAKC,cAAcD,GAEzB,UAAN2C,EAGF,IAFA,IAAIG,GAAW,EACXpX,EAAE,EACY,GAAZoX,GACF,EAAK5L,SAAS6J,IAAcf,IAC9B/H,EAAO8I,EACP+B,GAAW,KAEZpX,GACM,EAAK0T,UACV0D,GAAW,GAEZ/B,EAAc,EAAKuB,sBAAsBvB,QAErC,GAAS,cAAN4B,EAKR,IAJA,IAAIpK,EAAS,EACTuK,GAAW,EACXF,EAAW7B,EACXrV,EAAE,EACY,GAAZoX,GACF,EAAK5L,SAAS0L,IAAa5C,IAC7B/H,EAAO2K,EACPE,GAAW,KAEZpX,GACM,EAAK0T,UACV0D,GAAW,GAEZF,EAAa,EAAKL,0BAA0BxB,EAAYxI,GACxDA,SAEI,GAAS,SAANoK,EAKR,IAJA,IAAIG,GAAW,EACXvK,EAAS,EACT7M,EAAE,EACFkX,EAAW7B,EACG,GAAZ+B,GACF,EAAK5L,SAAS0L,IAAa5C,IAC7B/H,EAAO2K,EACPE,GAAW,KAEZpX,GACM,EAAK0T,UACV0D,GAAW,GAEZF,EAAa,EAAKJ,qBAAqBzB,EAAYxI,EAASwI,GAC5DxI,IAIF,OADA,EAAKgI,UAAU,SAASoC,GACjB1K,GAvfgB,KAyfxByJ,WAAW,SAAC1B,EAAE2B,EAAMgB,EAAKnC,GACxB,IACIO,EAAY,EAMhB,GAJCA,EADS,iBAFSf,EAGJ9T,SAAS,EAAK+T,cAAc,EAAKpB,gBAAgBmB,KAEjD,EAAKC,cAAcD,GAEzB,UAAN2C,EAGF,IAFA,IAAII,GAAY,EACZrX,EAAE,EACa,GAAbqX,GACF,EAAK7L,SAAS6J,IAAcf,IACrB,UAANQ,GACF,EAAKtJ,SAAS6J,IAAc,EAC5B,EAAKnC,aACL,EAAKiC,eAAec,EAAMgB,IACZ,YAANnC,GACR,EAAKtJ,SAAS6J,IAAc,EAC5B,EAAKnC,aACL,EAAK+B,iBAAiBgB,EAAMgB,IACd,kBAANnC,IACR,EAAKtJ,SAAS6J,IAAc,EAC5B,EAAKnC,aACL,EAAKgC,uBAAuBe,EAAMgB,IAEnCI,GAAY,KAEbrX,GACM,EAAK0T,UACV2D,GAAY,GAEbhC,EAAc,EAAKuB,sBAAsBvB,QAErC,GAAS,cAAN4B,EAKR,IAJA,IAAIpK,EAAS,EACTwK,GAAY,EACZH,EAAW7B,EACXrV,EAAE,EACa,GAAbqX,GACF,EAAK7L,SAAS0L,IAAa5C,IACpB,UAANQ,GACF,EAAKtJ,SAAS0L,IAAa,EAC3B,EAAKhE,aACL,EAAKiC,eAAec,EAAMgB,IACZ,YAANnC,GACR,EAAKtJ,SAAS0L,IAAa,EAC3B,EAAKhE,aACL,EAAK+B,iBAAiBgB,EAAMgB,IACd,kBAANnC,IACR,EAAKtJ,SAAS0L,IAAa,EAC3B,EAAKhE,aACL,EAAKgC,uBAAuBe,EAAMgB,IAEnCI,GAAY,KAEbrX,GACM,EAAK0T,UACV2D,GAAY,GAEbH,EAAa,EAAKL,0BAA0BxB,EAAYxI,GACxDA,SAEI,GAAS,SAANoK,EAKR,IAJA,IAAII,GAAY,EACZxK,EAAS,EACT7M,EAAE,EACFkX,EAAW7B,EACI,GAAbgC,GACF,EAAK7L,SAAS0L,IAAa5C,IACpB,UAANQ,GACF,EAAKtJ,SAAS0L,IAAa,EAC3B,EAAKhE,aACL,EAAKiC,eAAec,EAAMgB,IACZ,YAANnC,GACR,EAAKtJ,SAAS0L,IAAa,EAC3B,EAAKhE,aACL,EAAK+B,iBAAiBgB,EAAMgB,IACd,kBAANnC,IACR,EAAKtJ,SAAS0L,IAAa,EAC3B,EAAKhE,aACL,EAAKgC,uBAAuBe,EAAMgB,IAEnCI,GAAY,KAEbrX,GACM,EAAK0T,UACV2D,GAAY,GAEbH,EAAa,EAAKJ,qBAAqBzB,EAAYxI,EAASwI,GAC5DxI,IAGF,EAAKgI,UAAU,SAASoC,IAtlBD,KAwlBxBf,WAAa,WAIZ,IAHA,IAAIxJ,EAAU,GACVC,EAAW,GACXE,EAAW,EACP7M,EAAE,EAAEA,EAAE,EAAK6T,kBAAkB7T,IACpC0M,EAAQtM,KAAK,CAAC3C,GAAGuC,EAAGK,MAAO,IAAKyM,MAAM,IACnC9M,EAAE,EAAE,EAAKwL,SAAS9G,QACpBiI,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG+B,EAAE,EAAGW,OAAQ,OAExCkM,IAEDvN,QAAQC,IAAIsN,GACZ,IAAI,IAAI7M,EAAE,EAAEA,EAAE,EAAK6T,kBAAkB7T,IACpC,IAAsB,GAAnB,EAAKwL,SAASxL,GAAO,CACtB,IAAI4H,EAAS,GAAG,EAAK4D,SAASxL,GAC9B0M,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAM,IAClDH,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG4O,EAAUlM,OAAQ,OAC5CkM,IAIG,MAAO,CAACH,EAAQC,IA7mBC,KAgnBrBwJ,iBAAiB,SAAC7X,GAIpB,IAHG,IAAIoO,EAAU,GACbC,EAAW,GACXE,EAAW,EACP7M,EAAE,EAAEA,EAAE,EAAK6T,kBAAkB7T,IACpC0M,EAAQtM,KAAK,CAAC3C,GAAGuC,EAAGK,MAAO,IAAKyM,MAAM,IACnC9M,EAAE,EAAE,EAAKwL,SAAS9G,QACpBiI,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG+B,EAAE,EAAGW,OAAQ,OAExCkM,IAEDvN,QAAQC,IAAIsN,GACZ,IAAI,IAAI7M,EAAE,EAAEA,EAAE,EAAK6T,kBAAkB7T,IACpC,IAAsB,GAAnB,EAAKwL,SAASxL,GAAO,CACtB,IAAI4H,EAAS,GAAG,EAAK4D,SAASxL,GAC9B0M,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAM,IAClDH,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAG4O,EAAUlM,OAAQ,OAC5CrB,QAAQC,IAAI,cACTjB,GAAM,EAAKkN,SAASxL,KACtBV,QAAQC,IAAI,gBACZoN,EAASvM,KAAK,CAACM,KAAMmM,EAAU5O,GAAI4O,EAAUzI,MAAMyI,EAAS5K,MAAM,CAACA,MAAM,cAE1E4K,IAIG,MAAO,CAACH,EAAQC,IA1oBC,KA4oBrB/L,aAAa,SAAC0V,EAAQgB,GAErB,IADA,IAAIrK,EAAO,wFAAkG,EAAKwB,EAAE,kBAAoB,EAAKvI,IAAI,kBAAoB,EAAKC,IAAI,oBAAuBmQ,EAAQ,oBAAwBgB,EAAO,2CACpOtX,EAAE,EAAGA,EAAE,EAAKwL,SAAS9G,OAAQ1E,IAAI,CACxC,IAAIkN,GAAW,EACdC,EAAS3M,SAAS,EAAKgL,SAASxL,IACjCoN,MAAMD,KACRD,GAAS,GAEG,GAAVA,GACoB,GAAnB,EAAK1B,SAASxL,KAChBiN,EAAOA,EAAO,KAAK,EAAKzB,SAASxL,GAAG,OAGrCiN,EAAOA,EAAO,MAAQ,EAAKzB,SAASxL,GAAI,OAIvC,OADAiN,GAAa,UA3pBhB1O,KAAKkQ,EAAIA,EACTlQ,KAAK2H,IAAMA,EACX3H,KAAK4H,IAAMA,EACX5H,KAAKkV,qBDHS,CAAgB,EAAE,GAAG,IACjCpS,GAAW,IAAIC,UAAQ,IACvBC,GAAW,IAAID,UAAQ,IAGvBE,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAGHI,GAAU,CACbF,MAAM,CACCO,YAAa,GACb0L,MAAO,MACPzL,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,aAIxB4L,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cAsaJsJ,G,kDA9ZhB,WAAYjV,GAAQ,IAAD,8BAClB,cAAMA,IA8BPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WApCvC,EAwCnBgL,eAAiB,WAChB6E,GAAUa,MAAMtT,SAAS,EAAK8C,MAAMsL,UACpCqE,GAAUc,QAAQvT,SAAS,EAAK8C,MAAMkT,SACtCvD,GAAUgB,QAAQzT,SAAS,EAAK8C,MAAMmT,SACtCxD,GAAUQ,qBAEVnU,QAAQC,IAAI,UACZD,QAAQC,IAAI,aA/CM,EAkDnB8D,UAAY,WACX,IAAI6J,GAAW,EACXC,EAAS3M,SAAS,EAAK8C,MAAMC,MAC9B6J,MAAMD,KACRD,GAAS,GAEY,UAAnB,EAAK5J,MAAMqL,QACA,GAAVzB,EACF+F,GAAUkC,eAAe3U,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAM2T,MAE9DhE,GAAUkC,eAAe,EAAK7R,MAAMC,KAAK,EAAKD,MAAM2T,MAErD5V,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,KACnB,YAAnB,EAAK5S,MAAMqL,QACN,GAAVzB,EACF+F,GAAUgC,iBAAiBzU,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAM2T,MAEhEhE,GAAUgC,iBAAiB,EAAK3R,MAAMC,KAAK,EAAKD,MAAM2T,MAEvD5V,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,IAC9C5W,QAAQC,IAAI,QACe,kBAAnB,EAAK+D,MAAMqL,SACN,GAAVzB,EACF+F,GAAUiC,uBAAuB1U,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAM2T,MAEtEhE,GAAUiC,uBAAuB,EAAK5R,MAAMC,KAAK,EAAKD,MAAM2T,MAE7D5V,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,IAC9C5W,QAAQC,IAAI,SAEbiC,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAzFpC,EA4FnBkC,aAAe,WACd,IAAIqJ,GAAW,EACXC,EAAS3M,SAAS,EAAK8C,MAAMC,MAC9B6J,MAAMD,KACRD,GAAS,GAEY,UAAnB,EAAK5J,MAAMqL,QACA,GAAVzB,EACF+F,GAAUsC,eAAe/U,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAM2T,MAE9DhE,GAAUsC,eAAe,EAAKjS,MAAMC,KAAK,EAAKD,MAAM2T,MAErD5V,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,KACnB,YAAnB,EAAK5S,MAAMqL,QACN,GAAVzB,EACF+F,GAAUyC,iBAAiBlV,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAM2T,MAEhEhE,GAAUyC,iBAAiB,EAAKpS,MAAMC,KAAK,EAAKD,MAAM2T,MAEvD5V,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,IAC9C5W,QAAQC,IAAI,QACe,kBAAnB,EAAK+D,MAAMqL,SACN,GAAVzB,EACF+F,GAAU0C,uBAAuBnV,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAM2T,MAEtEhE,GAAU0C,uBAAuB,EAAKrS,MAAMC,KAAK,EAAKD,MAAM2T,MAE7D5V,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,IAC9C5W,QAAQC,IAAI,SAEbiC,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAnIpC,EAsInBmC,aAAe,WACd,IAAIoJ,GAAW,EACXC,EAAS3M,SAAS,EAAK8C,MAAMC,MAC9B6J,MAAMD,KACRD,GAAS,GAEV,IAAIwJ,GAAY,EACZC,EAAUnW,SAAS,EAAK8C,MAAMS,kBAC/BqJ,MAAMuJ,KACRD,GAAU,GAEW,UAAnB,EAAKpT,MAAMqL,QACA,GAAVzB,EACY,GAAXwJ,EACFzD,GAAU+C,WAAWxV,SAAS,EAAK8C,MAAMC,MAAM/C,SAAS,EAAK8C,MAAMS,kBAAkB,EAAKT,MAAM2T,KAAK,UAErGhE,GAAU+C,WAAWxV,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAMS,iBAAiB,EAAKT,MAAM2T,KAAK,UAG9E,GAAXP,EACFzD,GAAU+C,WAAW,EAAK1S,MAAMC,KAAK/C,SAAS,EAAK8C,MAAMS,kBAAkB,EAAKT,MAAM2T,KAAK,UAE3FhE,GAAU+C,WAAW,EAAK1S,MAAMC,KAAK,EAAKD,MAAMS,iBAAiB,EAAKT,MAAM2T,KAAK,UAGnFhE,GAAU+C,WAAW,EAAK1S,MAAMC,KAAK,EAAKD,MAAMS,iBAAiB,EAAKT,MAAM2T,KAAK,UACjF5V,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,KACnB,YAAnB,EAAK5S,MAAMqL,QACN,GAAVzB,EACY,GAAXwJ,EACFzD,GAAU+C,WAAWxV,SAAS,EAAK8C,MAAMC,MAAM/C,SAAS,EAAK8C,MAAMS,kBAAkB,EAAKT,MAAM2T,KAAK,aAErG3X,QAAQC,IAAI,iBACZ0T,GAAU+C,WAAWxV,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAMS,iBAAiB,EAAKT,MAAM2T,KAAK,aAG9E,GAAXP,EACFzD,GAAU+C,WAAW,EAAK1S,MAAMC,KAAK/C,SAAS,EAAK8C,MAAMS,kBAAkB,EAAKT,MAAM2T,KAAK,YAE3FhE,GAAU+C,WAAW,EAAK1S,MAAMC,KAAK,EAAKD,MAAMS,iBAAiB,EAAKT,MAAM2T,KAAK,YAGnF5V,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,KACnB,kBAAnB,EAAK5S,MAAMqL,SACN,GAAVzB,EACY,GAAXwJ,EACFzD,GAAU+C,WAAWxV,SAAS,EAAK8C,MAAMC,MAAM/C,SAAS,EAAK8C,MAAMS,kBAAkB,EAAKT,MAAM2T,KAAK,kBAErGhE,GAAU+C,WAAWxV,SAAS,EAAK8C,MAAMC,MAAM,EAAKD,MAAMS,iBAAiB,EAAKT,MAAM2T,KAAK,kBAG9E,GAAXP,EACFzD,GAAU+C,WAAW,EAAK1S,MAAMC,KAAK/C,SAAS,EAAK8C,MAAMS,kBAAkB,EAAKT,MAAM2T,KAAK,kBAE3FhE,GAAU+C,WAAW,EAAK1S,MAAMC,KAAK,EAAKD,MAAMS,iBAAiB,EAAKT,MAAM2T,KAAK,kBAGnF5V,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,KAE/C1U,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA1MpC,EA6MnBuC,aAAe,WACd,IAAIgJ,GAAW,EACXC,EAAS3M,SAAS,EAAK8C,MAAMC,MAC9B6J,MAAMD,KACRD,GAAS,GAEV5N,QAAQC,IAAI,gBACU,UAAnB,EAAK+D,MAAMqL,QACbrP,QAAQC,IAAI,UACC,GAAV2N,GACF7L,GAAW,IAAIC,UAAQ2R,GAAUkD,iBAAiB3V,SAAS,EAAK8C,MAAMC,OAAO,IAC7EhC,GAAW,IAAID,UAAQ2R,GAAUkD,iBAAiB3V,SAAS,EAAK8C,MAAMC,OAAO,MAE7ElC,GAAW,IAAIC,UAAQ2R,GAAUkD,iBAAiB,EAAK7S,MAAMC,MAAM,IACnEhC,GAAW,IAAID,UAAQ2R,GAAUkD,iBAAiB,EAAK7S,MAAMC,MAAM,MAEzC,YAAnB,EAAKD,MAAMqL,OACN,GAAVzB,GACF5N,QAAQC,IAAI,YACZ8B,GAAW,IAAIC,UAAQ2R,GAAUkD,iBAAiB3V,SAAS,EAAK8C,MAAMC,OAAO,IAC7EhC,GAAW,IAAID,UAAQ2R,GAAUkD,iBAAiB3V,SAAS,EAAK8C,MAAMC,OAAO,MAE7ElC,GAAW,IAAIC,UAAQ2R,GAAUkD,iBAAiB,EAAK7S,MAAMC,MAAM,IACnEhC,GAAW,IAAID,UAAQ2R,GAAUkD,iBAAiB,EAAK7S,MAAMC,MAAM,KAEzC,kBAAnB,EAAKD,MAAMqL,SACnBrP,QAAQC,IAAI,kBACC,GAAV2N,GACF7L,GAAW,IAAIC,UAAQ2R,GAAUkD,iBAAiB3V,SAAS,EAAK8C,MAAMC,OAAO,IAC7EhC,GAAW,IAAID,UAAQ2R,GAAUkD,iBAAiB3V,SAAS,EAAK8C,MAAMC,OAAO,MAE7ElC,GAAW,IAAIC,UAAQ2R,GAAUkD,iBAAiB,EAAK7S,MAAMC,MAAM,IACnEhC,GAAW,IAAID,UAAQ2R,GAAUkD,iBAAiB,EAAK7S,MAAMC,MAAM,MAGrE/B,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERjC,QAAQC,IAAI8B,IACZ/B,QAAQC,IAAIgC,IACZ,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAtPpC,EAyPnB0C,eAAiB,WAChB,IACMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,wBAAtBmB,EAASE,UAAoC,CAEhDyO,GAAUa,MAAMtT,SAAS8D,EAASmK,IAClCwE,GAAUc,QAAQvT,SAAS8D,EAASkS,SACpCvD,GAAUgB,QAAQzT,SAAS8D,EAASmS,SACpCxD,GAAUQ,qBACV,IAAK,IAAIzT,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IACrB,UAAlBsE,EAASgS,SACXhX,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7BiT,GAAUkC,eAAe7Q,EAASvD,QAAQf,GAAGc,WAAWwD,EAASgT,OAAOxW,aAC9C,YAAlBwD,EAASgS,SACjBhX,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7BiT,GAAUgC,iBAAiB3Q,EAASvD,QAAQf,GAAGc,WAAWwD,EAASgT,OAAOxW,aAChD,kBAAlBwD,EAASgS,UACjBhX,QAAQC,IAAI+E,EAASvD,QAAQf,IAC7BiT,GAAUiC,uBAAuB5Q,EAASvD,QAAQf,GAAGc,WAAWwD,EAASgT,OAAOxW,aAIlFO,GAAW,IAAIC,UAAQ2R,GAAUiD,aAAa,IAC9C3U,GAAW,IAAID,UAAQ2R,GAAUiD,aAAa,IAC9C1U,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,SAKtDgD,MAAM,gDA5RW,EAiSnBC,eAAiB,WAChB,IAAMC,EAAUC,SAASC,cAAc,KACnCC,EAAYiO,GAAUrS,aAAa,EAAK0C,MAAMqL,OAAO,EAAKrL,MAAM2T,MAC9DhS,EAAO,IAAIC,KAAK,CAACF,IACvBH,EAAQrH,KAAO2H,IAAIC,gBAAgBH,GAChCJ,EAAQQ,SAAW,wBACnBP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAQW,QACRb,MAAM,sBAvST,EAAKrB,MAAQ,CACZqL,OAAQ,SACRsI,KAAM,SACNrI,QAAS,GACT4H,OAAQ,GACRC,OAAQ,GACRlT,KAAM,GACNQ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GAEb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAhBP,E,qDAmBnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAkRX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,UAAU5C,KAAK,UAAU3F,UAAU,eAAewI,YAAY,2BAAwBtI,GAAG,eAAe2G,MAAO7F,KAAK+E,MAAMsL,QAAS5I,SAAUzH,KAAKmH,sBAE/J,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,kBAAkBtI,GAAG,cAAc2G,MAAO7F,KAAK+E,MAAMkT,OAAQxQ,SAAUzH,KAAKmH,sBAErJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,kBAAkBtI,GAAG,cAAc2G,MAAO7F,KAAK+E,MAAMmT,OAAQzQ,SAAUzH,KAAKmH,sBAErJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKkQ,kBAAtE,gCAGF,qBAAK7Q,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAf,SACC,yBAAQuI,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,cAAcyI,SAAUzH,KAAKmH,kBAA3E,UACO,wBAAQtB,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,iBAAd,iCAGH,qBAAK7G,UAAU,WAAf,SACJ,yBAAQuI,KAAK,SAAS5C,KAAK,OAAO3F,UAAU,cAAcyI,SAAUzH,KAAKmH,kBAAzE,UACO,wBAAQtB,MAAM,SAAd,oBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,QAAd,wBAGR,qBAAK7G,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,mBAAmB3F,UAAU,eAAewI,YAAY,oBAAoBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMS,iBAAkBiC,SAAUzH,KAAKmH,sBAEvK,qBAAKnI,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,wBAG7D,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,4BAED,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,2BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4F,gBAAtE,+BAED,qBAAKvG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAMF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GAzZf6C,aExBhBnI,GAVd,aAAc,IAAD,gCAKbmZ,aAAe,WAAQ,OAAO,EAAKC,WALtB,KAMbC,aAAe,SAACD,GAAgB,EAAKA,UAAYA,GANpC,KAObE,cAAgB,WAAQ,OAAO,EAAKC,YAPvB,KAQbC,cAAgB,SAACD,GAAiB,EAAKA,WAAaA,GAPnDrZ,KAAKkZ,UAAY,KACjBlZ,KAAKqZ,WAAa,MCAhBE,GAAY,ICMf,aAAc,IAAD,gCASbnZ,SAAW,SAACoZ,EAAUH,EAAYI,EAAOC,GACd,MAAtB,EAAKC,eAAiD,MAAxB,EAAKP,kBACtC,EAAKQ,YAAYJ,GACjB,EAAKF,cAAcD,GACnB,EAAKQ,kBACL,EAAKC,qBAEiB,MAApB,EAAKH,eAAuB,EAAKA,eAAgBH,IACnD,EAAKI,YAAYJ,GACjB,EAAKK,kBACL,EAAKE,WAAWxF,SAAQ,SAAAjO,GACK,MAAxBA,EAAQ2S,gBACX3S,EAAQ6S,aAAa,UAIC,MAAtB,EAAKC,iBAAyB,EAAKA,iBAAkBC,IACvD,EAAKC,cAAcD,GACnB,EAAKS,oBACL,EAAKC,WAAWxF,SAAQ,SAAAjO,GACM,MAAzBA,EAAQ8S,iBACX9S,EAAQgT,cAAc,UAKJ,EAAKU,wBAAwBxY,OAAOiY,GACnC,EAAKO,wBAAwBxY,OAAOkY,GAD1D,IAGIrZ,EAAa,IAAIP,GAkCrB,EAAKka,wBAAwB5Z,SAASqZ,GACtC,EAAKQ,0BAA0B7Z,SAASsZ,GAExCrZ,EAAW8Y,aAAaM,GACxBpZ,EAAWiZ,cAAcI,GACzB,EAAKQ,MAAMrY,KAAKxB,IA7EJ,KAmFbS,SAAW,SAAC0Y,EAAUH,EAAYI,EAAOC,GAExC,GAA0B,MAAtB,EAAKC,eAAiD,MAAxB,EAAKP,gBAEtC,OADAhT,MAAM,6BACC,KAGiB,QAAtB,EAAKuT,cACR,EAAKK,wBAAwBtQ,MACE,QAAtB,EAAKiQ,cACd,EAAKK,wBAAwBhQ,aAE7B,EAAKgQ,wBAAwBlZ,SAAS2Y,GAGX,QAAxB,EAAKL,gBACP,EAAKa,0BAA0BvQ,MACC,QAAxB,EAAK0P,gBACb,EAAKa,0BAA0BjQ,aAEhC,EAAKiQ,0BAA0BnZ,SAAS4Y,IAvG5B,KA6GblY,OAAS,SAACgY,EAAUH,EAAYI,EAAOC,GAEtC,GAA0B,MAAtB,EAAKC,eAAiD,MAAxB,EAAKP,gBAEtC,OADAhT,MAAM,6BACC,KAGR,IAAI+T,EAAS,EAAKH,wBAAwBxY,OAAOiY,GAC7CW,EAAS,EAAKH,0BAA0BzY,OAAOkY,GAInD,OAFA3Y,QAAQC,IAAI,UACZD,QAAQC,IAAI0S,OAAOyG,GAAQ,IAAIzG,OAAO0G,IAC/B,CACNC,MAAOF,EACPG,MAAOF,IA3HI,KAgIb/Y,OAAS,SAACmY,EAAUH,EAAYI,EAAOC,EAAOa,EAASC,GAGtD,GAA0B,MAAtB,EAAKb,eAAiD,MAAxB,EAAKP,gBAEtC,OADAhT,MAAM,6BACC,KAER,IAAI+T,EAAS,EAAKH,wBAAwBxY,OAAOiY,GAC7CW,EAAS,EAAKH,0BAA0BzY,OAAOkY,GAEvC,MAARS,GAAe,EAAKH,wBAAwB3Y,OAAOoY,EAAOc,GAEnD,MAARH,GAAe,EAAKH,0BAA0B5Y,OAAOqY,EAAOc,IA5InD,KAgJb7Z,gBAAkB,SAAC6Y,EAAUH,EAAYI,EAAOC,GAC/C,GAA0B,MAAtB,EAAKC,eAAiD,MAAxB,EAAKP,gBAEtC,OADAhT,MAAM,6BACC,KAKkB,QAAtB,EAAKuT,eAAiD,QAAtB,EAAKA,gBAE5B,GADC,EAAKK,wBAAwBxY,OAAOiY,IAEhD,EAAKO,wBAAwBrZ,gBAAgB8Y,IAInB,QAAxB,EAAKL,iBAAqD,QAAxB,EAAKA,kBAE9B,GADC,EAAKa,0BAA0BzY,OAAOkY,IAElD,EAAKO,0BAA0BtZ,gBAAgB+Y,KAlKrC,KAwKb7Y,gBAAkB,SAAC2Y,EAAUH,EAAYI,EAAOC,GAE/C,GAA0B,MAAtB,EAAKC,eAAiD,MAAxB,EAAKP,gBAEtC,OADAhT,MAAM,6BACC,KAIkB,QAAtB,EAAKuT,eAAiD,QAAtB,EAAKA,gBAE5B,GADA,EAAKK,wBAAwBxY,OAAOiY,IAE/C,EAAKO,wBAAwBnZ,gBAAgB4Y,IAInB,QAAxB,EAAKL,iBAAqD,QAAxB,EAAKA,kBAE9B,GADA,EAAKa,0BAA0BzY,OAAOkY,IAEjD,EAAKO,0BAA0BpZ,gBAAgB6Y,KA1LrC,KAgMbG,gBAAkB,WACG,gBAAjB,EAAKL,SACP,EAAKiB,mBAAqB,IAAIva,EACL,eAAjB,EAAKsZ,SACZ,EAAKiB,mBAAqB,IAAIvS,EACN,kBAAjB,EAAKsR,SACZ,EAAKiB,mBAAqB,IAAI5R,EACN,wBAAjB,EAAK2Q,SACZ,EAAKiB,mBAAqB,IAAIC,EACN,QAAjB,EAAKlB,SACZ,EAAKiB,mBAAqB,IAAI7Q,GACN,QAAjB,EAAK4P,WACZ,EAAKiB,mBAAqB,IAAIhQ,KA5MpB,KA+MbqP,kBAAoB,WACG,gBAAnB,EAAKT,WACP,EAAKsB,qBAAuB,IAAIza,EACL,eAAnB,EAAKmZ,WACb,EAAKsB,qBAAuB,IAAIzS,EACL,kBAAnB,EAAKmR,WACb,EAAKsB,qBAAuB,IAAI9R,EACL,wBAAnB,EAAKwQ,WACb,EAAKsB,qBAAuB,IAAID,EACL,QAAnB,EAAKrB,WACb,EAAKsB,qBAAuB,IAAI/Q,GACL,QAAnB,EAAKyP,aACb,EAAKsB,qBAAuB,IAAIlQ,KA3NrB,KAgObpI,aAAe,WAKd,IAHA,IAAIqM,EAAO,+GACPjN,EAAI,EAEFA,EAAE,EAAKyY,MAAM/T,QAElBuI,GAAc,QACkC,iBAAtCzM,SAAS,EAAKiY,MAAMzY,GAAGyX,YAA4B,GAAKjX,SAAS,EAAKiY,MAAMzY,GAAGyX,WAC5ExK,EAAOA,EAAO,oBAAwBzM,SAAS,EAAKiY,MAAMzY,GAAGyX,WAAY,MAC9B,iBAA7B,EAAKgB,MAAMzY,GAAGyX,YAC5BxK,EAAOA,uBAAsC,EAAKwL,MAAMzY,GAAGyX,UAAY,QAEvD,MAAjB,EAAKgB,MAAMzY,EAAE,GACkC,iBAAvCQ,SAAS,EAAKiY,MAAMzY,GAAG4X,aAA6B,GAAKpX,SAAS,EAAKiY,MAAMzY,GAAG4X,YACtF3K,EAAOA,EAAO,qBAAyBzM,SAAS,EAAKiY,MAAMzY,GAAG4X,YAAa,WACjC,iBAA7B,EAAKa,MAAMzY,GAAG4X,aAC3B3K,EAAOA,wBAAuC,EAAKwL,MAAMzY,GAAG4X,WAAa,YAG5B,iBAAvCpX,SAAS,EAAKiY,MAAMzY,GAAG4X,aAA6B,GAAKpX,SAAS,EAAKiY,MAAMzY,GAAG4X,YACtF3K,EAAOA,EAAO,qBAAyBzM,SAAS,EAAKiY,MAAMzY,GAAG4X,YAAa,UACjC,iBAA7B,EAAKa,MAAMzY,GAAG4X,aAC3B3K,EAAOA,wBAAuC,EAAKwL,MAAMzY,GAAG4X,WAAa,WAMvF5X,IAID,OAFAiN,GAAa,UA/PD,KAsQbsL,sBAAwB,WAAQ,OAAO,EAAKS,oBAtQ/B,KAuQbG,sBAAwB,SAACpB,GAAe,EAAKiB,mBAAqBjB,GAvQrD,KAyQbS,wBAA0B,WAAQ,OAAO,EAAKU,sBAzQjC,KA0QbE,wBAA0B,SAACxB,GAAiB,EAAKsB,qBAAuBtB,GA1Q3D,KA4QbU,SAAW,WAAQ,OAAO,EAAKG,OA5QlB,KA8QbP,YAAc,WAAQ,OAAO,EAAKH,UA9QrB,KA+QbI,YAAc,SAACJ,GAAe,EAAKA,SAAWA,GA/QjC,KAgRbJ,cAAgB,WAAQ,OAAO,EAAKC,YAhRvB,KAiRbC,cAAgB,SAACD,GAAiB,EAAKA,WAAaA,GAhRnDrZ,KAAKya,mBAAqB,KAC1Bza,KAAK2a,qBAAuB,KAC5B3a,KAAKwZ,SAAW,KAChBxZ,KAAKqZ,WAAa,KAClBrZ,KAAKka,MAAQ,IDgpBEY,G,kDAtpBhB,WAAY/W,GAAQ,IAAD,8BAClB,cAAMA,IAkCPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WAxCvC,EA6CnBC,UAAY,WAEXyU,GAAUnZ,SAAS,EAAK2E,MAAMgW,YAAa,EAAKhW,MAAMiW,YAAa,EAAKjW,MAAM0U,MAAO,EAAK1U,MAAM2U,OAChG,IAIIzW,EAAM,CACTC,MALc,IAAIH,UAAQwW,GAAUS,wBAAwBrY,mBAM5DsD,MALc,IAAIlC,UAAQwW,GAAUS,wBAAwBjY,oBA2BzDmN,EAAO,CACVhM,MA3Be,IAAIH,UAAQwW,GAAUU,0BAA0BtY,mBA4B/DsD,MA3Be,IAAIlC,UAAQwW,GAAUU,0BAA0BlY,oBAkDhE,EAAKmD,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EA5ClC,CACbI,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,eA+B5B,EAAK2M,SAAW,IAAInL,UAAQ,EAAK8K,QAAQ5K,QAAS6J,EArBnC,CACd7L,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,gBA/FV,EA2GnB2B,aAAe,WACdiU,GAAUzY,SAAS,EAAKiE,MAAMgW,YAAa,EAAKhW,MAAMiW,YAAa,EAAKjW,MAAM0U,MAAO,EAAK1U,MAAM2U,OAChG,IAIIzW,EAAM,CACTC,MALc,IAAIH,UAAQwW,GAAUS,wBAAwBrY,mBAM5DsD,MALc,IAAIlC,UAAQwW,GAAUS,wBAAwBjY,oBA2BzDmN,EAAO,CACVhM,MA3Be,IAAIH,UAAQwW,GAAUU,0BAA0BtY,mBA4B/DsD,MA3Be,IAAIlC,UAAQwW,GAAUU,0BAA0BlY,oBAkDhE,EAAKmD,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EA5ClC,CACbI,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,eA+B5B,EAAK2M,SAAW,IAAInL,UAAQ,EAAK8K,QAAQ5K,QAAS6J,EArBnC,CACd7L,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,gBA5JV,EAsKnB4B,aAAe,WACdgU,GAAUlY,OAAO,EAAK0D,MAAMgW,YAAa,EAAKhW,MAAMiW,YAAa,EAAKjW,MAAM0U,MAAO,EAAK1U,MAAM2U,MAAO,EAAK3U,MAAMwV,QAAS,EAAKxV,MAAMyV,SACpI,IAIIvX,EAAM,CACTC,MALc,IAAIH,UAAQwW,GAAUS,wBAAwBrY,mBAM5DsD,MALc,IAAIlC,UAAQwW,GAAUS,wBAAwBjY,oBA2BzDmN,EAAO,CACVhM,MA3Be,IAAIH,UAAQwW,GAAUU,0BAA0BtY,mBA4B/DsD,MA3Be,IAAIlC,UAAQwW,GAAUU,0BAA0BlY,oBAkDhE,EAAKmD,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EA5ClC,CACbI,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,eA+B5B,EAAK2M,SAAW,IAAInL,UAAQ,EAAK8K,QAAQ5K,QAAS6J,EArBnC,CACd7L,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,gBAvNV,EAiOnBgC,aAAe,WACd,IAAI,EAAiB4T,GAAU/X,OAAO,EAAKuD,MAAMgW,YAAa,EAAKhW,MAAMiW,YAAa,EAAKjW,MAAM0U,MAAO,EAAK1U,MAAM2U,OAA9GW,EAAL,EAAKA,MAAOC,EAAZ,EAAYA,MAGZ,GAFAvZ,QAAQC,IAAI,cACZD,QAAQC,IAAI0S,OAAO2G,GAAO,KAAK3G,OAAO4G,IAClC,GAAKrY,SAASoY,IAAU,GAAKpY,SAASqY,GAAO,CAChD,IAIIrX,EAAM,CACTC,MALc,IAAIH,UAAQwW,GAAUS,wBAAwBrY,mBAM5DsD,MALGjC,EAAW,IAAID,UAAQwW,GAAUS,wBAAwBjY,oBAQzDqB,EAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cAKxBuL,EAAO,CACVhM,MA3Be,IAAIH,UAAQwW,GAAUU,0BAA0BtY,mBA4B/DsD,MA3BGgK,EAAY,IAAIlM,UAAQwW,GAAUU,0BAA0BlY,oBA8B5D4N,EAAW,CACdtM,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cAM5BX,EAAS4C,IAAI,CAACzD,KAAMF,SAASoY,GAAQ3a,GAAIuC,SAASoY,GAAQxU,MAAM5D,SAASoY,GAAO3W,MAAM,CAACA,MAAM,aAC7FuL,EAAUrJ,IAAI,CAACzD,KAAMF,SAASqY,GAAQ5a,GAAIuC,SAASqY,GAAQzU,MAAM5D,SAASqY,GAAO5W,MAAM,CAACA,MAAM,iBAG9F,KACIV,EAEAiM,EACAhM,EAAM,CACTC,MALc,IAAIH,UAAQwW,GAAUS,wBAAwBrY,mBAM5DsD,MALGjC,EAAW,IAAID,UAAQwW,GAAUS,wBAAwBjY,oBAQzDqB,EAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cAKxBuL,EAAO,CACVhM,MA3Be,IAAIH,UAAQwW,GAAUU,0BAA0BtY,mBA4B/DsD,MA3BGgK,EAAY,IAAIlM,UAAQwW,GAAUU,0BAA0BlY,oBA8B5D4N,EAAW,CACdtM,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,cAU7B,EAAKuB,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EAAMG,GACtD,EAAKkN,SAAW,IAAInL,UAAQ,EAAK8K,QAAQ5K,QAAS6J,EAAOS,IAzVvC,EA6VnBlK,aAAe,WACd8T,GAAU5Y,gBAAgB,EAAKoE,MAAMgW,YAAa,EAAKhW,MAAMiW,YAAa,EAAKjW,MAAM0U,MAAO,EAAK1U,MAAM2U,OACvG,IAIIzW,EAAM,CACTC,MALc,IAAIH,UAAQwW,GAAUS,wBAAwBrY,mBAM5DsD,MALc,IAAIlC,UAAQwW,GAAUS,wBAAwBjY,oBA2BzDmN,EAAO,CACVhM,MA3Be,IAAIH,UAAQwW,GAAUU,0BAA0BtY,mBA4B/DsD,MA3Be,IAAIlC,UAAQwW,GAAUU,0BAA0BlY,oBAkDhE,EAAKmD,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EA5ClC,CACbI,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,eA+B5B,EAAK2M,SAAW,IAAInL,UAAQ,EAAK8K,QAAQ5K,QAAS6J,EArBnC,CACd7L,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,gBA9YV,EAwZnB+B,eAAiB,WAChB6T,GAAU1Y,gBAAgB,EAAKkE,MAAMgW,YAAa,EAAKhW,MAAMiW,YAAa,EAAKjW,MAAM0U,MAAO,EAAK1U,MAAM2U,OACvG,IAIIzW,EAAM,CACTC,MALc,IAAIH,UAAQwW,GAAUS,wBAAwBrY,mBAM5DsD,MALc,IAAIlC,UAAQwW,GAAUS,wBAAwBjY,oBA2BzDmN,EAAO,CACVhM,MA3Be,IAAIH,UAAQwW,GAAUU,0BAA0BtY,mBA4B/DsD,MA3Be,IAAIlC,UAAQwW,GAAUU,0BAA0BlY,oBAkDhE,EAAKmD,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EA5ClC,CACbI,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,eA+B5B,EAAK2M,SAAW,IAAInL,UAAQ,EAAK8K,QAAQ5K,QAAS6J,EArBnC,CACd7L,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,gBAzcV,EAmdnBmC,eAAiB,WAEhB,IAAMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aACvC,GAA0B,wBAAtBmB,EAASE,UAAoC,CAChDF,EAASvD,QAAQ+R,SAAQ,SAAAjO,GACxBvF,QAAQC,IAAIsF,EAAQ4S,UAAY,KAAK5S,EAAQ2U,YAC7C1B,GAAUnZ,SAAS,EAAK2E,MAAMgW,YAAa,EAAKhW,MAAMiW,YAAatH,OAAOpN,EAAQ4S,WAAYxF,OAAOpN,EAAQ2U,gBAI9G,IAIIhY,EAAM,CACTC,MALc,IAAIH,UAAQwW,GAAUS,wBAAwBrY,mBAM5DsD,MALc,IAAIlC,UAAQwW,GAAUS,wBAAwBjY,oBA2BzDmN,EAAO,CACVhM,MA3Be,IAAIH,UAAQwW,GAAUU,0BAA0BtY,mBA4B/DsD,MA3Be,IAAIlC,UAAQwW,GAAUU,0BAA0BlY,oBAkDhE,EAAKmD,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,EA5ClC,CACbI,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,eA+B5B,EAAK2M,SAAW,IAAInL,UAAQ,EAAK8K,QAAQ5K,QAAS6J,EArBnC,CACd7L,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACbC,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,oBAY5ByC,MAAM,6CAxhBW,EA6hBnBC,eAAiB,WAGhB,IAAMC,EAAUC,SAASC,cAAc,KACnCC,EAAY8S,GAAUlX,eACpBqE,EAAO,IAAIC,KAAK,CAACF,IACvBH,EAAQrH,KAAO2H,IAAIC,gBAAgBH,GAChCJ,EAAQQ,SAAW,iBACnBP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAQW,QACRb,MAAM,sBAriBT,EAAKrB,MAAQ,CAEZ0U,MAAO,GACPC,MAAO,GACPqB,YAAa,GACbC,YAAa,GACbT,QAAS,GACTC,QAAS,GACT9V,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACf,EAAKoL,SAAW,GACd,EAAKlL,OAAS8B,sBACd,EAAK+I,QAAU/I,sBACjB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAjBP,E,qDAoBnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAzBrCpC,UACAG,a,gCA0BH,WACCpD,KAAKsQ,SAAW,IAAInL,UAAQnF,KAAKiQ,QAAQ5K,QA5BjC6J,UACGS,a,+BA8BZ,SAAkB1L,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBA4gBX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,cAAc3F,UAAU,eAAewI,YAAY,eAAetI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMgW,YAAatT,SAAUzH,KAAKmH,sBAExJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,QAAQ3F,UAAU,eAAewI,YAAY,SAAStI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM0U,MAAOhS,SAAUzH,KAAKmH,sBAEtI,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,uBAGD,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,wBAED,qBAAKtG,UAAU,WAAf,SACC,uBAAOuI,KAAK,OAAO5C,KAAK,UAAU3F,UAAU,eAAewI,YAAY,WAAWtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMwV,QAAS9S,SAAUzH,KAAKmH,sBAE5I,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK4F,gBAAtE,+BAED,qBAAKvG,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,wBAG7D,qBAAKhF,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,cAAc3F,UAAU,eAAewI,YAAY,eAAetI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMiW,YAAavT,SAAUzH,KAAKmH,sBAExJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,QAAQ3F,UAAU,eAAewI,YAAY,SAAStI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM2U,MAAOjS,SAAUzH,KAAKmH,sBAEtI,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK8F,gBAAtE,sBAED,qBAAKzG,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+F,kBAAtE,qBAED,qBAAK1G,UAAU,WAAf,SACC,uBAAOuI,KAAK,OAAO5C,KAAK,UAAU3F,UAAU,eAAewI,YAAY,WAAWtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMyV,QAAS/S,SAAUzH,KAAKmH,sBAE5I,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,2BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAMF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAIf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,SAC3C,qBAAKiC,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKiQ,iB,GA5oBtBhI,aEHpBiT,GAAgB,ICFnB,aAAc,IAAD,gCAQbC,OAAS,SAACnW,GAIT,IAHA,IAAI8D,EAAQ9D,EAAKmB,OAEb1E,EAAI,EACFA,EAAEqH,GACP,EAAKsS,WAAWvZ,KAAKmD,EAAKqW,OAAO5Z,IACjCA,IAGDA,EAAI,EACJ,IAAI6Z,EAAW,EAGf,IAFA,EAAKC,MAAM1Z,KAAK,CAAC3C,GAAG,SAAUa,KAAK,KAAMyb,MAAMvZ,SAAS,EAAKwZ,SAC7D,EAAKC,UAAU7Z,KAAK,CAAC3C,GAAG,aAAca,KAAK,KAAMyb,MAAMvZ,SAAS,EAAKwZ,SAC/Dha,EAAEqH,GACJ,EAAK6S,SAASla,EAAE,IAAKA,EAAE,GACzB,EAAK8Z,MAAM1Z,KAAK,CAAC3C,GAAG,IAAIwU,OAAOjS,EAAE,GAAI1B,KAAK,KAAMyb,MAAMvZ,SAAS,EAAKwZ,SACpE,EAAKC,UAAU7Z,KAAK,CAAC3C,GAAG,IAAIwU,OAAOjS,EAAE,GAAI1B,KAAK,KAAMyb,MAAMvZ,SAAS,EAAKwZ,SACxE3S,MAEA,EAAKyS,MAAM1Z,KAAK,CAAC3C,GAAG,IAAIwU,OAAO4H,GAAWvb,KAAK,EAAKqb,WAAWE,EAAS,GAAIE,MAAMvZ,SAAS,EAAKwZ,SAChG,EAAKC,UAAU7Z,KAAK,CAAC3C,GAAG,IAAIwU,OAAO4H,GAAWvb,KAAK,EAAKqb,WAAWE,EAAS,GAAIE,MAAMvZ,SAAS,EAAKwZ,SACpGH,KAED7Z,IAED,EAAKga,QAiBL,IAXA,EAAKF,MAAMhH,SAAQ,SAAAjO,GAClB,GAAyB,KAAtBA,EAAQpH,GAAGmc,OAAO,GAAQ,CAC5B,EAAKO,WAAW/Z,KAAK,CAAC3C,GAAG,IAAIoH,EAAQpH,GAAGmc,OAAO,GAAItb,KAAK,KAAMyb,MAAM,EAAKC,QACzE,IAAItS,EAAM,EAAK0S,YAAY/S,EAAMxC,EAAQpH,GAAGmc,OAAO,GAAI,EAAKI,OAC5D,EAAKpa,OAAOiF,EAAQpH,GAAIiK,EAAK,EAAKsS,OAClC,EAAKA,YAKPha,EAAI,EACEA,EAAE,EAAKia,UAAUvV,QAAO,CAE7B,IADA,IAAI4F,EAAI,EACFA,EAAE,EAAK6P,WAAWzV,QACpB,EAAKuV,UAAUja,GAAGvC,IAAM,EAAK0c,WAAW7P,GAAG7M,IAAiC,MAA3B,EAAK0c,WAAW7P,GAAGhM,OACtE,EAAK2b,UAAUja,GAAG1B,KAAO,EAAK6b,WAAW7P,GAAGhM,KAC5C,EAAK2b,UAAUja,GAAG+Z,MAAQ,EAAKC,OAGL,cAAxB,EAAKC,UAAUja,GAAGvC,KACpB,EAAKwc,UAAUja,GAAG+Z,MAAQ,EAAKC,OAEhC1P,IAEDtK,MA/DW,KAmEboa,YAAc,SAAC/S,EAAMgT,EAAQL,GAC5B,IAAIha,EAAI,EACJyH,EAAQ,KACRuK,GAAS,EACTsI,EAAU,EAEd,IADAhb,QAAQC,IAAI,aAAa8H,EAAK,UAAUgT,EAAO,WAAWL,GACpDha,GAAGqH,GAAK,CACb,IAAIP,EAAO,EAAK/G,OAAOC,GACpBqa,GAAQra,EACPsa,EAAQD,GAAoB,GAAVrI,GAEE,KAAnBlL,EAAKrJ,GAAGmc,OAAO,GACjB,EAAKO,WAAW/Z,KAAK,CAAC3C,GAAGqJ,EAAKrJ,GAAIa,KAAK,KAAMyb,MAAMvZ,SAASwZ,MAEhD,MAATvS,EACFA,EAAQX,EAAKxI,KAKG,GAAbwI,EAAKxI,MAAsB,GAATmJ,EAAaA,EAAQ,EACrB,GAAbX,EAAKxI,MAAsB,GAATmJ,GACL,GAAbX,EAAKxI,MAAsB,GAATmJ,EADaA,EAAQ,EAE1B,GAAbX,EAAKxI,MAAsB,GAATmJ,IAAaA,EAAQ,GAEhD,EAAK0S,WAAW/Z,KAAK,CAAC3C,GAAGqJ,EAAKrJ,GAAIa,KAAKwI,EAAKxI,KAAMyb,MAAMvZ,SAASwZ,QAElEM,GACYD,IACXrI,GAAO,KAKPA,EADW,KADZsI,EAMA,EAAKH,WAAW/Z,KAAK,CAAC3C,GAAGqJ,EAAKrJ,GAAIa,KAAK,KAAMyb,MAAMvZ,SAASwZ,MAG7D,EAAKG,WAAW/Z,KAAK,CAAC3C,GAAGqJ,EAAKrJ,GAAIa,KAAK,KAAMyb,MAAMvZ,SAASwZ,KAE7Dha,IAED,OAAOyH,GAhHK,KAoHb1H,OAAS,SAACgT,GAGT,IAFA,IAAI/S,EAAI,EACJ0H,EAAM,KACJ1H,EAAE,EAAK8Z,MAAMpV,QAAO,CAEzB,GADAgD,EAAM,EAAKoS,MAAM9Z,GACd+S,GAAU/S,EACZ,OAAO0H,EAER1H,IAED,OAAO,GA9HK,KAiIbJ,OAAS,SAACnC,EAAIoC,EAAQma,GAGrB,IAFA,IAAIha,EAAI,EAEFA,EAAE,EAAKma,WAAWzV,QACpB,EAAKyV,WAAWna,GAAGvC,IAAIA,GAAM,EAAK0c,WAAWna,GAAG+Z,OAASC,IAC3D,EAAKG,WAAWna,GAAG1B,KAAK2T,OAAOpS,IAEhCG,IAED,OAAO,GA1IK,KA8Ibka,SAAW,SAAC7S,GAEX,IADA,IAAIrH,EAAI,EACFA,EAAEqH,GAAK,CACZ,GAAG,WAAGrH,IAAKqH,EACV,OAAO,KAAP,IAAO,EAAGrH,GAEXA,IAED,OAAO,MAtJK,KA0JZE,gBAAkB,WAEZ,IAAIC,EAAM,GACNH,EAAI,EACJua,EAAS,EAIb,IADAva,EAAE,EACIA,EAAE,EAAK8Z,MAAMpV,QACK,MAApB,EAAKoV,MAAM9Z,GAAG1B,KAEhB6B,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM4R,OAAO,EAAK6H,MAAM9Z,GAAG1B,MAAM,KAAK2T,OAAO,EAAK6H,MAAM9Z,GAAGvC,IAAKqP,MAAM,EAAKgN,MAAM9Z,GAAG+Z,QAE1G5Z,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM4R,OAAO,EAAK6H,MAAM9Z,GAAGvC,IAAKqP,MAAM,EAAKgN,MAAM9Z,GAAG+Z,QAEzE/Z,IACAua,IAGD,IADAva,EAAI,EACEA,EAAE,EAAKma,WAAWzV,QACa,KAAjC,EAAKyV,WAAWna,GAAGvC,GAAGmc,OAAO,GAC/BzZ,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM,EAAK8Z,WAAWna,GAAGvC,GAAIqP,MAAM,EAAKqN,WAAWna,GAAG+Z,QAE7C,MAA3B,EAAKI,WAAWna,GAAG1B,KACrB6B,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM,IAAKyM,MAAM,EAAKqN,WAAWna,GAAG+Z,QAGzD5Z,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM4R,OAAO,EAAKkI,WAAWna,GAAG1B,MAAOwO,MAAM,EAAKqN,WAAWna,GAAG+Z,QAGvF/Z,IACAua,IAGD,IADAva,EAAI,EACEA,EAAE,EAAKia,UAAUvV,QACK,cAAxB,EAAKuV,UAAUja,GAAGvC,GACpB0C,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM4R,OAAO,EAAKgI,UAAUja,GAAGvC,IAAKqP,MAAM,EAAKmN,UAAUja,GAAG+Z,QAEjF5Z,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM4R,OAAO,EAAKgI,UAAUja,GAAG1B,MAAOwO,MAAM,EAAKmN,UAAUja,GAAG+Z,QAGpF/Z,IACAua,IAED,OAAOpa,GAtMD,KA0MVqa,eAAiB,SAAC/B,EAAOhb,EAAIuc,GAG5B,IAFA,IAAIha,EAAI,EACJua,EAAS,EACPva,EAAE,EAAK8Z,MAAMpV,QACf1E,IACAua,IAGD,IADAva,EAAI,EACEA,EAAE,EAAKma,WAAWzV,QAAO,CAE9B,GAAG+T,EAAMzY,GAAGvC,IAAMA,GAAMgb,EAAMzY,GAAG+Z,OAASC,EACzC,OAAOO,EAERva,IACAua,IAID,IADAva,EAAI,EACEA,EAAE,EAAKia,UAAUvV,QACtB1E,IACAua,IAGJ,OAAO,GAjOE,KAqOVja,gBAAkB,WAIjB,IAHA,IAAIN,EAAI,EACJG,EAAM,GACNoa,EAAS,EACPva,EAAE,EAAK8Z,MAAMpV,QAAO,CACF,MAAjB,EAAKoV,MAAM9Z,EAAE,IACfG,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAEjE,IAAImG,EAAO,EAAK0T,eAAe,EAAKL,WAAY,EAAKL,MAAM9Z,GAAGvC,GAAI,EAAKqc,MAAM9Z,GAAG+Z,MAAM,GAC7E,MAANjT,GACF3G,EAAIC,KAAK,CAACM,KAAK6Z,EAAQtc,GAAG6I,EAAMnG,OAAQ,OAGzCX,IACAua,IAGD,IADAva,EAAI,EACEA,EAAE,EAAKma,WAAWzV,QAAO,CACL,MAAtB,EAAKyV,WAAWna,EAAE,IAAY,EAAKma,WAAWna,GAAG+Z,OAAS,EAAKI,WAAWna,EAAE,GAAG+Z,OACjF5Z,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAEjE,IAAImG,EAAO,EAAK0T,eAAe,EAAKL,WAAY,EAAKA,WAAWna,GAAGvC,GAAI,EAAK0c,WAAWna,GAAG+Z,MAAM,GACvF,MAANjT,GACF3G,EAAIC,KAAK,CAACM,KAAK6Z,EAAQtc,GAAG6I,EAAMnG,OAAQ,OAEzCX,IACAua,IAGD,IADAva,EAAI,EACEA,EAAE,EAAKia,UAAUvV,QAAO,CACL,MAArB,EAAKuV,UAAUja,EAAE,IAAY,EAAKia,UAAUja,GAAG+Z,OAAS,EAAKE,UAAUja,EAAE,GAAG+Z,OAC9E5Z,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAGjE,IAAImG,EAAO,EAAK0T,eAAe,EAAKL,WAAY,EAAKF,UAAUja,GAAGvC,GAAI,EAAKwc,UAAUja,GAAG+Z,MAAM,GACrF,MAANjT,GACF3G,EAAIC,KAAK,CAACM,KAAKoG,EAAM7I,GAAGsc,EAAQ5Z,OAAQ,OAEzCX,IACAua,IAKD,OAAOpa,GAjRD,KAsRVS,aAAe,WAEd,IAAIqM,EAAM,GACV3N,QAAQC,IAAI,EAAK0a,WAEjB,IADA,IAAIja,EAAI,EACFA,EAAE,EAAKia,UAAUvV,QACK,cAAxB,EAAKuV,UAAUja,GAAGvC,KACpB6B,QAAQC,IAAI,KAAK,EAAK0a,UAAUja,GAAG1B,MACnC2O,GAAcgF,OAAO,EAAKgI,UAAUja,GAAG1B,OAExC0B,IAGD,OADAV,QAAQC,IAAI0N,GACLA,GAlSV1O,KAAKob,WAAY,GACjBpb,KAAKub,MAAQ,GACbvb,KAAK4b,WAAa,GAClB5b,KAAK0b,UAAY,GACjB1b,KAAKyb,MAAQ,GDFX3Y,GAAW,IAAIC,UAAQmY,GAAcvZ,mBACrCqB,GAAW,IAAID,UAAQmY,GAAcnZ,mBAGrCkB,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAEHI,GAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,MAAM,CACCO,YAAa,GACb0L,MAAO,MACPzL,MAAO,CACHC,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,aAIxB4L,OAAO,CACTC,aAAc,CACZC,UAAW,QAkJEyM,G,kDA1IhB,WAAYnY,GAAQ,IAAD,8BAClB,cAAMA,IAuBPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA7BvC,EAiCnBiB,eAAiB,WAEhB,IAAMqW,EAAa,EAAKpX,MAAMH,YAC9B7D,QAAQC,IAAImb,GAEZjB,GAAcC,OAAOgB,GACrBrZ,GAAW,IAAIC,UAAQmY,GAAcvZ,mBACrCqB,GAAW,IAAID,UAAQmY,GAAcnZ,mBACrCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA9CpC,EAqDnBgZ,aAAe,WACM,IAAjB,EAAKrX,MAAMC,MACbkW,GAAcC,OAAO,EAAKpW,MAAMC,MAChClC,GAAW,IAAIC,UAAQmY,GAAcvZ,mBACpCqB,GAAW,IAAID,UAAQmY,GAAcnZ,mBACrCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAEvDgD,MAAM,yCAjEW,EAuEnBC,eAAiB,WAChB,IAAMC,EAAUC,SAASC,cAAc,KACnCC,EAAYyU,GAAc7Y,eACxBqE,EAAO,IAAIC,KAAK,CAACF,IACvBH,EAAQrH,KAAO2H,IAAIC,gBAAgBH,GAChCJ,EAAQQ,SAAW,cACnBP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAQW,QACRb,MAAM,sBA7ET,EAAKrB,MAAQ,CACZC,KAAM,GACNN,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBATP,E,qDAYnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAgEX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOtI,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,qBAE5D,qBAAKhF,UAAU,aAEf,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,uBAAOuI,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKyc,gBAAtE,yBAED,qBAAKpd,UAAU,WAAWqI,MAAO,CAAC6E,YAAa,OAA/C,SACC,wBAAQ3E,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAGF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GArIxB6C,aEqMPoU,GA5Od,aAAc,IAAD,gCAObC,aAAa,SAACvc,GACb,EAAKwc,SAASxc,GARF,KAUbyc,QAAQ,SAACzc,GACR,EAAK0c,IAAI1c,GAXG,KAab2c,aAAa,WAAM,OAAO,EAAKH,UAblB,KAcbI,QAAQ,WAAM,OAAO,EAAKF,KAdb,KAebG,cAAc,SAACC,EAAOJ,EAAIK,GACzB,IAAI9O,EAAO,EAAKxC,OAAOqR,IACX,GAAT7O,GACF,EAAK+O,SAAS/O,GAAQ,GAAGnM,KAAK,CAAC4a,EAAIK,KAlBxB,KAqBbE,SAAS,SAACjd,EAAKkd,GACd,EAAKF,SAASlb,KAAK,CAAC9B,EAAKkd,KAtBb,KAwBbxF,WAAW,SAACyF,EAAUC,EAAUC,GAC/B,IAAIpP,EAAQ,EAAKxC,OAAO0R,GACxB,EAAKH,SAAS/O,GAAQ,CAACmP,EAAU,KA1BrB,KA4Bb3R,OAAO,SAACzL,GAEP,IADA,IAAIiO,GAAQ,EACJvM,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAQ1E,IACpC,GAAG,EAAKsb,SAAStb,GAAG,IAAI1B,EAEvB,OADAiO,EAAOvM,EAIT,OAAOuM,GApCK,KAsCbqP,SAAS,SAACtd,GACT,IAAI,IAAI0B,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAQ1E,IACjC,EAAKsb,SAAStb,GAAG,IAAI1B,GACvB,EAAKgd,SAAS7F,OAAOzV,EAAE,IAzCb,KA6Cb6b,qBAAqB,WACpB,IAAInP,EAAQ,GACRC,EAAS,GACbrN,QAAQC,IAAI,EAAK+b,UACjB,IAAI,IAAItb,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAO1E,IAAI,CACvC,IAAI4H,EAAS,GAAI,EAAK0T,SAAStb,GAAG,GAElC,GADA0M,EAAQtM,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOuH,IACI,GAA5B,EAAK0T,SAAStb,GAAG,GAAG0E,OACtB,IAAI,IAAI4F,EAAE,EAAGA,EAAE,EAAKgR,SAAStb,GAAG,GAAG0E,OAAQ4F,IAAI,CAC9C,IAAIiC,EAEJ,IAAY,IADZA,EAAS,EAAKxC,OAAO,EAAKuR,SAAStb,GAAG,GAAGsK,GAAG,KAC9B,CACb,IAAIjK,EAAO,GAAK,EAAKib,SAAStb,GAAG,GAAGsK,GAAG,GACvCqC,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAGsO,EAAQlM,MAAOA,MAK7C,MAAO,CAACqM,EAAQC,IA/DJ,KAiEbmP,mBAAmB,WAClB,IAAIpP,EAAQ,GACRC,EAAS,GACbrN,QAAQC,IAAI,EAAK+b,UACjB,IAAI,IAAItb,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAO1E,IAAI,CACvC,IAAI4H,EAAS,GAAI,EAAK0T,SAAStb,GAAG,GAElC,GADA0M,EAAQtM,KAAK,CAAC3C,GAAGuC,EAAGK,MAAOuH,IACI,GAA5B,EAAK0T,SAAStb,GAAG,GAAG0E,OACtB,IAAI,IAAI4F,EAAE,EAAGA,EAAE,EAAKgR,SAAStb,GAAG,GAAG0E,OAAQ4F,IAAI,CAC9C,IAAIiC,EAEJ,IAAY,IADZA,EAAS,EAAKxC,OAAO,EAAKuR,SAAStb,GAAG,GAAGsK,GAAG,KAC9B,CACb,IAAIjK,EAAO,GAAG,EAAKib,SAAStb,GAAG,GAAGsK,GAAG,GACrCqC,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAGsO,EAAQlM,MAAOA,EAAOM,OAAQ,SAK5D,MAAO,CAAC+L,EAAQC,IAnFJ,KAqFboP,cAAc,WACb,IAAI,IAAI/b,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAQ1E,IAAI,CAExC,IADA,IAAIgc,EAAQ,GACJ1R,EAAE,EAAGA,EAAE,EAAKgR,SAAS5W,OAAQ4F,IACpC0R,EAAQ5b,KAAK,GAEd,EAAKmL,OAAOnL,KAAK4b,GAElB,IAAI,IAAIhc,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAQ1E,IACpC,GAA+B,GAA5B,EAAKsb,SAAStb,GAAG,GAAG0E,OACtB,IAAI,IAAI4F,EAAE,EAAGA,EAAE,EAAKgR,SAAStb,GAAG,GAAG0E,OAAO4F,IAAI,CAC7C,IAAIiC,EACJA,EAAS,EAAKxC,OAAO,EAAKuR,SAAStb,GAAG,GAAGsK,GAAG,IAC5C,EAAKiB,OAAOvL,GAAGuM,GAAQ,IAlGd,KAuGb0P,iBAAiB,WAChB,EAAKF,gBAIL,IAHA,IAAIrP,EAAQ,GACRC,EAAS,GACTE,EAAS,EACL7M,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAO1E,IACnC,IAAI,IAAIsK,EAAE,EAAGA,EAAE,EAAKgR,SAAS5W,OAAO4F,IAAI,CACvC,IAAI1C,EAAW,GAAK,EAAK2D,OAAOvL,GAAGsK,GACnCoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAM9M,IAClD6M,IAGF,IAAI,IAAIvC,EAAE,EAAGA,EAAE,EAAKgR,SAAS5W,OAAO4F,IAEnC,IADA,IAAI5C,EAAI,EAAE4C,EACFtK,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAO1E,IAC/BA,EAAE,EAAG,EAAKsb,SAAS5W,QACtBiI,EAASvM,KAAK,CAACM,KAAKgH,EAAKzJ,GAAIyJ,EAAI,EAAK4T,SAAS5W,OAAQzC,MAAM,CAAE8K,QAAS,MAEzErF,GAAQ,EAAK4T,SAAS5W,OAGxB,MAAO,CAACgI,EAASC,IA5HL,KA8HbuP,gBAAgB,WAIf,IAHA,IAAIxP,EAAQ,GACRC,EAAS,GACTE,EAAS,EACL7M,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAO1E,IAAI,CACvC,IAAI4H,EAAS,GAAI,EAAK0T,SAAStb,GAAG,GAClC0M,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAM9M,IAC9CA,EAAE,EAAG,EAAKsb,SAAS5W,QACtBiI,EAASvM,KAAK,CAACM,KAAKmM,EAAU5O,GAAI4O,EAAS,EAAG5K,MAAM,CAAE8K,QAAS,MAEhEF,IAED,IAAI,IAAI7M,EAAE,EAAEA,EAAE,EAAKsb,SAAS5W,OAAO1E,IAClC,GAA+B,GAA5B,EAAKsb,SAAStb,GAAG,GAAG0E,OACtB,IAAI,IAAI4F,EAAE,EAAGA,EAAE,EAAKgR,SAAStb,GAAG,GAAG0E,OAAQ4F,IAC1C,GAAM,GAAHA,EAAK,CACP,IAAI1C,EAAS,GAAI,EAAK0T,SAAStb,GAAG,GAAGsK,GAAG,GACxCoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAM9M,IAClD2M,EAASvM,KAAK,CAACM,KAAKV,EAAG/B,GAAI4O,EAAUlM,OAAQ,OAC7CkM,QACI,CACJ,IAAIjF,EAAS,GAAI,EAAK0T,SAAStb,GAAG,GAAGsK,GAAG,GACxCoC,EAAQtM,KAAK,CAAC3C,GAAGoP,EAAUxM,MAAOuH,EAAUkF,MAAM9M,IAClD2M,EAASvM,KAAK,CAACM,KAAKmM,EAAS,EAAG5O,GAAI4O,EAAUlM,OAAQ,OACtDkM,IAKJ,MAAO,CAACH,EAAQC,IA3JJ,KA6JbwP,qBAAqB,WACpB,IACI5P,EADA6P,EAAc,GAEdC,EAAS,GACb9P,EAAS,EAAKxC,OAAO,EAAK+Q,UAC1B,EAAE,CAEDuB,EAASjc,KAAK,EAAKkb,SAAS/O,GAAQ,IACpC6P,EAAchc,KAAKic,EAASC,SAC5B,IAAI,IAAItc,EAAE,EAAKsb,SAAS/O,GAAQ,GAAG7H,OAAQ1E,EAAE,EAAGA,IAC/Cqc,EAASC,MAAM,EAAKhB,SAAS/O,GAAQ,GAAGvM,GAAG,UAItCqc,GAAU,KA3KL,KA6KbE,mBAAmB,SAACC,GAEhB,IADA,IAAIvP,EAAO,iEAAwEuP,EAAS,0EACpFxc,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAQ1E,IAAI,CACxC,IAAIkN,GAAW,EACdC,EAAS3M,SAAS,EAAK8a,SAAStb,GAAG,IACpCoN,MAAMD,KACRD,GAAS,GAGTD,EADY,GAAVC,EACKD,EAAO,sBAAwB,EAAKqO,SAAStb,GAAG,GAAG,IAEnDiN,EAAO,uBAA0B,EAAKqO,SAAStb,GAAG,GAAG,KAE1DiN,GAAc,mBACd,IAAI,IAAI3C,EAAE,EAAGA,EAAE,EAAKgR,SAAStb,GAAG,GAAG0E,OAAQ4F,IAAI,CAC9C,IAAIoM,GAAY,EACfC,EAAUnW,SAAS,EAAK8a,SAAStb,GAAG,GAAGsK,GAAG,IAC3C8C,MAAMuJ,KACRD,GAAU,GAGVzJ,EADa,GAAXyJ,EACKzJ,EAAO,2BAA6B,EAAKqO,SAAStb,GAAG,GAAGsK,GAAG,GAAG,wBAA0B,EAAKgR,SAAStb,GAAG,GAAGsK,GAAG,GAAG,aAElH2C,EAAO,4BAA+B,EAAKqO,SAAStb,GAAG,GAAGsK,GAAG,GAAG,yBAA4B,EAAKgR,SAAStb,GAAG,GAAGsK,GAAG,GAAG,aAG5H2C,GAAU,YAGX,OADAA,GAAa,UAzMJ,KA4MVwP,iBAAiB,SAACD,GAEjB,IADA,IAAIvP,EAAO,iEAAwEuP,EAAS,yEACpFxc,EAAE,EAAGA,EAAE,EAAKsb,SAAS5W,OAAQ1E,IAAI,CACxC,IAAIkN,GAAW,EACdC,EAAS3M,SAAS,EAAK8a,SAAStb,GAAG,IACpCoN,MAAMD,KACRD,GAAS,GAGTD,EADY,GAAVC,EACKD,EAAO,sBAAwB,EAAKqO,SAAStb,GAAG,GAAG,IAEnDiN,EAAO,uBAA0B,EAAKqO,SAAStb,GAAG,GAAG,KAE1DiN,GAAc,mBACd,IAAI,IAAI3C,EAAE,EAAGA,EAAE,EAAKgR,SAAStb,GAAG,GAAG0E,OAAQ4F,IAAI,CAC9C,IAAIoM,GAAY,EACfC,EAAUnW,SAAS,EAAK8a,SAAStb,GAAG,GAAGsK,GAAG,IAC3C8C,MAAMuJ,KACRD,GAAU,GAGVzJ,EADa,GAAXyJ,EACKzJ,EAAO,2BAA6B,EAAKqO,SAAStb,GAAG,GAAGsK,GAAG,GAAG,wBAA0B,EAAKgR,SAAStb,GAAG,GAAGsK,GAAG,GAAG,aAElH2C,EAAO,4BAA+B,EAAKqO,SAAStb,GAAG,GAAGsK,GAAG,GAAG,yBAA4B,EAAKgR,SAAStb,GAAG,GAAGsK,GAAG,GAAG,aAG5H2C,GAAU,YAGX,OADAA,GAAa,UAvOhB1O,KAAKuc,SAAS,KACdvc,KAAKyc,IAAI,KACTzc,KAAK+c,SAAS,GACd/c,KAAKgN,OAAO,GACZhN,KAAKka,MAAM,ICHTiE,GAAQ,IAAI9B,GACZvZ,GAAW,IAAIC,UAAQ,IACvBC,GAAW,IAAID,UAAQ,IACvBiM,GAAY,IAAIjM,UAAQ,IACxBkM,GAAY,IAAIlM,UAAQ,IAGxBE,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAEHkM,GAAQ,CACXhM,MAAOJ,GACPK,KAAMH,IAEHI,GAAU,CACbF,MAAM,CACLiM,MAAO,MACJC,OAAQ,GACRC,gBAAiB,CACfC,QAAS,KAER7L,YAAa,IAEjB8L,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cAIjBC,GAAW,CACdzM,MAAM,CACLiM,MAAO,MACJC,OAAQ,GACRC,gBAAiB,CACfC,QAAS,KAER7L,YAAa,IAEjB8L,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cAsYJ0O,G,kDA9XhB,WAAYra,GAAQ,IAAD,8BAClB,cAAMA,IAsCPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA5CvC,EAgDnBwZ,oBAAoB,WACnBF,GAAMvB,cAAc,EAAK7X,MAAMuZ,OAAO,EAAKvZ,MAAMwZ,MAAM,EAAKxZ,MAAM+X,WAC5C,eAAnB,EAAK/X,MAAMqL,QACbtN,GAAW,IAAIC,UAAQob,GAAMb,uBAAuB,IACpDta,GAAW,IAAID,UAAQob,GAAMb,uBAAuB,KACzB,YAAnB,EAAKvY,MAAMqL,SACnBtN,GAAW,IAAIC,UAAQob,GAAMZ,qBAAqB,IAClDva,GAAW,IAAID,UAAQob,GAAMZ,qBAAqB,KAEnDta,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA7DpC,EA+DnBob,eAAe,aA/DI,EAkEnBC,eAAe,aAlEI,EAsEnB3Z,UAAY,WACX,IAAI6J,GAAW,EACXC,EAAS3M,SAAS,EAAK8C,MAAMC,MAC9B6J,MAAMD,KACRD,GAAS,GAEG,GAAVA,EACFwP,GAAMnB,SAAS/a,SAAS,EAAK8C,MAAMC,MAAM,IAEzCmZ,GAAMnB,SAAS,EAAKjY,MAAMC,KAAK,IAEV,eAAnB,EAAKD,MAAMqL,QACbtN,GAAW,IAAIC,UAAQob,GAAMb,uBAAuB,IACpDta,GAAW,IAAID,UAAQob,GAAMb,uBAAuB,KACzB,YAAnB,EAAKvY,MAAMqL,SACnBtN,GAAW,IAAIC,UAAQob,GAAMZ,qBAAqB,IAClDva,GAAW,IAAID,UAAQob,GAAMZ,qBAAqB,KAEnDta,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA5FpC,EA8FnBsb,YAAY,WACX1P,GAAY,IAAIjM,UAAQob,GAAMR,kBAAkB,IAChD1O,GAAY,IAAIlM,UAAQob,GAAMR,kBAAkB,IAChDzO,GAAQ,CACPhM,MAAO8L,GACP/J,MAAOgK,IAER,EAAK/J,QAAU,IAAIC,UAAQ,EAAK8K,QAAQ5K,QAAS6J,GAAOS,KArGtC,EAuGnBgP,aAAa,WACZ3P,GAAY,IAAIjM,UAAQob,GAAMT,mBAAmB,IACjDzO,GAAY,IAAIlM,UAAQob,GAAMT,mBAAmB,IACjDxO,GAAQ,CACPhM,MAAO8L,GACP/J,MAAOgK,IAER,EAAK/J,QAAU,IAAIC,UAAQ,EAAK8K,QAAQ5K,QAAS6J,GAAOS,KA9GtC,EAiHnBrK,aAAe,WACd,IAAIqJ,GAAW,EACXC,EAAS3M,SAAS,EAAK8C,MAAMC,MAC9B6J,MAAMD,KACRD,GAAS,GAEG,GAAVA,EACFwP,GAAMd,SAASpb,SAAS,EAAK8C,MAAMC,OAEnCmZ,GAAMd,SAAS,EAAKtY,MAAMC,MAEL,eAAnB,EAAKD,MAAMqL,QACbtN,GAAW,IAAIC,UAAQob,GAAMb,uBAAuB,IACpDta,GAAW,IAAID,UAAQob,GAAMb,uBAAuB,KACzB,YAAnB,EAAKvY,MAAMqL,SACnBtN,GAAW,IAAIC,UAAQob,GAAMZ,qBAAqB,IAClDva,GAAW,IAAID,UAAQob,GAAMZ,qBAAqB,KAEnDta,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAvIpC,EA0InBmC,aAAe,WACd4Y,GAAM1G,WAAW,EAAK1S,MAAMC,KAAK,EAAKD,MAAM6Z,YACtB,eAAnB,EAAK7Z,MAAMqL,QACbtN,GAAW,IAAIC,UAAQob,GAAMb,uBAAuB,IACpDta,GAAW,IAAID,UAAQob,GAAMb,uBAAuB,KACzB,YAAnB,EAAKvY,MAAMqL,SACnBtN,GAAW,IAAIC,UAAQob,GAAMZ,qBAAqB,IAClDva,GAAW,IAAID,UAAQob,GAAMZ,qBAAqB,KAEnDta,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAvJpC,EA0JnBuC,aAAe,WACd,IAAIqI,EAAOmQ,GAAM3S,OAAO,EAAKzG,MAAMC,OACvB,GAATgJ,IACoB,eAAnB,EAAKjJ,MAAMqL,QACbtN,GAAW,IAAIC,UAAQob,GAAMb,uBAAuB,IACpDta,GAAW,IAAID,UAAQob,GAAMb,uBAAuB,KACzB,YAAnB,EAAKvY,MAAMqL,SACnBtN,GAAW,IAAIC,UAAQob,GAAMZ,qBAAqB,IAClDva,GAAW,IAAID,UAAQob,GAAMZ,qBAAqB,KAEnDva,GAAS4C,IAAI,CAACzD,KAAMF,SAAS+L,GAAStO,GAAIuC,SAAS+L,GAAQtK,MAAM,CAACA,MAAM,cAEzET,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA1KpC,EA6KnB0C,eAAiB,WAChB,IACMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,wBAAtBmB,EAASE,UAAoC,CAChD,IAAK,IAAIxE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAAK,CAC/C,IAAIwb,EAAQ,GACZ,GAAuC,GAApClX,EAASvD,QAAQf,GAAGwb,QAAQ9W,OAC9B,IAAI,IAAI4F,EAAE,EAAGA,EAAEhG,EAASvD,QAAQf,GAAGwb,QAAQ9W,OAAQ4F,IAAI,CACtDhL,QAAQC,IAAI,SAAS+E,EAASvD,QAAQf,GAAGwb,QAAQlR,GAAG8S,QACpD9d,QAAQC,IAAI,SAAS+E,EAASvD,QAAQf,GAAGwb,QAAQlR,GAAG+Q,WACpD,IAAIgC,EAAK/Y,EAASvD,QAAQf,GAAGwb,QAAQlR,GAAG8S,OACpCE,EAAKhZ,EAASvD,QAAQf,GAAGwb,QAAQlR,GAAG+Q,UACxCG,EAAQpb,KAAK,CAACid,EAAKC,IAGrBZ,GAAMnB,SAASjX,EAASvD,QAAQf,GAAGud,QAAQ/B,GAExB,kBAAjBlX,EAASG,QACXpD,GAAW,IAAIC,UAAQob,GAAMZ,qBAAqB,IAClDva,GAAW,IAAID,UAAQob,GAAMZ,qBAAqB,MAElDza,GAAW,IAAIC,UAAQob,GAAMb,uBAAuB,IACpDta,GAAW,IAAID,UAAQob,GAAMb,uBAAuB,KAEzB,UAAzBvX,EAASkZ,gBACXjQ,GAAY,IAAIjM,UAAQob,GAAMT,mBAAmB,IACjDzO,GAAY,IAAIlM,UAAQob,GAAMT,mBAAmB,MAEjD1O,GAAY,IAAIjM,UAAQob,GAAMR,kBAAkB,IAChD1O,GAAY,IAAIlM,UAAQob,GAAMR,kBAAkB,KAEjD1a,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERkM,GAAQ,CACPhM,MAAO8L,GACP/J,MAAOgK,IAER,EAAK/J,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,IACtD,EAAK8B,QAAU,IAAIC,UAAQ,EAAK8K,QAAQ5K,QAAS6J,GAAOS,SAGxDvJ,MAAM,kEAzNW,EA6NnB8Y,qBAAuB,WACtB,IAAM5Y,EAAUC,SAASC,cAAc,KACnCC,EAAY0X,GAAMH,mBAAmB,EAAKjZ,MAAMqL,QAC9C1J,EAAO,IAAIC,KAAK,CAACF,IACvBH,EAAQrH,KAAO2H,IAAIC,gBAAgBH,GAChCJ,EAAQQ,SAAW,aACnBP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAQW,QACRb,MAAM,sBArOS,EAuOnB+Y,oBAAsB,WACrB,IAAM7Y,EAAUC,SAASC,cAAc,KACnCC,EAAY0X,GAAMD,iBAAiB,EAAKnZ,MAAMqL,QAC5C1J,EAAO,IAAIC,KAAK,CAACF,IACvBH,EAAQrH,KAAO2H,IAAIC,gBAAgBH,GAChCJ,EAAQQ,SAAW,aACnBP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAQW,QACRb,MAAM,sBA7OT,EAAKrB,MAAQ,CACZqL,OAAQ,cACRkO,OAAQ,GACRC,MAAO,GACPzB,UAAW,GACXD,OAAQ,GACRJ,IAAK,GACL2C,OAAQ,GACRpa,KAAM,GACN4Z,WAAY,GACZpZ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAGZ,EAAKM,QAAU,GACjB,EAAKoL,SAAW,GACd,EAAKlL,OAAS8B,sBACd,EAAK+I,QAAU/I,sBACjB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBArBP,E,qDAwBnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,gCAEvD,WACCpD,KAAKsQ,SAAW,IAAInL,UAAQnF,KAAKiQ,QAAQ5K,QAAS6J,GAAOS,M,+BAG1D,SAAkB1L,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAgNX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,kBAAkBtI,GAAG,aAAa2G,MAAO7F,KAAK+E,MAAMuZ,OAAQ7W,SAAUzH,KAAKmH,sBAEpJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,QAAQ3F,UAAU,eAAewI,YAAY,uBAAuBtI,GAAG,gBAAgB2G,MAAO7F,KAAK+E,MAAMwZ,MAAO9W,SAAUzH,KAAKmH,sBAE1J,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,YAAY3F,UAAU,eAAewI,YAAY,qBAAqBtI,GAAG,gBAAgB2G,MAAO7F,KAAK+E,MAAM+X,UAAWrV,SAAUzH,KAAKmH,sBAEhK,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK0e,uBAAtE,8BAED,qBAAKrf,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+e,eAAtE,gCAGF,qBAAK1f,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,aAAa3F,UAAU,eAAewI,YAAY,6BAA6BtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM6Z,WAAYnX,SAAUzH,KAAKmH,sBAEpK,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,yBAAQC,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,cAAcyI,SAAUzH,KAAKmH,kBAA3E,UACO,wBAAQtB,MAAM,cAAd,yBACA,wBAAQA,MAAM,WAAd,2BAGR,qBAAK7G,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,qBAE5D,qBAAKhF,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgf,gBAAtE,iCAGF,qBAAK3f,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,+BAED,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,gCAED,qBAAKtG,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,8BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK4F,gBAArE,kCAED,qBAAKvG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,oBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAKuf,wBAAlE,8BAED,qBAAKlgB,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAKwf,uBAAlE,gCAIF,qBAAKngB,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK6e,kBAAlE,wBAED,qBAAKxf,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,kBAAkBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM8X,OAAQpV,SAAUzH,KAAKmH,sBAEjJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,MAAM3F,UAAU,eAAewI,YAAY,eAAetI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM0X,IAAKhV,SAAUzH,KAAKmH,sBAExI,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMqa,OAAQ3X,SAAUzH,KAAKmH,sBAE/I,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK8e,kBAAlE,2BAGF,qBAAKzf,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKA,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,SAC3C,qBAAKpG,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKiQ,iB,GAzXfhI,aCjD3BkW,GAAQ,IAAI9B,GACZvZ,GAAW,IAAIC,UAAQ,IACvBC,GAAW,IAAID,UAAQ,IACvBiM,GAAY,IAAIjM,UAAQ,IACxBkM,GAAY,IAAIlM,UAAQ,IAGxBE,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAEHkM,GAAQ,CACXhM,MAAOJ,GACPK,KAAMH,IAEHI,GAAU,CACbF,MAAM,CACLiM,MAAO,MACJC,OAAQ,GACRC,gBAAiB,CACfC,QAAS,KAER7L,YAAa,IAEjB8L,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cAIjBC,GAAW,CACdzM,MAAM,CACLiM,MAAO,MACJC,OAAQ,GACRC,gBAAiB,CACfC,QAAS,KAER7L,YAAa,IAEjB8L,OAAO,CACJC,aAAc,CACZC,UAAW,KACXC,WAAY,cAsYJ2P,G,kDA9XhB,WAAYtb,GAAQ,IAAD,8BAClB,cAAMA,IAsCPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA5CvC,EAgDnBwZ,oBAAoB,WACnBF,GAAMvB,cAAc,EAAK7X,MAAMuZ,OAAO,EAAKvZ,MAAMwZ,MAAM,EAAKxZ,MAAM+X,WAC5C,eAAnB,EAAK/X,MAAMqL,QACbtN,GAAW,IAAIC,UAAQob,GAAMb,uBAAuB,IACpDta,GAAW,IAAID,UAAQob,GAAMb,uBAAuB,KACzB,YAAnB,EAAKvY,MAAMqL,SACnBtN,GAAW,IAAIC,UAAQob,GAAMZ,qBAAqB,IAClDva,GAAW,IAAID,UAAQob,GAAMZ,qBAAqB,KAEnDta,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA7DpC,EA+DnBob,eAAe,aA/DI,EAkEnBC,eAAe,aAlEI,EAsEnB3Z,UAAY,WACX,IAAI6J,GAAW,EACXC,EAAS3M,SAAS,EAAK8C,MAAMC,MAC9B6J,MAAMD,KACRD,GAAS,GAEG,GAAVA,EACFwP,GAAMnB,SAAS/a,SAAS,EAAK8C,MAAMC,MAAM,IAEzCmZ,GAAMnB,SAAS,EAAKjY,MAAMC,KAAK,IAEV,eAAnB,EAAKD,MAAMqL,QACbtN,GAAW,IAAIC,UAAQob,GAAMb,uBAAuB,IACpDta,GAAW,IAAID,UAAQob,GAAMb,uBAAuB,KACzB,YAAnB,EAAKvY,MAAMqL,SACnBtN,GAAW,IAAIC,UAAQob,GAAMZ,qBAAqB,IAClDva,GAAW,IAAID,UAAQob,GAAMZ,qBAAqB,KAEnDta,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA5FpC,EA8FnBsb,YAAY,WACX1P,GAAY,IAAIjM,UAAQob,GAAMR,kBAAkB,IAChD1O,GAAY,IAAIlM,UAAQob,GAAMR,kBAAkB,IAChDzO,GAAQ,CACPhM,MAAO8L,GACP/J,MAAOgK,IAER,EAAK/J,QAAU,IAAIC,UAAQ,EAAK8K,QAAQ5K,QAAS6J,GAAOS,KArGtC,EAuGnBgP,aAAa,WACZ3P,GAAY,IAAIjM,UAAQob,GAAMT,mBAAmB,IACjDzO,GAAY,IAAIlM,UAAQob,GAAMT,mBAAmB,IACjDxO,GAAQ,CACPhM,MAAO8L,GACP/J,MAAOgK,IAER,EAAK/J,QAAU,IAAIC,UAAQ,EAAK8K,QAAQ5K,QAAS6J,GAAOS,KA9GtC,EAiHnBrK,aAAe,WACd,IAAIqJ,GAAW,EACXC,EAAS3M,SAAS,EAAK8C,MAAMC,MAC9B6J,MAAMD,KACRD,GAAS,GAEG,GAAVA,EACFwP,GAAMd,SAASpb,SAAS,EAAK8C,MAAMC,OAEnCmZ,GAAMd,SAAS,EAAKtY,MAAMC,MAEL,eAAnB,EAAKD,MAAMqL,QACbtN,GAAW,IAAIC,UAAQob,GAAMb,uBAAuB,IACpDta,GAAW,IAAID,UAAQob,GAAMb,uBAAuB,KACzB,YAAnB,EAAKvY,MAAMqL,SACnBtN,GAAW,IAAIC,UAAQob,GAAMZ,qBAAqB,IAClDva,GAAW,IAAID,UAAQob,GAAMZ,qBAAqB,KAEnDta,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAvIpC,EA0InBmC,aAAe,WACd4Y,GAAM1G,WAAW,EAAK1S,MAAMC,KAAK,EAAKD,MAAM6Z,YACtB,eAAnB,EAAK7Z,MAAMqL,QACbtN,GAAW,IAAIC,UAAQob,GAAMb,uBAAuB,IACpDta,GAAW,IAAID,UAAQob,GAAMb,uBAAuB,KACzB,YAAnB,EAAKvY,MAAMqL,SACnBtN,GAAW,IAAIC,UAAQob,GAAMZ,qBAAqB,IAClDva,GAAW,IAAID,UAAQob,GAAMZ,qBAAqB,KAEnDta,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAvJpC,EA0JnBuC,aAAe,WACd,IAAIqI,EAAOmQ,GAAM3S,OAAO,EAAKzG,MAAMC,OACvB,GAATgJ,IACoB,eAAnB,EAAKjJ,MAAMqL,QACbtN,GAAW,IAAIC,UAAQob,GAAMb,uBAAuB,IACpDta,GAAW,IAAID,UAAQob,GAAMb,uBAAuB,KACzB,YAAnB,EAAKvY,MAAMqL,SACnBtN,GAAW,IAAIC,UAAQob,GAAMZ,qBAAqB,IAClDva,GAAW,IAAID,UAAQob,GAAMZ,qBAAqB,KAEnDva,GAAS4C,IAAI,CAACzD,KAAMF,SAAS+L,GAAStO,GAAIuC,SAAS+L,GAAQtK,MAAM,CAACA,MAAM,cAEzET,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAER,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KA1KpC,EA6KnB0C,eAAiB,WAChB,IACMC,EAAWrD,KAAKsD,MAAM,EAAKjB,MAAMH,aAEvC,GAA0B,wBAAtBmB,EAASE,UAAoC,CAChD,IAAK,IAAIxE,EAAE,EAAGA,EAAIsE,EAASvD,QAAQ2D,OAAQ1E,IAAK,CAC/C,IAAIwb,EAAQ,GACZ,GAAuC,GAApClX,EAASvD,QAAQf,GAAGwb,QAAQ9W,OAC9B,IAAI,IAAI4F,EAAE,EAAGA,EAAEhG,EAASvD,QAAQf,GAAGwb,QAAQ9W,OAAQ4F,IAAI,CACtDhL,QAAQC,IAAI,SAAS+E,EAASvD,QAAQf,GAAGwb,QAAQlR,GAAG8S,QACpD9d,QAAQC,IAAI,SAAS+E,EAASvD,QAAQf,GAAGwb,QAAQlR,GAAG+Q,WACpD,IAAIgC,EAAK/Y,EAASvD,QAAQf,GAAGwb,QAAQlR,GAAG8S,OACpCE,EAAKhZ,EAASvD,QAAQf,GAAGwb,QAAQlR,GAAG+Q,UACxCG,EAAQpb,KAAK,CAACid,EAAKC,IAGrBZ,GAAMnB,SAASjX,EAASvD,QAAQf,GAAGud,QAAQ/B,GAExB,kBAAjBlX,EAASG,QACXpD,GAAW,IAAIC,UAAQob,GAAMZ,qBAAqB,IAClDva,GAAW,IAAID,UAAQob,GAAMZ,qBAAqB,MAElDza,GAAW,IAAIC,UAAQob,GAAMb,uBAAuB,IACpDta,GAAW,IAAID,UAAQob,GAAMb,uBAAuB,KAEzB,UAAzBvX,EAASkZ,gBACXjQ,GAAY,IAAIjM,UAAQob,GAAMT,mBAAmB,IACjDzO,GAAY,IAAIlM,UAAQob,GAAMT,mBAAmB,MAEjD1O,GAAY,IAAIjM,UAAQob,GAAMR,kBAAkB,IAChD1O,GAAY,IAAIlM,UAAQob,GAAMR,kBAAkB,KAEjD1a,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAERkM,GAAQ,CACPhM,MAAO8L,GACP/J,MAAOgK,IAER,EAAK/J,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,IACtD,EAAK8B,QAAU,IAAIC,UAAQ,EAAK8K,QAAQ5K,QAAS6J,GAAOS,SAGxDvJ,MAAM,kEAzNW,EA6NnB8Y,qBAAuB,WACtB,IAAM5Y,EAAUC,SAASC,cAAc,KACnCC,EAAY0X,GAAMH,mBAAmB,EAAKjZ,MAAMqL,QAC9C1J,EAAO,IAAIC,KAAK,CAACF,IACvBH,EAAQrH,KAAO2H,IAAIC,gBAAgBH,GAChCJ,EAAQQ,SAAW,aACnBP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAQW,QACRb,MAAM,sBArOS,EAuOnB+Y,oBAAsB,WACrB,IAAM7Y,EAAUC,SAASC,cAAc,KACnCC,EAAY0X,GAAMD,iBAAiB,EAAKnZ,MAAMqL,QAC5C1J,EAAO,IAAIC,KAAK,CAACF,IACvBH,EAAQrH,KAAO2H,IAAIC,gBAAgBH,GAChCJ,EAAQQ,SAAW,aACnBP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAQW,QACRb,MAAM,sBA7OT,EAAKrB,MAAQ,CACZqL,OAAQ,cACRkO,OAAQ,GACRC,MAAO,GACPzB,UAAW,GACXD,OAAQ,GACRJ,IAAK,GACL2C,OAAQ,GACRpa,KAAM,GACN4Z,WAAY,GACZpZ,iBAAkB,GAClBd,SAAU,GACVE,YAAa,IAGZ,EAAKM,QAAU,GACjB,EAAKoL,SAAW,GACd,EAAKlL,OAAS8B,sBACd,EAAK+I,QAAU/I,sBACjB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBArBP,E,qDAwBnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,gCAEvD,WACCpD,KAAKsQ,SAAW,IAAInL,UAAQnF,KAAKiQ,QAAQ5K,QAAS6J,GAAOS,M,+BAG1D,SAAkB1L,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAgNX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,kBAAkBtI,GAAG,aAAa2G,MAAO7F,KAAK+E,MAAMuZ,OAAQ7W,SAAUzH,KAAKmH,sBAEpJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,QAAQ3F,UAAU,eAAewI,YAAY,uBAAuBtI,GAAG,gBAAgB2G,MAAO7F,KAAK+E,MAAMwZ,MAAO9W,SAAUzH,KAAKmH,sBAE1J,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,SAAS5C,KAAK,YAAY3F,UAAU,eAAewI,YAAY,qBAAqBtI,GAAG,gBAAgB2G,MAAO7F,KAAK+E,MAAM+X,UAAWrV,SAAUzH,KAAKmH,sBAEhK,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK0e,uBAAtE,8BAED,qBAAKrf,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+e,eAAtE,gCAGF,qBAAK1f,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,aAAa3F,UAAU,eAAewI,YAAY,6BAA6BtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM6Z,WAAYnX,SAAUzH,KAAKmH,sBAEpK,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,yBAAQC,KAAK,SAAS5C,KAAK,SAAS3F,UAAU,cAAcyI,SAAUzH,KAAKmH,kBAA3E,UACO,wBAAQtB,MAAM,cAAd,yBACA,wBAAQA,MAAM,WAAd,2BAGR,qBAAK7G,UAAU,WAAf,SACC,uBAAOA,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,qBAE5D,qBAAKhF,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgf,gBAAtE,iCAGF,qBAAK3f,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAInB,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKmF,aAAtE,+BAED,qBAAK9F,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK2F,gBAArE,gCAED,qBAAKtG,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKgG,gBAAtE,8BAED,qBAAK3G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,iBAAiBW,QAAS,kBAAM,EAAK4F,gBAArE,kCAED,qBAAKvG,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,oBAED,qBAAK9G,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAKuf,wBAAlE,8BAED,qBAAKlgB,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAKwf,uBAAlE,gCAIF,qBAAKngB,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK6e,kBAAlE,wBAED,qBAAKxf,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,kBAAkBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM8X,OAAQpV,SAAUzH,KAAKmH,sBAEjJ,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,MAAM3F,UAAU,eAAewI,YAAY,eAAetI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM0X,IAAKhV,SAAUzH,KAAKmH,sBAExI,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOC,KAAK,OAAO5C,KAAK,SAAS3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMqa,OAAQ3X,SAAUzH,KAAKmH,sBAE/I,qBAAKnI,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,wBAAQC,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK8e,kBAAlE,2BAGF,qBAAKzf,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKA,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,SAC3C,qBAAKpG,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKiQ,iB,GAzXnBhI,aChDvBqX,GAAgB,ICFnB,aAAc,IAAD,gCAUbnE,OAAS,SAACoE,EAAOC,EAAKC,GACrB,EAAKD,IAAMA,EACX,EAAKC,MAAQA,EAMb,IALA,IAAI3W,EAAOyW,EAAMpZ,OACb1E,EAAI,EAIFA,EAAEqH,GAAK,CACZ,GAAwC,iBAA9B7G,SAASsd,EAAMlE,OAAO5Z,KAAoB,GAAGQ,SAASsd,EAAMlE,OAAO5Z,IAAI,CAChF,IAAIie,EAAU,EAAKC,UAAU1d,SAASsd,EAAMlE,OAAO5Z,KAEnD,GAAIiS,OAAOgM,GAASvZ,OAAS,EAAE,CAI9B,IAHA,IAAIyZ,EAAa,GACbrX,EAAO,EAAImL,OAAOgM,GAASvZ,OAC3B4F,EAAI,EACFA,EAAExD,GACPqX,GAAc,IACd7T,IAED,EAAK2T,QAAQ7d,KAAK6R,OAAOkM,GAAcF,QAEvC,EAAKA,QAAQ7d,KAAK6d,QAGd,GAA8B,iBAApBH,EAAMlE,OAAO5Z,GAAgB,CAG5C,IAFIie,EAAU,EAAKG,QAAQnM,OAAO6L,EAAMlE,OAAO5Z,MAEpC0E,OAAS,EAAE,CACrB,IAAIyZ,EAAa,GACbrX,EAAO,EAAImX,EAAQvZ,OAEvB,IADI4F,EAAI,EACFA,EAAExD,GACPqX,GAAc,IACd7T,IAED,EAAK2T,QAAQ7d,KAAK6R,OAAOkM,GAAcF,QAEvC,EAAKA,QAAQ7d,KAAK6d,GAGpBje,IAKD,IAFAV,QAAQC,IAAI,EAAK0e,SACjBje,EAAI,EACEA,EAAE,EAAKie,QAAQvZ,QAAO,CAC3B,GAAsB,MAAnB,EAAKuZ,QAAQje,EAAE,GAAS,CAC1B,IAAI8G,EAAO,EAAKiX,IAChB,EAAKzB,MAAM,EAAK2B,QAAQje,GAAG,EAAKie,QAAQje,EAAE,GAAI,GAC9C,EAAK+d,IAAMjX,EACX9G,IAEDA,MA/DW,KAsEbsc,MAAQ,SAAC+B,EAAKC,EAAOC,GACpB,GAAGA,GAAG,EAAKP,MAAM,CAEhB,EAAKlE,MAAM1Z,KAAK,CAAC9B,KAAK,IAAI2T,OAAOsM,EAAE,GAAIvE,MAAM,EAAKA,QAClD,EAAKF,MAAM1Z,KAAK,CAAC9B,KAAK+f,EAAMrE,MAAM,EAAKA,QACvC,EAAKF,MAAM1Z,KAAK,CAAC9B,KAAKggB,EAAOtE,MAAM,EAAKA,QACxC,EAAKA,QAEL,IAAImE,EAAc,GACdne,EAAI,EAMR,IAJA,EAAK8Z,MAAM1Z,KAAK,CAAC9B,KAAK,IAAI2T,OAAOsM,EAAE,GAAIvE,MAAM,EAAKA,QAClD,EAAKF,MAAM1Z,KAAK,CAAC9B,KAAK,EAAKyf,IAAK/D,MAAM,EAAKA,QAC3C,EAAKA,QAECha,EAAE,GAAE,CAET,IAAIwe,EAAIF,EAAM1E,OAAO5Z,GACjBsU,EAAI,EAAKyJ,IAAInE,OAAO5Z,GACpBoE,EAAQ,EAEJ,GAALoa,GAAe,GAALlK,IAAQlQ,EAAQ,GACrB,GAALoa,GAAe,GAALlK,IAAQlQ,EAAQ,GACrB,GAALoa,GAAe,GAALlK,IAAQlQ,EAAQ,GACrB,GAALoa,GAAe,GAALlK,IAAQlQ,EAAQ,GAE7B+Z,GAAclM,OAAO7N,GACrBpE,IAMD,EAAK8Z,MAAM1Z,KAAK,CAAC9B,KAAK,IAAI2T,OAAOsM,EAAE,GAAIvE,MAAM,EAAKA,QAClD,EAAKF,MAAM1Z,KAAK,CAAC9B,KAAK6f,EAAYnE,MAAM,EAAKA,QAC7C,EAAKA,QACL,EAAKF,MAAM1Z,KAAK,CAAC9B,KAAK,IAAI2T,OAAOsM,EAAE,GAAIvE,MAAM,EAAKA,QAClD,EAAKF,MAAM1Z,KAAK,CAAC9B,KAAK+f,EAAMrE,MAAM,EAAKA,QACvC,EAAKA,QAEL,EAAKyE,gBACL,IAAI3X,EAAO,GAGX,IAFI9G,EAAI,EAEFA,EAAE,GAAE,CAET,IAAI0e,EAAIP,EAAWvE,OAAO5Z,GACtB2e,EAAIN,EAAKzE,OAAO5Z,GAChBoE,EAAQ,EAEJ,GAALsa,GAAe,GAALC,IAAQva,EAAQ,GACrB,GAALsa,GAAe,GAALC,IAAQva,EAAQ,GACrB,GAALsa,GAAe,GAALC,IAAQva,EAAQ,GACrB,GAALsa,GAAe,GAALC,IAAQva,EAAQ,GAE7B0C,GAAQmL,OAAO7N,GACfpE,IAOD,EAAKsc,MAAMgC,EAAMxX,EAAKyX,EAAE,QAKxB,EAAKzE,MAAM1Z,KAAK,CAAC9B,KAAK,IAAI2T,OAAOsM,EAAE,GAAIvE,MAAM,EAAKA,QAClD,EAAKF,MAAM1Z,KAAK,CAAC9B,KAAK+f,EAAMrE,MAAM,EAAKA,QACvC,EAAKF,MAAM1Z,KAAK,CAAC9B,KAAKggB,EAAOtE,MAAM,EAAKA,QACxC,EAAKC,UAAU7Z,KAAKie,GACpB,EAAKpE,UAAU7Z,KAAKke,IA9IT,KAmJbG,cAAgB,WAGf,IAFA,IAAIN,EAAa,GACbne,EAAI,EACFA,EAAE,GAAE,CACT,GAAM,GAAHA,EAAK,CACP,IAAI8G,EAAO,EAAKiX,IAAInE,OAAO5Z,GAC3Bme,GAAclM,OAAOnL,GAEtB9G,IAEDme,GAAclM,OAAO,EAAK8L,IAAInE,OAAO,IACrC,EAAKmE,IAAM9L,OAAOkM,IA9JN,KAiKbD,UAAY,SAAC/Q,GAEZ,IADA,IAAI8Q,EAAU,GACR9Q,EAAO,GACZ8Q,EAAQ7d,KAAK+M,EAAS,GACtBA,EAASuH,KAAKkK,MAAMzR,EAAO,GAG5B,OADA8Q,EAAQ7d,KAAK+M,GACN3M,SAASyd,EAAQY,UAAUC,KAAK,MAxK3B,KA4KbV,QAAU,SAAChL,GAIV,IAHA,IAAI/L,EAAO+L,EAAO1O,OACd1E,EAAI,EACJme,EAAa,GACXne,EAAEqH,GAAK,CACZ,IAAI4W,EAAU7K,EAAOC,WAAWrT,GAChCme,GAA0BlM,OAAO,EAAKiM,UAAUD,IAChDje,IAEF,OAAOme,GArLM,KAyLbje,gBAAkB,WAEX,IAAIC,EAAM,GACNH,EAAI,EACJua,EAAS,EAEb,IADAva,EAAE,EACIA,EAAE,EAAK8Z,MAAMpV,QAElBvE,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM4R,OAAO,EAAK6H,MAAM9Z,GAAG1B,MAAOwO,MAAM,EAAKgN,MAAM9Z,GAAGga,QAE3Eha,IACAua,IAID,IADAva,EAAI,EACEA,EAAE,EAAKia,UAAUvV,QAC5BvE,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM4R,OAAO,EAAKgI,UAAUja,IAAK8M,MAAM,EAAKkN,MAAM,IACjEha,IACAua,IAID,OAAOpa,GA/MD,KAoNVG,gBAAkB,WAIjB,IAHA,IAAIN,EAAI,EACJG,EAAM,GACNoa,EAAS,EACPva,EAAE,EAAK8Z,MAAMpV,QACK,MAAjB,EAAKoV,MAAM9Z,EAAE,IAAY,EAAK8Z,MAAM9Z,EAAE,GAAGga,OAAS,EAAKF,MAAM9Z,GAAGga,OAClE7Z,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAE7C,MAAjB,EAAKmZ,MAAM9Z,EAAE,IAAY,EAAK8Z,MAAM9Z,EAAE,GAAGga,OAAS,EAAKF,MAAM9Z,GAAGga,QAEhC,KAAlC,EAAKF,MAAM9Z,EAAE,GAAG1B,KAAKsb,OAAO,IAA+C,KAAlC,EAAKE,MAAM9Z,EAAE,GAAG1B,KAAKsb,OAAO,IAA+C,KAAlC,EAAKE,MAAM9Z,EAAE,GAAG1B,KAAKsb,OAAO,GAC5GzZ,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAC1B,KAAlC,EAAKmZ,MAAM9Z,EAAE,GAAG1B,KAAKsb,OAAO,IACpCzZ,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,QAG/DX,IACAua,IAKD,IADCva,EAAI,EACCA,EAAE,EAAKia,UAAUvV,QACE,MAArB,EAAKuV,UAAUja,EAAE,IACzBG,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAE9DX,IACGua,IAID,OAAOpa,GAnPD,KAuPVS,aAAe,WAKd,IAHA,IAAIqM,EAAM,GAENjN,EAAI,EACFA,EAAE,EAAKia,UAAUvV,QACtBuI,GAAQgF,OAAO,EAAKgI,UAAUja,IAAM,IACpCA,IAGD,OADAV,QAAQC,IAAI0N,GACLA,GAhQV1O,KAAKub,MAAQ,GACbvb,KAAK0f,QAAU,GACf1f,KAAKwf,IAAM,KACXxf,KAAKyb,MAAQ,EACbzb,KAAKyf,MAAQ,KACbzf,KAAK0b,UAAY,IDHf5Y,GAAW,IAAIC,UAAQuc,GAAc3d,mBACrCqB,GAAW,IAAID,UAAQuc,GAAcvd,mBAGrCkB,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAEHI,GAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,OAAK,IACJiM,MAAO,MACD1L,YAAa,IAFf,uBAGS,OAHT,uBAIS,CACHE,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,aATtB,IAaF4L,OAAO,CACTC,aAAc,CACZC,UAAW,QA0JE+Q,G,kDAlJhB,WAAYzc,GAAQ,IAAD,8BAClB,cAAMA,IAyBPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA/BvC,EAmCnBiB,eAAiB,WAEhB,IAAMqW,EAAa,EAAKpX,MAAMH,YAC9B7D,QAAQC,IAAImb,GAEZmD,GAAcnE,OAAOzH,OAAOyI,GAAazI,OAAO,EAAK3O,MAAMya,KAAMvd,SAAS,EAAK8C,MAAM0a,QACrF3c,GAAW,IAAIC,UAAQuc,GAAc3d,mBACrCqB,GAAW,IAAID,UAAQuc,GAAcvd,mBACrCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAhDpC,EAuDnBgZ,aAAe,WACM,IAAjB,EAAKrX,MAAMC,MACbsa,GAAcnE,OAAOzH,OAAO,EAAK3O,MAAMC,MAAO0O,OAAO,EAAK3O,MAAMya,KAAMvd,SAAS,EAAK8C,MAAM0a,QAC1F3c,GAAW,IAAIC,UAAQuc,GAAc3d,mBACpCqB,GAAW,IAAID,UAAQuc,GAAcvd,mBACrCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAEvDgD,MAAM,yCAnEW,EAyEnBC,eAAiB,WAChB,IAAMC,EAAUC,SAASC,cAAc,KACnCC,EAAY6Y,GAAcjd,eACxBqE,EAAO,IAAIC,KAAK,CAACF,IACvBH,EAAQrH,KAAO2H,IAAIC,gBAAgBH,GAChCJ,EAAQQ,SAAW,cACnBP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAQW,QACRb,MAAM,sBA/ET,EAAKrB,MAAQ,CACZC,KAAM,GACNya,MAAO,GACPD,IAAK,GACL9a,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAXP,E,qDAcnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBAgEX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOtI,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,qBAE5D,qBAAKhF,UAAU,aAEf,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,uBAAOuI,KAAK,OAAO5C,KAAK,MAAM3F,UAAU,eAAewI,YAAY,OAAOtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMya,IAAK/X,SAAUzH,KAAKmH,sBAEhI,qBAAKnI,UAAU,WAAf,SACC,uBAAOuI,KAAK,OAAO5C,KAAK,QAAQ3F,UAAU,eAAewI,YAAY,SAAStI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAM0a,MAAOhY,SAAUzH,KAAKmH,sBAEtI,qBAAKnI,UAAU,WAAf,SACC,uBAAOuI,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKyc,gBAAtE,yBAED,qBAAKpd,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAGF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GA7IxB6C,aErClBwY,GAAY,I,WCFZ,aAAc,IAAD,gCAUbtF,OAAS,SAACtG,EAAS2K,GAEf,EAAKkB,GAAK,GACV,IAAI3gB,GAAQ8U,EAAS,IAAI8L,MAAM,IAC/B,EAAKC,OAAS,GACd,EAAKC,MAAQ,EAGb,IAFA,IAAIpf,EAAI,EACJqf,EAAQtB,EACN/d,EAAE1B,EAAKoG,QACkB,GAAxB,EAAK3E,OAAOzB,EAAK0B,MAChB,EAAKmf,OAAO/e,KAAK,CAAC3C,GAAGwU,OAAO3T,EAAK0B,IAAKsf,MAAM9e,SAAS,EAAK4e,SAC1D,EAAKA,SAETpf,IAEJ,IAAIuf,EAAS,GACTjL,EAAIhW,EAAK,GACb,EAAKwb,MAAM1Z,KAAK,CAACof,EAAE,IAAKlL,EAAEA,EAAGmL,GAAGxN,OAAOqC,GAAIzT,IAAI,IAAK0e,OAAO,IAAKvF,MAAM,EAAKA,QAC3E,EAAKA,QACL,IAAIwF,EAAIlL,EAGR,IAAQtU,EAAE,EAAEA,EAAE1B,EAAKoG,OAAO1E,IACtBsU,EAAIhW,EAAK0B,GAE+B,GAArC,EAAK0f,UAAUzN,OAAOuN,GAAGvN,OAAOqC,KAC/B,EAAKwF,MAAM1Z,KAAK,CAACof,EAAEA,EAAGlL,EAAEA,EAAGmL,GAAGxN,OAAOuN,EAAElL,GAAIzT,IAAIoR,OAAOuN,EAAElL,GAAG,IAAI,EAAK8K,MAAMG,OAAOF,EAAMrF,MAAM,EAAKA,QAClG,EAAKA,QAELuF,EAAOnf,KAAKof,EAAE9a,OAAS,EAAI,EAAKua,GAAGO,GAAKA,EAAEnM,WAAW,IACrD,EAAK8L,OAAO/e,KAAK,CAAC3C,GAAGwU,OAAOuN,GAAGvN,OAAOqC,GAAIgL,MAAM9e,SAAS,EAAK4e,SAC9D,EAAKH,GAAGhN,OAAOuN,GAAGvN,OAAOqC,IAAM+K,EAC/B,EAAKJ,GAAG7e,KAAK,CAAC3C,GAAGwU,OAAOuN,GAAGvN,OAAOqC,GAAIgL,MAAM,EAAKF,MAAOG,OAAOF,IAC/D,EAAKD,QACLI,EAAIlL,EACJ+K,MAEA,EAAKvF,MAAM1Z,KAAK,CAACof,EAAEA,EAAGlL,EAAEA,EAAGmL,GAAGxN,OAAOuN,EAAElL,GAAIzT,IAAI,IAAK0e,OAAQ,IAAKvF,MAAM,EAAKA,QAC5E,EAAKA,QAELwF,GAAKlL,GAIb,EAAKwF,MAAM1Z,KAAK,CAACof,EAAEA,EAAGlL,EAAE,IAAKmL,GAAGxN,OAAOuN,GAAI3e,IAAI,IAAK0e,OAAQ,IAAKvF,MAAM,EAAKA,QAC5E,EAAKA,QACLuF,EAAOnf,KAAKof,EAAE9a,OAAS,EAAI,EAAKua,GAAGO,GAAKA,EAAEnM,WAAW,IAErD,IAASrT,EAAE,EAAGA,EAAEuf,EAAO7a,OAAQ1E,IAC3Buf,EAAOvf,GAAKiS,OAAO0N,aAAaJ,EAAOvf,IAI3C,OADA,EAAKia,UAAYsF,EAAOT,KAAK,IACtBS,EAAOT,KAAK,KA/DV,KAmGb/e,OAAS,SAACzB,GAEN,IADA,IAAI0B,EAAI,EACFA,EAAE,EAAKmf,OAAOza,QAAO,CACvB,GAAG,EAAKya,OAAOnf,GAAGvC,IAAMa,EACpB,OAAO,EAEX0B,IAEJ,OAAO,GA3GE,KA8Gb0f,UAAY,SAACphB,GACb,IAAI,IAAI0B,EAAE,EAAEA,EAAE,EAAKif,GAAGva,OAAO1E,IACzB,GAAG,EAAKif,GAAGjf,GAAGvC,IAAMa,EAChB,OAAO,EAGf,OAAO,GApHM,KAwHb4B,gBAAkB,WAEd,IAAIC,EAAM,GACNH,EAAI,EACJua,EAAS,EAWb,IAVApa,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM,IAAKyM,MAAM,IACtCyN,IACApa,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM,IAAKyM,MAAM,IACtCyN,IACApa,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM,KAAMyM,MAAM,IACvCyN,IACApa,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM,wBAAyByM,MAAM,IAC1DyN,IACApa,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM,SAAUyM,MAAM,IAC3CyN,IACMva,EAAE,EAAK8Z,MAAMpV,QACfvE,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM4R,OAAO,EAAK6H,MAAM9Z,GAAGwf,GAAI1S,MAAM,EAAKgN,MAAM9Z,GAAGga,QACxEO,IACApa,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM4R,OAAO,EAAK6H,MAAM9Z,GAAGsU,GAAIxH,MAAM,EAAKgN,MAAM9Z,GAAGga,QACxEO,IACApa,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM4R,OAAO,EAAK6H,MAAM9Z,GAAGyf,IAAK3S,MAAM,EAAKgN,MAAM9Z,GAAGga,QACzEO,IACApa,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM4R,OAAO,EAAK6H,MAAM9Z,GAAGa,KAAMiM,MAAM,EAAKgN,MAAM9Z,GAAGga,QAC1EO,IACApa,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM4R,OAAO,EAAK6H,MAAM9Z,GAAGuf,QAASzS,MAAM,EAAKgN,MAAM9Z,GAAGga,QAC7EO,IACAva,IAQJ,OANAG,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM,EAAK4Z,UAAWnN,MAAM,EAAKkN,QACtDO,IACyB,MAAtB,EAAKqF,iBACJzf,EAAIC,KAAK,CAAC3C,GAAG8c,EAAQla,MAAM,EAAKuf,gBAAiB9S,MAAMtM,SAAS,EAAKwZ,MAAM,KAGxE7Z,GA1JE,KA+JbG,gBAAkB,WACd,IAAIH,EAAM,GACNH,EAAI,EACJua,EAAS,EAeb,IAdApa,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChER,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChE4Z,IACApa,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChER,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChE4Z,IACApa,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChER,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChE4Z,IACApa,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChER,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChE4Z,IACApa,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChE4Z,IACMva,EAAE,EAAK8Z,MAAMpV,QAEK,MAAjB,EAAKoV,MAAM9Z,EAAE,IACZG,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChER,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChE4Z,IACApa,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChER,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChE4Z,IACApa,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChER,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChE4Z,IACApa,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChER,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChE4Z,IACApa,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChE4Z,MAGApa,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChE4Z,IACApa,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChE4Z,IACApa,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChE4Z,IACApa,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChE4Z,IACApa,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,GAAStc,GAAGuC,SAAS+Z,EAAO,GAAI5Z,OAAQ,OAChE4Z,KAEJva,IAQJ,OANAG,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,EAAO,GAAItc,GAAGuC,SAAS+Z,GAAS5Z,OAAQ,OAChE4Z,IACyB,MAAtB,EAAKqF,iBACJzf,EAAIC,KAAK,CAACM,KAAKF,SAAS+Z,EAAO,GAAItc,GAAGuC,SAAS+Z,GAAS5Z,OAAQ,OAG7DR,GAvNE,KA2NbS,aAAe,WACX,OAAOqR,OAAO,EAAKgI,YA3NnB1b,KAAK0gB,GAAK,GACV1gB,KAAK4gB,OAAS,GACd5gB,KAAK6gB,MAAQ,EACb7gB,KAAKub,MAAQ,GACbvb,KAAKyb,MAAQ,EACbzb,KAAK0b,UAAY,GACjB1b,KAAKqhB,gBAAkB,K,0CA6D3B,SAAO7B,GASH,IARA,IAOI8B,EANAC,EAAc,GACdxhB,GAFQC,KAAK0b,UAEG,IAAIiF,MAAM,IAC1BpY,EAAOxI,EAAK,GACZyhB,EAAejZ,EACfyY,EAAS,CAACzY,GACVuY,EAAQtB,EAEH/d,EAAE,EAAGA,EAAE1B,EAAKoG,OAAQ1E,IAAK,CAC9B,IAAI0H,EAAMpJ,EAAK0B,GAAGqT,WAAW,GAEzBwM,EADAnY,EAAMqW,EACKzf,EAAK0B,GAGN8f,EAAYpY,GAAOoY,EAAYpY,GAAQqY,EAAejZ,EAEpEyY,EAAOnf,KAAKyf,GACZ/Y,EAAO+Y,EAASjG,OAAO,GACvBkG,EAAYT,GAASU,EAAejZ,EACpCuY,IACAU,EAAeF,EAGnB,OADAthB,KAAK0b,UAAYsF,EAAOT,KAAK,IACtBvgB,KAAK0b,c,MDzFhB5Y,GAAW,IAAIC,UAAQ0d,GAAU9e,mBACjCqB,GAAW,IAAID,UAAQ0d,GAAU1e,mBAGjCkB,GAAO,CACVC,MAAOJ,GACPK,KAAMH,IAEHI,GAAU,CACbC,QAAS,CACRC,eAAe,EACfC,UAAW,CACVC,aAAc,MAGhBN,OAAK,IACJiM,MAAO,MACD1L,YAAa,IAFf,uBAGS,OAHT,uBAIS,CACHE,WAAY,UACZC,OAAS,UACTC,UAAW,CACPD,OAAQ,UACRD,WAAY,aATtB,IAaF4L,OAAO,CACTC,aAAc,CACZC,UAAW,QAwKEgS,G,kDAhKhB,WAAY1d,GAAQ,IAAD,8BAClB,cAAMA,IAyBPC,iBAAmB,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,WAAWL,GAClBG,EAAOG,OAAS,WACf,EAAKC,SAAS,CAACC,SAAUR,EAAKS,KAAMC,YAAaP,EAAOQ,WA/BvC,EAmCnBiB,eAAiB,WAEhB,IAAMqW,EAAa,EAAKpX,MAAMH,YAC9B7D,QAAQC,IAAImb,GAEZsE,GAAUtF,OAAOzH,OAAOyI,GAAazI,OAAO,EAAK3O,MAAMya,MACvD1c,GAAW,IAAIC,UAAQ0d,GAAU9e,mBACjCqB,GAAW,IAAID,UAAQ0d,GAAU1e,mBACjCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAhDpC,EAuDnBgZ,aAAe,WACM,IAAjB,EAAKrX,MAAMC,MACbyb,GAAUtF,OAAOzH,OAAO,EAAK3O,MAAMC,MAAO0O,OAAO,EAAK3O,MAAMya,MAC5D1c,GAAW,IAAIC,UAAQ0d,GAAU9e,mBAChCqB,GAAW,IAAID,UAAQ0d,GAAU1e,mBACjCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGR,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAEvDgD,MAAM,yCAnEW,EAyEnBsb,aAAe,WACdjB,GAAUkB,OAAOjO,OAAO,EAAK3O,MAAMya,MACnC1c,GAAW,IAAIC,UAAQ0d,GAAU9e,mBAChCqB,GAAW,IAAID,UAAQ0d,GAAU1e,mBACjCkB,GAAO,CACNC,MAAOJ,GACPmC,MAAOjC,IAGT,EAAKkC,QAAU,IAAIC,UAAQ,EAAKC,OAAOC,QAASpC,GAAMG,KAlFpC,EAsFnBiD,eAAiB,WAChB,IAAMC,EAAUC,SAASC,cAAc,KACnCC,EAAYga,GAAUpe,eACpBqE,EAAO,IAAIC,KAAK,CAACF,IACvBH,EAAQrH,KAAO2H,IAAIC,gBAAgBH,GAChCJ,EAAQQ,SAAW,UACnBP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAQW,QACRb,MAAM,sBA5FT,EAAKrB,MAAQ,CACZC,KAAM,GACNya,MAAO,GACPD,IAAK,GACL9a,SAAU,GACVE,YAAa,IAEd,EAAKM,QAAU,GACb,EAAKE,OAAS8B,sBAChB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAXP,E,qDAcnB,WACCpH,KAAKkF,QAAU,IAAIC,UAAQnF,KAAKoF,OAAOC,QAASpC,GAAMG,M,+BAGvD,SAAkBa,GACjB,MAAsBA,EAAEE,OAAjB0B,EAAP,EAAOA,MAAOlB,EAAd,EAAcA,KACd5D,QAAQC,IAAI6E,EAAOlB,GACnB3E,KAAKyE,SAAL,eACGE,EAAOkB,M,oBA6EX,WAAU,IAAD,OAGP,OACD,qCACC,qBAAK7G,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,uBAAOtI,UAAU,eAAeuI,KAAK,OAAOE,SAAUzH,KAAKgE,qBAE5D,qBAAKhF,UAAU,aAEf,qBAAKA,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,eAAe/H,QAAS,kBAAM,EAAKmG,kBAA/D,yBAED,qBAAK9G,UAAU,WAAf,SACC,uBAAOuI,KAAK,OAAO5C,KAAK,MAAM3F,UAAU,eAAewI,YAAY,OAAOtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMya,IAAK/X,SAAUzH,KAAKmH,sBAEhI,qBAAKnI,UAAU,WAAf,SACC,uBAAOuI,KAAK,OAAO5C,KAAK,OAAO3F,UAAU,eAAewI,YAAY,gBAAgBtI,GAAG,YAAY2G,MAAO7F,KAAK+E,MAAMC,KAAMyC,SAAUzH,KAAKmH,sBAE3I,qBAAKnI,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAKyc,gBAAtE,yBAGD,qBAAKpd,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASvI,UAAU,kBAAkBW,QAAS,kBAAM,EAAK+hB,gBAAtE,2BAED,qBAAK1iB,UAAU,WAAf,SACC,wBAAQuI,KAAK,SAASG,MAAM,kBAAkB/H,QAAS,kBAAM,EAAK0G,kBAAlE,0BAGF,qBAAKrH,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,uBAAOA,UAAU,0BAGnB,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,sDAED,qBAAKtI,UAAU,WAAf,SACC,uBAAOuI,KAAK,QAAQvI,UAAU,aAAa2I,IAAI,IAAIC,IAAI,KAAKC,KAAK,IAAIC,aAAa,IAAInD,KAAK,gBAE5F,qBAAK3F,UAAU,WAAWqI,MAAO,CAACC,WAAY,OAA9C,SACC,mDAGF,qBAAKtI,UAAU,QAEf,qBAAKqI,MAAO,CAACU,OAAQ,QAAYC,IAAKhI,KAAKoF,gB,GA3J5B6C,aE6BH2Z,OArCf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOtjB,KAAK,gBAAgBujB,OAAK,EAACC,UAAWzC,KAC7C,cAAC,IAAD,CAAO/gB,KAAK,oBAAoBujB,OAAK,EAACC,UAAW1D,KACjD,cAAC,IAAD,CAAO9f,KAAK,IAAIujB,OAAK,EAACC,UAAWliB,IACjC,cAAC,IAAD,CAAOtB,KAAK,eAAeujB,OAAK,EAACC,UAAW9J,KAC5C,cAAC,IAAD,CAAO1Z,KAAK,eAAeujB,OAAK,EAACC,UAAW9I,KAC5C,cAAC,IAAD,CAAO1a,KAAK,eAAeujB,OAAK,EAACC,UAAWlS,KAC5C,cAAC,IAAD,CAAOtR,KAAK,YAAYujB,OAAK,EAACC,UAAWtR,KACzC,cAAC,IAAD,CAAOlS,KAAK,4BAA4BwjB,UAAWhe,IACnD,cAAC,IAAD,CAAOxF,KAAK,2BAA2BwjB,UAAWlZ,IAClD,cAAC,IAAD,CAAOtK,KAAK,oCAAoCwjB,UAAW9Y,IAC3D,cAAC,IAAD,CAAO1K,KAAK,mCAAmCwjB,UAAWvY,KAC1D,cAAC,IAAD,CAAOjL,KAAK,QAAQwjB,UAAWlY,KAC/B,cAAC,IAAD,CAAOtL,KAAK,QAAQwjB,UAAWrX,KAC/B,cAAC,IAAD,CAAOnM,KAAK,iBAAiBwjB,UAAWnW,KACxC,cAAC,IAAD,CAAOrN,KAAK,WAAWwjB,UAAW9V,KAClC,cAAC,IAAD,CAAO1N,KAAK,aAAawjB,UAAWzV,KACpC,cAAC,IAAD,CAAO/N,KAAK,aAAawjB,UAAWtV,KACpC,cAAC,IAAD,CAAOlO,KAAK,UAAUwjB,UAAWrV,KACjC,cAAC,IAAD,CAAOnO,KAAK,OAAOwjB,UAAWnV,KAC9B,cAAC,IAAD,CAAOrO,KAAK,UAAUwjB,UAAWlV,KACjC,cAAC,IAAD,CAAOtO,KAAK,cAAcwjB,UAAWjV,KACrC,cAAC,IAAD,CAAOvO,KAAK,eAAewjB,UAAWhV,KACtC,cAAC,IAAD,CAAOxO,KAAK,kBAAkBwjB,UAAW5N,KACzC,cAAC,IAAD,CAAO5V,KAAK,aAAawjB,UAAWhH,KACpC,cAAC,IAAD,CAAOxc,KAAK,WAAWwjB,UAAW5F,KAClC,cAAC,IAAD,CAAO5d,KAAK,WAAWwjB,UAAWtB,KAClC,cAAC,IAAD,CAAOliB,KAAK,OAAOwjB,UAAWL,YCpDvBM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACL,cAAC,GAAD,IACFlc,SAASmc,eAAe,SAG1BX,O","file":"static/js/main.74154b42.chunk.js","sourcesContent":["export const MenuItemsLineales = [\r\n\t{\r\n\t\ttitle:'Lista simplemente enlazada',\r\n\t\tpath:'/Listasimplementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Lista doblemente enlazada',\r\n\t\tpath:'/Listadoblementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Lista circular simplemente enlazada',\r\n\t\tpath:'/Listacircularsimplementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Lista circular doblemente enlazada',\r\n\t\tpath:'/Listacirculardoblementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Pila',\r\n\t\tpath:'/Pila',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Cola',\r\n\t\tpath:'/Cola',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Cola de Prioridad',\r\n\t\tpath:'/Colaprioridad',\r\n\t\tcName:'dropdown-item'\r\n\t}\r\n]","export const MenuItemsOrdenamientos = [\r\n\t{\r\n\t\ttitle:'Burbuja',\r\n\t\tpath:'/Burbuja',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Seleccion',\r\n\t\tpath:'/Seleccion',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Insercion',\r\n\t\tpath:'/Insercion',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Rapido',\r\n\t\tpath:'/Rapido',\r\n\t\tcName:'dropdown-item'\r\n\t}\r\n]","export const MenuItemsArboreas = [\r\n\t{\r\n\t\ttitle:'Arbol Binario de Busqueda',\r\n\t\tpath:'/ArbolBinario',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'AVL',\r\n\t\tpath:'/AVL',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Arbol B',\r\n\t\tpath:'/Arbolb',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Arbol B+',\r\n\t\tpath:'/Arbolbplus',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Arbol de Merkle',\r\n\t\tpath:'/Arbolmerkle',\r\n\t\tcName:'dropdown-item'\r\n\t}\r\n]","export const MenuItemsCompuesta = [\r\n\t{\r\n\t\ttitle:'Matriz Dispersa',\r\n\t\tpath:'/MatrizDispersa',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Row Major(3D a 2D)',\r\n\t\tpath:'/RowMajor',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Col Major(3D a 2D)',\r\n\t\tpath:'/ColumnMajor',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Estructuras Compuestas',\r\n\t\tpath:'/Compuesta',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n]","export const MenuItemsNoLineales = [\r\n\t{\r\n\t\ttitle:'Tabla Hash Abierta',\r\n\t\tpath:'/HashAbierta',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Tabla Hash Cerrada',\r\n\t\tpath:'/HashCerrada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Recorrido y busqueda por anchura de grafos',\r\n\t\tpath:'/GrafoAnchura',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Recorrido y busqueda por profundidad de grafos',\r\n\t\tpath:'/GrafoProfundidad',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Algoritmo de Costo Uniforme',\r\n\t\tpath:'/',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Arbol de recubrimiento minimo',\r\n\t\tpath:'/',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t\r\n]","export const MenuItemsCodificacion = [\r\n\t{\r\n\t\ttitle:'Codigo Hamming',\r\n\t\tpath:'/Hamming',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Algoritmo de Huffman',\r\n\t\tpath:'/',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Algoritmo LZW',\r\n\t\tpath:'/LZW',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Cifrado Feistel',\r\n\t\tpath:'/Feistel',\r\n\t\tcName:'dropdown-item'\r\n\t},\t\r\n]","import React, { useState } from 'react';\r\nimport { MenuItemsLineales } from './MenuItemsLineales';\r\nimport { MenuItemsOrdenamientos } from './MenuItemsOrdenamientos';\r\nimport { MenuItemsArboreas } from './MenuItemsArboreas';\r\nimport { MenuItemsCompuesta } from './MenuItemsCompuesta';\r\nimport { MenuItemsNoLineales } from './MenuItemsNoLineales';\r\nimport { MenuItemsCodificacion } from './MenuItemsCodificacion';\r\nimport { Link } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\n\r\nfunction Navbar(){\r\n\tconst [click, setClick] = useState(false);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      \t\t\t<div className=\"container-fluid\">\r\n      \t\t\t\t<a className=\"navbar-brand\" href=\"./\">ESTRUCTURA DE DATOS</a>\r\n      \t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n          \t\t\t<ul className=\"navbar-nav me-auto\">\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n              \t\t\t\t<a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Estructuras Lineales</a>\r\n              \t\t\t\t<div className=\"dropdown-menu\">\r\n                \t\t\t\t{MenuItemsLineales.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n              \t\t\t\t</div>\r\n           \t\t\t\t</li>\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Ordenamientos</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsOrdenamientos.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Estructura Arboreas</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsArboreas.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">No Lineales</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsNoLineales.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Codificacion</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsCodificacion.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Compuesta</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsCompuesta.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n          \t\t\t</ul>\r\n        \t\t\t</div>\t\r\n      \t\t\t</div>\r\n      \t\t</nav>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\n\r\nexport default function Home(){\r\n\treturn (\r\n\t\t<>\t\r\n\t\t\t<table className=\"table table-hover\">\r\n  \t\t\t\t<thead>\r\n  \t\t\t\t  <tr>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t    <th scope=\"col\">\r\n  \t\t\t\t    \t<div className=\"card border-light mb-3\">\r\n  \t\t\t\t\t\t\t<div className=\"card-body\"><div className=\"page-header\"><h1>Indice de Estructura de Datos</h1></div></div>\r\n  \t\t\t\t\t\t\t<div className=\"card-body\">\r\n  \t\t\t\t\t\t\t  <ul>\r\n        \t  \t\t\t\t\t<li><h4>Estuctura Lineales</h4></li>\r\n        \t  \t\t\t\t\t<ul>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listasimplementeenlazada\"><h5>Lista simplemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listadoblementeenlazada\"><h5>Lista doblemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listacircularsimplementeenlazada\"><h5>Lista circular simplemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listacirculardoblementeenlazada\"><h5>Lista circular doblemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Pila\"><h5>Pila</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Cola\"><h5>Cola</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Colaprioridad\"><h5>Cola de prioridad</h5></a></li>  \r\n        \t  \t\t\t\t\t</ul>\r\n        \t  \t\t\t\t\t<li><h4>Ordenamientos</h4></li>\r\n        \t  \t\t\t\t\t<ul>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Burbuja\"><h5>Burbuja</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Seleccion\"><h5>Selección</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Insercion\"><h5>Inserción</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Rapido\"><h5>Rápido</h5></a></li>  \r\n        \t  \t\t\t\t\t</ul>\r\n        \t  \t\t\t\t\t<li><h4>Estructuras Árboreas</h4></li>\r\n        \t  \t\t\t\t\t<ul>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolBinario\"><h5>Árbol binario de búsqueda</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./AVL\"><h5>AVL</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolB\"><h5>Árbol B</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolBPlus\"><h5>Árbol B+</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolMerkle\"><h5>Árbol de Merkle</h5></a></li>  \r\n        \t  \t\t\t\t\t</ul>\r\n        \t\t\t\t\t  </ul>\r\n  \t\t\t\t\t\t\t</div>\r\n        \t\t\t\t</div>\r\n  \t\t\t\t    </th>\r\n  \t\t\t\t    <th scope=\"col\"></th>\r\n  \t\t\t\t    <th scope=\"col\"></th>\r\n  \t\t\t\t    <th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  </tr>\r\n  \t\t\t\t</thead>\r\n\t\t\t</table>\r\n\t\t\t\r\n\t\t</>\r\n\t);\r\n}","var i = 0;\r\nclass Nodo{\r\n\r\n    constructor(dato) {\r\n        this.siguiente = null;\r\n        this.dato = dato;\r\n        i ++;\r\n        \r\n    }\r\n\r\n    get_siguiente(){\r\n\r\n        return this.siguiente;\r\n    }\r\n\r\n    set_siguiente(siguiente){\r\n        this.siguiente = siguiente;\r\n    }\r\n\r\n    get_dato(){\r\n        return this.dato;\r\n    }\r\n\r\n    set_dato(dato){\r\n        this.dato = dato;\r\n    }\r\n}\r\n\r\nexport default Nodo;\r\n// module.exports = Nodo;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js');\r\n\r\nclass ListaSimple{\r\n\r\n    cabeza = null\r\n\r\n    constructor(){\r\n        this.cabeza = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n\r\n    insertar = (dato) =>{\r\n        let nodo_nuevo = new Nodo(dato);\r\n        if (this.get_vacia() == true){\r\n            this.set_cabeza(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n        }else{\r\n\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n\r\n        }\r\n\r\n    }\r\n    \r\n    insertar_inicio = (dato) =>{\r\n        let nodo_nuevo = new Nodo(dato)\r\n\r\n        nodo_nuevo.set_siguiente(this.get_cabeza())\r\n        this.set_cabeza(nodo_nuevo)\r\n    }\r\n\r\n    insertar_ultimo = (dato) =>{\r\n        let nodo_nuevo = new Nodo(dato)\r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        this.set_ultimo(nodo_nuevo)\r\n\r\n    }\r\n\r\n    eliminar = (dato) =>{\r\n\r\n        if (this.get_vacia() == false){\r\n            \r\n            let nodo_actual = this.get_cabeza().get_siguiente();\r\n            let anterior = this.get_cabeza();\r\n            if (this.get_cabeza().get_dato() == dato){\r\n                this.set_cabeza(this.get_cabeza().get_siguiente());\r\n                return console.log(\"Delete!\");\r\n            }else{\r\n                do {\r\n                    if (nodo_actual.get_dato() == dato){\r\n                        if (nodo_actual.get_dato() == this.get_ultimo().get_dato()){\r\n                            anterior.set_siguiente(null);\r\n                            this.set_ultimo(anterior);\r\n                            return console.log(\"Delete!\");\r\n                        }else {\r\n                            anterior.set_siguiente(nodo_actual.get_siguiente());\r\n                            return console.log(\"Delete!\");\r\n                        }\r\n                    }\r\n                    nodo_actual = nodo_actual.get_siguiente();\r\n                    anterior = anterior.get_siguiente();\r\n\r\n                } while (nodo_actual != null);\r\n            }\r\n\r\n        }else{ return console.log(\"Empty!\"); }\r\n\r\n        return console.log(\"Data not found!\");\r\n    }\r\n\r\n    update = (dato, cambio) =>{\r\n        let nodo_actual = this.get_cabeza();\r\n\r\n        if (this.get_vacia() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) =>{\r\n        let nodo_actual = this.get_cabeza()\r\n        \r\n        if (this.get_vacia() == false){\r\n            let i = 0;\r\n            do{\r\n\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato()+\"-> Posicion\"+i);\r\n                    return i;\r\n                }\r\n                i ++;\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n\r\n            }while(nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n    mostrar = () => {\r\n        let nodo_actual = this.get_cabeza();\r\n        if (this.get_vacia() == false){\r\n\r\n            do {\r\n                console.log(nodo_actual.get_dato());\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n            } while (nodo_actual != null);\r\n        }\r\n    }\r\n    \r\n    get_vacia = () => {\r\n        if (this.get_cabeza() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }  \r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_cabeza();\r\n        var dot = [];\r\n        if (this.get_vacia() == false){\r\n            let i = 0\r\n            do {\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_cabeza();\r\n        var dot = [];\r\n        if (this.get_vacia() == false){\r\n            let i = 0;\r\n            do {\r\n                if (nodo_actual.get_siguiente() != null){\r\n\r\n                    let nodoUno = parseInt(i)\r\n                    let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                    if (i==0){\r\n                        dot.push({from:0, to:1, arrows: \"to\"});\r\n                    }\r\n                    if ( nodoUno!= false && nodoDos != false){\r\n                        dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                    }\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            } while (nodo_actual != null);\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n    generateJSON = () => {\r\n\r\n        var dic = {};\r\n\r\n        dic.categoria = \"Estructura Lineal\"\r\n        dic.nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n        var dot = []\r\n        if (this.get_vacia() == false){\r\n            let nodo_actual = this.get_cabeza();\r\n            do{\r\n                if(typeof(parseInt(nodo_actual.get_dato())) == \"number\"  && 0 <= parseInt(nodo_actual.get_dato())){\r\n                    \r\n                    dot.push(parseInt(nodo_actual.get_dato()))\r\n                     \r\n                }else if (typeof(nodo_actual.get_dato()) == \"string\" ){\r\n\r\n                    dot.push(nodo_actual.get_dato().toString())\r\n\r\n                } \r\n\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n            }while(nodo_actual != null);\r\n        }\r\n        dic.valores = dot;\r\n        console.log(dic)\r\n        var dictstring = JSON.stringify(dic);\r\n        console.log(dictstring)\r\n        return dictstring;\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    get_cabeza = () =>{ return this.cabeza; }\r\n    set_cabeza = (cabeza) =>{ this.cabeza = cabeza; }\r\n    get_ultimo = () => { return this.ultimo; }\r\n    set_ultimo = (ultimo) => { this.ultimo = ultimo; }\r\n}\r\n\r\nexport default ListaSimple;\r\n//module.exports = ListaSimple;\r\n\r\n","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ListaSimple from './Modelo/Lineales/ListaSimple/ListaSimple'; // Importar la Estructura Lista Simple.\r\nvar listaSimple = new ListaSimple(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(listaSimple.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listaSimple.setEdgesDataSet());\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass ListaSE extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\tlistaSimple.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlistaSimple.eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlistaSimple.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddTop = () => {\r\n\t\tlistaSimple.insertar_inicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddLower = () => {\r\n\t\tlistaSimple.insertar_ultimo(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet dato = listaSimple.search(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n\t\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tconsole.log(dato)\r\n\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistaSimple.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\t\tconst element = document.createElement(\"a\");\r\n\t\tlet contenido = listaSimple.generateJSON()\r\n\t\tconst blob = new Blob([contenido]);                   \r\n\t\telement.href = URL.createObjectURL(blob);\r\n\t    element.download = \"listaSimple.json\";\r\n\t    document.body.appendChild(element);\r\n\t    element.click();\r\n\t    alert(\"Documento Crado\")\r\n\t\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default ListaSE;","class Nodo{\r\n\r\n    constructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n        this.anterior = null;\r\n    }\r\n\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n    \r\n    get_anterior(){ return this.anterior; }\r\n    set_anterior(anterior){ this.anterior = anterior; }\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js')\r\nclass ListaDoble{\r\n\r\n    constructor(){\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n    insertar = (dato) => {\r\n\r\n        let nodo_nuevo = new Nodo(dato);\r\n\r\n        if (this.vacia() == true){\r\n            this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n        }else{\r\n\r\n            this.get_ultimo().set_siguiente(nodo_nuevo)\r\n            nodo_nuevo.set_anterior(this.get_ultimo())\r\n            this.set_ultimo(nodo_nuevo)\r\n\r\n        }\r\n    }\r\n\r\n    insertar_inicio = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n\r\n        nodo_nuevo.set_siguiente(this.get_primero())\r\n        this.get_primero().set_anterior(nodo_nuevo)\r\n        this.set_primero(nodo_nuevo)\r\n    }\r\n\r\n    insertar_ultimo = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n        \r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        nodo_nuevo.set_anterior(this.get_ultimo())\r\n        this.set_ultimo(nodo_nuevo)\r\n\r\n    }\r\n\r\n    eliminar = (dato) => {\r\n\r\n        if (this.vacia() == false){\r\n            \r\n\r\n            if (this.get_primero().get_dato() == dato){ //Condicion cuando hay 2 nodos -> eliminando al primero\r\n\r\n                if (this.get_primero().get_siguiente() != null){\r\n\r\n                    let temp = this.get_primero().get_siguiente()\r\n                    this.get_primero().get_siguiente().set_anterior(null)\r\n                    this.get_primero().set_siguiente(null)\r\n                    this.set_primero(temp);\r\n\r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                }\r\n\r\n            }else if (this.get_ultimo().get_dato() == dato){  //Condicion cuando hay 2 nodos -> eliminando al ultimo\r\n\r\n                if (this.get_ultimo().get_anterior() != null){\r\n\r\n                    let temp = this.get_ultimo().get_anterior()\r\n                    this.get_ultimo().get_anterior().set_siguiente(null)\r\n                    this.get_ultimo().set_anterior(null)\r\n                    this.set_ultimo(temp);\r\n\r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    \r\n                    return console.log(\"Delete!\");\r\n                }\r\n\r\n\r\n            }else{ //Condicion cuando hay mas de 3 nodos -> eliminando al de en medio\r\n                let nodo_actual = this.get_primero().get_siguiente();\r\n                let anterior = this.get_primero();\r\n                do {\r\n\r\n                    if (nodo_actual.get_dato() == dato){\r\n                        \r\n                        let siguiente = nodo_actual.get_siguiente()\r\n\r\n                        nodo_actual.set_siguiente(null)\r\n                        nodo_actual.set_anterior(null)\r\n                        anterior.set_siguiente(siguiente)\r\n                        siguiente.set_anterior(anterior)\r\n\r\n                        return console.log(\"Delete!\");\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.get_siguiente();\r\n                    anterior = anterior.get_siguiente();\r\n\r\n                } while (nodo_actual != null);\r\n            }\r\n\r\n        }else{ return console.log(\"Empty!\"); }\r\n\r\n        return console.log(\"Data not found!\");\r\n    }\r\n\r\n    update = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n\r\n        if (this.vacia() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) => {\r\n        let nodo_actual = this.get_primero()\r\n        let i = 0;\r\n        if (this.vacia() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    return i;\r\n                }\r\n                i ++;\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n            }while(nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    print = () => {\r\n        console.log(\"-> ->\")\r\n        let nodo_actual = this.get_primero();\r\n        if (this.vacia() == false){\r\n            do{\r\n                console.log(nodo_actual.get_dato())\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n\r\n            console.log(\"<- <-\")\r\n            nodo_actual = this.get_ultimo();\r\n            do{\r\n                console.log(nodo_actual.get_dato())\r\n                nodo_actual = nodo_actual.get_anterior()\r\n            }while(nodo_actual != null);\r\n        }else{\r\n            console.log(\"Empty!\"); \r\n            \r\n        }\r\n    }\r\n\r\n    vacia = () => {\r\n        if (this.get_primero() == null){ \r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0\r\n            do {\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            do {\r\n                if (nodo_actual.get_siguiente() != null){\r\n\r\n                    let nodoUno = parseInt(i)\r\n                    let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                    if (i==0){\r\n                        dot.push({from:0, to:1, arrows: \"to\"});\r\n                        dot.push({from:1, to:0, arrows: \"to\"});\r\n                    }\r\n                    if ( nodoUno!= false && nodoDos != false){\r\n                        dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                        dot.push({from:parseInt(nodoDos), to:parseInt(nodoUno), arrows: \"to\"});\r\n                    }\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n\r\n    get_primero = () => { return this.primero; }\r\n    set_primero = (primero) =>{ this.primero = primero; }\r\n    get_ultimo = () => { return this.ultimo; }\r\n    set_ultimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n\r\n\r\n}\r\n\r\nexport default ListaDoble;\r\n//module.exports = ListaDoble;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ListaDoble from './Modelo/Lineales/ListaDoble/ListaDoble'; // Importar la Estructura Lista Simple.\r\nvar listaDoble = new ListaDoble(); // Instancia de la ListaSimple.\r\n\r\nvar getNodes = new DataSet(listaDoble.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listaDoble.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t  springLength: 200,\r\n\t\t},\r\n\t},\r\n    nodes:{\r\n        borderWidth: 20,\r\n        color: {\r\n            background: '#00FE92',\r\n            border:  '#37F300',\r\n            highlight: {\r\n                border: '#2B7CE9',\r\n                background: '#0008FE'\r\n            }\r\n        }\r\n    }\r\n}\r\nclass ListaDE extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\tlistaDoble.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlistaDoble.eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlistaDoble.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddTop = () => {\r\n\t\tlistaDoble.insertar_inicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddLower = () => {\r\n\t\tlistaDoble.insertar_ultimo(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet dato = listaDoble.search(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n            getNodes = new DataSet(listaDoble.setNodesDataSet());\r\n            getEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistaDoble.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleSearch()}>Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar Dato Al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-5\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar Dato al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()} >Generar Datos del JSON</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar Datos</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default ListaDE; ","class Nodo{\r\n\r\n    constructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n    }\r\n\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js')\r\nclass ListaCircular{\r\n\r\n    constructor(){\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n        this.size = 0;\r\n    }\r\n\r\n\r\n    insertar = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato);\r\n        if (this.vacia() == true){\r\n            this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            nodo_nuevo.set_siguiente(this.get_primero());\r\n            this.set_ultimo(nodo_nuevo);\r\n\r\n        }\r\n        this.size ++;\r\n\r\n    }\r\n\r\n    insertar_inicio = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n\r\n        nodo_nuevo.set_siguiente(this.get_primero())\r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        this.set_primero(nodo_nuevo)\r\n        this.size ++;\r\n    }\r\n\r\n    insertar_ultimo = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n        \r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        nodo_nuevo.set_siguiente(this.get_primero())\r\n        this.set_ultimo(nodo_nuevo)\r\n        this.size++;\r\n    }\r\n\r\n\r\n    eliminar = (dato) => {\r\n        if(this.vacia() == false){\r\n\r\n             if (this.get_primero().get_dato() == dato){ //Condicion cuando hay 2 nodos -> eliminando al primero\r\n\r\n                if (this.get_primero().get_siguiente() != null){\r\n\r\n                    let temp = this.get_primero().get_siguiente()\r\n                    this.get_primero().set_siguiente(null)\r\n                    this.get_ultimo().set_siguiente(temp)\r\n                    this.set_primero(temp)\r\n                    this.size --;\r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero.set_siguiente(null)\r\n                    this.set_ultimo.set_siguiente(null)\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    this.size --;\r\n                    return console.log(\"Delete!\");\r\n                }\r\n\r\n            }else if (this.get_ultimo().get_dato() == dato){  //Condicion cuando hay 2 nodos -> eliminando al ultimo\r\n\r\n                if (this.get_primero().get_siguiente()!= null){\r\n                    let nodo_actual = this.get_primero().get_siguiente()\r\n                    let anterior = this.get_primero()\r\n\r\n                    let i = 0\r\n\r\n                    while (i < this.size){\r\n                        if(nodo_actual.get_dato()==dato){\r\n                            if ((i+1) == this.size){\r\n\r\n                                let temp = this.get_ultimo().get_siguiente()\r\n                                this.get_ultimo().set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }else{\r\n\r\n                                let temp = nodo_actual.get_siguiente()\r\n                                nodo_actual.set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }\r\n\r\n                        }\r\n                        nodo_actual = nodo_actual.get_siguiente()\r\n                        anterior = anterior.get_siguiente()\r\n\r\n                        i ++;\r\n                    }\r\n\r\n                    \r\n                    \r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero.set_siguiente(null)\r\n                    this.set_ultimo.set_siguiente(null)\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    this.size --;\r\n                    return console.log(\"Delete!\");\r\n                }\r\n\r\n\r\n            }else{ //Condicion cuando hay mas de 3 nodos -> eliminando al de en medio\r\n                if (this.get_primero().get_siguiente()!= null){\r\n                    let nodo_actual = this.get_primero().get_siguiente()\r\n                    let anterior = this.get_primero()\r\n\r\n                    let i = 0\r\n\r\n                    while (i < this.size){\r\n                        if(nodo_actual.get_dato()==dato){\r\n                            if ((i+1) == this.size){\r\n\r\n                                let temp = this.get_ultimo().get_siguiente()\r\n                                this.get_ultimo().set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }else{\r\n\r\n                                let temp = nodo_actual.get_siguiente()\r\n                                nodo_actual.set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }\r\n\r\n                        }\r\n                        nodo_actual = nodo_actual.get_siguiente()\r\n                        anterior = anterior.get_siguiente()\r\n\r\n                        i ++;\r\n                    }\r\n\r\n                    \r\n                    return console.log(\"Delete!\");\r\n                }\r\n            }\r\n\r\n        }else{ return console.log(\"Empty!\"); }\r\n\r\n        return console.log(\"Data not found!\");\r\n\r\n\r\n    }\r\n\r\n    \r\n    update = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n\r\n        if (this.vacia() == false){\r\n\r\n            let i = 0;\r\n            while(i<this.size){\r\n                \r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n                i++;\r\n            }\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) => {\r\n        let nodo_actual = this.get_primero()\r\n\r\n        if (this.vacia() == false){\r\n\r\n            let i = 0;\r\n            while(i<this.size){\r\n                \r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    return i\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            }\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n    print = () => {\r\n        \r\n        var i = 0;\r\n        let nodo_actual = this.get_primero();\r\n        while(i<this.size){\r\n            console.log(nodo_actual.get_dato());\r\n            nodo_actual = nodo_actual.get_siguiente();\r\n            i++;\r\n        }\r\n\r\n        console.log(\"Salio del While\");\r\n        console.log(nodo_actual.get_dato());\r\n        console.log(\"Este es el Primero ->\"+this.get_primero().get_dato())\r\n        console.log(nodo_actual.get_siguiente().get_dato());\r\n        console.log(\"ultimo\");\r\n        console.log(this.get_ultimo().get_dato());\r\n        console.log(this.get_ultimo().get_siguiente().get_dato());\r\n    }\r\n\r\n    vacia = () => {\r\n        if (this.get_primero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0\r\n            while(i<this.size){\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } \r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n            \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                if (i==0){\r\n                    dot.push({from:0, to:1, arrows: \"to\"});\r\n                }\r\n                if ( nodoUno!= false && nodoDos != false){\r\n                    dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                }\r\n                if ((i+1)==this.size){\r\n                    dot.push({from:i, to:0, arrows: \"to\"});\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n\r\n    get_primero = () => { return this.primero; }\r\n    set_primero = (primero) =>{ this.primero = primero; }\r\n    \r\n    get_ultimo = () => { return this.ultimo; }\r\n    set_ultimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n}\r\n\r\nexport default ListaCircular;\r\n//module.exports = ListaCircular;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ListaCircular from './Modelo/Lineales/ListaCircular/ListaCircular'; // Importar la Estructura Lista Simple.\r\nvar listaCircular = new ListaCircular(); // Instancia de la ListaSimple.\r\n\r\nvar getNodes = new DataSet(listaCircular.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listaCircular.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t  springLength: 200,\r\n\t\t},\r\n\t},\r\n    nodes:{\r\n        borderWidth: 20,\r\n        color: {\r\n            background: '#FFFFFF',\r\n            border:  '#1EFFB1',\r\n            highlight: {\r\n                border: '#EEFF1E',\r\n                background: '#FFFFFF'\r\n            }\r\n        }\r\n    }\r\n}\r\nclass ListaCSE extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t}\r\n\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\tlistaCircular.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlistaCircular.eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlistaCircular.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddTop = () => {\r\n\t\tlistaCircular.insertar_inicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddLower = () => {\r\n\t\tlistaCircular.insertar_ultimo(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tvar dato = listaCircular.search(this.state.text);\r\n\t\t\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n            getNodes = new DataSet(listaCircular.setNodesDataSet());\r\n            getEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistaCircular.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleSearch()}>Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar Dato Al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-5\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar Dato Al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Generar Datos del JSON</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar Datos</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\r\n\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default ListaCSE;","class Nodo{\r\n\tconstructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n        this.anterior = null;\r\n    }\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n    \r\n    get_anterior(){ return this.anterior; }\r\n    set_anterior(anterior){ this.anterior = anterior; }\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js');\r\n\r\nclass ListaCircularDE{\r\n\tprimero=null;\r\n\tultimo=null;\r\n\r\n\tconstructor(){\r\n\t\tthis.primero = null;\r\n        this.ultimo = null;\r\n        this.size = 0;\r\n\t}\r\n\r\n    set_primero=(primero)=>{this.primero=primero;}\r\n    get_primero=()=>{ return this.primero;}\r\n    set_ultimo=(ultimo)=>{this.ultimo=ultimo;}\r\n    get_ultimo=()=>{ return this.ultimo;}\r\n    vacia = () => {\r\n        if (this.get_primero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\tinsertar = (valor) =>{\r\n\t\tlet nodo_nuevo = new Nodo(valor);\r\n        if (this.vacia() == true){\r\n\t\t    this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            nodo_nuevo.set_anterior(this.get_ultimo());\r\n            nodo_nuevo.set_siguiente(this.get_primero());\r\n            this.set_ultimo(nodo_nuevo);\r\n        }\r\n        this.size ++;\r\n\t}\r\n\tinsertar_ultimo = (valor) => {\r\n\t\tlet nodo_nuevo = new Nodo(valor);\r\n        if (this.vacia() == true){\r\n\t\t    this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            nodo_nuevo.set_anterior(this.get_ultimo());\r\n            nodo_nuevo.set_siguiente(this.get_primero());\r\n            this.set_ultimo(nodo_nuevo);\r\n        }\r\n        this.size ++;\r\n\t}\r\n\tinsertar_inicio = (valor) => {\r\n\t\tlet nodo_nuevo = new Nodo(valor);\r\n        if (this.vacia() == true){\r\n\t\t    this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n        \tnodo_nuevo.set_siguiente(this.get_primero());\r\n        \tnodo_nuevo.set_anterior(this.get_ultimo());\r\n        \tthis.get_ultimo().set_siguiente(nodo_nuevo)\r\n        \tthis.get_primero().set_anterior(nodo_nuevo)\r\n        \tthis.set_primero(nodo_nuevo)\r\n        }\r\n        this.size ++;\r\n\t}\r\n\teliminar = (dato) =>{\r\n\t\tif (this.vacia() == false){\r\n            if (this.get_primero().get_dato() == dato){ //Eliminando al primero\r\n                if (this.get_primero().get_siguiente() != this.get_primero()){                   \r\n                    let aux = this.get_primero().get_siguiente()\r\n                    this.get_primero().get_siguiente().set_anterior(this.get_ultimo())\r\n                    this.get_ultimo().set_siguiente(aux)\r\n                    this.get_primero().set_siguiente(null)\r\n                    this.get_primero().set_anterior(null)\r\n                    this.set_primero(aux)\r\n                    this.size --;\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    this.size --;\r\n                }\r\n\r\n            }else if (this.get_ultimo().get_dato() == dato){  //Eliminando al ultimo\r\n\r\n                if (this.get_ultimo().get_anterior() != this.get_ultimo()){\r\n\r\n                    let aux = this.get_ultimo().get_anterior()\r\n                    this.get_ultimo().get_anterior().set_siguiente(this.get_primero())\r\n                    this.get_primero().set_anterior(aux)\r\n                    this.get_ultimo().set_anterior(null)\r\n                    this.get_ultimo().set_siguiente(null)\r\n                    this.set_ultimo(aux);\r\n                    this.size --;\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    \r\n                    this.size --;\r\n                }\r\n\r\n\r\n            }else{ //Eliminando En Medio\r\n                let nodo_actual = this.get_primero().get_siguiente();\r\n                let anterior = this.get_primero();\r\n                do {\r\n\r\n                    if (nodo_actual.get_dato() == dato){\r\n                        \r\n                        let siguiente = nodo_actual.get_siguiente()\r\n\r\n                        nodo_actual.set_siguiente(null)\r\n                        nodo_actual.set_anterior(null)\r\n                        anterior.set_siguiente(siguiente)\r\n                        siguiente.set_anterior(anterior)\r\n                        this.size --;\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.get_siguiente();\r\n                    anterior = anterior.get_siguiente();\r\n\r\n                } while (nodo_actual != null);\r\n            }\r\n\r\n        }\r\n\t}\r\n    Imprimir=()=>{\r\n        var i = 0;\r\n        let nodo_actual = this.get_primero();\r\n        while(i<this.size){\r\n            console.log(nodo_actual.get_dato());\r\n            nodo_actual = nodo_actual.get_siguiente();\r\n            i++;\r\n        }\r\n    }\r\n    update = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n    search=(dato)=>{\r\n        let nodo_actual = this.get_primero()\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    console.log(i);\r\n                    return i\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            }\r\n        }else{ \r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n    setNodesDataSet = () => {\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0\r\n            while(i<this.size){\r\n                if(i==0){\r\n                    let etiqueta=nodo_actual.get_dato()+\"\\n Inicio\"\r\n                    dot.push({id:i, label: etiqueta});\r\n                }else if(i+1==this.size){\r\n                    let etiqueta=nodo_actual.get_dato()+\"\\n Final\"\r\n                    dot.push({id:i, label: etiqueta});\r\n                }else{\r\n                    dot.push({id:i, label: nodo_actual.get_dato()});  \r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } \r\n        }\r\n        return dot;\r\n    } \r\n    setEdgesDataSet = () => {\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        let idinicio=this.size+1;\r\n        let idfinal=this.size+2;\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                if (i==0){\r\n                    dot.push({from:0, to:1, arrows: \"to\"});\r\n                    dot.push({from:1, to:0, arrows: \"to\"});\r\n                }\r\n                if ( nodoUno!= false && nodoDos != false){\r\n                    dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                    dot.push({from:parseInt(nodoDos), to:parseInt(nodoUno), arrows: \"to\"});\r\n                }\r\n                if ((i+1)==this.size){\r\n                    dot.push({from:i, to:0, arrows: \"to\"});\r\n                    dot.push({from:0, to:i, arrows: \"to\"});\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            }\r\n        }\r\n        return dot;\r\n    }\r\n}\r\n\r\nexport default ListaCircularDE;\r\n//module.exports = ListaCircularDE;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport ListaCircularDE from './Modelo/Lineales/ListaCircularDoble/ListaCDE'; // Importar la Estructura Lista Circular Doble.\r\nvar listacde = new ListaCircularDE(); // Instancia de la ListaCDE.\r\nvar getNodes = new DataSet(listacde.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listacde.setEdgesDataSet());\t// Se Crean las flechas.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#00F3B8',\r\n            border:  '#00F3B8',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#00F3B8'\r\n            }\r\n        }\r\n    }\r\n  };\r\nclass ListaCDE extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttext:'',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t}\r\n\t\tthis.network={};\r\n\t\tthis.appRef=createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n    this.network = new Network(this.appRef.current, data, options);\r\n  \t}\r\n  \thandleInputChange(e) {\r\n    \tconst {value, name} = e.target;\r\n    \tconsole.log(value, name);\r\n    \tthis.setState({\r\n    \t  [name]: value\r\n    \t});\r\n    }\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n    handleAdd = () => {\r\n    \tlistacde.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleDelete = () => {\r\n\t\tlistacde.eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleAddTop = () => {\r\n\t\tlistacde.insertar_inicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleAddLower = () => {\r\n\t\tlistacde.insertar_ultimo(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleSearch = () => {\r\n\t\tlet dato = listacde.search(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleUpdate = () => {\r\n\t\tlistacde.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistacde.insertar(dataJson.valores[i])\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!!\")\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n\r\n    render() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n\r\n  export default ListaCDE;","class Nodo{\r\n\r\n    constructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n    }\r\n\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js')\r\nclass Stack{\r\n\r\n    constructor(){\r\n        this.primero = null\r\n    }\r\n\r\n    insertar = (dato) =>{ //Agrega un valor al final de la lista.\r\n        let  nodo_nuevo = new Nodo(dato)\r\n        if (this.empty() == false){\r\n            nodo_nuevo.set_siguiente(this.get_primero())\r\n            this.set_primero(nodo_nuevo)\r\n        }else{\r\n            this.set_primero(nodo_nuevo)\r\n        }   \r\n\r\n    }\r\n\r\n    pop = () => { // Saca el primero de la pila.\r\n\r\n        if(this.empty() == false){\r\n\r\n            if (this.get_primero().get_siguiente() != null){\r\n                \r\n                let temp = this.get_primero().get_siguiente()\r\n                this.get_primero().set_siguiente(null)\r\n                this.set_primero(temp)\r\n                \r\n                return console.log(\"Delete!\"); \r\n            }else {\r\n                this.set_primero(null)\r\n            }\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n    \r\n    update = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n\r\n        if (this.empty() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) => {\r\n        let nodo_actual = this.get_primero()\r\n\r\n        if (this.empty() == false){\r\n            let i = 0;\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    return i;\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            }while(nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n\r\n    print = () => {\r\n\r\n        if(this.empty() == false){\r\n            let nodo_actual = this.get_primero()\r\n            do {\r\n                console.log(nodo_actual.get_dato())\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            } while (nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n    }\r\n\r\n\r\n    empty = () => {\r\n        if (this.get_primero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    \r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.empty() == false){\r\n            let i = 0\r\n            do {\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.empty() == false){\r\n            let i = 0;\r\n            do {\r\n                if (nodo_actual.get_siguiente() != null){\r\n\r\n                    let nodoUno = parseInt(i)\r\n                    let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                    if (i==0){\r\n                        dot.push({from:0, to:1, arrows: \"to\"});\r\n                    }\r\n                    if ( nodoUno!= false && nodoDos != false){\r\n                        dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                    }\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            } while (nodo_actual != null);\r\n        }\r\n\r\n        return dot;\r\n\r\n    }\r\n\r\n\r\n    get_primero = () => { return this.primero; }\r\n    set_primero = (primero) => { this.primero = primero; }\r\n\r\n}\r\n\r\nexport default Stack;\r\n//module.exports = Stack;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport Stack from './Modelo/Lineales/Pila/Stack'; // Importar la Estructura Lista Simple.\r\nvar pila = new Stack(); // Instancia de la ListaSimple.\r\n\r\nvar getNodes = new DataSet(pila.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(pila.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t  springLength: 300,\r\n\t\t},\r\n\t},\r\n    nodes:{\r\n        borderWidth: 20,\r\n        color: {\r\n            background: '#FFFFFF', \r\n            border:  '#D366FF',\r\n            highlight: { // cambia de color al qu selecciona\r\n                border: '#1EFFB1', \r\n                background: '#FFFFFF'\t\r\n            }\r\n        }\r\n    }\r\n}\r\nclass Pila extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t}\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleAdd = () => {\r\n\t\tpila.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tpila.pop();\r\n\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tpila.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet dato = pila.search(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n            getNodes = new DataSet(pila.setNodesDataSet());\r\n            getEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Pila\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tpila.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL - PIla!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\trender() {\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Update\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleSearch()}>Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 0 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer JSON</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default Pila;","class Nodo{\r\n\r\n\tconstructor(valor){\r\n\t\tthis.siguiente = null;\r\n\t\tthis.valor = valor;\r\n\t}\r\n\t\r\n\tget_siguiente(){ return this.siguiente;}\r\n\tset_siguiente(nuevonodo){ this.siguiente=nuevonodo;}\r\n\tget_valor(){ return this.valor;}\r\n\tset_valor(valor){ this.valor=valor;}\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import Nodo from './Nodo.js';\r\n\r\nclass EstructuraCola{\r\n\tprimero=null;\r\n\r\n\tConstructor(){\r\n\t\tthis.primero= null;\r\n\t\tthis.ultimo=null;\r\n\t}\r\n\tget_primero = () => {return this.primero;}\r\n\tset_primero = (primero) => {this.primero = primero;}\r\n\tget_ultimo = () => {return this.ultimo;}\r\n\tset_ultimo = (ultimo) => {this.ultimo = ultimo;}\r\n\tget_vacia = () => {\r\n\t\tif(this.get_primero()==null){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tinsertar = (valor) => {\r\n\t\tlet nodo = new Nodo(valor);\r\n\t\tif(this.get_vacia()==true){\r\n\t\t\tthis.set_primero(nodo);\r\n\t\t\tthis.set_ultimo(nodo);\r\n\t\t}else{\r\n\t\t\tthis.get_ultimo().set_siguiente(nodo);\r\n\t\t\tthis.set_ultimo(nodo);\r\n\t\t}\r\n\t}\r\n\tDesencolar = () => {\r\n\t\tlet nodo = this.primero;\r\n\t\tlet seguir = true;\r\n\t\tthis.set_primero(this.get_primero().get_siguiente());\r\n\t}\r\n\tsearch = (dato) =>{\r\n\t\tlet nodo = this.get_primero();\r\n\t\tlet i=0;\r\n\t\tif(this.get_vacia() == false){\r\n\t\t\tdo{\r\n\t\t\t\tif(nodo.get_valor() == dato){\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t}while(nodo != null);\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tupdate = (dato, cambio) =>{\r\n        let nodo_actual = this.get_primero();\r\n        if (this.get_vacia() == false){\r\n            do{\r\n                if (nodo_actual.get_valor() == dato){\r\n                    nodo_actual.set_valor(cambio);\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n\r\n    }\r\n\tImprimir = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tdo{\r\n\t\t\tconsole.log(nodo.get_valor());\r\n\t\t\tnodo=nodo.get_siguiente();\r\n\t\t}while(nodo!=null)\r\n\t}\r\n\tsetNodesDataSet = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet id = 0;\r\n\t\t\tdo{\r\n\t\t\t\tdot.push({id: id, label: nodo.get_valor()});\r\n\t\t\t\tnodo=nodo.get_siguiente();\r\n\t\t\t\tid++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n\tsetEdgesDataSet = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet i = 0;\r\n\t\t\tdo{\r\n\t\t\t\tif ( nodo.get_siguiente() != null) {\r\n\t\t\t\t\tlet nodoactual=parseInt(i)\r\n\t\t\t\t\tlet nodosiguiente = parseInt(nodoactual) + parseInt(1)\r\n\t\t\t\t\tif(i==0){\r\n\t\t\t\t\t\tdot.push({from:0, to:1, arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(nodoactual != false && nodosiguiente != false){\r\n\t\t\t\t\t\tdot.push({from:parseInt(nodoactual), to:parseInt(nodosiguiente), arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t\ti++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n}\r\n\r\nexport default EstructuraCola;\r\n//module.exports = EstructuraCola;","import { DataSet, Network } from 'vis';\r\nimport React, { Component, createRef } from \"react\";\r\nimport { render } from 'react-dom';\r\nimport EstructuraCola from './Modelo/Lineales/Cola/EstructuraCola';\r\n\r\n\r\nvar estructuracola = new EstructuraCola();\r\nvar nodos = new DataSet(estructuracola.setNodesDataSet());\r\nvar flechas = new DataSet(estructuracola.setEdgesDataSet());\r\nvar datos = {nodes:nodos, edges:flechas,};\r\nvar options = {\r\n  physics: {\r\n    stabilization: false,\r\n    barnesHut: {\r\n      springLength: 200,\r\n    },\r\n  },\r\n  nodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FF5733',\r\n            border:  '#FF5733',\r\n            highlight: {\r\n                border: '#9E3D28',\r\n                background: '#9E3D28'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Cola extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      agregar: '',\r\n      dato_actualizado: '',\r\n      valoreliminar:'',\r\n      valorbuscar: '',\r\n      rango: '1',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n    }\r\n    this.network = {};\r\n    this.appRef = createRef();\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  handleInputChange(e) {\r\n    const {value, name} = e.target;\r\n    console.log(value, name);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    }\r\n  \r\n  handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      this.setState({fileName: file.name, fileContent: reader.result})\r\n    }\r\n  }\r\n\r\n\r\n  AgregarDato = () => { \r\n    estructuracola.insertar(this.state.agregar);\r\n    nodos = new DataSet(estructuracola.setNodesDataSet());\r\n    flechas = new DataSet(estructuracola.setEdgesDataSet());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  EliminarDato = () =>{\r\n    estructuracola.Desencolar();\r\n    nodos = new DataSet(estructuracola.setNodesDataSet());\r\n    flechas = new DataSet(estructuracola.setEdgesDataSet());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  ActualizarDato = () => {\r\n    estructuracola.update(this.state.agregar, this.state.dato_actualizado);\r\n    nodos = new DataSet(estructuracola.setNodesDataSet());\r\n    flechas = new DataSet(estructuracola.setEdgesDataSet());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  BuscarDato = () => {\r\n    let dato = estructuracola.search(this.state.agregar);\r\n    if (0 <= dato){\r\n      nodos = new DataSet(estructuracola.setNodesDataSet());\r\n      flechas = new DataSet(estructuracola.setEdgesDataSet());\r\n      datos = {\r\n        nodes: nodos,\r\n        edges: flechas,\r\n      }\r\n      flechas.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n    }\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n\r\n  handleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Cola\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\testructuracola.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tnodos = new DataSet(estructuracola.setNodesDataSet());\r\n      flechas = new DataSet(estructuracola.setEdgesDataSet());\r\n      datos = {\r\n        nodes: nodos,\r\n        edges: flechas,\r\n      }\r\n\t\t\t\r\n      this.network = new Network(this.appRef.current, datos, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL - Cola!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n          <input type=\"text\" name=\"agregar\" className=\"form-control\" placeholder=\"Dato\" id=\"InputCola\" value={this.state.agregar} onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.AgregarDato()}>Agregar</button>\r\n        </div>\r\n        <div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n          <input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Update\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-warning\" onClick={() => this.ActualizarDato()}>Actualizar Dato</button>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.EliminarDato()}>Eliminar</button>\r\n        </div>\r\n        <div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => this.BuscarDato()}>Buscar</button>\r\n        </div>\r\n        <div className=\"col-md-2\" style={{marginLeft: 0 + 'em'}}>\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\"  style={{marginLeft: 3 + 'em'}}>\r\n          <fieldset class=\"form-group\">\r\n            <legend>Repetidos</legend>\r\n            <div class=\"form-check\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"radio\" class=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios1\" value=\"option1\" ></input>\r\n                Si\r\n              </label>\r\n            </div>\r\n            <div class=\"form-check\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"radio\" class=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios2\" value=\"option2\"></input>\r\n                No\r\n              </label>\r\n            </div>\r\n          </fieldset>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n          <h5>Rango de Animacion</h5>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"rango\" onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n          <h5>Velocidad: x{this.state.rango}</h5>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"row\">\r\n\r\n      </div>\r\n      <div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cola;","class Nodo{\r\n\r\n\tconstructor(valor){\r\n\t\tthis.siguiente = null;\r\n\t\tthis.valor = valor;\r\n\t\tthis.prioridad = 0;\r\n\t}\r\n\t\r\n\tget_siguiente(){ return this.siguiente;}\r\n\tset_siguiente(nuevonodo){ this.siguiente=nuevonodo;}\r\n\tget_valor(){ return this.valor;}\r\n\tset_valor(valor){ this.valor=valor;}\r\n\tget_prioridad(){return this.prioridad;}\r\n\tset_prioridad(valor){this.prioridad=valor;}\r\n}\r\n\r\nexport default Nodo;\r\n// module.exports = Nodo;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport Colaprioridad from './Modelo/Lineales/ColaPrioridad/ColaPrioridad'; // Importar la Estructura Lista Circular Doble.\r\nvar colaprioridad = new Colaprioridad(); // Instancia de la ListaCDE.\r\nvar nodos = new DataSet(colaprioridad.GenerarNodosDOT());  // Se Crean los Nodos.\r\nvar flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\t// Se Crean las flechas.\r\nvar filePath;\r\n\r\nvar datos = {\r\n\tnodes: nodos,\r\n\tedge: flechas,\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#00F3B8',\r\n            border:  '#00F3B8',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#00F3B8'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\nclass ColaPrioridad extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      agregar: '',\r\n      prioridad:'',\r\n      valorbuscar: '',\r\n      rango: '1',\r\n    }\r\n    this.network = {};\r\n    this.appRef = createRef();\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  handleInputChange(e) {\r\n    const {value, name} = e.target;\r\n    console.log(value, name);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    }\r\n  AgregarDato = () => { \r\n    colaprioridad.Encolar(this.state.agregar, this.state.prioridad);\r\n    nodos = new DataSet(colaprioridad.GenerarNodosDOT());\r\n    flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  EliminarDato = () =>{\r\n    colaprioridad.Desencolar();\r\n    nodos = new DataSet(colaprioridad.GenerarNodosDOT());\r\n    flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  BuscarDato = () => {\r\n    let dato = colaprioridad.Buscar(this.state.agregar);\r\n    if (0 <= dato){\r\n      nodos = new DataSet(colaprioridad.GenerarNodosDOT());\r\n      flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\r\n      datos = {\r\n        nodes: nodos,\r\n        edges: flechas,\r\n      }\r\n      flechas.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n    }\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n          <input type=\"text\" name=\"agregar\" className=\"form-control\" placeholder=\"Dato\" id=\"InputCola\" value={this.state.agregar} onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n          <input type=\"text\" name=\"prioridad\" className=\"form-control\" placeholder=\"Prioridad\" id=\"InputPrioridad\" value={this.state.prioridad} onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.AgregarDato()}>Agregar</button>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.EliminarDato()}>Eliminar</button>\r\n        </div>\r\n        <div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => this.BuscarDato()}>Buscar</button>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n          <h5>Rango de Animacion</h5>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"rango\" onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n          <h5>Velocidad: x{this.state.rango}</h5>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"row\">\r\n\r\n      </div>\r\n      <div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColaPrioridad;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js');\r\n\r\nclass ColaPrioridad{\r\n\tprimero=null;\r\n\r\n\tConstructor(){\r\n\t\tthis.primero= null;\r\n\t\tthis.ultimo=null;\r\n\t}\r\n\tget_primero = () => {return this.primero;}\r\n\tset_primero = (primero) => {this.primero = primero;}\r\n\tget_ultimo = () => {return this.ultimo;}\r\n\tset_ultimo = (ultimo) => {this.ultimo = ultimo;}\r\n\tget_vacia = () => {\r\n\t\tif(this.get_primero()==null){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tEncolar = (valor, prioridad) => {\r\n\t\tlet nuevonodo = new Nodo(valor);\r\n\t\tif(prioridad!=null && prioridad!=\"\"){\r\n\t\t\tconsole.log(\"Enrtp\");\r\n\t\t\tnuevonodo.set_prioridad(prioridad);\r\n\t\t}\r\n\t\tlet nodo = this.get_primero();\r\n\t\tlet salir= false;\r\n\t\tif(this.get_vacia()==true){\r\n\t\t\tthis.set_primero(nuevonodo);\r\n\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t}else{\r\n\t\t\tconsole.log(nodo.get_prioridad());\r\n\t\t\tconsole.log(prioridad);\r\n\t\t\tif(prioridad!=null && prioridad!=\"\"){\r\n\t\t\t\tdo{\r\n\t\t\t\t\tconsole.log(\"Entro al while\");\r\n\t\t\t\t\tif(nodo.get_siguiente()==null){\r\n\t\t\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.log(nodo.get_prioridad());\r\n\t\t\t\t\t\tconsole.log(prioridad);\r\n\t\t\t\t\t\tif( prioridad <= nodo.get_prioridad()){\r\n\t\t\t\t\t\t\tconsole.log(\"Entro al if\");\r\n\t\t\t\t\t\t\tnuevonodo.set_siguiente(nodo.get_siguiente());\r\n\t\t\t\t\t\t\tnodo.set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t\t}else if(prioridad>nodo.get_prioridad()){\r\n\t\t\t\t\t\t\tconsole.log(\"Entro al segundo\")\r\n\t\t\t\t\t\t\tif(nodo.get_siguiente().get_prioridad()==0){\r\n\t\t\t\t\t\t\t\tnuevonodo.set_siguiente(nodo.get_siguiente());\r\n\t\t\t\t\t\t\t\tnodo.set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t\t\t}else if(prioridad<=nodo.get_siguiente().get_prioridad()){\r\n\t\t\t\t\t\t\t\tnuevonodo.set_siguiente(nodo.get_siguiente());\r\n\t\t\t\t\t\t\t\tnodo.set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t\t}while(nodo != null || salir==true);\r\n\t\t\t}else{\r\n\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tDesencolar = () => {\r\n\t\tlet nodo = this.primero;\r\n\t\tlet seguir = true;\r\n\t\tthis.set_primero(this.get_primero().get_siguiente());\r\n\t}\r\n\tBuscar = (dato) =>{\r\n\t\tlet nodo = this.get_primero();\r\n\t\tlet i=0;\r\n\t\tif(this.get_vacia() == false){\r\n\t\t\tdo{\r\n\t\t\t\tif(nodo.get_valor() == dato){\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t}while(nodo != null);\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tImprimir = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tdo{\r\n\t\t\tconsole.log(nodo.get_valor());\r\n\t\t\tnodo=nodo.get_siguiente();\r\n\t\t}while(nodo!=null)\r\n\t}\r\n\tGenerarNodosDOT = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet id = 0;\r\n\t\t\tdo{\r\n\t\t\t\tdot.push({id: id, label: nodo.get_valor()});\r\n\t\t\t\tnodo=nodo.get_siguiente();\r\n\t\t\t\tid++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n\tGenerarEdgesDOT = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet i = 0;\r\n\t\t\tdo{\r\n\t\t\t\tif ( nodo.get_siguiente() != null) {\r\n\t\t\t\t\tlet nodoactual=parseInt(i)\r\n\t\t\t\t\tlet nodosiguiente = parseInt(nodoactual) + parseInt(1)\r\n\t\t\t\t\tif(i==0){\r\n\t\t\t\t\t\tdot.push({from:0, to:1, arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(nodoactual != false && nodosiguiente != false){\r\n\t\t\t\t\t\tdot.push({from:parseInt(nodoactual), to:parseInt(nodosiguiente), arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t\ti++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n}\r\n\r\nexport default ColaPrioridad;\r\n//module.exports = ColaPrioridad;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ordenamientoBurbuja from './Modelo/Ordenamientos/OrBurbuja'; // Importar la Estructura Lista Simple.\r\nvar burbuja = new ordenamientoBurbuja(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(burbuja.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(burbuja.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Burbuja extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Ordenamiento\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\t// console.log(dataJson.valores[i]);\r\n\t\t\t\tburbuja.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(burbuja.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(burbuja.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! -> Ordenamiento \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleOrdenamiento = () => {\r\n\r\n\t\tburbuja.ordenamiento_burbuja()\r\n\t\tgetNodes = new DataSet(burbuja.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(burbuja.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleOrdenamiento()}>Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default Burbuja;","class OrBurbuja{\r\n\r\n    constructor(){\r\n        this.array = [];\r\n    }\r\n\r\n    insertar = (dato) =>{\r\n        this.array.push(dato)\r\n        // console.log(this.array)\r\n    }\r\n    ordenamiento_burbuja = () => {\r\n\r\n        for (var i = (this.array.length - 1); i >= 0; i--) {\r\n            for (var j = 0; j < i; j++) {\r\n                if(this.array[j]> this.array[j+1]){\r\n                    var temp = this.array[j];\r\n                    this.array[j] = this.array[j+1]\r\n                    this.array[j+1] = temp;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n            console.log(this.array[i])\r\n            dot.push({id:i, label: this.array[i]});\r\n        }\r\n       \r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n\r\n            if (this.array[i+1] != null){\r\n                \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                dot.push({from:nodoUno, to:nodoDos, arrows: \"to\"});\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n}   \r\n\r\nexport default OrBurbuja;\r\n//module.exports = OrBurbuja;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport OrdenamientoSeleccion from './Modelo/Ordenamientos/OrSeleccion'; // Importar la Estructura Lista Simple.\r\nvar seleccion = new OrdenamientoSeleccion(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(seleccion.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(seleccion.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Seleccion extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Ordenamiento\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\t// console.log(dataJson.valores[i]);\r\n\t\t\t\tseleccion.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(seleccion.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(seleccion.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! -> Ordenamiento \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleOrdenamiento = () => {\r\n\r\n\t\tseleccion.ordenamiento_seleccion()\r\n\t\tgetNodes = new DataSet(seleccion.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(seleccion.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleOrdenamiento()}>Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\nexport default Seleccion;\r\n","class OrSeleccion{\r\n\r\n\tconstructor(){\r\n\t\tthis.array = []\r\n\t}\r\n\r\n\tinsertar = (dato) => {\r\n\t\tthis.array.push(dato)\r\n\t}\r\n\r\n\r\n    ordenamiento_seleccion = () =>{\r\n\r\n\t\tfor(var i = 1; i < this.array.length; i++){\r\n\t\t\tvar aux = this.array[i];\r\n\t\t\tvar temp = i - 1  ;\r\n\t\t\twhile(aux < this.array[temp] && temp >= 1){\r\n\t\t\t\tthis.array[temp+1] = this.array[temp];\r\n\t\t\t\ttemp = temp - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (this.array[temp] <= aux){\r\n\t\t\t\t\tthis.array[temp+1] = aux;\r\n\t\t\t}else{\r\n\t\t\t\tthis.array[temp+1] = this.array[temp]\r\n\t\t\t\tthis.array[temp] = aux\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n            console.log(this.array[i])\r\n            dot.push({id:i, label: this.array[i]});\r\n        }\r\n       \r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n\r\n            if (this.array[i+1] != null){\r\n                \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                dot.push({from:nodoUno, to:nodoDos, arrows: \"to\"});\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default OrSeleccion;\r\n//module.exports = OrSeleccion;\r\n\r\n\r\n\r\n","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport OrdenamientoInsercion from './Modelo/Ordenamientos/OrInsercion'; // Importar la Estructura Lista Simple.\r\nvar insercion = new OrdenamientoInsercion(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(insercion.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(insercion.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Insercion extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Ordenamiento\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\t// console.log(dataJson.valores[i]);\r\n\t\t\t\tinsercion.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(insercion.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(insercion.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! -> Ordenamiento \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleOrdenamiento = () => {\r\n\r\n\t\tinsercion.ordenamiento_insercion()\r\n\t\tgetNodes = new DataSet(insercion.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(insercion.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleOrdenamiento()}>Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\nexport default Insercion;\r\n","class OrInsercion{\r\n\r\n\tconstructor(){\r\n\t\tthis.array = []\r\n\t}\r\n\r\n\tinsertar = (dato) => {\r\n\t\tthis.array.push(dato)\r\n\t}\r\n\r\n\r\n\tordenamiento_insercion = () =>{\r\n\r\n\t\tvar size = this.array.length, temp, aux;\r\n   \r\n\t\tfor ( var i = 0; i < this.array.length; i++ ) { // outer loop     \r\n\t\taux = this.array[i];\r\n\t\t\tfor ( temp = i - 1; temp >= 0 && this.array[temp] > aux; temp-- ){ // inner loop\r\n\t\t\t\tthis.array[ temp + 1 ] = this.array[temp];\r\n\t\t\t}\r\n\t\tthis.array[ temp + 1 ] = aux;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n            console.log(this.array[i])\r\n            dot.push({id:i, label: this.array[i]});\r\n        }\r\n       \r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n\r\n            if (this.array[i+1] != null){\r\n                \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                dot.push({from:nodoUno, to:nodoDos, arrows: \"to\"});\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default OrInsercion;\r\n//module.exports = OrInsercion;","import React, {useState} from 'react';\r\n\r\nexport default function Rapido(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-6\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function AVL(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function ArbolB(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function ArbolBPlus(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function ArbolMerkle(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","class Major{\r\n\tmatriz=[];\r\n\tarrreglo=[];\r\n\tconstructor(i,j){\r\n\t\tthis.i=i;\r\n\t\tthis.j=j;\r\n\t}\r\n\tget_i=()=>{return this.i;}\r\n\tset_i=(i)=>{this.i=i;}\r\n\tget_j=()=>{return this.j;}\r\n\tset_j=(j)=>{this.j=j;}\r\n\r\n\tInicializarMatriz=()=>{\r\n\t\tthis.matriz=[];\r\n\t\tthis.arrreglo=[];\r\n\t\tlet filas = this.get_i();\r\n\t\tlet columnas = this.get_j();\r\n\t\tfor(let i=0;i<filas;i++){\r\n\t\t\tlet auxfila=[]\r\n\t\t\tfor(let j=0;j<columnas;j++){\r\n\t\t\t\tauxfila.push(\" \");\r\n\t\t\t}\r\n\t\t\tthis.matriz.push(auxfila);\r\n\t\t}\r\n\t}\r\n\tInsertarDato=(i,j,dato)=>{\r\n\t\tif((i<this.get_i())&&(j<this.get_j())){\r\n\t\t\tthis.matriz[i][j]=dato;\r\n\t\t\tconsole.log(this.matriz);\r\n\t\t}\r\n\t}\r\n\tConvertirRowMajor=()=>{\r\n\t\tthis.arrreglo=[];\r\n\t\tfor(let i=0;i<this.get_i();i++){\r\n\t\t\tfor(let j=0; j<this.get_j();j++){\r\n\t\t\t\tthis.arrreglo.push(this.matriz[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tConvertirColumnMajor=()=>{\r\n\t\tthis.arrreglo=[];\r\n\t\tfor(let j=0; j<this.get_j(); j++){\r\n\t\t\tfor(let i=0; i<this.get_i(); i++){\r\n\t\t\t\tthis.arrreglo.push(this.matriz[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tBuscarDatoRowMajor=(fila,columna)=>{\r\n\t\tlet indice=-1;\r\n\t\tif((fila<this.get_i())&&(columna<this.get_j())){\r\n\t\t\tindice=(parseInt(this.get_j())*fila)+columna;\r\n\t\t}\r\n\t\treturn indice;\r\n\t}\r\n\tBuscarDatoColumnMajor=(fila,columna)=>{\r\n\t\tlet indice=-1;\r\n\t\tif((fila<this.get_i())&&(columna<this.get_j())){\r\n\t\t\tindice=(parseInt(this.get_i())*columna)+fila;\r\n\t\t}\r\n\t\treturn indice;\r\n\t}\r\n\tEliminarDato=(fila,columna)=>{\r\n\t\tif((fila<this.get_i())&&(columna<this.get_j())){\r\n\t\t\tthis.matriz[fila][columna]=\" \";\r\n\t\t}\r\n\t}\r\n\tsetData=()=>{\r\n\t\tvar dotNode = [];\r\n\t\tvar dotEdges = [];\r\n\t\tfor(let i=0;i<this.arrreglo.length;i++){\r\n\t\t\tlet etiqueta = \"\" + this.arrreglo[i];\r\n\t\t\tdotNode.push({id:i, label: etiqueta});\r\n\t\t\tif(i+1<=this.arrreglo.length){\r\n\t\t\t\tdotEdges.push({from:i, to:i+1, arrows: \"to\"});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [dotNode,dotEdges];\r\n\t}\r\n\tsetDataNodes=()=>{\r\n\t\tvar dotNode = [];\r\n\t\tvar dotEdges = [];\r\n\t\tlet contador=0;\r\n\t\tfor(let i=0; i<this.get_i();i++){\t\r\n\t\t\tfor(let j=0; j<this.get_j();j++){\r\n\t\t\t\tconsole.log(\"i: \"+i+\" j: \"+ j +this.matriz[i][j])\r\n\t\t\t\tlet etiqueta = \"\" + this.matriz[i][j];\r\n\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:i});\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor(let j=0; j<this.get_j() ;j++){\r\n\t\t\tlet aux=0+j;\r\n\t\t\tfor(let i=0; i<this.get_i();i++){\r\n\t\t\t\tif(i+1<this.get_i()){\r\n\t\t\t\t\tdotEdges.push({from:aux, to: aux+this.get_j(), color:{ opacity: 0.1 }})\r\n\t\t\t\t}\r\n\t\t\t\taux=aux+this.get_j();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn [dotNode,dotEdges];\r\n\t}\r\n\tgenerateJSONRowMajor=()=>{\r\n    \tvar json = \"{\\n  \\\"categoria\\\": \\\"Estructura Compuesta\\\",\\n  \\\"nombre\\\": \\\"Row Major\\\",\\n  \\\"animacion\\\": 10,\\n  \\\"m\\\": [\\n\\t\"+this.i+\",\\n\\t\"+this.j+\"\\n  ],\\n  \\\"valores\\\": [\\n\";\r\n    \tfor(let i=0; i<this.matriz.length; i++){\r\n    \t\tfor(let j=0; j<this.matriz[i].length; j++){\r\n    \t\t\tlet esentero = true;\r\n\t\t\t\tlet entero = parseInt(this.matriz[i][j]); \r\n\t\t\t\tif(isNaN(entero)){\r\n\t\t\t\t\tesentero=false;\r\n\t\t\t\t}\r\n\t\t\t\tif(esentero==true){\r\n\t\t\t\t\tjson = json + \"   {\\n\\t\\\"indices\\\": [\\n\\t \"+i+\",\\n\\t \"+j+\"\\n\\t],\";\r\n\t\t\t\t\tjson = json + \"\\n\\t\\\"valor\\\": \"+this.matriz[i][j]+\"\\n   },\\n\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(this.matriz[i][j]!=\" \"){\r\n\t\t\t\t\t\tjson = json + \"   {\\n\\t\\\"indices\\\": [\\n\\t \"+i+\",\\n\\t \"+j+\"\\n\\t],\";\r\n\t\t\t\t\t\tjson = json + \"\\n\\t\\\"valor\\\": \"+ this.matriz[i][j] +\"\\\"\\n   },\\n\";\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n    \t\t}\r\n    \t}\r\n    \tjson = json +\"  ]\\n}\" \r\n    \treturn json;\r\n    }\r\n    generateJSONColumnMajor=()=>{\r\n    \tvar json = \"{\\n  \\\"categoria\\\": \\\"Estructura Compuesta\\\",\\n  \\\"nombre\\\": \\\"Column Major\\\",\\n  \\\"animacion\\\": 10,\\n  \\\"m\\\": [\\n\\t\"+this.i+\",\\n\\t\"+this.j+\"\\n  ],\\n  \\\"valores\\\": [\\n\";\r\n    \tfor(let i=0; i<this.matriz.length; i++){\r\n    \t\tfor(let j=0; j<this.matriz[i].length; j++){\r\n    \t\t\tlet esentero = true;\r\n\t\t\t\tlet entero = parseInt(this.matriz[i][j]); \r\n\t\t\t\tif(isNaN(entero)){\r\n\t\t\t\t\tesentero=false;\r\n\t\t\t\t}\r\n\t\t\t\tif(esentero==true){\r\n\t\t\t\t\tjson = json + \"   {\\n\\t\\\"indices\\\": [\\n\\t \"+i+\",\\n\\t \"+j+\"\\n\\t],\";\r\n\t\t\t\t\tjson = json + \"\\n\\t\\\"valor\\\": \"+this.matriz[i][j]+\"\\n   },\\n\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(this.matriz[i][j]!=\" \"){\r\n\t\t\t\t\t\tjson = json + \"   {\\n\\t\\\"indices\\\": [\\n\\t \"+i+\",\\n\\t \"+j+\"\\n\\t],\";\r\n\t\t\t\t\t\tjson = json + \"\\n\\t\\\"valor\\\": \"+ this.matriz[i][j] +\"\\\"\\n   },\\n\";\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n    \t\t}\r\n    \t}\r\n    \tjson = json +\"  ]\\n}\" \r\n    \treturn json;\r\n    }\r\n}\r\nexport default Major;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport Major from './Modelo/Compuesta/Major/RowColumnMajor'; // Importar la Estructura Lista Simple.\r\nvar columnmajor = new Major(5,5);\r\nvar getNodes = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar getNodes2 = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges2 = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar data2 = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar options = {\r\n\tnodes:{\r\n\t\tshape: \"box\",\r\n    \tmargin: 10,\r\n    \twidthConstraint: {\r\n    \t  maximum: 300,\r\n    \t},\r\n        borderWidth: 30,\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"UD\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n};\r\nvar options2 = {\r\n\tnodes:{\r\n\t\tshape: \"box\",\r\n    \tmargin: 10,\r\n    \twidthConstraint: {\r\n    \t  maximum: 300,\r\n    \t},\r\n        borderWidth: 30,\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"LR\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass MatrizColumnMajor extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topcion: 'Simple',\r\n\t\t\ttamanio: '',\r\n\t\t\tfilas: '',\r\n\t\t\tcolumnas: '',\r\n\t\t\tfilaingresar: '',\r\n\t\t\tcolumnaingresar: '',\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\t//this.tablahash;\r\n\t  \tthis.network = {};\r\n\t\tthis.network2 = {};\r\n\t  \tthis.appRef = createRef();\r\n\t  \tthis.appRef2 = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\tcomponentDidMount2() {\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleGenerate = () => {\r\n\t\tcolumnmajor.set_i(parseInt(this.state.filas));\r\n\t\tcolumnmajor.set_j(parseInt(this.state.columnas));\r\n\t\tcolumnmajor.InicializarMatriz();\r\n\t\tgetNodes = new DataSet(columnmajor.setDataNodes()[0]);\r\n\t\tgetEdges = new DataSet(columnmajor.setDataNodes()[1]);\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tconsole.log(\"Generado\")\r\n\t}\r\n\r\n\thandleAdd = () => {\r\n\t\tcolumnmajor.InsertarDato(parseInt(this.state.filaingresar),parseInt(this.state.columnaingresar),this.state.text);\r\n\t\tgetNodes = new DataSet(columnmajor.setDataNodes()[0]);\r\n\t\tgetEdges = new DataSet(columnmajor.setDataNodes()[1]);\r\n\t\tconsole.log(getNodes);\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tcolumnmajor.EliminarDato(parseInt(this.state.filaingresar),parseInt(this.state.columnaingresar));\r\n\t\tgetNodes = new DataSet(columnmajor.setDataNodes()[0]);\r\n\t\tgetEdges = new DataSet(columnmajor.setDataNodes()[1]);\r\n\t\tconsole.log(getNodes);\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleGenerar = () => {\r\n\t\tcolumnmajor.ConvertirColumnMajor();\r\n\t\tgetNodes2 = new DataSet(columnmajor.setData()[0]);\r\n\t\tgetEdges2 = new DataSet(columnmajor.setData()[1]);\r\n\t\tconsole.log(getNodes);\r\n\t\tdata2 = {\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tgetNodes2 = new DataSet(columnmajor.setData()[0]);\r\n\t\tgetEdges2 = new DataSet(columnmajor.setData()[1]);\r\n\t\tlet indice = columnmajor.BuscarDatoColumnMajor(parseInt(this.state.filaingresar),parseInt(this.state.columnaingresar));\r\n\t\tgetEdges2.add({from: parseInt(indice), to: parseInt(indice),value:parseInt(indice),color:{color:'#ff383f'}});\r\n\t\tdata2 = {\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\t\tlet paraarreglo=[]\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\t//let nombre = \"Estructura Compuesta\";\r\n\t\tif ((dataJson.categoria == \"Estructura Compuesta\")&&(dataJson.nombre==\"Column Major\")){\r\n\t\t\tcolumnmajor.set_i(parseInt(dataJson.m[0]));\r\n\t\t\tcolumnmajor.set_j(parseInt(dataJson.m[1]));\r\n\t\t\tcolumnmajor.InicializarMatriz();\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tcolumnmajor.InsertarDato(parseInt(dataJson.valores[i].indices[0]),parseInt(dataJson.valores[i].indices[1]),dataJson.valores[i].valor);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(columnmajor.setDataNodes()[0]);\r\n\t\t\tgetEdges = new DataSet(columnmajor.setDataNodes()[1]);\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA COMPUESTA O DE COLUMN MAJOR!! \")\r\n\t\t}\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\t\tconst element = document.createElement(\"a\");\r\n\t\tvar contenido = columnmajor.generateJSONColumnMajor();\r\n\t\tconst blob = new Blob([contenido]);                   \r\n\t\telement.href = URL.createObjectURL(blob);\r\n\t    element.download = \"ColumnMajor.json\";\r\n\t    document.body.appendChild(element);\r\n\t    element.click();\r\n\t    alert(\"Documento Creado!\")\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"minimo\" name=\"filas\" className=\"form-control\" placeholder=\"Ingresar No. Filas\" id=\"InputFilas\" value={this.state.filas} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"maximo\" name=\"columnas\" className=\"form-control\" placeholder=\"Ingresar No. Columnas\" id=\"InputColumnas\" value={this.state.columnas} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleGenerate()}>Generar Matriz</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"filaingresar\" className=\"form-control\" placeholder=\"No. Fila\" id=\"InputCola\" value={this.state.filaingresar} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"columnaingresar\" className=\"form-control\" placeholder=\"No. Columna\" id=\"InputCola\" value={this.state.columnaingresar} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleGenerar()}>Generar Column Major</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 20 + 'em'}} ref={this.appRef2} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default MatrizColumnMajor;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport Major from './Modelo/Compuesta/Major/RowColumnMajor'; // Importar la Estructura Lista Simple.\r\nvar rowmajor = new Major(5,5);\r\nvar getNodes = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar getNodes2 = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges2 = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar data2 = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar options = {\r\n\tnodes:{\r\n\t\tshape: \"box\",\r\n    \tmargin: 10,\r\n    \twidthConstraint: {\r\n    \t  maximum: 300,\r\n    \t},\r\n        borderWidth: 30,\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"UD\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n};\r\nvar options2 = {\r\n\tnodes:{\r\n\t\tshape: \"box\",\r\n    \tmargin: 10,\r\n    \twidthConstraint: {\r\n    \t  maximum: 300,\r\n    \t},\r\n        borderWidth: 30,\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"LR\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass MatrizRowMajor extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topcion: 'Simple',\r\n\t\t\ttamanio: '',\r\n\t\t\tfilas: '',\r\n\t\t\tcolumnas: '',\r\n\t\t\tfilaingresar: '',\r\n\t\t\tcolumnaingresar: '',\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\t//this.tablahash;\r\n\t  \tthis.network = {};\r\n\t\tthis.network2 = {};\r\n\t  \tthis.appRef = createRef();\r\n\t  \tthis.appRef2 = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\tcomponentDidMount2() {\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleGenerate = () => {\r\n\t\trowmajor.set_i(parseInt(this.state.filas));\r\n\t\trowmajor.set_j(parseInt(this.state.columnas));\r\n\t\trowmajor.InicializarMatriz();\r\n\t\tgetNodes = new DataSet(rowmajor.setDataNodes()[0]);\r\n\t\tgetEdges = new DataSet(rowmajor.setDataNodes()[1]);\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tconsole.log(\"Generado\")\r\n\t}\r\n\r\n\thandleAdd = () => {\r\n\t\trowmajor.InsertarDato(parseInt(this.state.filaingresar),parseInt(this.state.columnaingresar),this.state.text);\r\n\t\tgetNodes = new DataSet(rowmajor.setDataNodes()[0]);\r\n\t\tgetEdges = new DataSet(rowmajor.setDataNodes()[1]);\r\n\t\tconsole.log(getNodes);\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\trowmajor.EliminarDato(parseInt(this.state.filaingresar),parseInt(this.state.columnaingresar));\r\n\t\tgetNodes = new DataSet(rowmajor.setDataNodes()[0]);\r\n\t\tgetEdges = new DataSet(rowmajor.setDataNodes()[1]);\r\n\t\tconsole.log(getNodes);\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleGenerar = () => {\r\n\t\trowmajor.ConvertirRowMajor();\r\n\t\tgetNodes2 = new DataSet(rowmajor.setData()[0]);\r\n\t\tgetEdges2 = new DataSet(rowmajor.setData()[1]);\r\n\t\tconsole.log(getNodes);\r\n\t\tdata2 = {\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tgetNodes2 = new DataSet(rowmajor.setData()[0]);\r\n\t\tgetEdges2 = new DataSet(rowmajor.setData()[1]);\r\n\t\tlet indice = rowmajor.BuscarDatoRowMajor(parseInt(this.state.filaingresar),parseInt(this.state.columnaingresar));\r\n\t\tgetEdges2.add({from: parseInt(indice), to: parseInt(indice),value:parseInt(indice),color:{color:'#ff383f'}});\r\n\t\tdata2 = {\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\t\tlet paraarreglo=[]\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\t//let nombre = \"Estructura Compuesta\";\r\n\t\tif ((dataJson.categoria == \"Estructura Compuesta\")&&(dataJson.nombre==\"Row Major\")){\r\n\t\t\trowmajor.set_i(parseInt(dataJson.m[0]));\r\n\t\t\trowmajor.set_j(parseInt(dataJson.m[1]));\r\n\t\t\trowmajor.InicializarMatriz();\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\trowmajor.InsertarDato(parseInt(dataJson.valores[i].indices[0]),parseInt(dataJson.valores[i].indices[1]),dataJson.valores[i].valor);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(rowmajor.setDataNodes()[0]);\r\n\t\t\tgetEdges = new DataSet(rowmajor.setDataNodes()[1]);\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA COMPUESTA O DE COLUMN MAJOR!! \")\r\n\t\t}\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\t\tconst element = document.createElement(\"a\");\r\n\t\tvar contenido = rowmajor.generateJSONRowMajor();\r\n\t\tconst blob = new Blob([contenido]);                   \r\n\t\telement.href = URL.createObjectURL(blob);\r\n\t    element.download = \"RowMajor.json\";\r\n\t    document.body.appendChild(element);\r\n\t    element.click();\r\n\t    alert(\"Documento Creado!\")\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"minimo\" name=\"filas\" className=\"form-control\" placeholder=\"Ingresar No. Filas\" id=\"InputFilas\" value={this.state.filas} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"maximo\" name=\"columnas\" className=\"form-control\" placeholder=\"Ingresar No. Columnas\" id=\"InputColumnas\" value={this.state.columnas} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleGenerate()}>Generar Matriz</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"filaingresar\" className=\"form-control\" placeholder=\"No. Fila\" id=\"InputCola\" value={this.state.filaingresar} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"columnaingresar\" className=\"form-control\" placeholder=\"No. Columna\" id=\"InputCola\" value={this.state.columnaingresar} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleGenerar()}>Generar Row Major</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 20 + 'em'}} ref={this.appRef2} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default MatrizRowMajor;","class ListaCabeceraFilas {\r\n    \r\n    constructor() {\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n    insertar = (nodoNuevo) => {\r\n        if(this.vacia()==true){\r\n            this.setPrimero(nodoNuevo);\r\n            this.setUltimo(nodoNuevo);\r\n        }else{\r\n            if(nodoNuevo.getY() < this.getPrimero().getY()){ // Agregar Incicio\r\n                this.insertarInicio(nodoNuevo);\r\n            }else if (nodoNuevo.getY() > this.getUltimo().getY()){ //Agregar al final\r\n                this.insertarFinal(nodoNuevo);\r\n            }else{ // Agregar en medio\r\n                this.insertarMedio(nodoNuevo);\r\n            }\r\n        }\r\n    }\r\n\r\n    insertarInicio = (nodoNuevo) => {\r\n        this.getPrimero().setAnterior(nodoNuevo);\r\n        nodoNuevo.setSiguiente(this.getPrimero());\r\n        this.setPrimero(nodoNuevo);\r\n    }\r\n\r\n    insertarMedio = (nodoNuevo) => {\r\n        let tmp1 = null;\r\n        let tmp2 = null;\r\n        tmp1 = this.getPrimero();\r\n        while(tmp1.getY() < nodoNuevo.getY()){\r\n            tmp1 = tmp1.getSiguiente();\r\n        }\r\n\r\n        tmp2 = tmp1.getAnterior();\r\n        tmp2.setSiguiente(nodoNuevo);\r\n        nodoNuevo.setSiguiente(tmp1);\r\n        nodoNuevo.setAnterior(tmp2);\r\n        tmp1.setAnterior(nodoNuevo);\r\n    }\r\n\r\n    insertarFinal = (nodoNuevo) => {\r\n        this.getUltimo().setSiguiente(nodoNuevo);\r\n        nodoNuevo.setAnterior(this.getUltimo());\r\n        this.setUltimo(nodoNuevo);\r\n    }\r\n\r\n\r\n\r\n    delete = (y) => {\r\n\r\n        if(this.vacia()==true){\r\n            console.log(\"Empty!\")\r\n\r\n        }else{\r\n\r\n            if(this.getPrimero().getY() == y){ // Eliminar al Inicio\r\n                if(this.getPrimero().getSiguiente() != null){\r\n\r\n                    let temp = this.getPrimero().getSiguiente();\r\n                    this.getPrimero().setSiguiente(null);\r\n                    temp.setAnterior(null);\r\n                    this.setPrimero(temp);\r\n\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                }\r\n            }else if (this.getUltimo().getY() == y){ // Eliminar en Final\r\n\r\n                if(this.getUltimo().getAnterior() != null){\r\n\r\n                    let temp = this.getUltimo().getAnterior();\r\n                    this.getUltimo().setAnterior(null);\r\n                    temp.setSiguiente(null);\r\n                    this.setUltimo(temp);\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                }\r\n                \r\n            }else{  // Eliminar en Medio\r\n                \r\n                let nodo_actual = this.getPrimero()\r\n                do {\r\n                    console.log(this.getPrimero().getY())\r\n                    if (nodo_actual.getY() == y){\r\n                        \r\n                        let anterior = nodo_actual.getAnterior()\r\n                        let siguiente = nodo_actual.getSiguiente()\r\n                        \r\n                        nodo_actual.setSiguiente(null)\r\n                        nodo_actual.setAnterior(null)\r\n                        anterior.setSiguiente(siguiente)\r\n                        siguiente.setAnterior(anterior)\r\n\r\n                        return console.log(\"Delete!\");\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.getSiguiente();\r\n\r\n                } while (nodo_actual != null);\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    print = () => {\r\n        if(this.vacia() == false) {\r\n            let tmp = this.getPrimero();\r\n            while (tmp != null) {\r\n                console.log(\" Cabecera Y: \" + tmp.getY());\r\n                tmp = tmp.getSiguiente();\r\n            }\r\n        }else{\r\n            console.log(\"Empty\");\r\n        }\r\n    }\r\n\r\n    busqueda = (y) => {\r\n        if(this.vacia() == false){\r\n            let tmp = this.getPrimero();\r\n            while(tmp != null){\r\n                if(tmp.getY() == y){\r\n                    return tmp;\r\n                }\r\n                tmp = tmp.getSiguiente();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    vacia = () => {\r\n        if (this.getPrimero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    getPrimero = () => { return this.primero; }\r\n    setPrimero = (primero) => { this.primero = primero; }\r\n    getUltimo = () => { return this.ultimo; }\r\n    setUltimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n}\r\n\r\n\r\nexport default ListaCabeceraFilas;\r\n// module.exports = ListaCabeceraFilas;\r\n","class ListaCabeceraColumnas{\r\n\r\n    constructor() {\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n    insertar = (nodoNuevo) => {\r\n        if(this.vacia() == true){\r\n            this.setPrimero(nodoNuevo);\r\n            this.setUltimo(nodoNuevo);\r\n        }else{\r\n            if(nodoNuevo.getX() < this.getPrimero().getX()){ // Agregar al inicio\r\n                this.insertarInicio(nodoNuevo);\r\n            }else if (nodoNuevo.getX() > this.getUltimo().getX()){ // Agregar al final\r\n                this.insertarFinal(nodoNuevo);\r\n            }else{ // agregar medio\r\n                this.insertarMedio(nodoNuevo);\r\n            }\r\n        }\r\n    }\r\n\r\n    insertarInicio = (nodoNuevo) => {\r\n        this.getPrimero().setAnterior(nodoNuevo);\r\n        nodoNuevo.setSiguiente(this.getPrimero());\r\n        this.setPrimero(nodoNuevo);\r\n    }\r\n\r\n    insertarMedio = (nodoNuevo) => {\r\n        let tmp1 = null;\r\n        let tmp2 = null;\r\n        tmp1 = this.getPrimero();\r\n        while(tmp1.getX() < nodoNuevo.getX()){\r\n            tmp1 = tmp1.getSiguiente();\r\n        }\r\n\r\n        tmp2 = tmp1.getAnterior();\r\n        tmp2.setSiguiente(nodoNuevo);\r\n        nodoNuevo.setSiguiente(tmp1);\r\n        nodoNuevo.setAnterior(tmp2);\r\n        tmp1.setAnterior(nodoNuevo);\r\n    }\r\n\r\n    insertarFinal = (nodoNuevo) => {\r\n\r\n        this.getUltimo().setSiguiente(nodoNuevo);\r\n        nodoNuevo.setAnterior(this.getUltimo());\r\n        this.setUltimo(nodoNuevo);\r\n    }\r\n\r\n\r\n    delete = (x) => {\r\n\r\n        if(this.vacia()==true){\r\n            console.log(\"Empty!\")\r\n\r\n        }else{\r\n\r\n            if(this.getPrimero().getX() == x){ // Eliminar al Inicio\r\n                if(this.getPrimero().getSiguiente() != null){\r\n\r\n                    let temp = this.getPrimero().getSiguiente();\r\n                    this.getPrimero().setSiguiente(null);\r\n                    temp.setAnterior(null);\r\n                    this.setPrimero(temp);\r\n\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                }\r\n            }else if (this.getUltimo().getX() == x){ // Eliminar en Final\r\n\r\n                if(this.getUltimo().getAnterior() != null){\r\n\r\n                    let temp = this.getUltimo().getAnterior();\r\n                    this.getUltimo().setAnterior(null);\r\n                    temp.setSiguiente(null);\r\n                    this.setUltimo(temp);\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                }\r\n                \r\n            }else{  // Eliminar en Medio\r\n                \r\n                let nodo_actual = this.getPrimero()\r\n                do {\r\n                    console.log(this.getPrimero().getX())\r\n                    if (nodo_actual.getX() == x){\r\n                        \r\n                        let anterior = nodo_actual.getAnterior()\r\n                        let siguiente = nodo_actual.getSiguiente()\r\n                        \r\n                        nodo_actual.setSiguiente(null)\r\n                        nodo_actual.setAnterior(null)\r\n                        anterior.setSiguiente(siguiente)\r\n                        siguiente.setAnterior(anterior)\r\n\r\n                        return console.log(\"Delete!\");\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.getSiguiente();\r\n\r\n                } while (nodo_actual != null);\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    print = () => {\r\n        if(this.vacia()==false) {\r\n            let tmp = this.getPrimero();\r\n            while (tmp != null) {\r\n                console.log(\" Cabecera x: \" + tmp.getX());\r\n                tmp = tmp.getSiguiente();\r\n            }\r\n        }else{\r\n            console.log(\"Empty\");\r\n        }\r\n    }\r\n\r\n    busqueda = (x) => {\r\n        if(this.vacia()==false){\r\n            let tmp = this.getPrimero();\r\n            while(tmp != null){\r\n                if(tmp.getX() == x){\r\n                    return tmp;\r\n                }\r\n                tmp = tmp.getSiguiente();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    vacia = () => {\r\n        if (this.getPrimero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    getPrimero = () => { return this.primero; }\r\n    setPrimero = (primero) => { this.primero = primero; }\r\n    getUltimo = () => { return this.ultimo; }\r\n    setUltimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n}\r\n\r\n\r\nexport default ListaCabeceraColumnas;\r\n// module.exports = ListaCabeceraColumnas;\r\n","class ListaHorizontal {\r\n    constructor() {\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n    insertar = (nodoNuevo) => {\r\n        if(this.vacia()==true){\r\n            this.setPrimero(nodoNuevo);\r\n            this.setUltimo(nodoNuevo);\r\n        }else{\r\n            if(nodoNuevo.getX() < this.getPrimero().getX()){ // Agregar inicio\r\n                this.insertarInicio(nodoNuevo);\r\n            }else if (nodoNuevo.getX() > this.getUltimo().getX()){ // Agregar final\r\n                this.insertarFinal(nodoNuevo);\r\n            }else{  // Agregar medio\r\n                this.insertarMedio(nodoNuevo);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    insertarInicio = (nodoNuevo) => {\r\n        this.getPrimero().setIzquierda(nodoNuevo);\r\n        nodoNuevo.setDerecha(this.getPrimero());\r\n        this.setPrimero(nodoNuevo);\r\n    }\r\n\r\n    insertarMedio = (nodoNuevo) => {\r\n        let tmp1 = null;\r\n        let tmp2 = null;\r\n        tmp1 = this.getPrimero();\r\n        while(tmp1.getX() < nodoNuevo.getX()){\r\n            tmp1 = tmp1.getDerecha();\r\n        }\r\n\r\n        tmp2 = tmp1.getIzquierda();\r\n        tmp2.setDerecha(nodoNuevo);\r\n        nodoNuevo.setDerecha(tmp1);\r\n        nodoNuevo.setIzquierda(tmp2);\r\n        tmp1.setIzquierda(nodoNuevo);\r\n    }\r\n\r\n    insertarFinal = (nodoNuevo) => {\r\n        this.getUltimo().setDerecha(nodoNuevo);\r\n        nodoNuevo.setIzquierda(this.getUltimo());\r\n        this.setUltimo(nodoNuevo);\r\n    }\r\n\r\n    print = () => {         \r\n        if(this.vacia()==false) {\r\n            let tmp = this.getPrimero();\r\n            while (tmp != null) {\r\n                console.log(\"dato: \" + tmp.getDato() + \" posicion (x,y): \" + tmp.getX()  +  \",\" + tmp.getY());\r\n                tmp = tmp.getDerecha();\r\n            }\r\n        }else{\r\n            console.log(\"Empty\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    delete = (x) => {\r\n\r\n        if(this.vacia()==true){\r\n            console.log(\"Empty!\")\r\n\r\n        }else{\r\n\r\n            if(this.getPrimero().getX() == x){ // Eliminar al Inicio\r\n                if(this.getPrimero().getDerecha() != null){\r\n\r\n                    let temp = this.getPrimero().getDerecha();\r\n                    this.getPrimero().setDerecha(null);\r\n                    temp.setIzquierda(null);\r\n                    this.setPrimero(temp);\r\n\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                }\r\n            }else if (this.getUltimo().getX() == x){ // Eliminar en Final\r\n\r\n                if(this.getUltimo().getIzquierda() != null){\r\n\r\n                    let temp = this.getUltimo().getIzquierda();\r\n                    this.getUltimo().setIzquierda(null);\r\n                    temp.setDerecha(null);\r\n                    this.setUltimo(temp);\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                }\r\n                \r\n            }else{  // Eliminar en Medio\r\n                \r\n                let nodo_actual = this.getPrimero().getDerecha();\r\n                let anterior = this.getPrimero();\r\n                do {\r\n\r\n                    if (nodo_actual.getX() == x){\r\n                        \r\n                        let siguiente = nodo_actual.getDerecha();\r\n\r\n                        nodo_actual.setDerecha(null)\r\n                        nodo_actual.setIzquierda(null)\r\n                        anterior.setDerecha(siguiente)\r\n                        siguiente.setIzquierda(anterior)\r\n\r\n                        return console.log(\"Delete!\");\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.getDerecha();\r\n                    anterior = anterior.getDerecha();\r\n\r\n                } while (nodo_actual != null);\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    vacia = () => {\r\n        if (this.getPrimero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    getPrimero = () => { return this.primero; }\r\n    setPrimero = (primero) => { this.primero = primero; }\r\n    getUltimo = () => { return this.ultimo; }\r\n    setUltimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n}\r\n\r\nexport default ListaHorizontal;\r\n// module.exports = ListaHorizontal;\r\n","import ListaHorizontal from './ListaHorizontal.js';\r\n// const ListaHorizontal = require('./ListaHorizontal.js')\r\nclass NodoCabeceraFila {\r\n    \r\n    constructor(y) {\r\n        this.y = y;\r\n        this.siguiente = null;\r\n        this.anterior = null;\r\n        this.fila = new ListaHorizontal();\r\n    }\r\n\r\n    getSiguiente() { return this.siguiente; }\r\n\r\n    setSiguiente(siguiente) { this.siguiente = siguiente; }\r\n\r\n    getAnterior() { return this.anterior; }\r\n\r\n    setAnterior(antertior) { this.anterior = antertior; }\r\n\r\n    getFila() { return this.fila; }\r\n\r\n    setFila(fila) { this.fila = fila; }\r\n\r\n    getY() { return this.y; }\r\n\r\n    setY(y) { this.y = y; }\r\n}\r\n\r\n\r\nexport default NodoCabeceraFila;\r\n// module.exports = NodoCabeceraFila;\r\n","class ListaVertical {\r\n    \r\n    constructor() {\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n    insertar = (nodoNuevo) => {\r\n        if(this.vacia()==true){\r\n            this.setPrimero(nodoNuevo);\r\n            this.setUltimo(nodoNuevo);\r\n\r\n        }else{\r\n\r\n            if(nodoNuevo.getY() < this.getPrimero().getY()){ // Agrega al Inicio\r\n                this.insertarInicio(nodoNuevo);\r\n            }else if (nodoNuevo.getY() > this.getUltimo().getY()){ // Agrega en Final\r\n                this.insertarFinal(nodoNuevo);\r\n            }else{  // Agrega en Medio\r\n                this.insertarMedio(nodoNuevo);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    insertarInicio = (nodoNuevo) => {\r\n        this.getPrimero().setArriba(nodoNuevo)\r\n        nodoNuevo.setAbajo(this.getPrimero());\r\n        this.setPrimero(nodoNuevo)\r\n    }\r\n\r\n    insertarMedio = (nodoNuevo) => {\r\n\r\n        let tmp1 = null;\r\n        let tmp2 = null;\r\n        tmp1 = this.getPrimero();\r\n        while(tmp1.getY() < nodoNuevo.getY()){\r\n            tmp1 = tmp1.getAbajo();\r\n        }\r\n\r\n        tmp2 = tmp1.getArriba();\r\n        tmp2.setAbajo(nodoNuevo);\r\n        nodoNuevo.setAbajo(tmp1);\r\n        nodoNuevo.setArriba(tmp2);\r\n        tmp1.setArriba(nodoNuevo);\r\n    }\r\n\r\n    insertarFinal = (nodoNuevo) => {\r\n\r\n        this.getUltimo().setAbajo(nodoNuevo);\r\n        nodoNuevo.setArriba(this.getUltimo());\r\n        this.setUltimo(nodoNuevo);\r\n    }\r\n\r\n\r\n\r\n    delete = (y) => {\r\n\r\n        if(this.vacia()==true){\r\n            console.log(\"Empty!\")\r\n        }else{\r\n\r\n            if(this.getPrimero().getY() == y){ // Eliminar al Inicio\r\n                if(this.getPrimero().getAbajo() != null){\r\n\r\n                    let temp = this.getPrimero().getAbajo();\r\n                    this.getPrimero().setAbajo(null);\r\n                    temp.setArriba(null);\r\n                    this.setPrimero(temp);\r\n                    return true;\r\n\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                    return true;\r\n                }\r\n            }else if (this.getUltimo().getY() == y){ // Eliminar en Final\r\n\r\n                if(this.getUltimo().getArriba() != null){\r\n\r\n                    let temp = this.getUltimo().getArriba();\r\n                    this.getUltimo().setArriba(null);\r\n                    temp.setAbajo(null);\r\n                    this.setUltimo(temp);\r\n                    return true;\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                    return true;\r\n                }\r\n                \r\n            }else{  // Eliminar en Medio\r\n                \r\n                let nodo_actual = this.getPrimero().getAbajo();\r\n                let anterior = this.getPrimero();\r\n                do {\r\n                    console.log(nodo_actual)\r\n                    if (nodo_actual.getY() == y){\r\n                        \r\n                        let siguiente = nodo_actual.getAbajo();\r\n\r\n                        nodo_actual.setAbajo(null)\r\n                        nodo_actual.setArriba(null)\r\n                        anterior.setAbajo(siguiente)\r\n                        siguiente.setArriba(anterior)\r\n\r\n                        console.log(\"Delete!\");\r\n                        return true;\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.getAbajo();\r\n                    anterior = anterior.getAbajo();\r\n\r\n                } while (nodo_actual != null);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return null\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    print = () => {\r\n        if(this.vacia()==false) {\r\n            let tmp = this.getPrimero();\r\n            while (tmp != null) {\r\n                console.log(\"dato: \" + tmp.getDato() + \" posicion (x,y): \" + tmp.getX()  +  \",\" + tmp.getY());\r\n                tmp = tmp.getAbajo();\r\n            }\r\n        }else{\r\n            console.log(\"Empty\");\r\n        }\r\n    }\r\n\r\n    vacia = () => {\r\n            if (this.getPrimero() == null){\r\n                return true;\r\n            }else{\r\n                return false;\r\n            }\r\n    }\r\n\r\n\r\n    getPrimero = () => { return this.primero; }\r\n    setPrimero = (primero) => { this.primero = primero; }\r\n    getUltimo = () => { return this.ultimo; }\r\n    setUltimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n}\r\n\r\n\r\nexport default ListaVertical;\r\n// module.exports = ListaVertical;","import ListaVertical from './ListaVertical.js';\r\n// const ListaVertical = require('./ListaVertical.js')\r\nclass NodoCabeceraColumna {\r\n   \r\n    constructor(x) {\r\n        this.x = x;\r\n        this.siguiente = null;\r\n        this.anterior = null;\r\n        this.columna = new ListaVertical();\r\n    }\r\n\r\n    getSiguiente() { return this.siguiente; }\r\n\r\n    setSiguiente(siguiente) { this.siguiente = siguiente; }\r\n\r\n    getAnterior() { return this.anterior; }\r\n\r\n    setAnterior(anterior) { this.anterior = anterior; }\r\n\r\n    getColumna() { return this.columna; }\r\n\r\n    setColumna(columna) { this.columna = columna; }\r\n\r\n    getX() { return this.x; }\r\n\r\n    setX(x) { this.x = x; }\r\n}\r\n\r\n\r\nexport default NodoCabeceraColumna;\r\n// module.exports = NodoCabeceraColumna;\r\n","class NodoOrtogonal {\r\n \r\n    constructor(x, y, dato) {\r\n        this.dato = dato;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.arriba = null;\r\n        this.abajo = null;\r\n        this.izquierda = null;\r\n        this.derecha = null;\r\n    }\r\n\r\n    getDato = () => { return this.dato; }\r\n    setDato = (dato) =>{ this.dato = dato; }\r\n\r\n    getX = () => {return this.x; }\r\n\r\n    getY = () => {return this.y; }\r\n\r\n    getArriba = () => {return this.arriba; }\r\n\r\n    setArriba = (arriba) => {this.arriba = arriba; }\r\n\r\n    getAbajo = () => {return this.abajo; }\r\n\r\n    setAbajo = (abajo) => { this.abajo = abajo; }\r\n\r\n    getIzquierda = () => {return this.izquierda; }\r\n\r\n    setIzquierda = (izquierda) => {this.izquierda = izquierda; }\r\n\r\n    getDerecha = () => {return this.derecha; }\r\n\r\n    setDerecha = (derecha) => {this.derecha = derecha; }\r\n}\r\n\r\n\r\n\r\nexport default NodoOrtogonal;\r\n// module.exports = NodoOrtogonal;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport MatrizOrtogonal from './Modelo/Compuesta/MatrizDispersa/MatrizOrtogonal.js'; // Importar la Estructura Lista Simple.\r\nvar matrizDispersa = new MatrizOrtogonal(); // Instancia de la matrizDispersa.\r\nvar getNodes = new DataSet(matrizDispersa.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(matrizDispersa.setEdgesDataSet());\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 120,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 20,\r\n        color: {\r\n            background: '#F2FF9D',\r\n            border:  '#6CCECD',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    },\r\n    layout:{\r\n\t\thierarchical: {\r\n\t\t  direction: \"UD\",\r\n\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass MatrizDispersa extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\ttextX: '',\r\n\t\t\ttextY: '',\r\n\t\t\testado: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\tlet dato = matrizDispersa.search(this.state.textX, this.state.textY, this.state.text);\r\n\t\tconsole.log(dato)\r\n\t\tif(dato==null){\r\n\r\n\t\t\tmatrizDispersa.insertar(this.state.textX, this.state.textY, this.state.text);\r\n\t\t\tgetNodes = new DataSet(matrizDispersa.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(matrizDispersa.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\t}else{\r\n\r\n\t\t\talert(\"YA EXISTE UN DATO EN ESA POSICION\")\r\n\t\t}\r\n\t\t\t\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tmatrizDispersa.delete(this.state.textX, this.state.textY, this.state.text);\r\n\t\tgetNodes = new DataSet(matrizDispersa.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(matrizDispersa.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tmatrizDispersa.update(this.state.textX, this.state.textY, this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(matrizDispersa.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(matrizDispersa.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet dato = matrizDispersa.getNodesDataSet(this.state.textX, this.state.textY, this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n\t\t\tgetNodes = new DataSet(matrizDispersa.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(matrizDispersa.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tconsole.log(dato)\r\n\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Compuesta\"){\r\n\r\n\t\t\t\r\n\t\t\t// for (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t// \tconsole.log(dataJson.valores[i]);\r\n\t\t\t// \t// matrizDispersa.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t// }\r\n\t\t\tvar posicionX  = null;\r\n\t\t\tvar posicionY = null; \r\n\t\t\tvar i = 0;\r\n\t\t\tdataJson.valores.forEach(function(element){\r\n\t\t\t\ti = 1\r\n\t\t\t\telement.indices.forEach(function(posicion){\r\n\t\t\t\t\tif(i==1){\r\n\t\t\t\t\t\tposicionX = posicion;\r\n\t\t\t\t\t}else if(i==2){\r\n\t\t\t\t\t\tposicionY = posicion;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(posicionX+\",\"+posicionY+\"->\"+element.valor);\r\n\t\t\t\tlet dato = matrizDispersa.getData(posicionX, posicionY);\r\n\t\t\t\tif(dato!=null){\r\n\t\t\t\t\tmatrizDispersa.update(posicionX, posicionY, dato, element.valor);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tmatrizDispersa.insertar(posicionX, posicionY, element.valor);\t\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\r\n\t\t\tgetNodes = new DataSet(matrizDispersa.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(matrizDispersa.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\t\tconst element = document.createElement(\"a\");\r\n\t\tvar contenido = matrizDispersa.generateJSON()\r\n\t\tconst blob = new Blob([contenido]);                   \r\n\t\telement.href = URL.createObjectURL(blob);\r\n\t    element.download = \"matrizdispersa.json\";\r\n\t    document.body.appendChild(element);\r\n\t    element.click();\r\n\t    alert(\"Documento Creado!\")\r\n\t\t\r\n\t}\r\n\r\n\thandleCabecera = () => {\r\n\t\tmatrizDispersa.desactivarEncabezado(this.state.estado)\r\n\t\tgetNodes = new DataSet(matrizDispersa.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(matrizDispersa.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"textX\" className=\"form-control\" placeholder=\"Posicion: X\" id=\"InputCola\" value={this.state.textX} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"textY\" className=\"form-control\" placeholder=\"Posicion: Y\" id=\"InputCola\" value={this.state.textY} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<input type=\"text\" name=\"estado\" className=\"form-control\" placeholder=\"True/False\" id=\"InputCola\" value={this.state.estado} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleCabecera()} >Cabecera</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default MatrizDispersa;","import ListaCabeceraFilas from './ListaCabeceraFilas.js';\r\n// const ListaCabeceraFilas = require('./ListaCabeceraFilas.js')\r\nimport ListaCabeceraColumnas from './ListaCabeceraColumnas.js';\r\n// const ListaCabeceraColumnas = require('./ListaCabeceraColumnas.js')\r\nimport NodoCabeceraFila from './NodoCabeceraFila.js';\r\n// const NodoCabeceraFila = require('./NodoCabeceraFila.js')\r\nimport NodoCabeceraColumna from './NodoCabeceraColumna.js';\r\n// const NodoCabeceraColumna = require('./NodoCabeceraColumna.js')\r\nimport NodoOrtogonal from './NodoOrtogonal.js';\r\n// const NodoOrtogonal = require('./NodoOrtogonal.js')\r\n\r\nclass MatrizOrtogonal {\r\n\r\n    constructor() {\r\n        this.filas = new ListaCabeceraFilas();\r\n        this.columnas = new ListaCabeceraColumnas();\r\n        this.estado = false;\r\n    }\r\n\r\n    insertar = (x, y, dato) =>{\r\n        \r\n        var nodoNuevo = new NodoOrtogonal(x, y, dato);\r\n        if(this.getColumna().busqueda(x) == null){ // VERIFICA QUE EXISTA LA CABECERA COLUMNAS.\r\n            this.getColumna().insertar(new NodoCabeceraColumna(x));\r\n        }\r\n        if(this.getFila().busqueda(y) == null){ // VERIFICA QUE EXISTA LA CABECERA FILAS.\r\n            this.getFila().insertar(new NodoCabeceraFila(y));\r\n        }\r\n\r\n        this.getColumna().busqueda(x).getColumna().insertar(nodoNuevo);\r\n        this.getFila().busqueda(y).getFila().insertar(nodoNuevo);\r\n\r\n    }\r\n\r\n    print = () => {\r\n\r\n        var nodo_cabecera = this.getFila().getPrimero();\r\n        var nodo_actual = null;\r\n        if(nodo_cabecera != null){\r\n            do{\r\n                console.log(nodo_cabecera.getY());\r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();\r\n                if(nodo_actual != null){\r\n                    do{\r\n                        console.log(\"dato: \" + nodo_actual.getDato() + \" posicion (x,y): \" + nodo_actual.getX()  +  \",\" + nodo_actual.getY());\r\n                        nodo_actual = nodo_actual.getDerecha();\r\n                    }while(nodo_actual != null);   \r\n                }   \r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n            \r\n\r\n        console.log(\"-\")\r\n        nodo_cabecera = this.getColumna().getPrimero();\r\n        nodo_actual = null;\r\n        if(nodo_cabecera != null){\r\n             do{\r\n                console.log(nodo_cabecera.getX());\r\n                let nodo_actual = nodo_cabecera.getColumna().getPrimero();\r\n                if(nodo_actual != null){\r\n                     do{\r\n                        console.log(\"dato: \" + nodo_actual.getDato() + \" posicion (x,y): \" + nodo_actual.getX()  +  \",\" + nodo_actual.getY());\r\n                        nodo_actual = nodo_actual.getAbajo();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n           \r\n    }\r\n\r\n    search = (x, y, dato) => {\r\n\r\n        var nodo_cabecera = this.getFila().getPrimero();\r\n        var nodo_actual = null;\r\n        if (nodo_cabecera != null){\r\n            do{\r\n               \r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();\r\n                if (nodo_actual != null){\r\n                    do{\r\n                    if (nodo_actual.getDato() == dato && nodo_actual.getX() == x && nodo_actual.getY() == y){\r\n                        console.log(\"dato: \" + nodo_actual.getDato() + \" posicion (x,y): \" + nodo_actual.getX()  +  \",\" + nodo_actual.getY());\r\n                        return nodo_actual    \r\n                    }\r\n                    nodo_actual = nodo_actual.getDerecha();\r\n                }while(nodo_actual != null);   \r\n                }\r\n                \r\n                \r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n                \r\n            }while(nodo_cabecera != null);\r\n        }\r\n        console.log(\"Data not Found\")\r\n        return null\r\n    }\r\n\r\n    getData = (x, y) => {\r\n\r\n        var nodo_cabecera = this.getFila().getPrimero();\r\n        var nodo_actual = null;\r\n        if (nodo_cabecera != null){\r\n            do{\r\n               \r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();\r\n                if (nodo_actual != null){\r\n                    do{\r\n                    if (nodo_actual.getX() == x && nodo_actual.getY() == y){\r\n                        console.log(\"dato: \" + nodo_actual.getDato() + \" posicion (x,y): \" + nodo_actual.getX()  +  \",\" + nodo_actual.getY());\r\n                        return nodo_actual.getDato()    \r\n                    }\r\n                    nodo_actual = nodo_actual.getDerecha();\r\n                }while(nodo_actual != null);   \r\n                }\r\n                \r\n                \r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n                \r\n            }while(nodo_cabecera != null);\r\n        }\r\n        console.log(\"Data not Found\")\r\n        return null\r\n    }\r\n\r\n\r\n    update = (x, y, dato, cambio) => {\r\n\r\n\r\n        var nodo_cabecera = this.getFila().getPrimero();\r\n        var nodo_actual = null;\r\n        if(nodo_cabecera != null){\r\n            do{\r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();\r\n                if (nodo_actual != null){\r\n                    do{\r\n                        if (nodo_actual.getDato() == dato && nodo_actual.getX() == x && nodo_actual.getY() == y){\r\n                            nodo_actual.setDato(cambio)\r\n                            console.log(\"UPDATE -> dato: \" + nodo_actual.getDato() + \" posicion (x,y): \" + nodo_actual.getX()  +  \",\" + nodo_actual.getY());\r\n                            return nodo_actual    \r\n                        }\r\n                        nodo_actual = nodo_actual.getDerecha();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n                \r\n            }while(nodo_cabecera != null);\r\n        }\r\n        console.log(\"Data not Found\")\r\n        return null\r\n\r\n\r\n    }\r\n\r\n    delete = (x, y, dato) => {\r\n\r\n        if(this.search(x, y, dato) != null){\r\n            this.getColumna().busqueda(x).getColumna().delete(y)\r\n            this.getFila().busqueda(y).getFila().delete(x);\r\n        }\r\n        if(this.getColumna().busqueda(x).getColumna().getPrimero() == null){ \r\n            this.getColumna().delete(x); \r\n        }\r\n        if (this.getFila().busqueda(y).getFila().getPrimero()==null){ \r\n            this.getFila().delete(y); \r\n        }\r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var nodo_cabecera = this.getColumna().getPrimero();\r\n        var nodo_actual = null;\r\n        var dot = [];\r\n        var contador = 1;\r\n\r\n        if(nodo_cabecera != null){\r\n            do{\r\n                if(this.estado == true){\r\n                    dot.push({id:parseInt(contador), label:\"Fila: \"+String(nodo_cabecera.getX()), level:parseInt(nodo_cabecera.getX()+1)});\r\n                }\r\n                contador++;\r\n                let nodo_actual = nodo_cabecera.getColumna().getPrimero();\r\n                if(nodo_actual != null){\r\n                    do{\r\n                        dot.push({id:parseInt(contador), label:\"(\"+String(nodo_actual.getX())+\",\"+String(nodo_actual.getY())+\")\"+String(nodo_actual.getDato()), level:parseInt(nodo_actual.getX()+1)}); \r\n                        contador++;\r\n                        nodo_actual = nodo_actual.getAbajo();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n\r\n        nodo_cabecera = this.getFila().getPrimero();\r\n        nodo_actual = null;\r\n        if(nodo_cabecera != null){\r\n            \r\n            do{\r\n                if(this.estado==true){\r\n                dot.push({id:parseInt(contador), label: \"Columna: \"+String(nodo_cabecera.getY()), level:0});\r\n                } \r\n                contador++;\r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();    \r\n                if (nodo_actual != null){\r\n                    do{\r\n                        contador++;\r\n                        nodo_actual = nodo_actual.getDerecha();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n\r\n        return dot;\r\n\r\n    }\r\n\r\n    getNodesDataSet = (x,y,dato) =>{\r\n        var nodo_cabecera = this.getColumna().getPrimero();\r\n        var nodo_actual = null;\r\n        var contador = 1;\r\n\r\n        if(nodo_cabecera != null){\r\n            do{\r\n                contador++;\r\n                let nodo_actual = nodo_cabecera.getColumna().getPrimero();\r\n                if(nodo_actual != null){\r\n                    do{ \r\n                        if (nodo_actual.getX()==x && nodo_actual.getY()==y && nodo_actual.getDato()==dato){\r\n                            // console.log(nodo_actual.getX()+\",\"+nodo_actual.getY()+\"->(\"+contador+\")\"+nodo_actual.getDato())\r\n                            return contador\r\n                        }\r\n                        contador++;\r\n                        nodo_actual = nodo_actual.getAbajo();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        var nodo_cabecera = this.getColumna().getPrimero();\r\n        var nodo_actual = null;\r\n        var dot = [];\r\n        var contador = 1;\r\n        var tempContador = 1;\r\n\r\n        if(nodo_cabecera != null){\r\n            do{\r\n                tempContador = contador\r\n                contador++;\r\n                let nodo_actual = nodo_cabecera.getColumna().getPrimero();\r\n                if(nodo_actual != null){\r\n                    let aux = this.getNodesDataSet(nodo_actual.getX(), nodo_actual.getY(), nodo_actual.getDato())\r\n                    if(aux!=null){\r\n                        dot.push({from:parseInt(tempContador), to:aux, arrows: \"to\"});\r\n                    }\r\n                    do{\r\n\r\n                        if(nodo_actual.getAbajo()!=null){\r\n                            dot.push({from:parseInt(contador), to:parseInt(contador+1), arrows: \"to\"});\r\n                            dot.push({from:parseInt(contador+1), to:parseInt(contador), arrows: \"to\"});\r\n                        } \r\n                        contador++;\r\n                        nodo_actual = nodo_actual.getAbajo();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n\r\n                if (nodo_cabecera.getSiguiente() != null){\r\n                        dot.push({from:parseInt(tempContador), to:parseInt(contador), arrows: \"to\"});\r\n                }\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n\r\n        nodo_cabecera = this.getFila().getPrimero();\r\n        nodo_actual = null;\r\n        if(nodo_cabecera != null){\r\n            \r\n            do{\r\n\r\n                tempContador = contador;\r\n                contador++;\r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();    \r\n                if (nodo_actual != null){\r\n                    let aux = this.getNodesDataSet(nodo_actual.getX(), nodo_actual.getY(), nodo_actual.getDato())\r\n                    if(aux!=null){\r\n                        dot.push({from:parseInt(tempContador), to:aux, arrows: \"to\"});\r\n                    }\r\n                    do{\r\n                        if(nodo_actual.getDerecha()!=null){\r\n                            console.log(\"prro\")\r\n                            let auxNodoUno = this.getNodesDataSet(nodo_actual.getX(), nodo_actual.getY(), nodo_actual.getDato())\r\n                            let auxNodoDos = this.getNodesDataSet(nodo_actual.getDerecha().getX(), nodo_actual.getDerecha().getY(), nodo_actual.getDerecha().getDato())\r\n                            console.log(nodo_actual.getDato() +\" \"+auxNodoDos+\"-> \" + nodo_actual.getDerecha().getDato()+ \" \"+auxNodoUno)\r\n                            dot.push({from:parseInt(auxNodoDos), to:parseInt(auxNodoUno), arrows: \"to\"});\r\n                            dot.push({from:parseInt(auxNodoUno), to:parseInt(auxNodoDos), arrows: \"to\"});\r\n                        }\r\n                        contador++;\r\n                        nodo_actual = nodo_actual.getDerecha();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n                if (nodo_cabecera.getSiguiente() != null){\r\n                        dot.push({from:parseInt(tempContador), to:parseInt(contador), arrows: \"to\"});\r\n                }\r\n\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n\r\n        return dot;\r\n    }\r\n\r\n    desactivarEncabezado = (state) => {\r\n        if(state==\"True\"){\r\n            this.estado = true;\r\n        }else if(state==\"False\"){\r\n            this.estado = false;\r\n        }\r\n    }\r\n\r\n\r\n    generateJSON = () => {\r\n\r\n        var json = \"{\\n  \\\"categoria\\\" : \\\"Estructura Compuesta\\\",\\n  \\\"nombre\\\" : \\\"Matriz Dispersa\\\",\\n  \\\"animacion\\\" : 10,\\n  \\\"valores\\\": [\\n\"\r\n        \r\n        var nodo_cabecera = this.getFila().getPrimero();\r\n        var nodo_actual = null;\r\n        if(nodo_cabecera != null){\r\n            do{\r\n                console.log(nodo_cabecera.getY());\r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();\r\n                if(nodo_actual != null){\r\n                    do{\r\n                        if(nodo_cabecera.getSiguiente()!=null){\r\n                            if(typeof(parseInt(nodo_actual.getDato())) == \"number\"  && 0 <= parseInt(nodo_actual.getDato())){\r\n                                json = json + \"\\n\\t{\\n\\t\\\"indices\\\": [\\n\\t\\t\" + String(nodo_actual.getX()) + \",\\n\\t\\t\" + String(nodo_actual.getY()) + \"\\n\\t  ],\\n\\t  \\\"valor\\\": \" + parseInt(nodo_actual.getDato())+\"\\n\\t},\"\r\n\r\n                            }else if (typeof(nodo_actual.getDato()) == \"string\" ){\r\n                                json = json + \"\\n\\t{\\n\\t\\\"indices\\\": [\\n\\t\\t\" + String(nodo_actual.getX()) + \",\\n\\t\\t\" + String(nodo_actual.getY()) + \"\\n\\t  ],\\n\\t  \\\"valor\\\": \" + \"\\\"\" + nodo_actual.getDato()+ \"\\\"\" + \"\\n\\t},\"\r\n\r\n                            }\r\n                        }else{\r\n                            if(typeof(parseInt(nodo_actual.getDato())) == \"number\"  && 0 <= parseInt(nodo_actual.getDato())){\r\n                                json = json + \"\\n\\t{\\n\\t\\\"indices\\\": [\\n\\t\\t\" + String(nodo_actual.getX()) + \",\\n\\t\\t\" + String(nodo_actual.getY()) + \"\\n\\t  ],\\n\\t  \\\"valor\\\": \" + parseInt(nodo_actual.getDato())+\"\\n\\t}\"\r\n\r\n                            }else if (typeof(nodo_actual.getDato()) == \"string\" ){\r\n                                json = json + \"\\n\\t{\\n\\t\\\"indices\\\": [\\n\\t\\t\" + String(nodo_actual.getX()) + \",\\n\\t\\t\" + String(nodo_actual.getY()) + \"\\n\\t  ],\\n\\t  \\\"valor\\\": \" + \"\\\"\" + nodo_actual.getDato()+ \"\\\"\" + \"\\n\\t}\"\r\n\r\n                            }\r\n                        }\r\n                        nodo_actual = nodo_actual.getDerecha();\r\n                    }while(nodo_actual != null);   \r\n                }   \r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n        json = json + \"\\n  ]\\n}\"\r\n        \r\n        return json\r\n            \r\n    }\r\n\r\n    getColumna = () =>{ return this.columnas; }\r\n    setColumna = (columna) => { this.columnas = columna; }\r\n    getFila = () =>{ return this.filas; }\r\n    setFila = (fila) => { this.filas = fila; }\r\n\r\n}\r\n\r\nexport default MatrizOrtogonal;\r\n// module.exports = MatrizOrtogonal;\r\n","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport HashAbierta from './Modelo/NoLineal/HashAbierta'; // Importar la Estructura Lista Simple.\r\nvar tablahash = new HashAbierta(5,30,80);\r\nvar getNodes = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        shape: \"box\",\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"DU\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass TablaHashAbierta extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topcion: 'Simple',\r\n\t\t\ttamanio: '',\r\n\t\t\tminimo: '',\r\n\t\t\tmaximo: '',\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t\t//this.tablahash;\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleGenerate = () => {\r\n\t\ttablahash.set_m(parseInt(this.state.tamanio));\r\n\t\ttablahash.set_min(parseInt(this.state.minimo));\r\n\t\ttablahash.set_max(parseInt(this.state.maximo));\r\n\t\ttablahash.InicializarArreglo();\r\n\t\tlet numero = 2\r\n\t\tconsole.log(typeof numero);\r\n\t\tconsole.log(\"Generado\");\r\n\t}\r\n\r\n\thandleAdd = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.InsertarSimple(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.InsertarSimple(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.InsertarDivision(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.InsertarDivision(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Div\");\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.InsertarMultiplicacion(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.InsertarMultiplicacion(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Mult\");\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.EliminarSimple(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.EliminarSimple(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.EliminarDivision(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.EliminarDivision(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Div\");\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.EliminarMultiplicacion(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.EliminarMultiplicacion(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Mult\");\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tlet esentero2 = true;\r\n\t\tlet entero2 = parseInt(this.state.dato_actualizado); \r\n\t\tif(isNaN(entero2)){\r\n\t\t\tesentero2=false;\r\n\t\t}\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),parseInt(this.state.dato_actualizado),\"Simple\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),this.state.dato_actualizado,\"Simple\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,parseInt(this.state.dato_actualizado),\"Simple\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,\"Simple\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,\"Simple\");\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),parseInt(this.state.dato_actualizado),\"Division\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.log(\"DIVIVIIVIVIVI\");\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),this.state.dato_actualizado,\"Division\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,parseInt(this.state.dato_actualizado),\"Division\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,\"Division\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),parseInt(this.state.dato_actualizado),\"Multiplicacion\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),this.state.dato_actualizado,\"Multiplicacion\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,parseInt(this.state.dato_actualizado),\"Multiplicacion\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,\"Multiplicacion\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tlet indicei=0;\r\n\t\t\tlet indicej=0;\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tindicei=tablahash.BuscarSimple(parseInt(this.state.text))[0];\r\n\t\t\t\tindicej=tablahash.BuscarSimple(parseInt(this.state.text))[1];\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,parseInt(this.state.text))[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,parseInt(this.state.text))[1]);\r\n\t\t\t}else{\r\n\t\t\t\tindicei=tablahash.BuscarSimple(this.state.text)[0];\r\n\t\t\t\tindicej=tablahash.BuscarSimple(this.state.text)[1];\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,this.state.text)[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,this.state.text)[1]);\r\n\t\t\t}\r\n\t\t\tconsole.log(\"indicei: \"+indicei);\r\n\t\t\tconsole.log(\"indicej: \"+indicej);\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tlet indicei=0;\r\n\t\t\tlet indicej=0;\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tindicei=tablahash.BuscarDivision(parseInt(this.state.text))[0];\r\n\t\t\t\tindicej=tablahash.BuscarDivision(parseInt(this.state.text))[1];\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,parseInt(this.state.text))[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,parseInt(this.state.text))[1]);\r\n\t\t\t}else{\r\n\t\t\t\tindicei=tablahash.BuscarDivision(this.state.text)[0];\r\n\t\t\t\tindicej=tablahash.BuscarDivision(this.state.text)[1];\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,this.state.text)[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,this.state.text)[1]);\r\n\t\t\t}\r\n\t\t\tconsole.log(\"indicei: \"+indicei);\r\n\t\t\tconsole.log(\"indicej: \"+indicej);\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tlet indicei=0;\r\n\t\t\tlet indicej=0;\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tindicei=tablahash.BuscarMultiplicacion(parseInt(this.state.text))[0];\r\n\t\t\t\tindicej=tablahash.BuscarMultiplicacion(parseInt(this.state.text))[1];\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,parseInt(this.state.text))[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,parseInt(this.state.text))[1]);\r\n\t\t\t}else{\r\n\t\t\t\tindicei=tablahash.BuscarMultiplicacion(this.state.text)[0];\r\n\t\t\t\tindicej=tablahash.BuscarMultiplicacion(this.state.text)[1];\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,this.state.text)[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(indicei,indicej,this.state.text)[1]);\r\n\t\t\t}\r\n\t\t\tconsole.log(\"indicei: \"+indicei);\r\n\t\t\tconsole.log(\"indicej: \"+indicej);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\t\tlet paraarreglo=[]\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\t//let nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura No Lineal\"){\r\n\r\n\t\t\ttablahash.set_m(parseInt(dataJson.m));\r\n\t\t\ttablahash.set_min(parseInt(dataJson.minimo));\r\n\t\t\ttablahash.set_max(parseInt(dataJson.maximo));\r\n\t\t\ttablahash.InicializarArreglo();\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tif(dataJson.funcion==\"Simple\"){\r\n\t\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\t\ttablahash.InsertarSimple(dataJson.valores[i].toString())\r\n\t\t\t\t}else if(dataJson.funcion==\"Division\"){\r\n\t\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\t\ttablahash.InsertarDivision(dataJson.valores[i].toString())\r\n\t\t\t\t}else if(dataJson.funcion==\"Multiplicacion\"){\r\n\t\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\t\ttablahash.InsertarMultiplicacion(dataJson.valores[i].toString())\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA NO LINEAL!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\t\tconst element = document.createElement(\"a\");\r\n\t\tvar contenido = tablahash.generateJSON(this.state.opcion);\r\n\t\tconst blob = new Blob([contenido]);                   \r\n\t\telement.href = URL.createObjectURL(blob);\r\n\t    element.download = \"TablaHashAbierta.json\";\r\n\t    document.body.appendChild(element);\r\n\t    element.click();\r\n\t    alert(\"Documento Creado!\")\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"tamanio\" name=\"tamanio\" className=\"form-control\" placeholder=\"Ingresar Tamaño Tabla\" id=\"InputTamanio\" value={this.state.tamanio} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"minimo\" name=\"minimo\" className=\"form-control\" placeholder=\"Ingresar Minimo\" id=\"InputMinimo\" value={this.state.minimo} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"maximo\" name=\"maximo\" className=\"form-control\" placeholder=\"Ingresar Maximo\" id=\"InputMaximo\" value={this.state.maximo} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleGenerate()}>Generar Tabla</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<select type=\"opcion\" name=\"opcion\" className=\"form-select\" onChange={this.handleInputChange}>\r\n        \t\t\t\t<option value=\"Simple\">Simple</option>\r\n        \t\t\t\t<option value=\"Division\">Division</option>\r\n        \t\t\t\t<option value=\"Multiplicacion\">Multiplicacion</option>\r\n      \t\t\t\t</select>\r\n      \t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default TablaHashAbierta;","class HashAbierta{\r\n\tinsertados=0;\r\n\tarrreglo=[];\r\n\tconstructor(m, min, max){\r\n\t\tthis.m = m;\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\t\tthis.InicializarArreglo();\r\n\t}\r\n\tConvertirString=(cadena)=>{\r\n\t\tlet result=0;\r\n\t\tfor(let i=0;i<cadena.length;i++){\r\n\t\t\tresult+=cadena.charCodeAt(i);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tConvertirArreglo=(arreglo)=>{\r\n\t\tlet nuevoarreglo=[]\r\n\t\tfor(let i=0;i<arreglo.length;i++){\r\n\t\t\tlet result=0;\r\n\t\t\tfor(let j=0;j<arreglo[i].length;j++){\r\n\t\t\t\tresult+=arreglo[i].charCodeAt(j);\r\n\t\t\t}\r\n\t\t\tnuevoarreglo.push(result);\r\n\t\t}\r\n\t\treturn nuevoarreglo;\r\n\t}\r\n\tInicializarArreglo=()=>{\r\n\t\tthis.insertados=0;\r\n\t\tthis.arrreglo=[];\r\n\t\tlet tamanio = this.get_m();\r\n\t\tfor(let i=0;i<tamanio;i++){\r\n\t\t\tthis.arrreglo.push([-1]);\r\n\t\t}\r\n\t}\r\n\tCapacidad=()=>{\r\n\t\tlet raro=0;\r\n\t\tfor(let i=0; i<this.get_sizearreglo() ;i++){\r\n\t\t\tlet aux = [ -1 ];\r\n\t\t\tif(this.arrreglo[i]==-1){\r\n\t\t\t\traro= raro + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet ocupado= this.get_sizearreglo()-raro;\r\n\t\treturn ocupado;\r\n\t}\r\n\tget_sizearreglo=()=>{\r\n\t\treturn this.arrreglo.length;\r\n\t}\r\n\tset_m=(m)=>{this.m=m;}\r\n\tget_m=()=>{return this.m;}\r\n\tset_min=(min)=>{this.min=min}\r\n\tget_min=()=>{return this.min;}\r\n\tset_max=(max)=>{this.max=max;}\r\n\tget_max=()=>{return this.max;}\r\n\tget_numarreglo=(indice)=>{\r\n\t\treturn this.arrreglo[indice];\r\n\t}\r\n\tImprimir=()=>{\r\n\t\tlet linea=\"[\";\r\n\t\tfor(let i=0; i<this.get_m();i++){\r\n\t\t\tlinea += \" \"+this.arrreglo[i];\r\n\t\t}\r\n\t\tlet porcetaje = (this.Capacidad()*100/this.get_m())+ \"%\";\r\n\t\tlinea+=\" ]\"+porcetaje;\r\n\t\tconsole.log(linea);\r\n\t}\r\n\tFuncionDivision = (k) =>{\r\n\t\treturn ( k % this.get_m() );\r\n\t}\r\n\tFuncionSimple = (k)=>{\r\n\t\tlet reducido = parseInt(k);\r\n\t\tlet retorno=0;\r\n\t\twhile(reducido>=1){\r\n\t\t\treducido = reducido/2;\r\n\t\t}\r\n\t\tretorno= Math.round( reducido * parseInt(this.m));\r\n\t\tif(parseInt(retorno)==this.get_m()){\r\n\t\t\tretorno=parseInt(retorno)-1;\r\n\t\t}\r\n\t\treturn (parseInt(retorno));\r\n\t}\r\n\tFuncionMultiplicacion=(k)=>{\r\n\t\tlet a = 0.1625277911;\r\n\t\treturn (Math.round(this.get_m()*((a*k)%1)));\r\n\t}\r\n\tRehashing=(tipo)=>{\r\n\t\tif(((this.Capacidad()*100)/this.get_m())>=this.get_max()){\r\n\t\t\tlet aux = this.arrreglo;\r\n\t\t\tthis.Imprimir();\r\n\t\t\tlet m_anterior = this.get_m();\r\n\t\t\tthis.set_m(this.Capacidad()*100/this.get_min());\r\n\t\t\tthis.InicializarArreglo();\r\n\t\t\tfor(let i=0; i<m_anterior; i++){\r\n\t\t\t\tconsole.log(aux[i]);\r\n\t\t\t\tif(aux[i]!=-1){\r\n\t\t\t\t\tif(tipo==\"Division\"){\r\n\t\t\t\t\t\tconsole.log(\"Division reh\"+aux[i]);\r\n\t\t\t\t\t\tfor(let j=0;j<aux[i].length;j++){\r\n\t\t\t\t\t\t\tlet esono = typeof aux[i][j];\r\n\t\t\t\t\t\t\tif(esono==\"string\"){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+aux[i][j];\r\n\t\t\t\t\t\t\t\tthis.InsertarDivision(aux[i][j]);\r\n\t\t\t\t\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\t\t\t\t\tthis.InsertarDivision(parseInt(aux[i][j]));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(tipo==\"Multiplicacion\"){\r\n\t\t\t\t\t\tfor(let j=0;j<aux[i].length;j++){\r\n\t\t\t\t\t\t\tlet esono = typeof aux[i][j];\r\n\t\t\t\t\t\t\tif(esono==\"string\"){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+aux[i][j];\r\n\t\t\t\t\t\t\t\tthis.InsertarMultiplicacion(aux[i][j]);\r\n\t\t\t\t\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\t\t\t\t\tthis.InsertarMultiplicacion(parseInt(aux[i][j]));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(tipo==\"Simple\"){\r\n\t\t\t\t\t\tfor(let j=0;j<aux[i].length;j++){\r\n\t\t\t\t\t\t\tlet esono = typeof aux[i][j];\r\n\t\t\t\t\t\t\tif(esono==\"string\"){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+aux[i][j];\r\n\t\t\t\t\t\t\t\tthis.InsertarSimple(aux[i][j]);\r\n\t\t\t\t\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\t\t\t\t\tthis.InsertarSimple(parseInt(aux[i][j]));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.Imprimir();\r\n\t\t}\r\n\t}\r\n\tInsertarDivision=(k)=>{\r\n\t\tconsole.log(\"Aqui\");\r\n\t\tlet esono = typeof k;\r\n\t\tconsole.log(typeof k);\r\n\t\tlet valordivision=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalordivision = parseInt(this.FuncionDivision(this.ConvertirString(k)));\r\n\t\t}else if(esono==\"number\"){\r\n\t\t\tvalordivision = this.FuncionDivision(parseInt(k));\r\n\t\t}\r\n\t\tconsole.log(\"Convertido: \"+valordivision);\r\n\t\tif(this.arrreglo[valordivision]!=-1){\r\n\t\t\tthis.arrreglo[valordivision].push(k);\r\n\t\t\t//this.arrreglo[valordivision] = valordearreglo.push(k);\r\n\t\t\tthis.insertados++;\r\n\t\t}else{\r\n\t\t\tthis.arrreglo[valordivision]=[k];\r\n\t\t\tthis.insertados++;\r\n\t\t}\r\n\t\tthis.Rehashing(\"Division\");\r\n\t}\r\n\tInsertarSimple=(k)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valorsimple=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t}else if(esono==\"number\"){\r\n\t\t\tvalorsimple = this.FuncionSimple(parseInt(k));\r\n\t\t}\r\n\t\tif(this.arrreglo[valorsimple]!=-1){\r\n\t\t\tthis.arrreglo[valorsimple].push(k);\r\n\t\t\t//let valordearreglo = this.arrreglo[valorsimple];\r\n\t\t\t//this.arrreglo[valorsimple] = valordearreglo.push(k);\r\n\t\t\tthis.insertados++;\r\n\t\t}else{\r\n\t\t\tthis.arrreglo[valorsimple]=[k];\r\n\t\t\tthis.insertados++;\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\");\r\n\t}\r\n\tInsertarMultiplicacion=(k)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valormultiplicacion=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalormultiplicacion = parseInt(this.FuncionMultiplicacion(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valormultiplicacion]!=-1){\r\n\t\t\tthis.arrreglo[valormultiplicacion].push(k);\r\n\t\t\t//this.arrreglo[valormultiplicacion] = valordearreglo.push(k);\r\n\t\t\tthis.insertados++;\r\n\t\t}else{\r\n\t\t\tthis.arrreglo[valormultiplicacion]=[k];\r\n\t\t\tthis.insertados++;\r\n\t\t}\r\n\t\tthis.Rehashing(\"Multiplicacion\");\r\n\t}\r\n\r\n\tEliminarSimple=(k)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valorsimple=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalorsimple = this.FuncionSimple(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valorsimple]!=-1){\r\n\t\t\tif(this.arrreglo[valorsimple].length>1){\r\n\t\t\t\tfor(let i=0;i<this.arrreglo[valorsimple].length;i++){\r\n\t\t\t\t\tif(this.arrreglo[valorsimple][i]==k){\r\n\t\t\t\t\t\tlet auxarreglo = this.arrreglo[valorsimple];\r\n\t\t\t\t\t\tauxarreglo.splice(i,1);\r\n\t\t\t\t\t\tthis.arrreglo[valorsimple] = auxarreglo;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.arrreglo[valorsimple]=[-1];\r\n\t\t\t\tthis.insertados--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\");\r\n\t}\r\n\tEliminarDivision=(k)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valordivision=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalordivision = parseInt(this.FuncionDivision(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalordivision = this.FuncionDivision(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valordivision]!=-1){\r\n\t\t\tif(this.arrreglo[valordivision].length>1){\r\n\t\t\t\tfor(let i=0;i<this.arrreglo[valordivision].length;i++){\r\n\t\t\t\t\tif(this.arrreglo[valordivision][i]==k){\r\n\t\t\t\t\t\tlet auxarreglo = this.arrreglo[valordivision];\r\n\t\t\t\t\t\tauxarreglo.splice(i,1);\r\n\t\t\t\t\t\tthis.arrreglo[valordivision] = auxarreglo;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.arrreglo[valordivision]=[-1];\r\n\t\t\t\tthis.insertados--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Division\");\r\n\t}\r\n\tEliminarMultiplicacion=(k)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valormultiplicacion=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalormultiplicacion = parseInt(this.FuncionMultiplicacion(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valormultiplicacion]!=-1){\r\n\t\t\tif(this.arrreglo[valormultiplicacion].length>1){\r\n\t\t\t\tfor(let i=0;i<this.arrreglo[valormultiplicacion].length;i++){\r\n\t\t\t\t\tif(this.arrreglo[valormultiplicacion][i]==k){\r\n\t\t\t\t\t\tlet auxarreglo = this.arrreglo[valormultiplicacion];\r\n\t\t\t\t\t\tauxarreglo.splice(i,1);\r\n\t\t\t\t\t\tthis.arrreglo[valormultiplicacion] = auxarreglo;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.arrreglo[valormultiplicacion]=[-1];\r\n\t\t\t\tthis.insertados--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Multiplicacion\");\r\n\t}\r\n\r\n\tBuscarSimple=(k)=>{\r\n\t\tlet indice=-1;\r\n\t\tlet segundoindice=0;\r\n\t\tlet esono = typeof k;\r\n\t\tlet valorsimple=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalorsimple = this.FuncionSimple(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valorsimple]!=-1){\r\n\t\t\tif(this.arrreglo[valorsimple].length>1){\r\n\t\t\t\tfor(let i=0;i<this.arrreglo[valorsimple].length;i++){\r\n\t\t\t\t\tif(this.arrreglo[valorsimple][i]==k){\r\n\t\t\t\t\t\tindice=valorsimple;\r\n\t\t\t\t\t\tsegundoindice=i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tindice=valorsimple;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\");\r\n\t\treturn [indice,segundoindice];\r\n\t}\r\n\tBuscarDivision=(k)=>{\r\n\t\tlet indice=-1;\r\n\t\tlet segundoindice=0;\r\n\t\tlet esono = typeof k;\r\n\t\tlet valordivision=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalordivision = parseInt(this.FuncionDivision(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalordivision = this.FuncionDivision(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valordivision]!=-1){\r\n\t\t\tif(this.arrreglo[valordivision].length>1){\r\n\t\t\t\tfor(let i=0;i<this.arrreglo[valordivision].length;i++){\r\n\t\t\t\t\tif(this.arrreglo[valordivision][i]==k){\r\n\t\t\t\t\t\tindice=valordivision;\r\n\t\t\t\t\t\tsegundoindice=i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tindice=valordivision;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Division\");\r\n\t\treturn [indice,segundoindice];\r\n\t}\r\n\tBuscarMultiplicacion=(k)=>{\r\n\t\tlet indice=-1;\r\n\t\tlet segundoindice=0;\r\n\t\tlet esono = typeof k;\r\n\t\tlet valormultiplicacion=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalormultiplicacion = parseInt(this.FuncionMultiplicacion(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valormultiplicacion]!=-1){\r\n\t\t\tif(this.arrreglo[valormultiplicacion].length>1){\r\n\t\t\t\tfor(let i=0;i<this.arrreglo[valormultiplicacion].length;i++){\r\n\t\t\t\t\tif(this.arrreglo[valormultiplicacion][i]==k){\r\n\t\t\t\t\t\tindice=valormultiplicacion;\r\n\t\t\t\t\t\tsegundoindice=i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tindice=valormultiplicacion;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Multiplicacion\");\r\n\t\treturn [indice,segundoindice];\r\n\t}\r\n\r\n\tActualizar=(k,nuevo,tipo)=>{\r\n\t\tif(tipo==\"Simple\"){\r\n\t\t\tlet esono = typeof k;\r\n\t\t\tlet valorsimple=0;\r\n\t\t\tif(esono==\"string\"){\r\n\t\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t\t}else{\r\n\t\t\t\tvalorsimple = this.FuncionSimple(k);\r\n\t\t\t}\r\n\t\t\tif(this.arrreglo[valorsimple]!=-1){\r\n\t\t\t\tif(this.arrreglo[valorsimple].length>1){\r\n\t\t\t\t\tfor(let i=0;i<this.arrreglo[valorsimple].length;i++){\r\n\t\t\t\t\t\tif(this.arrreglo[valorsimple][i]==k){\r\n\t\t\t\t\t\t\tlet auxarreglo = this.arrreglo[valorsimple];\r\n\t\t\t\t\t\t\tauxarreglo.splice(i,1);\r\n\t\t\t\t\t\t\tthis.arrreglo[valorsimple] = auxarreglo;\r\n\t\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\t\tthis.InsertarSimple(nuevo);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.arrreglo[valorsimple]=[-1];\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\tthis.InsertarSimple(nuevo);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.Rehashing(\"Simple\");\r\n\t\t}else if(tipo==\"Division\"){\r\n\t\t\tlet esono = typeof k;\r\n\t\t\tlet valordivision=0;\r\n\t\t\tif(esono==\"string\"){\r\n\t\t\t\tvalordivision = parseInt(this.FuncionDivision(this.ConvertirString(k)));\r\n\t\t\t}else{\r\n\t\t\t\tvalordivision = this.FuncionDivision(k);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.arrreglo[valordivision]!=-1){\r\n\t\t\t\tif(this.arrreglo[valordivision].length>1){\r\n\t\t\t\t\tfor(let i=0;i<this.arrreglo[valordivision].length;i++){\r\n\t\t\t\t\t\tif(this.arrreglo[valordivision][i]==k){\r\n\t\t\t\t\t\t\tlet auxarreglo = this.arrreglo[valordivision];\r\n\t\t\t\t\t\t\tauxarreglo.splice(i,1);\r\n\t\t\t\t\t\t\tthis.arrreglo[valordivision] = auxarreglo;\r\n\t\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\t\tthis.InsertarDivision(nuevo);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.arrreglo[valordivision]=[-1];\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\tthis.InsertarDivision(nuevo);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.Rehashing(\"Division\");\r\n\t\t}else if(tipo==\"Multiplicacion\"){\r\n\t\t\tlet esono = typeof k;\r\n\t\t\tlet valormultiplicacion=0;\r\n\t\t\tif(esono==\"string\"){\r\n\t\t\t\tvalormultiplicacion = parseInt(this.FuncionMultiplicacion(this.ConvertirString(k)));\r\n\t\t\t}else{\r\n\t\t\t\tvalormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t\t}\r\n\t\t\tif(this.arrreglo[valormultiplicacion]!=-1){\r\n\t\t\t\tif(this.arrreglo[valormultiplicacion].length>1){\r\n\t\t\t\t\tfor(let i=0;i<this.arrreglo[valormultiplicacion].length;i++){\r\n\t\t\t\t\t\tif(this.arrreglo[valormultiplicacion][i]==k){\r\n\t\t\t\t\t\t\tlet auxarreglo = this.arrreglo[valormultiplicacion];\r\n\t\t\t\t\t\t\tauxarreglo.splice(i,1);\r\n\t\t\t\t\t\t\tthis.arrreglo[valormultiplicacion] = auxarreglo;\r\n\t\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\t\tthis.InsertarMultiplicacion(nuevo);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.arrreglo[valormultiplicacion]=[-1];\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\tthis.InsertarMultiplicacion(nuevo);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.Rehashing(\"Multiplicacion\");\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tsetDataSet = () => { // Esto Genera los nodos de Vis.\r\n\t\tvar dotNode = [];\r\n\t\tvar dotEdges = [];\r\n\t\tlet contador = 0\r\n\t\tfor(let i=0;i<this.get_sizearreglo();i++){\r\n\t\t\tdotNode.push({id:i, label: \"/\", level:0});\r\n\t\t\tif(i+1<this.arrreglo.length){\r\n\t\t\t\tdotEdges.push({from:i, to:i+1, arrows: \"to\"});\r\n\t\t\t}\r\n\t\t\tcontador++;\r\n\t\t}\r\n\t\tconsole.log(contador);\r\n\t\tfor(let i=0;i<this.get_sizearreglo();i++){\r\n\t\t\tif(this.arrreglo[i]!=-1){\r\n\t\t\t\tif(this.arrreglo[i].length>1){\r\n\t\t\t\t\tfor(let j=0;j<this.arrreglo[i].length;j++){\r\n\t\t\t\t\t\tif(j==0){\r\n\t\t\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][j];\r\n\t\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:j+1});\r\n\t\t\t\t\t\t\tdotEdges.push({from:i, to:contador, arrows: \"to\"});\r\n\t\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t\t\tif((j+1)<=this.arrreglo[i].length){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][j+1];\r\n\t\t\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:j+2});\r\n\t\t\t\t\t\t\t\tdotEdges.push({from:contador-1, to:contador, arrows: \"to\"});\r\n\t\t\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif((j+1)<this.arrreglo[i].length){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][j+1];\r\n\t\t\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:j+2});\r\n\t\t\t\t\t\t\t\tdotEdges.push({from:contador-1, to:contador, arrows: \"to\"});\r\n\t\t\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//contador++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][0];\r\n\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:1});\r\n\t\t\t\t\tdotEdges.push({from:i, to:contador, arrows: \"to\"});\r\n\t\t\t\t\tcontador++\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n        return [dotNode,dotEdges];\r\n    } \r\n\r\n    setDataSetBuscar=(indicei,indicej,dato)=>{\r\n    \tvar dotNode = [];\r\n\t\tvar dotEdges = [];\r\n\t\tlet contador = 0\r\n\t\tfor(let i=0;i<this.get_sizearreglo();i++){\r\n\t\t\tdotNode.push({id:i, label: \"/\", level:0});\r\n\t\t\tif(i+1<this.arrreglo.length){\r\n\t\t\t\tdotEdges.push({from:i, to:i+1, arrows: \"to\"});\r\n\t\t\t}\r\n\t\t\tcontador++;\r\n\t\t}\r\n\t\tconsole.log(contador);\r\n\t\tfor(let i=0;i<this.get_sizearreglo();i++){\r\n\t\t\tif(this.arrreglo[i]!=-1){\r\n\t\t\t\tif(this.arrreglo[i].length>1){\r\n\t\t\t\t\tfor(let j=0;j<this.arrreglo[i].length;j++){\r\n\t\t\t\t\t\tif(j==0){\r\n\t\t\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][j];\r\n\t\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:j+1});\r\n\t\t\t\t\t\t\tdotEdges.push({from:i, to:contador, arrows: \"to\"});\r\n\t\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t\t\tif((j+1)<=this.arrreglo[i].length){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][j+1];\r\n\t\t\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:j+2});\r\n\t\t\t\t\t\t\t\tdotEdges.push({from:contador-1, to:contador, arrows: \"to\"});\r\n\t\t\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif((j+1)<this.arrreglo[i].length){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][j+1];\r\n\t\t\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:j+2});\r\n\t\t\t\t\t\t\t\tdotEdges.push({from:contador-1, to:contador, arrows: \"to\"});\r\n\t\t\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\tif((indicei==i)&&(indicej==j)&&(dato==this.arrreglo[i][j])){\r\n\t\t\t\t\t\t\tdotEdges.push({from: contador-1, to: contador-1, value:contador,color:{color:'#ff383f'}});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//contador++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][0];\r\n\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:1});\r\n\t\t\t\t\tdotEdges.push({from:i, to:contador, arrows: \"to\"});\r\n\t\t\t\t\tif((indicei==i)&&(indicej==0)&&(dato==this.arrreglo[i][0])){\r\n\t\t\t\t\t\tdotEdges.push({from: contador, to: contador, value:contador,color:{color:'#ff383f'}});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontador++\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n        return [dotNode,dotEdges];\r\n    }\r\n    generateJSON=(funcion)=>{\r\n    \tvar json = \"{\\n  \\\"categoria\\\": \\\"Estructura No Lineal\\\",\\n  \\\"nombre\\\": \\\"Tabla Hash Abierta\\\",\\n  \\\"m\\\": \"+this.m+\",\\n  \\\"minimo\\\": \"+this.min+\",\\n  \\\"maximo\\\": \"+this.max+\",\\n  \\\"funcion\\\": \\\"\"+funcion+\"\\\",\\n  \\\"animacion\\\": 10,\\n  \\\"valores\\\": [\\n\";\r\n    \tfor(let i=0; i<this.arrreglo.length; i++){\r\n    \t\tfor(let j=0; j<this.arrreglo[i].length; j++){\r\n    \t\t\tlet esentero = true;\r\n\t\t\t\tlet entero = parseInt(this.arrreglo[i][j]); \r\n\t\t\t\tif(isNaN(entero)){\r\n\t\t\t\t\tesentero=false;\r\n\t\t\t\t}\r\n\t\t\t\tif(esentero==true){\r\n\t\t\t\t\tif(this.arrreglo[i][j]!=-1){\r\n\t\t\t\t\t\tjson = json + \"\\t\"+this.arrreglo[i][j]+\",\\n\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tjson = json + \"\\t\\\"\"+ this.arrreglo[i][j] +\"\\\",\\n\";\r\n\t\t\t\t}\r\n    \t\t}\r\n    \t}\r\n    \tjson = json +\"  ]\\n}\" \r\n    \treturn json;\r\n    }\r\n\r\n}\r\nexport default HashAbierta;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport HashCerrada from './Modelo/NoLineal/HashCerrada'; // Importar la Estructura Lista Simple.\r\nvar tablahash = new HashCerrada(5,30,80);\r\nvar getNodes = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        shape: \"box\",\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"DU\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass TablaHashCerrada extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topcion: 'Simple',\r\n\t\t\tmodo: 'Lineal',\r\n\t\t\ttamanio: '',\r\n\t\t\tminimo: '',\r\n\t\t\tmaximo: '',\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t\t//this.tablahash;\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleGenerate = () => {\r\n\t\ttablahash.set_m(parseInt(this.state.tamanio));\r\n\t\ttablahash.set_min(parseInt(this.state.minimo));\r\n\t\ttablahash.set_max(parseInt(this.state.maximo));\r\n\t\ttablahash.InicializarArreglo();\r\n\t\tlet numero = 2\r\n\t\tconsole.log(typeof numero);\r\n\t\tconsole.log(\"Generado\");\r\n\t}\r\n\r\n\thandleAdd = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.InsertarSimple(parseInt(this.state.text),this.state.modo);\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.InsertarSimple(this.state.text,this.state.modo);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.InsertarDivision(parseInt(this.state.text),this.state.modo);\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.InsertarDivision(this.state.text,this.state.modo);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Div\");\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.InsertarMultiplicacion(parseInt(this.state.text),this.state.modo);\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.InsertarMultiplicacion(this.state.text,this.state.modo);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Mult\");\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.EliminarSimple(parseInt(this.state.text),this.state.modo);\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.EliminarSimple(this.state.text,this.state.modo);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.EliminarDivision(parseInt(this.state.text),this.state.modo);\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.EliminarDivision(this.state.text,this.state.modo);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Div\");\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.EliminarMultiplicacion(parseInt(this.state.text),this.state.modo);\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.EliminarMultiplicacion(this.state.text,this.state.modo);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Mult\");\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tlet esentero2 = true;\r\n\t\tlet entero2 = parseInt(this.state.dato_actualizado); \r\n\t\tif(isNaN(entero2)){\r\n\t\t\tesentero2=false;\r\n\t\t}\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),parseInt(this.state.dato_actualizado),this.state.modo,\"Simple\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),this.state.dato_actualizado,this.state.modo,\"Simple\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,parseInt(this.state.dato_actualizado),this.state.modo,\"Simple\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,this.state.modo,\"Simple\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,this.state.modo,\"Simple\");\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),parseInt(this.state.dato_actualizado),this.state.modo,\"Division\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.log(\"DIVIVIIVIVIVI\");\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),this.state.dato_actualizado,this.state.modo,\"Division\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,parseInt(this.state.dato_actualizado),this.state.modo,\"Division\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,this.state.modo,\"Division\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),parseInt(this.state.dato_actualizado),this.state.modo,\"Multiplicacion\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),this.state.dato_actualizado,this.state.modo,\"Multiplicacion\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,parseInt(this.state.dato_actualizado),this.state.modo,\"Multiplicacion\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,this.state.modo,\"Multiplicacion\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tconsole.log(\"Entro Buscar\");\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tconsole.log(\"Simple\");\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(parseInt(this.state.text))[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(parseInt(this.state.text))[1]);\r\n\t\t\t}else{\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(this.state.text)[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(this.state.text)[1]);\r\n\t\t\t}\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tconsole.log(\"Division\");\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(parseInt(this.state.text))[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(parseInt(this.state.text))[1]);\r\n\t\t\t}else{\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(this.state.text)[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(this.state.text)[1]);\r\n\t\t\t}\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tconsole.log(\"Multiplicacion\");\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(parseInt(this.state.text))[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(parseInt(this.state.text))[1]);\r\n\t\t\t}else{\r\n\t\t\t\tgetNodes = new DataSet(tablahash.setDataSetBuscar(this.state.text)[0]);\r\n\t\t\t\tgetEdges = new DataSet(tablahash.setDataSetBuscar(this.state.text)[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\t\tlet paraarreglo=[]\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\t//let nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura No Lineal\"){\r\n\r\n\t\t\ttablahash.set_m(parseInt(dataJson.m));\r\n\t\t\ttablahash.set_min(parseInt(dataJson.minimo));\r\n\t\t\ttablahash.set_max(parseInt(dataJson.maximo));\r\n\t\t\ttablahash.InicializarArreglo();\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tif(dataJson.funcion==\"Simple\"){\r\n\t\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\t\ttablahash.InsertarSimple(dataJson.valores[i].toString(),dataJson.prueba.toString());\r\n\t\t\t\t}else if(dataJson.funcion==\"Division\"){\r\n\t\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\t\ttablahash.InsertarDivision(dataJson.valores[i].toString(),dataJson.prueba.toString());\r\n\t\t\t\t}else if(dataJson.funcion==\"Multiplicacion\"){\r\n\t\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\t\ttablahash.InsertarMultiplicacion(dataJson.valores[i].toString(),dataJson.prueba.toString());\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA NO LINEAL!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\t\tconst element = document.createElement(\"a\");\r\n\t\tvar contenido = tablahash.generateJSON(this.state.opcion,this.state.modo);\r\n\t\tconst blob = new Blob([contenido]);                   \r\n\t\telement.href = URL.createObjectURL(blob);\r\n\t    element.download = \"TablaHashAbierta.json\";\r\n\t    document.body.appendChild(element);\r\n\t    element.click();\r\n\t    alert(\"Documento Creado!\")\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"tamanio\" name=\"tamanio\" className=\"form-control\" placeholder=\"Ingresar Tamaño Tabla\" id=\"InputTamanio\" value={this.state.tamanio} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"minimo\" name=\"minimo\" className=\"form-control\" placeholder=\"Ingresar Minimo\" id=\"InputMinimo\" value={this.state.minimo} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"maximo\" name=\"maximo\" className=\"form-control\" placeholder=\"Ingresar Maximo\" id=\"InputMaximo\" value={this.state.maximo} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleGenerate()}>Generar Tabla</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<select type=\"opcion\" name=\"opcion\" className=\"form-select\" onChange={this.handleInputChange}>\r\n        \t\t\t\t<option value=\"Simple\">Simple</option>\r\n        \t\t\t\t<option value=\"Division\">Division</option>\r\n        \t\t\t\t<option value=\"Multiplicacion\">Multiplicacion</option>\r\n      \t\t\t\t</select>\r\n      \t\t\t</div>\r\n      \t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<select type=\"opcion\" name=\"modo\" className=\"form-select\" onChange={this.handleInputChange}>\r\n        \t\t\t\t<option value=\"Lineal\">Lineal</option>\r\n        \t\t\t\t<option value=\"Cuadratica\">Cuadratica</option>\r\n        \t\t\t\t<option value=\"Doble\">Doble</option>\r\n      \t\t\t\t</select>\r\n      \t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default TablaHashCerrada;","class HashCerrada{\r\n\tinsertados=0;\r\n\tarrreglo=[];\r\n\tconstructor(m, min, max){\r\n\t\tthis.m = m;\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\t\tthis.InicializarArreglo();\r\n\t}\r\n\tConvertirString=(cadena)=>{\r\n\t\tlet result=0;\r\n\t\tfor(let i=0;i<cadena.length;i++){\r\n\t\t\tresult+=cadena.charCodeAt(i);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tConvertirArreglo=(arreglo)=>{\r\n\t\tlet nuevoarreglo=[]\r\n\t\tfor(let i=0;i<arreglo.length;i++){\r\n\t\t\tlet result=0;\r\n\t\t\tfor(let j=0;j<arreglo[i].length;j++){\r\n\t\t\t\tresult+=arreglo[i].charCodeAt(j);\r\n\t\t\t}\r\n\t\t\tnuevoarreglo.push(result);\r\n\t\t}\r\n\t\treturn nuevoarreglo;\r\n\t}\r\n\tget_sizearreglo=()=>{\r\n\t\treturn this.arrreglo.length;\r\n\t}\r\n\tInicializarArreglo=()=>{\r\n\t\tthis.insertados=0;\r\n\t\tthis.arrreglo=[];\r\n\t\tlet tamanio = this.get_m();\r\n\t\tfor(let i=0;i<tamanio;i++){\r\n\t\t\tthis.arrreglo.push(-1);\r\n\t\t}\r\n\t}\r\n\tset_m=(m)=>{this.m=m;}\r\n\tget_m=()=>{return parseInt(this.m,10);}\r\n\tset_min=(min)=>{this.min=min}\r\n\tget_min=()=>{return this.min;}\r\n\tset_max=(max)=>{this.max=max;}\r\n\tget_max=()=>{return this.max;}\r\n\tget_numarreglo=(indice)=>{\r\n\t\t//let str = \"Valor: \" + this.arrreglo[indice];\r\n\t\t//console.log(str);\r\n\t\treturn this.arrreglo[indice];\r\n\t}\r\n\tImprimir=()=>{\r\n\t\tlet linea=\"[\";\r\n\t\tfor(let i=0; i<this.get_m();i++){\r\n\t\t\tlinea += \" \"+this.arrreglo[i];\r\n\t\t}\r\n\t\tlet porcetaje = (this.insertados*100/this.get_m())+ \"%\";\r\n\t\tlinea+=\" ]\"+porcetaje;\r\n\t\tconsole.log(linea);\r\n\t}\r\n\tFuncionDivision = (k) =>{\r\n\t\treturn ( k % this.get_m() );\r\n\t}\r\n\tFuncionSimple = (k)=>{\r\n\t\tlet reducido = k;\r\n\t\twhile(reducido>1){\r\n\t\t\treducido = Math.round(reducido/2);\r\n\t\t}\r\n\t\tlet retorno= Math.round(reducido * this.get_m());\r\n\t\tif(retorno==this.get_m()){\r\n\t\t\tretorno=retorno-1;\r\n\t\t}\r\n\t\treturn (retorno);\r\n\t}\r\n\tFuncionMultiplicacion=(k)=>{\r\n\t\tlet a = 0.1625277911;\r\n\t\treturn (Math.round(this.get_m()*((a*k)%1)));\r\n\t}\r\n\tFuncionAcomodarLineal=(k,i)=>{\r\n\t\treturn ((k + 1) % this.get_m() );\r\n\t}\r\n\tFuncionAcomodarCuadratica=(k,i)=>{\r\n\t\treturn ((k+(i*i)) % this.get_m());\r\n\t}\r\n\tFuncionAcomodarDoble=(h1,i,h2)=>{\t\r\n\t\treturn ((h1+i*h2) % this.get_m());\r\n\t}\r\n\tRehashing=(tipo,modo)=>{\r\n\t\tif(((this.insertados*100)/this.get_m())>=this.get_max()){\r\n\t\t\tlet aux = this.arrreglo;\r\n\t\t\tthis.Imprimir();\r\n\t\t\tlet m_anterior = this.get_m();\r\n\t\t\tthis.set_m(this.insertados*100/this.get_min());\r\n\t\t\tthis.InicializarArreglo();\r\n\t\t\tfor(let i=0; i<m_anterior; i++){\r\n\t\t\t\t//console.log(aux[i]);\r\n\t\t\t\tif(aux[i]!=-1){\r\n\t\t\t\t\tif(tipo==\"Division\"){\r\n\t\t\t\t\t\t\tlet esono = typeof aux[i];\r\n\t\t\t\t\t\t\tif(esono==\"string\"){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+aux[i];\r\n\t\t\t\t\t\t\t\tthis.InsertarDivision(aux[i],modo);\r\n\t\t\t\t\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\t\t\t\t\tthis.InsertarDivision(parseInt(aux[i]),modo);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(tipo==\"Multiplicacion\"){\r\n\t\t\t\t\t\t\tlet esono = typeof aux[i];\r\n\t\t\t\t\t\t\tif(esono==\"string\"){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+aux[i];\r\n\t\t\t\t\t\t\t\tthis.InsertarMultiplicacion(aux[i],modo);\r\n\t\t\t\t\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\t\t\t\t\tthis.InsertarMultiplicacion(parseInt(aux[i]),modo);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(tipo==\"Simple\"){\r\n\t\t\t\t\t\t\tlet esono = typeof aux[i];\r\n\t\t\t\t\t\t\tif(esono==\"string\"){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+aux[i];\r\n\t\t\t\t\t\t\t\tthis.InsertarSimple(aux[i],modo);\r\n\t\t\t\t\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\t\t\t\t\tthis.InsertarSimple(parseInt(aux[i]),modo);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.Imprimir();\r\n\t\t}\r\n\t}\r\n\tInsertarDivision=(k,modo)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tconsole.log(typeof k);\r\n\t\tlet valordivision=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalordivision = parseInt(this.FuncionDivision(this.ConvertirString(k)));\r\n\t\t}else if(esono==\"number\"){\r\n\t\t\tvalordivision = this.FuncionDivision(parseInt(k));\r\n\t\t}\r\n\r\n\t\tif(modo==\"Lineal\"){\r\n\t\t\twhile(this.arrreglo[valordivision]!=-1){\r\n\t\t\t\tvalordivision = this.FuncionAcomodarLineal(valordivision);\r\n\t\t\t}\r\n\t\t\tthis.arrreglo[valordivision]=k;\r\n\t\t\tthis.insertados++;\r\n\t\t}else if(modo==\"Cuadratica\"){\r\n\t\t\tlet contador=1;\r\n\t\t\tlet nuevovalor=valordivision;\r\n\t\t\twhile(this.arrreglo[nuevovalor]!=-1){\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarCuadratica(valordivision,contador);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t\tthis.arrreglo[nuevovalor]=k;\r\n\t\t\tthis.insertados++;\r\n\t\t}else if(modo==\"Doble\"){\r\n\t\t\tlet esono = typeof k;\r\n\t\t\tconsole.log(typeof k);\r\n\t\t\tlet h2=0;\r\n\t\t\tif(esono==\"string\"){\r\n\t\t\t\th2 = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\th2 = this.FuncionSimple(parseInt(k));\r\n\t\t\t}\r\n\t\t\tlet contador=1;\r\n\t\t\tlet nuevovalor=valordivision;\r\n\t\t\twhile(this.arrreglo[nuevovalor]!=-1){\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarDoble(valordivision,contador,h2);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t\tthis.arrreglo[nuevovalor]=k;\r\n\t\t\tthis.insertados++;\r\n\t\t}\r\n\t\tthis.Rehashing(\"Division\",modo);\r\n\t}\r\n\tInsertarSimple=(k,modo)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valorsimple=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t}else if(esono==\"number\"){\r\n\t\t\tvalorsimple = this.FuncionSimple(parseInt(k));\r\n\t\t}\r\n\t\tif(modo==\"Lineal\"){\r\n\t\t\twhile(this.arrreglo[valorsimple]!=-1){\r\n\t\t\t\tvalorsimple = this.FuncionAcomodarLineal(valorsimple);\r\n\t\t\t}\r\n\t\t\tthis.arrreglo[valorsimple]=k;\r\n\t\t\tthis.insertados++; \r\n\t\t}else if(modo==\"Cuadratica\"){\r\n\t\t\tlet contador=1;\r\n\t\t\tlet nuevovalor=valorsimple;\r\n\t\t\twhile(this.arrreglo[nuevovalor]!=-1){\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarCuadratica(valorsimple,contador);\r\n\t\t\t\tconsole.log(nuevovalor);\r\n\t\t\t\tconsole.log(\"VVV:\"+contador)\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t\tthis.arrreglo[nuevovalor]=k;\r\n\t\t\tthis.insertados++;\r\n\t\t}else if(modo==\"Doble\"){\r\n\t\t\tlet contador=1;\r\n\t\t\tlet nuevovalor=valorsimple;\r\n\t\t\twhile(this.arrreglo[nuevovalor]!=-1){\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarDoble(valorsimple,contador,valorsimple);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t\tthis.arrreglo[nuevovalor]=k;\r\n\t\t\tthis.insertados++;\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\",modo);\r\n\t}\r\n\tInsertarMultiplicacion=(k,modo)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valormultiplicacion=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalormultiplicacion = parseInt(this.FuncionMultiplicacion(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t}\r\n\t\tif(modo==\"Lineal\"){\r\n\t\t\twhile(this.arrreglo[valormultiplicacion]!=-1){\r\n\t\t\t\tvalormultiplicacion = this.FuncionAcomodarLineal(valormultiplicacion);\r\n\t\t\t}\r\n\t\t\tthis.arrreglo[valormultiplicacion]=k;\r\n\t\t\tthis.insertados++;\r\n\t\t}else if(modo==\"Cuadratica\"){\r\n\t\t\tlet contador=1;\r\n\t\t\tlet nuevovalor=valormultiplicacion;\r\n\t\t\twhile(this.arrreglo[nuevovalor]!=-1){\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarCuadratica(valormultiplicacion,contador);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t\tthis.arrreglo[nuevovalor]=k;\r\n\t\t\tthis.insertados++;\r\n\t\t}else if(modo==\"Doble\"){\r\n\t\t\tlet contador=1;\r\n\t\t\tlet nuevovalor=valormultiplicacion;\r\n\t\t\twhile(this.arrreglo[nuevovalor]!=-1){\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarDoble(valormultiplicacion,contador,valormultiplicacion);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t\tthis.arrreglo[nuevovalor]=k;\r\n\t\t\tthis.insertados++;\r\n\t\t}\r\n\t\tthis.Rehashing(\"Multiplicacion\",modo);\r\n\t}\r\n\tEliminarSimple=(k,modo)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valorsimple=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalorsimple = this.FuncionSimple(k);\r\n\t\t}\r\n\t\tif(modo==\"Lineal\"){\r\n\t\t\tlet valorsimple = this.FuncionSimple(k);\r\n\t\t\tlet eliminado=false;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(eliminado==false){\r\n\t\t\t\tif(this.arrreglo[valorsimple]==k){\r\n\t\t\t\t\tthis.arrreglo[valorsimple]=-1;\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\tvalorsimple = this.FuncionAcomodarLineal(valorsimple);\r\n\t\t\t} \r\n\t\t}else if(modo==\"Cuadratica\"){\r\n\t\t\tlet valorsimple = this.FuncionSimple(k);\r\n\t\t\tlet contador=1;\r\n\t\t\tlet eliminado=false;\r\n\t\t\tlet nuevovalor=valorsimple;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(eliminado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarCuadratica(valorsimple,contador);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}else if(modo==\"Doble\"){\r\n\t\t\tlet valorsimple = this.FuncionSimple(k);\r\n\t\t\tlet eliminado=false;\r\n\t\t\tlet contador=1;\r\n\t\t\tlet i=0;\r\n\t\t\tlet nuevovalor=valorsimple;\r\n\t\t\twhile(eliminado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarDoble(valorsimple,contador,valorsimple);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\",modo);\r\n\t}\r\n\tEliminarDivision=(k,modo)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valordivision=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalordivision = parseInt(this.FuncionDivision(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalordivision = this.FuncionDivision(k);\r\n\t\t}\r\n\t\tif(modo==\"Lineal\"){\r\n\t\t\tlet valordivision = this.FuncionDivision(k);\r\n\t\t\tlet eliminado=false;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(eliminado==false){\r\n\t\t\t\tif(this.arrreglo[valordivision]==k){\r\n\t\t\t\t\tthis.arrreglo[valordivision]=-1;\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\tvalordivision = this.FuncionAcomodarLineal(valordivision);\r\n\t\t\t} \r\n\t\t}else if(modo==\"Cuadratica\"){\r\n\t\t\tlet valordivision = this.FuncionDivision(k);\r\n\t\t\tlet contador=1;\r\n\t\t\tlet eliminado=false;\r\n\t\t\tlet nuevovalor=valordivision;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(eliminado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarCuadratica(valordivision,contador);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}else if(modo==\"Doble\"){\r\n\t\t\tlet esono = typeof k;\r\n\t\t\tconsole.log(typeof k);\r\n\t\t\tlet h2=0;\r\n\t\t\tif(esono==\"string\"){\r\n\t\t\t\th2 = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\th2 = this.FuncionSimple(parseInt(k));\r\n\t\t\t}\r\n\t\t\tlet eliminado=false;\r\n\t\t\tlet contador=1;\r\n\t\t\tlet i=0;\r\n\t\t\tlet nuevovalor=valordivision;\r\n\t\t\twhile(eliminado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarDoble(valordivision,contador,h2);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Division\",modo);\r\n\t}\r\n\tEliminarMultiplicacion=(k,modo)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valormultiplicacion=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalormultiplicacion = parseInt(this.FuncionMultiplicacion(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t}\r\n\t\tif(modo==\"Lineal\"){\r\n\t\t\tlet valormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t\tlet eliminado=false;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(eliminado==false){\r\n\t\t\t\tif(this.arrreglo[valormultiplicacion]==k){\r\n\t\t\t\t\tthis.arrreglo[valormultiplicacion]=-1;\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\tvalormultiplicacion = this.FuncionAcomodarLineal(valormultiplicacion);\r\n\t\t\t} \r\n\t\t}else if(modo==\"Cuadratica\"){\r\n\t\t\tlet valormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t\tlet contador=1;\r\n\t\t\tlet eliminado=false;\r\n\t\t\tlet nuevovalor=valormultiplicacion;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(eliminado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarCuadratica(valormultiplicacion,contador);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}else if(modo==\"Doble\"){\r\n\t\t\tlet valormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t\tlet eliminado=false;\r\n\t\t\tlet contador=1;\r\n\t\t\tlet i=0;\r\n\t\t\tlet nuevovalor=valormultiplicacion;\r\n\t\t\twhile(eliminado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\teliminado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarDoble(valormultiplicacion,contador,valormultiplicacion);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\",modo);\r\n\t}\r\n\r\n\tBuscar=(k,modo)=>{\r\n\t\tlet indice=-1;\r\n\t\tlet segundoindice=0;\r\n\t\tlet esono = typeof k;\r\n\t\tlet valorsimple=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalorsimple = this.FuncionSimple(k);\r\n\t\t}\r\n\t\tif(modo==\"Lineal\"){\r\n\t\t\tlet encontrado=false;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(encontrado==false){\r\n\t\t\t\tif(this.arrreglo[valorsimple]==k){\r\n\t\t\t\t\tindice=valorsimple;\r\n\t\t\t\t\tencontrado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\tencontrado=true;\r\n\t\t\t\t}\r\n\t\t\t\tvalorsimple = this.FuncionAcomodarLineal(valorsimple);\r\n\t\t\t}\r\n\t\t}else if(modo==\"Cuadratica\"){\r\n\t\t\tlet contador=1;\r\n\t\t\tlet encontrado=false;\r\n\t\t\tlet nuevovalor=valorsimple;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(encontrado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tindice=nuevovalor;\r\n\t\t\t\t\tencontrado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\tencontrado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarCuadratica(valorsimple,contador);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}else if(modo==\"Doble\"){\r\n\t\t\tlet encontrado=false;\r\n\t\t\tlet contador=1;\r\n\t\t\tlet i=0;\r\n\t\t\tlet nuevovalor=valorsimple;\r\n\t\t\twhile(encontrado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tindice=nuevovalor;\r\n\t\t\t\t\tencontrado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\tencontrado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarDoble(valorsimple,contador,valorsimple);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\",modo);\r\n\t\treturn indice;\r\n\t}\r\n\tActualizar=(k,nuevo,modo,tipo)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valorsimple=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalorsimple = this.FuncionSimple(k);\r\n\t\t}\r\n\t\tif(modo==\"Lineal\"){\r\n\t\t\tlet actualizado=false;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(actualizado==false){\r\n\t\t\t\tif(this.arrreglo[valorsimple]==k){\r\n\t\t\t\t\tif(tipo==\"Simple\"){\r\n\t\t\t\t\t\tthis.arrreglo[valorsimple]=-1;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tthis.InsertarSimple(nuevo,modo);\r\n\t\t\t\t\t}else if(tipo==\"Division\"){\r\n\t\t\t\t\t\tthis.arrreglo[valorsimple]=-1;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tthis.InsertarDivision(nuevo,modo);\r\n\t\t\t\t\t}else if(tipo==\"Multiplicacion\"){\r\n\t\t\t\t\t\tthis.arrreglo[valorsimple]=-1;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tthis.InsertarMultiplicacion(nuevo,modo);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactualizado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\tactualizado=true;\r\n\t\t\t\t}\r\n\t\t\t\tvalorsimple = this.FuncionAcomodarLineal(valorsimple);\r\n\t\t\t} \r\n\t\t}else if(modo==\"Cuadratica\"){\r\n\t\t\tlet contador=1;\r\n\t\t\tlet actualizado=false;\r\n\t\t\tlet nuevovalor=valorsimple;\r\n\t\t\tlet i=0;\r\n\t\t\twhile(actualizado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tif(tipo==\"Simple\"){\r\n\t\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tthis.InsertarSimple(nuevo,modo);\r\n\t\t\t\t\t}else if(tipo==\"Division\"){\r\n\t\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tthis.InsertarDivision(nuevo,modo);\r\n\t\t\t\t\t}else if(tipo==\"Multiplicacion\"){\r\n\t\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tthis.InsertarMultiplicacion(nuevo,modo);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactualizado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\tactualizado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarCuadratica(valorsimple,contador);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}else if(modo==\"Doble\"){\r\n\t\t\tlet actualizado=false;\r\n\t\t\tlet contador=1;\r\n\t\t\tlet i=0;\r\n\t\t\tlet nuevovalor=valorsimple;\r\n\t\t\twhile(actualizado==false){\r\n\t\t\t\tif(this.arrreglo[nuevovalor]==k){\r\n\t\t\t\t\tif(tipo==\"Simple\"){\r\n\t\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tthis.InsertarSimple(nuevo,modo);\r\n\t\t\t\t\t}else if(tipo==\"Division\"){\r\n\t\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tthis.InsertarDivision(nuevo,modo);\r\n\t\t\t\t\t}else if(tipo==\"Multiplicacion\"){\r\n\t\t\t\t\t\tthis.arrreglo[nuevovalor]=-1;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tthis.InsertarMultiplicacion(nuevo,modo);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactualizado=true;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tif(i>=this.get_m()){\r\n\t\t\t\t\tactualizado=true;\r\n\t\t\t\t}\r\n\t\t\t\tnuevovalor = this.FuncionAcomodarDoble(valorsimple,contador,valorsimple);\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\",modo);\r\n\t}\r\n\tsetDataSet = () => { // Esto Genera los nodos de Vis.\r\n\t\tvar dotNode = [];\r\n\t\tvar dotEdges = [];\r\n\t\tlet contador = 0\r\n\t\tfor(let i=0;i<this.get_sizearreglo();i++){\r\n\t\t\tdotNode.push({id:i, label: \"/\", level:0});\r\n\t\t\tif(i+1<this.arrreglo.length){\r\n\t\t\t\tdotEdges.push({from:i, to:i+1, arrows: \"to\"});\r\n\t\t\t}\r\n\t\t\tcontador++;\r\n\t\t}\r\n\t\tconsole.log(contador);\r\n\t\tfor(let i=0;i<this.get_sizearreglo();i++){\r\n\t\t\tif(this.arrreglo[i]!=-1){\r\n\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i];\r\n\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:1});\r\n\t\t\t\t\tdotEdges.push({from:i, to:contador, arrows: \"to\"});\r\n\t\t\t\t\tcontador++\r\n\t\t\t}\r\n\t\t}\r\n\r\n        return [dotNode,dotEdges];\r\n\r\n    } \r\n    setDataSetBuscar=(dato)=>{\r\n    \tvar dotNode = [];\r\n\t\tvar dotEdges = [];\r\n\t\tlet contador = 0\r\n\t\tfor(let i=0;i<this.get_sizearreglo();i++){\r\n\t\t\tdotNode.push({id:i, label: \"/\", level:0});\r\n\t\t\tif(i+1<this.arrreglo.length){\r\n\t\t\t\tdotEdges.push({from:i, to:i+1, arrows: \"to\"});\r\n\t\t\t}\r\n\t\t\tcontador++;\r\n\t\t}\r\n\t\tconsole.log(contador);\r\n\t\tfor(let i=0;i<this.get_sizearreglo();i++){\r\n\t\t\tif(this.arrreglo[i]!=-1){\r\n\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i];\r\n\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:1});\r\n\t\t\t\t\tdotEdges.push({from:i, to:contador, arrows: \"to\"});\r\n\t\t\t\t\tconsole.log(\"Entro Aqui\");\r\n\t\t\t\t\tif(dato==this.arrreglo[i]){\r\n\t\t\t\t\t\tconsole.log(\"Entro Aqui 2\");\r\n\t\t\t\t\t\tdotEdges.push({from: contador, to: contador, value:contador,color:{color:'#ff383f'}});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontador++\r\n\t\t\t}\r\n\t\t}\r\n\r\n        return [dotNode,dotEdges];\r\n    }\r\n    generateJSON=(funcion,prueba)=>{\r\n    \tvar json = \"{\\n  \\\"categoria\\\": \\\"Estructura No Lineal\\\",\\n  \\\"nombre\\\": \\\"Tabla Hash Cerrada\\\",\\n  \\\"m\\\": \"+this.m+\",\\n  \\\"minimo\\\": \"+this.min+\",\\n  \\\"maximo\\\": \"+this.max+\",\\n  \\\"funcion\\\": \\\"\"+funcion+\"\\\",\\n  \\\"prueba\\\": \\\"\"+prueba+\"\\\",\\n  \\\"animacion\\\": 10,\\n  \\\"valores\\\": [\\n\";\r\n    \tfor(let i=0; i<this.arrreglo.length; i++){\r\n    \t\tlet esentero = true;\r\n\t\t\tlet entero = parseInt(this.arrreglo[i]); \r\n\t\t\tif(isNaN(entero)){\r\n\t\t\t\tesentero=false;\r\n\t\t\t}\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tif(this.arrreglo[i]!=-1){\r\n\t\t\t\t\tjson = json + \"\\t\"+this.arrreglo[i]+\",\\n\";\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tjson = json + \"\\t\\\"\"+ this.arrreglo[i] +\"\\\",\\n\";\r\n\t\t\t}\r\n    \t}\r\n    \tjson = json +\"  ]\\n}\" \r\n    \treturn json;\r\n    }\r\n\r\n}\r\n\r\nexport default HashCerrada;","class Nodo{\r\n\r\n\tconstructor(){\r\n\t\tthis.principal = null; // Hace Referencia a la primero Estructura.\r\n\t\tthis.secundaria = null; // Hace Referencia a la segunda Estructura.\r\n\t}\r\n\r\n\tgetPrincipal = () => { return this.principal; }\r\n\tsetPrincipal = (principal) => { this.principal = principal; }\r\n\tgetSecundaria = () => { return this.secundaria; }\r\n\tsetSecundaria = (secundaria) => { this.secundaria = secundaria}\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport EstructuraCompuesta from './Modelo/Compuesta/EstructuraCompuesta/Compuesta.js'; // Importar la Estructura Lista Simple.\r\nvar filePath;\r\nvar compuesta = new EstructuraCompuesta(); // Instancia de la compuesta.\r\nvar data, data2;\r\nvar options, options2;\r\nclass Compuesta extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\tdato1: '',\r\n\t\t\tdato2: '',\r\n\t\t\testructura1: '',\r\n\t\t\testructura2: '',\r\n\t\t\tupdate1: '',\r\n\t\t\tupdate2: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t\tthis.network2 = {};\r\n\t  \tthis.appRef = createRef();\r\n\t  \tthis.appRef2 = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\tcomponentDidMount2() {\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\t\r\n\t\tcompuesta.insertar(this.state.estructura1, this.state.estructura2, this.state.dato1, this.state.dato2);\r\n\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar data ={\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\r\n\t\tvar options = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#F2FF9D',\r\n\t\t            border:  '#df77e7',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\tvar data2 ={\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\r\n\t\tvar options2 = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#ffffff',\r\n\t\t            border:  '#ffef50',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t\r\n\t\t\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tcompuesta.eliminar(this.state.estructura1, this.state.estructura2, this.state.dato1, this.state.dato2);\r\n\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar data ={\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\r\n\t\tvar options = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#F2FF9D',\r\n\t\t            border:  '#df77e7',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\tvar data2 ={\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\r\n\t\tvar options2 = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#ffffff',\r\n\t\t            border:  '#ffef50',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tcompuesta.update(this.state.estructura1, this.state.estructura2, this.state.dato1, this.state.dato2, this.state.update1, this.state.update2);\r\n\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar data ={\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\r\n\t\tvar options = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#F2FF9D',\r\n\t\t            border:  '#df77e7',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\tvar data2 ={\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\r\n\t\tvar options2 = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#ffffff',\r\n\t\t            border:  '#ffef50',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tvar {nodo1, nodo2} = compuesta.search(this.state.estructura1, this.state.estructura2, this.state.dato1, this.state.dato2)\r\n\t\tconsole.log(\"pero bueno\")\r\n\t\tconsole.log(String(nodo1)+\"->\"+String(nodo2))\r\n\t\tif (0 <= parseInt(nodo1) || 0 <= parseInt(nodo2)){\r\n\t\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\t\tvar data ={\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\r\n\t\t\tvar options = {\r\n\t\t\t\tphysics: {\r\n\t\t\t\t\tstabilization: false,\r\n\t\t\t\t\tbarnesHut: {\r\n\t\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tnodes:{\r\n\t\t\t        borderWidth: 20,\r\n\t\t\t        color: {\r\n\t\t\t            background: '#F2FF9D',\r\n\t\t\t            border:  '#df77e7',\r\n\t\t\t            highlight: {\r\n\t\t\t                border: '#00F3B8',\r\n\t\t\t                background: '#FF1F00'\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\r\n\t\t\tvar data2 ={\r\n\t\t\t\tnodes: getNodes2,\r\n\t\t\t\tedges: getEdges2\r\n\t\t\t}\r\n\r\n\t\t\tvar options2 = {\r\n\t\t\t\tphysics: {\r\n\t\t\t\t\tstabilization: false,\r\n\t\t\t\t\tbarnesHut: {\r\n\t\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tnodes:{\r\n\t\t\t        borderWidth: 20,\r\n\t\t\t        color: {\r\n\t\t\t            background: '#ffffff',\r\n\t\t\t            border:  '#ffef50',\r\n\t\t\t            highlight: {\r\n\t\t\t                border: '#00F3B8',\r\n\t\t\t                background: '#FF1F00'\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tgetEdges.add({from: parseInt(nodo1), to: parseInt(nodo1), value:parseInt(nodo1),color:{color:'#ff383f'}});\r\n\t\t\tgetEdges2.add({from: parseInt(nodo2), to: parseInt(nodo2), value:parseInt(nodo2),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\t\tvar data ={\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\r\n\t\t\tvar options = {\r\n\t\t\t\tphysics: {\r\n\t\t\t\t\tstabilization: false,\r\n\t\t\t\t\tbarnesHut: {\r\n\t\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tnodes:{\r\n\t\t\t        borderWidth: 20,\r\n\t\t\t        color: {\r\n\t\t\t            background: '#F2FF9D',\r\n\t\t\t            border:  '#df77e7',\r\n\t\t\t            highlight: {\r\n\t\t\t                border: '#00F3B8',\r\n\t\t\t                background: '#FF1F00'\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\r\n\t\t\tvar data2 ={\r\n\t\t\t\tnodes: getNodes2,\r\n\t\t\t\tedges: getEdges2\r\n\t\t\t}\r\n\r\n\t\t\tvar options2 = {\r\n\t\t\t\tphysics: {\r\n\t\t\t\t\tstabilization: false,\r\n\t\t\t\t\tbarnesHut: {\r\n\t\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tnodes:{\r\n\t\t\t        borderWidth: 20,\r\n\t\t\t        color: {\r\n\t\t\t            background: '#ffffff',\r\n\t\t\t            border:  '#ffef50',\r\n\t\t\t            highlight: {\r\n\t\t\t                border: '#00F3B8',\r\n\t\t\t                background: '#FF1F00'\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\t\r\n\r\n\r\n\t\t}\r\n\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\r\n\thandleAddTop = () => {\r\n\t\tcompuesta.insertar_inicio(this.state.estructura1, this.state.estructura2, this.state.dato1, this.state.dato2);\r\n\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar data ={\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\r\n\t\tvar options = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#F2FF9D',\r\n\t\t            border:  '#df77e7',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\tvar data2 ={\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\r\n\t\tvar options2 = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#ffffff',\r\n\t\t            border:  '#ffef50',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t\t\r\n\t}\r\n\thandleAddLower = () => {\r\n\t\tcompuesta.insertar_ultimo(this.state.estructura1, this.state.estructura2, this.state.dato1, this.state.dato2);\r\n\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar data ={\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\r\n\t\tvar options = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#F2FF9D',\r\n\t\t            border:  '#df77e7',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\tvar data2 ={\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\r\n\t\tvar options2 = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#ffffff',\r\n\t\t            border:  '#ffef50',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Compuesta\"){\r\n\t\t\tdataJson.valores.forEach(element =>{\t\t\r\n\t\t\t\tconsole.log(element.principal + \"->\"+element.secundario)\r\n\t\t\t\tcompuesta.insertar(this.state.estructura1, this.state.estructura2, String(element.principal), String(element.secundario));\r\n\t\t\t});\r\n\r\n\r\n\t\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\t\tvar data ={\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\r\n\t\t\tvar options = {\r\n\t\t\t\tphysics: {\r\n\t\t\t\t\tstabilization: false,\r\n\t\t\t\t\tbarnesHut: {\r\n\t\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tnodes:{\r\n\t\t\t        borderWidth: 20,\r\n\t\t\t        color: {\r\n\t\t\t            background: '#F2FF9D',\r\n\t\t\t            border:  '#df77e7',\r\n\t\t\t            highlight: {\r\n\t\t\t                border: '#00F3B8',\r\n\t\t\t                background: '#FF1F00'\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\r\n\t\t\tvar data2 ={\r\n\t\t\t\tnodes: getNodes2,\r\n\t\t\t\tedges: getEdges2\r\n\t\t\t}\r\n\r\n\t\t\tvar options2 = {\r\n\t\t\t\tphysics: {\r\n\t\t\t\t\tstabilization: false,\r\n\t\t\t\t\tbarnesHut: {\r\n\t\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tnodes:{\r\n\t\t\t        borderWidth: 20,\r\n\t\t\t        color: {\r\n\t\t\t            background: '#ffffff',\r\n\t\t\t            border:  '#ffef50',\r\n\t\t\t            highlight: {\r\n\t\t\t                border: '#00F3B8',\r\n\t\t\t                background: '#FF1F00'\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\t\t\r\n\r\n\t\tconst element = document.createElement(\"a\");\r\n\t\tvar contenido = compuesta.generateJSON()\r\n\t\tconst blob = new Blob([contenido]);                   \r\n\t\telement.href = URL.createObjectURL(blob);\r\n\t    element.download = \"compuesta.json\";\r\n\t    document.body.appendChild(element);\r\n\t    element.click();\r\n\t    alert(\"Documento Creado!\")\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"estructura1\" className=\"form-control\" placeholder=\"Estructura 1\" id=\"InputCola\" value={this.state.estructura1} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato1\" className=\"form-control\" placeholder=\"Dato 1\" id=\"InputCola\" value={this.state.dato1} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<input type=\"text\" name=\"update1\" className=\"form-control\" placeholder=\"Update 1\" id=\"InputCola\" value={this.state.update1} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"estructura2\" className=\"form-control\" placeholder=\"Estructura 2\" id=\"InputCola\" value={this.state.estructura2} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato2\" className=\"form-control\" placeholder=\"Dato 2\" id=\"InputCola\" value={this.state.dato2} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<input type=\"text\" name=\"update2\" className=\"form-control\" placeholder=\"Update 2\" id=\"InputCola\" value={this.state.update2} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<div style={{height: 20 + 'em'}} ref={this.appRef} />\r\n\t\t\t<div style={{height: 20 + 'em'}} ref={this.appRef2} />\r\n\t\t\t{/*<tr>\r\n\t\t\t\t<td><div style={{height: 30 + 'em'}} ref={this.appRef} /></td>\r\n\t\t\t\t<td><div style={{height: 30 + 'em'}} ref={this.appRef2} /></td>\r\n\t\t\t</tr>*/}\r\n\t\t\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default Compuesta;","import ListaSimple from '../../Lineales/ListaSimple/ListaSimple'; \r\nimport ListaDoble from '../../Lineales/ListaDoble/ListaDoble';\r\nimport ListaCircular from '../../Lineales/ListaCircular/ListaCircular';\r\nimport ListaCircularDoble from '../../Lineales/ListaCircularDoble/ListaCDE';\r\nimport Pila from '../../Lineales/Pila/Stack';\r\nimport Cola from '../../Lineales/Cola/EstructuraCola';\r\nimport Nodo from './Nodo.js';\r\n\r\n\r\nclass Compuesta{\r\n\tconstructor(){\r\n\t\tthis.estructuraPrimaria = null;\r\n\t\tthis.estructuraSecundaria = null;\r\n\t\tthis.primaria = null;\r\n\t\tthis.secundaria = null;\r\n\t\tthis.lista = [];\r\n\t}\r\n\r\n\r\n\tinsertar = (primaria, secundaria, dato1, dato2) => {\r\n\t\tif (this.getPrimaria() == null && this.getSecundaria() == null){ // Aca crea una instancia de la estructura\r\n\t\t\tthis.setPrimaria(primaria);\r\n\t\t\tthis.setSecundaria(secundaria);\r\n\t\t\tthis.creatorPrimaria();\r\n\t\t\tthis.creatorSecundaria();\r\n\t\t}\r\n\t\tif(this.getPrimaria()!=null && this.getPrimaria()!= primaria){\r\n\t\t\tthis.setPrimaria(primaria);\r\n\t\t\tthis.creatorPrimaria();\r\n\t\t\tthis.getLista().forEach(element => {\r\n\t\t\t\tif (element.getPrincipal()!=null){\r\n\t\t\t\t\telement.setPrincipal(null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(this.getSecundaria()!=null && this.getSecundaria()!= secundaria){\r\n\t\t\tthis.setSecundaria(secundaria);\r\n\t\t\tthis.creatorSecundaria();\r\n\t\t\tthis.getLista().forEach(element => {\r\n\t\t\t\tif (element.getSecundaria()!=null){\r\n\t\t\t\t\telement.setSecundaria(null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t\tlet nodo_principal = this.getEstructuraPrimaria().search(dato1); // Busca el dato1\r\n\t\tlet nodo_secundario = this.getEstructuraPrimaria().search(dato2); // Buscael dato2\r\n\r\n\t\tlet nodo_nuevo = new Nodo(); // Se crea un nuevo Nodo.\r\n\r\n\t\t// if(nodo_principal != null){ // Si es diferente de null es por que existe un dato\r\n\t\t// \tnodo_nuevo.setPrincipal(dato1);\r\n\t\t// \tthis.getLista().forEach(element => { //Busca en la lista si existe el dato.\r\n\t\t// \t\tif(dato1 == element.getPrincipal()){\r\n\t\t// \t\t\tif(nodo_secundario != null){\r\n\t\t// \t\t\tnodo_nuevo.setSecundaria(dato2);\r\n\t\t// \t\t\tthis.getEstructuraSecundaria().insertar(dato2);\r\n\t\t// \t\t\tthis.lista.push(nodo_nuevo)\r\n\t\t// \t\t\tconsole.log(\"Dato 1: \"+dato1+\" - Ya Existe.\\nDato 2: \"+dato2+\" - No Existe\")\r\n\t\t// \t\t\t}else{\r\n\t\t// \t\t\t\tconsole.log('Datos ya agregados')\r\n\t\t// \t\t\t}\r\n\t\t// \t\t}\r\n\t\t// \t}) \r\n\t\t// }else{\r\n\r\n\t\t// \tif(nodo_secundario != null){\r\n\t\t// \t\tthis.getLista().forEach(element => {\r\n\t\t// \t\tnodo_nuevo.setSecundaria(dato2);\r\n\t\t// \t\tif(dato2 == element.getSecundaria()){\r\n\t\t// \t\t\tif(nodo_secundario != null){\r\n\t\t// \t\t\tnodo_nuevo.setPrincipal(dato1);\r\n\t\t// \t\t\tthis.getEstructuraPrimaria().insertar(dato1);\r\n\t\t// \t\t\tthis.lista.push(nodo_nuevo)\r\n\t\t// \t\t\tconsole.log(\"Dato 1: \"+dato1+\" - No Existe.\\nDato 2: \"+dato2+\" - Ya Existe\")\r\n\t\t// \t\t\t}else{\r\n\t\t// \t\t\t\tconsole.log(\"Datos ya agregados\")\r\n\t\t// \t\t\t}\r\n\t\t// \t\t}\r\n\t\t// \t}); \r\n\t\t// \t}else{\r\n\r\n\t\tthis.getEstructuraPrimaria().insertar(dato1);\r\n\t\tthis.getEstructuraSecundaria().insertar(dato2);\r\n\r\n\t\tnodo_nuevo.setPrincipal(dato1);\r\n\t\tnodo_nuevo.setSecundaria(dato2);\r\n\t\tthis.lista.push(nodo_nuevo);\r\n\r\n\t\t// \t}\r\n\t\t// }\r\n\t}\r\n\r\n\teliminar = (primaria, secundaria, dato1, dato2) => {\r\n\r\n\t\tif (this.getPrimaria() == null && this.getSecundaria() == null){\r\n\t\t\talert(\"INGRESA AMBAS ESTRUCTURAS\");\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\tif(this.getPrimaria() == \"Pila\"){\r\n\t\tthis.getEstructuraPrimaria().pop();\r\n\t\t}else if(this.getPrimaria() == \"Cola\"){\r\n\t\tthis.getEstructuraPrimaria().Desencolar();\r\n\t\t}else{\r\n\t\tthis.getEstructuraPrimaria().eliminar(dato1);\r\n\t\t}\r\n\r\n\t\tif(this.getSecundaria() == \"Pila\"){\r\n\t\t\tthis.getEstructuraSecundaria().pop();\r\n\t\t}else if(this.getSecundaria() == \"Cola\"){\r\n\t\t\tthis.getEstructuraSecundaria().Desencolar();\r\n\t\t}else{\r\n\t\tthis.getEstructuraSecundaria().eliminar(dato2);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tsearch = (primaria, secundaria, dato1, dato2) => {\r\n\r\n\t\tif (this.getPrimaria() == null && this.getSecundaria() == null){\r\n\t\t\talert(\"INGRESA AMBAS ESTRUCTURAS\");\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\tlet valor1 = this.getEstructuraPrimaria().search(dato1)\r\n\t\tlet valor2 = this.getEstructuraSecundaria().search(dato2)\r\n\r\n\t\tconsole.log('search')\r\n\t\tconsole.log(String(valor1)+\"-\"+String(valor2))\r\n\t\treturn {\r\n\t\t\tnodo1: valor1,\r\n\t\t\tnodo2: valor2\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate = (primaria, secundaria, dato1, dato2, update1, update2) =>{\r\n\r\n\r\n\t\tif (this.getPrimaria() == null && this.getSecundaria() == null){\r\n\t\t\talert(\"INGRESA AMBAS ESTRUCTURAS\");\r\n\t\t\treturn null\r\n\t\t}\r\n\t\tlet valor1 = this.getEstructuraPrimaria().search(dato1);\r\n\t\tlet valor2 = this.getEstructuraSecundaria().search(dato2);\r\n\r\n\t\tif (valor1!=null){ this.getEstructuraPrimaria().update(dato1, update1); }\r\n\r\n\t\tif(valor2!=null){ this.getEstructuraSecundaria().update(dato2, update2); }\r\n\r\n\t}\r\n\r\n\tinsertar_inicio = (primaria, secundaria, dato1, dato2) => {\r\n\t\tif (this.getPrimaria() == null && this.getSecundaria() == null){\r\n\t\t\talert(\"INGRESA AMBAS ESTRUCTURAS\");\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\t\r\n\t\t\r\n\t\tif (this.getPrimaria() != \"Pila\" && this.getPrimaria() != \"Cola\"){\r\n\t\t\tlet valor1 = this.getEstructuraPrimaria().search(dato1);\r\n\t\t\tif (valor1==false){\r\n\t\t\t\tthis.getEstructuraPrimaria().insertar_inicio(dato1)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.getSecundaria() != \"Pila\" && this.getSecundaria() != \"Cola\"){\r\n\t\t\tlet valor2 = this.getEstructuraSecundaria().search(dato2);\r\n\t\t\tif (valor2==false){\r\n\t\t\t\tthis.getEstructuraSecundaria().insertar_inicio(dato2)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tinsertar_ultimo = (primaria, secundaria, dato1, dato2) => {\r\n\r\n\t\tif (this.getPrimaria() == null && this.getSecundaria() == null){\r\n\t\t\talert(\"INGRESA AMBAS ESTRUCTURAS\");\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\r\n\t\tif (this.getPrimaria() != \"Pila\" && this.getPrimaria() != \"Cola\"){\r\n\t\tlet valor1 = this.getEstructuraPrimaria().search(dato1);\r\n\t\t\tif (valor1==false){\r\n\t\t\t\tthis.getEstructuraPrimaria().insertar_ultimo(dato1)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.getSecundaria() != \"Pila\" && this.getSecundaria() != \"Cola\"){\r\n\t\tlet valor2 = this.getEstructuraSecundaria().search(dato2);\r\n\t\t\tif (valor2==false){\r\n\t\t\t\tthis.getEstructuraSecundaria().insertar_ultimo(dato2)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcreatorPrimaria = () => {\r\n\t\tif(this.primaria == \"Lista Simple\"){ \r\n\t\t\tthis.estructuraPrimaria = new ListaSimple(); \r\n\t\t}else if(this.primaria == \"Lista Doble\"){ \r\n\t\t\t\tthis.estructuraPrimaria = new ListaDoble(); \r\n\t\t}else if(this.primaria == \"Lista Circular\"){ \r\n\t\t\t\tthis.estructuraPrimaria = new ListaCircular(); \r\n\t\t}else if(this.primaria == \"Lista Circular Doble\"){ \r\n\t\t\t\tthis.estructuraPrimaria = new ListaCircularDoble(); \r\n\t\t}else if(this.primaria == \"Pila\"){ \r\n\t\t\t\tthis.estructuraPrimaria = new Pila(); \r\n\t\t}else if(this.primaria == \"Cola\"){ \r\n\t\t\t\tthis.estructuraPrimaria = new Cola(); \r\n\t\t}\r\n\t}\r\n\tcreatorSecundaria = () =>{\r\n\t\tif(this.secundaria == \"Lista Simple\"){ \r\n\t\t\tthis.estructuraSecundaria = new ListaSimple(); \r\n\t\t}else if(this.secundaria == \"Lista Doble\"){ \r\n\t\t\tthis.estructuraSecundaria = new ListaDoble(); \r\n\t\t}else if(this.secundaria == \"Lista Circular\"){ \r\n\t\t\tthis.estructuraSecundaria = new ListaCircular(); \r\n\t\t}else if(this.secundaria == \"Lista Circular Doble\"){ \r\n\t\t\tthis.estructuraSecundaria = new ListaCircularDoble(); \r\n\t\t}else if(this.secundaria == \"Pila\"){ \r\n\t\t\tthis.estructuraSecundaria = new Pila(); \r\n\t\t}else if(this.secundaria == \"Cola\"){ \r\n\t\t\tthis.estructuraSecundaria = new Cola(); \r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgenerateJSON = () => {\r\n\r\n\t\tvar json = \"{\\n  \\\"categoria\\\": \\\"Estructura Compuesta\\\",\\n  \\\"nombre\\\": \\\"Construccion\\\",\\n  \\\"animacion\\\": 10,\\n  \\\"valores\\\": [\\n\"\r\n\t\tvar i = 0;\r\n\r\n\t\twhile(i<this.lista.length){\r\n\r\n\t\t\tjson = json + \"\\t{\\n\"\r\n\t\t\tif(typeof(parseInt(this.lista[i].principal)) == \"number\"  && 0 <= parseInt(this.lista[i].principal)){\r\n                json = json + \"\\t  \\\"principal\\\": \" + parseInt(this.lista[i].principal) +\",\\n\"\r\n            }else if ((typeof(this.lista[i].principal)) == \"string\" ){\r\n                json = json + \"\\t  \\\"principal\\\": \" + \"\\\"\" + this.lista[i].principal + \"\\\",\\n\" \r\n            }\r\n            if(this.lista[i+1]!=null){\r\n            \tif(typeof(parseInt(this.lista[i].secundaria)) == \"number\"  && 0 <= parseInt(this.lista[i].secundaria)){ \r\n\t                json = json + \"\\t  \\\"secundario\\\": \" + parseInt(this.lista[i].secundaria) +\"\\n\\t},\\n\"\r\n\t            }else if (typeof(this.lista[i].secundaria) == \"string\" ){\r\n\t                json = json + \"\\t  \\\"secundario\\\": \" + \"\\\"\" + this.lista[i].secundaria + \"\\\"\\nt},\\n\" \r\n\t            }\r\n            }else{\r\n            \tif(typeof(parseInt(this.lista[i].secundaria)) == \"number\"  && 0 <= parseInt(this.lista[i].secundaria)){ \r\n\t                json = json + \"\\t  \\\"secundario\\\": \" + parseInt(this.lista[i].secundaria) +\"\\n\\t}\\n\"\r\n\t            }else if (typeof(this.lista[i].secundaria) == \"string\" ){\r\n\t                json = json + \"\\t  \\\"secundario\\\": \" + \"\\\"\" + this.lista[i].secundaria + \"\\\"\\nt}\\n\" \r\n\t            }\r\n            }\r\n\r\n\t            \r\n\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tjson = json +\"  ]\\n}\" \r\n\t\t// console.log(json)\r\n\t\treturn json\r\n\t}\r\n\t\r\n\r\n\r\n\tgetEstructuraPrimaria = () => { return this.estructuraPrimaria; }\r\n\tsetEstructuraPrimaria = (primaria) => { this.estructuraPrimaria = primaria; }\r\n\t\r\n\tgetEstructuraSecundaria = () => { return this.estructuraSecundaria; }\r\n\tsetEstructuraSecundaria = (secundaria) => { this.estructuraSecundaria = secundaria }\r\n\r\n\tgetLista = () => { return this.lista; }\r\n\r\n\tgetPrimaria = () => { return this.primaria; }\r\n\tsetPrimaria = (primaria) => { this.primaria = primaria}  \r\n\tgetSecundaria = () => { return this.secundaria; }\r\n\tsetSecundaria = (secundaria) => { this.secundaria = secundaria; }\r\n}\r\n\r\n\r\nexport default Compuesta;\r\n// module.exports = Compuesta;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport EncodeHamming from './Modelo/Codificacion/Hamming/Hamming.js'; // Importar la Estructura Lista Simple.\r\nvar encodeHamming = new EncodeHamming(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(encodeHamming.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(encodeHamming.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 400,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 20,\r\n        shape: \"box\",\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#00e53f',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    },\r\n    layout:{\r\n\t\thierarchical: {\r\n\t\t  direction: \"UD\",\r\n\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass Hamming extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttext: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst encodeText = this.state.fileContent;\r\n\t\tconsole.log(encodeText)\r\n\t\t\t\t\r\n\t\tencodeHamming.encode(encodeText)\r\n\t\tgetNodes = new DataSet(encodeHamming.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(encodeHamming.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\r\n\t\r\n\t}\r\n\r\n\thandleEncode = () => {\r\n\t\tif(this.state.text!=\"\"){\r\n\t\t\tencodeHamming.encode(this.state.text)\r\n\t\t\tgetNodes = new DataSet(encodeHamming.setNodesDataSet());\r\n\t\t\t\tgetEdges = new DataSet(encodeHamming.setEdgesDataSet());\r\n\t\t\t\tdata = {\r\n\t\t\t\t\tnodes: getNodes,\r\n\t\t\t\t\tedges: getEdges\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\t}else{\r\n\t\t\talert(\"Debes de ingresar un numero Binario.\")\r\n\t\t}\r\n\t\t\r\n\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\t\tconst element = document.createElement(\"a\");\r\n\t\tvar contenido = encodeHamming.generateJSON()\r\n\t\tconst blob = new Blob([contenido]);                   \r\n\t\telement.href = URL.createObjectURL(blob);\r\n\t    element.download = \"hamming.txt\";\r\n\t    document.body.appendChild(element);\r\n\t    element.click();\r\n\t    alert(\"Documento Creado!\")\r\n\t\t\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleEncode()}>Codificar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default Hamming;","class Hamming{\r\n\r\n\tconstructor(){\r\n\t\tthis.listaDatos =[];\r\n\t\tthis.tabla = [];\r\n\t\tthis.filaEncode = [];\r\n\t\tthis.resultado = []; //Est es una cadena.\r\n\t\tthis.nivel = 1;\r\n\t}\r\n\r\n\tencode = (text) => { // Inicio de codificacion\r\n\t\tvar size  = text.length; //Obteniendo el tamaño del binario.\r\n\r\n\t\tvar i = 0;\r\n\t\twhile(i<size){\r\n\t\t\tthis.listaDatos.push(text.charAt(i)); // Se descompone la variable y se guarda.\r\n\t\t\ti++;\r\n\t\t}\r\n\t\t\r\n\t\ti = 0;\r\n\t\tvar tempSize = 1;\r\n\t\tthis.tabla.push({id:\"Datos:\", dato:null, Nivel:parseInt(this.nivel)});\r\n\t\tthis.resultado.push({id:\"Resultado:\", dato:null, Nivel:parseInt(this.nivel)});\r\n\t\twhile(i<size){\t\r\n\t\t\tif(this.potencia(i+1)==(i+1)){\r\n\t\t\t\tthis.tabla.push({id:\"p\"+String(i+1), dato:null, Nivel:parseInt(this.nivel)});\r\n\t\t\t\tthis.resultado.push({id:\"p\"+String(i+1), dato:null, Nivel:parseInt(this.nivel)});\r\n\t\t\t\tsize++;\t\r\n\t\t\t}else{\r\n\t\t\t\tthis.tabla.push({id:\"d\"+String(tempSize), dato:this.listaDatos[tempSize-1], Nivel:parseInt(this.nivel)});\r\n\t\t\t\tthis.resultado.push({id:\"d\"+String(tempSize), dato:this.listaDatos[tempSize-1], Nivel:parseInt(this.nivel)});\r\n\t\t\t\ttempSize++;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\t\t\r\n\t\tthis.nivel ++;\r\n\r\n\t\tvar sizeFila = 0;\r\n\t\t// ----------------------------------------------\r\n\t\t// INICIA LA CODIFICACION DE FILAS DE p1, p2, etc.\r\n\t\t// ----------------------------------------------\r\n\t\tthis.tabla.forEach(element => { \r\n\t\t\tif(element.id.charAt(0)==\"p\"){\r\n\t\t\t\tthis.filaEncode.push({id:\"P\"+element.id.charAt(1), dato:null, Nivel:this.nivel});\r\n\t\t\t\tlet aux = this.llenarTabla(size, element.id.charAt(1), this.nivel);\r\n\t\t\t\tthis.update(element.id, aux, this.nivel)\r\n\t\t\t\tthis.nivel++;\r\n\t\t\t} \r\n\t\t});\r\n\r\n\t\tvar tempResultado;\r\n\t\ti = 0;\r\n\t\twhile(i<this.resultado.length){\r\n\t\t\tvar j = 0;\r\n\t\t\twhile(j<this.filaEncode.length){\r\n\t\t\t\tif(this.resultado[i].id == this.filaEncode[j].id && this.filaEncode[j].dato != null){\r\n\t\t\t\t\tthis.resultado[i].dato = this.filaEncode[j].dato \r\n\t\t\t\t\tthis.resultado[i].Nivel = this.nivel\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.resultado[i].id == \"Resultado:\"){\r\n\t\t\t\t\tthis.resultado[i].Nivel = this.nivel\r\n\t\t\t\t}\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\tllenarTabla = (size, saltos, nivel) =>{\r\n\t\tvar i = 1;\r\n\t\tvar valor = null;\r\n\t\tvar estado = true;\r\n\t\tvar moverse = 0;\r\n\t\tconsole.log(\"Cantidad: \"+size+\" Move: \"+saltos+\" Nivel: \"+nivel)\r\n\t\twhile(i<=size){\r\n\t\t\tlet temp = this.search(i);\r\n\t\t\tif(saltos<=i){\r\n\t\t\t\tif(moverse<saltos && estado == true){\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(temp.id.charAt(0)==\"p\"){\r\n\t\t\t\t\t\tthis.filaEncode.push({id:temp.id, dato:null, Nivel:parseInt(nivel)});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(valor == null){\r\n\t\t\t\t\t\t\tvalor = temp.dato;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// ----------------------------------------------\r\n\t\t\t\t\t\t\t// SE COMPARA EL VALOR CON EL ID EN LA TABLA XOR.\r\n\t\t\t\t\t\t\t// ----------------------------------------------\r\n\t\t\t\t\t\t\tif(temp.dato == 1 && valor == 1){ valor = 0; }\r\n\t\t\t\t\t\t\telse if(temp.dato == 1 && valor == 0){ valor = 1; }\r\n\t\t\t\t\t\t\telse if(temp.dato == 0 && valor == 1){ valor = 1; }\r\n\t\t\t\t\t\t\telse if(temp.dato == 0 && valor == 0){ valor = 0;  }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.filaEncode.push({id:temp.id, dato:temp.dato, Nivel:parseInt(nivel)});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmoverse++;\r\n\t\t\t\t\tif(moverse==saltos){\r\n\t\t\t\t\t\testado=false\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tmoverse--;\r\n\t\t\t\t\tif(moverse==0){\r\n\t\t\t\t\t\testado=true;\t\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\testado=false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.filaEncode.push({id:temp.id, dato:null, Nivel:parseInt(nivel)});\r\n\t\t\t\t}\t\r\n\t\t\t}else{\r\n\t\t\t\tthis.filaEncode.push({id:temp.id, dato:null, Nivel:parseInt(nivel)});\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\r\n\t\treturn valor;\r\n\t}\r\n\r\n\r\n\tsearch = (posicion) =>{\r\n\t\tvar i = 0;\r\n\t\tvar aux = null;\r\n\t\twhile(i<this.tabla.length){\r\n\t\t\taux = this.tabla[i]\r\n\t\t\tif(posicion==i){\r\n\t\t\t\treturn aux\r\n\t\t\t}\t\t\r\n\t\t\ti++;\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\tupdate = (id, cambio, nivel) => {\r\n\t\tvar i = 0;\r\n\t\tvar aux = null;\r\n\t\twhile(i<this.filaEncode.length){\r\n\t\t\tif(this.filaEncode[i].id==id && this.filaEncode[i].Nivel == nivel){\r\n\t\t\t\tthis.filaEncode[i].dato=String(cambio);\r\n\t\t\t}\t\t\r\n\t\t\ti++;\r\n\t\t}\r\n\t\treturn false\r\n\r\n\t}\r\n\r\n\tpotencia = (size) => {\r\n\t\tvar i = 0 ;\r\n\t\twhile(i<size){\r\n\t\t\tif(2**i == size){\r\n\t\t\t\treturn 2**i\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\r\n\t setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        var i = 0;\r\n        var nodoId = 0;\r\n\r\n\r\n        i=0\r\n        while(i<this.tabla.length){\r\n        \tif(this.tabla[i].dato!=null){\r\n\r\n        \t\tdot.push({id:nodoId, label:String(this.tabla[i].dato)+\"\\n\"+String(this.tabla[i].id), level:this.tabla[i].Nivel});\r\n\t        }else{\r\n        \tdot.push({id:nodoId, label:String(this.tabla[i].id), level:this.tabla[i].Nivel});\r\n\t        }\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n       \ti = 0;\r\n        while(i<this.filaEncode.length){\r\n        \tif(this.filaEncode[i].id.charAt(0)==\"P\"){\r\n        \t\tdot.push({id:nodoId, label:this.filaEncode[i].id, level:this.filaEncode[i].Nivel});\r\n        \t}else{\r\n\t        \tif(this.filaEncode[i].dato == null){\r\n\t        \t\tdot.push({id:nodoId, label:\" \", level:this.filaEncode[i].Nivel});\r\n\t        \t\r\n\t        \t}else{\r\n\t        \t\tdot.push({id:nodoId, label:String(this.filaEncode[i].dato), level:this.filaEncode[i].Nivel});\r\n\t        \t}\r\n\t        }\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n        i = 0;\r\n        while(i<this.resultado.length){\r\n        \tif(this.resultado[i].id == \"Resultado:\"){\r\n        \t\tdot.push({id:nodoId, label:String(this.resultado[i].id), level:this.resultado[i].Nivel});\r\n        \t}else{\r\n        \t\tdot.push({id:nodoId, label:String(this.resultado[i].dato), level:this.resultado[i].Nivel});\r\n        \t}\r\n        \t\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n        return dot;\r\n\r\n    }\r\n\r\n    getNodeDataSet = (lista, id, nivel) => {\r\n    \tvar i = 0\r\n    \tvar nodoId = 0;\r\n    \twhile(i<this.tabla.length){\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n       \ti = 0;\r\n        while(i<this.filaEncode.length){\r\n        \t\r\n        \tif(lista[i].id == id && lista[i].Nivel == nivel){\r\n        \t\treturn nodoId;\r\n        \t}\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n\r\n        i = 0;\r\n        while(i<this.resultado.length){\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n\r\n    \treturn false\r\n    } \r\n\r\n\r\n    setEdgesDataSet = () => {\r\n    \tvar i = 0\r\n    \tvar dot = [];\r\n    \tvar nodoId = 0;\r\n    \twhile(i<this.tabla.length){\r\n        \tif(this.tabla[i+1]!=null){\r\n        \t\tdot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n        \t}\r\n        \tlet temp = this.getNodeDataSet(this.filaEncode, this.tabla[i].id, this.tabla[i].Nivel+1)\r\n        \tif(temp!=null){\r\n        \t\tdot.push({from:nodoId, to:temp, arrows: \"to\"});\r\n        \t}\r\n        \t\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n       \ti = 0;\r\n        while(i<this.filaEncode.length){\r\n        \tif(this.filaEncode[i+1]!=null && this.filaEncode[i].Nivel == this.filaEncode[i+1].Nivel){\r\n        \t\tdot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n        \t}\r\n        \tlet temp = this.getNodeDataSet(this.filaEncode, this.filaEncode[i].id, this.filaEncode[i].Nivel+1)\r\n        \tif(temp!=null){\r\n        \t\tdot.push({from:nodoId, to:temp, arrows: \"to\"});\r\n        \t}\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n        i = 0;\r\n        while(i<this.resultado.length){\r\n        \tif(this.resultado[i+1]!=null && this.resultado[i].Nivel == this.resultado[i+1].Nivel){\r\n        \t\tdot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n        \t\t\r\n        \t}\r\n        \tlet temp = this.getNodeDataSet(this.filaEncode, this.resultado[i].id, this.resultado[i].Nivel-1)\t\r\n        \tif(temp!=null){\r\n        \t\tdot.push({from:temp, to:nodoId, arrows: \"to\"});\r\n        \t}\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n        \r\n\r\n        \r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n    generateJSON = () => {\r\n\r\n    \tvar json =\"\";\r\n    \tconsole.log(this.resultado)\r\n    \tvar i = 0;\r\n    \twhile(i<this.resultado.length){\r\n    \t\tif(this.resultado[i].id != \"Resultado:\"){\r\n    \t\t\tconsole.log(\"_>\"+this.resultado[i].dato)\r\n    \t\t\tjson = json + String(this.resultado[i].dato)\t\r\n    \t\t}\r\n    \t\ti++;\r\n    \t}\r\n    \tconsole.log(json)\r\n    \treturn json\r\n    }\r\n\r\n\r\n}\r\nexport default Hamming;\r\n// module.exports = Hamming;","class Grafo{\r\n\tconstructor(){\r\n\t\tthis.comienzo=null;\r\n\t\tthis.fin=null;\r\n\t\tthis.vertices=[];\r\n\t\tthis.matriz=[];\r\n\t\tthis.lista=[];\r\n\t}\r\n\tset_comienzo=(dato)=>{\r\n\t\tthis.comienzo=dato;\r\n\t}\r\n\tset_fin=(dato)=>{\r\n\t\tthis.fin=dato;\r\n\t}\r\n\tget_comienzo=()=>{ return this.comienzo;}\r\n\tget_fin=()=>{ return this.fin;}\r\n\tAgregarArista=(inicio,fin,distancia)=>{\r\n\t\tlet indice=this.Buscar(inicio);\r\n\t\tif(indice!=-1){\r\n\t\t\tthis.vertices[indice][1].push([fin,distancia]);\r\n\t\t}\r\n\t}\r\n\tInsertar=(dato,aristas)=>{\r\n\t\tthis.vertices.push([dato,aristas]);\r\n\t}\r\n\tActualizar=(datoviejo,datonuevo,aristasnuevas)=>{\r\n\t\tlet indice= this.Buscar(datoviejo);\r\n\t\tthis.vertices[indice]=[datonuevo,[]];\r\n\t}\r\n\tBuscar=(dato)=>{\r\n\t\tlet indice=-1;\r\n\t\tfor(let i=0; i<this.vertices.length; i++){\r\n\t\t\tif(this.vertices[i][0]==dato){\r\n\t\t\t\tindice=i;\r\n\t\t\t\treturn indice;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn indice;\r\n\t}\r\n\tEliminar=(dato)=>{\r\n\t\tfor(let i=0; i<this.vertices.length; i++){\r\n\t\t\tif(this.vertices[i][0]==dato){\r\n\t\t\t\tthis.vertices.splice(i,1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tgetDataSetNoDirigido=()=>{\r\n\t\tlet dotNode=[];\r\n\t\tlet dotEdges=[];\r\n\t\tconsole.log(this.vertices);\r\n\t\tfor(let i=0; i<this.vertices.length;i++){\r\n\t\t\tlet etiqueta=\"\"+ this.vertices[i][0];\r\n\t\t\tdotNode.push({id:i, label: etiqueta});\r\n\t\t\tif(this.vertices[i][1].length!=0){\r\n\t\t\t\tfor(let j=0; j<this.vertices[i][1].length; j++){\r\n\t\t\t\t\tlet indice=-1;\r\n\t\t\t\t\tindice = this.Buscar(this.vertices[i][1][j][0]);\r\n\t\t\t\t\tif(indice!=-1){\r\n\t\t\t\t\t\tlet label= \"\" + this.vertices[i][1][j][1];\r\n\t\t\t\t\t\tdotEdges.push({from:i, to:indice, label: label});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [dotNode,dotEdges];\r\n\t}\r\n\tgetDataSetDirigido=()=>{\r\n\t\tlet dotNode=[];\r\n\t\tlet dotEdges=[];\r\n\t\tconsole.log(this.vertices);\r\n\t\tfor(let i=0; i<this.vertices.length;i++){\r\n\t\t\tlet etiqueta=\"\"+ this.vertices[i][0];\r\n\t\t\tdotNode.push({id:i, label: etiqueta});\r\n\t\t\tif(this.vertices[i][1].length!=0){\r\n\t\t\t\tfor(let j=0; j<this.vertices[i][1].length; j++){\r\n\t\t\t\t\tlet indice=-1;\r\n\t\t\t\t\tindice = this.Buscar(this.vertices[i][1][j][0]);\r\n\t\t\t\t\tif(indice!=-1){\r\n\t\t\t\t\t\tlet label= \"\"+this.vertices[i][1][j][1];\r\n\t\t\t\t\t\tdotEdges.push({from:i, to:indice, label: label, arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t}\r\n\t\treturn [dotNode,dotEdges];\r\n\t}\r\n\tGenerarMatriz=()=>{\r\n\t\tfor(let i=0; i<this.vertices.length; i++){\r\n\t\t\tlet ingreso=[];\r\n\t\t\tfor(let j=0; j<this.vertices.length; j++){\r\n\t\t\t\tingreso.push(0);\r\n\t\t\t}\r\n\t\t\tthis.matriz.push(ingreso);\r\n\t\t}\r\n\t\tfor(let i=0; i<this.vertices.length; i++){\r\n\t\t\tif(this.vertices[i][1].length!=0){\r\n\t\t\t\tfor(let j=0; j<this.vertices[i][1].length;j++){\r\n\t\t\t\t\tlet indice = 0;\r\n\t\t\t\t\tindice = this.Buscar(this.vertices[i][1][j][0]);\r\n\t\t\t\t\tthis.matriz[i][indice]=1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tgetDataSetMatriz=()=>{\r\n\t\tthis.GenerarMatriz();\r\n\t\tlet dotNode=[];\r\n\t\tlet dotEdges=[];\r\n\t\tlet contador=0;\r\n\t\tfor(let i=0; i<this.vertices.length;i++){\r\n\t\t\tfor(let j=0; j<this.vertices.length;j++){\r\n\t\t\t\tlet etiqueta = \"\" + this.matriz[i][j];\r\n\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:i});\r\n\t\t\t\tcontador++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(let j=0; j<this.vertices.length;j++){\r\n\t\t\tlet aux=0+j;\r\n\t\t\tfor(let i=0; i<this.vertices.length;i++){\r\n\t\t\t\tif((i+1)<this.vertices.length){\r\n\t\t\t\t\tdotEdges.push({from:aux, to: aux+this.vertices.length, color:{ opacity: 0.1 }})\r\n\t\t\t\t}\r\n\t\t\t\taux=aux+this.vertices.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [dotNode, dotEdges];\r\n\t}\r\n\tgetDataSetLista=()=>{\r\n\t\tlet dotNode=[];\r\n\t\tlet dotEdges=[];\r\n\t\tlet contador=0;\r\n\t\tfor(let i=0; i<this.vertices.length;i++){\r\n\t\t\tlet etiqueta=\"\"+ this.vertices[i][0];\r\n\t\t\tdotNode.push({id:contador, label: etiqueta, level:i});\r\n\t\t\tif((i+1)<this.vertices.length){\r\n\t\t\t\tdotEdges.push({from:contador, to: contador+1, color:{ opacity: 0.3 }});\r\n\t\t\t}\r\n\t\t\tcontador++;\r\n\t\t}\r\n\t\tfor(let i=0;i<this.vertices.length;i++){\r\n\t\t\tif(this.vertices[i][1].length!=0){\r\n\t\t\t\tfor(let j=0; j<this.vertices[i][1].length; j++){\r\n\t\t\t\t\tif(j==0){\r\n\t\t\t\t\t\tlet etiqueta=\"\"+ this.vertices[i][1][j][0];\r\n\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:i});\r\n\t\t\t\t\t\tdotEdges.push({from:i, to: contador, arrows: \"to\"});\r\n\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlet etiqueta=\"\"+ this.vertices[i][1][j][0];\r\n\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:i});\r\n\t\t\t\t\t\tdotEdges.push({from:contador-1, to: contador, arrows: \"to\"});\r\n\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [dotNode,dotEdges];\r\n\t}\r\n\tRecorridoProfundidad=()=>{\r\n\t\tlet ordencorrecto=[];\r\n\t\tlet indice = -1;\r\n\t\tlet auxiliar=[];\r\n\t\tindice = this.Buscar(this.comienzo);\r\n\t\tdo{\r\n\t\t\t\r\n\t\t\tauxiliar.push(this.vertices[indice][0]);\r\n\t\t\tordencorrecto.push(auxiliar.shift());\r\n\t\t\tfor(let i=this.vertices[indice][1].length; i<0; i--){\r\n\t\t\t\tauxiliar.shift(this.vertices[indice][1][i][0]);\r\n\t\t\t}\r\n\t\t\t//indice\r\n\r\n\t\t}while(auxiliar!=[])\r\n\t}\r\n\tgenerateJSONMatriz=(dirigido)=>{\r\n    \tvar json = \"{\\n  \\\"categoria\\\": \\\"Estructura No Lineal\\\",\\n  \\\"nombre\\\": \\\"Grafo \"+dirigido+\"\\\",\\n  \\\"almacenamiento\\\": \\\"Matriz\\\",\\n  \\\"animacion\\\": 10,\\n  \\\"valores\\\": [\\n\";\r\n    \tfor(let i=0; i<this.vertices.length; i++){\r\n    \t\tlet esentero = true;\r\n\t\t\tlet entero = parseInt(this.vertices[i][0]); \r\n\t\t\tif(isNaN(entero)){\r\n\t\t\t\tesentero=false;\r\n\t\t\t}\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tjson = json + \"   {\\n\\t\\\"vertice\\\": \"+this.vertices[i][0]+\",\";\r\n\t\t\t}else{\r\n\t\t\t\tjson = json + \"   {\\n\\t\\\"vertice\\\": \\\"\"+this.vertices[i][0]+\"\\\",\";\r\n\t\t\t}\r\n    \t\tjson = json + \"\\n\\t\\\"aristas\\\": [\";\r\n    \t\tfor(let j=0; j<this.vertices[i][1].length; j++){\r\n    \t\t\tlet esentero2 = true;\r\n\t\t\t\tlet entero2 = parseInt(this.vertices[i][1][j][0]); \r\n\t\t\t\tif(isNaN(entero2)){\r\n\t\t\t\t\tesentero2=false;\r\n\t\t\t\t}\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\tjson = json + \"\\n\\t  { \\n\\t  \\\"arista\\\": \"+this.vertices[i][1][j][0]+\",\\n\\t   \\\"distancia\\\": \"+this.vertices[i][1][j][1]+\"\\n\\t  },\\n\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tjson = json + \"\\n\\t  { \\n\\t  \\\"arista\\\": \\\"\"+this.vertices[i][1][j][0]+\"\\\",\\n\\t   \\\"distancia\\\": \"+this.vertices[i][1][j][1]+\"\\n\\t  },\\n\";\t\r\n\t\t\t\t}\r\n    \t\t}\r\n    \t\tjson=json+\" ]\\n },\\n\";\r\n    \t}\r\n    \tjson = json +\"  ]\\n}\" \r\n    \treturn json;\r\n    }\r\n    generateJSONFila=(dirigido)=>{\r\n    \tvar json = \"{\\n  \\\"categoria\\\": \\\"Estructura No Lineal\\\",\\n  \\\"nombre\\\": \\\"Grafo \"+dirigido+\"\\\",\\n  \\\"almacenamiento\\\": \\\"Lista\\\",\\n  \\\"animacion\\\": 10,\\n  \\\"valores\\\": [\\n\";\r\n    \tfor(let i=0; i<this.vertices.length; i++){\r\n    \t\tlet esentero = true;\r\n\t\t\tlet entero = parseInt(this.vertices[i][0]); \r\n\t\t\tif(isNaN(entero)){\r\n\t\t\t\tesentero=false;\r\n\t\t\t}\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tjson = json + \"   {\\n\\t\\\"vertice\\\": \"+this.vertices[i][0]+\",\";\r\n\t\t\t}else{\r\n\t\t\t\tjson = json + \"   {\\n\\t\\\"vertice\\\": \\\"\"+this.vertices[i][0]+\"\\\",\";\r\n\t\t\t}\r\n    \t\tjson = json + \"\\n\\t\\\"aristas\\\": [\";\r\n    \t\tfor(let j=0; j<this.vertices[i][1].length; j++){\r\n    \t\t\tlet esentero2 = true;\r\n\t\t\t\tlet entero2 = parseInt(this.vertices[i][1][j][0]); \r\n\t\t\t\tif(isNaN(entero2)){\r\n\t\t\t\t\tesentero2=false;\r\n\t\t\t\t}\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\tjson = json + \"\\n\\t  { \\n\\t  \\\"arista\\\": \"+this.vertices[i][1][j][0]+\",\\n\\t   \\\"distancia\\\": \"+this.vertices[i][1][j][1]+\"\\n\\t  },\\n\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tjson = json + \"\\n\\t  { \\n\\t  \\\"arista\\\": \\\"\"+this.vertices[i][1][j][0]+\"\\\",\\n\\t   \\\"distancia\\\": \"+this.vertices[i][1][j][1]+\"\\n\\t  },\\n\";\t\r\n\t\t\t\t}\r\n    \t\t}\r\n    \t\tjson=json+\" ]\\n },\\n\";\r\n    \t}\r\n    \tjson = json +\"  ]\\n}\" \r\n    \treturn json;\r\n    }\r\n}\r\nexport default Grafo;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport Grafo from './Modelo/NoLineal/Grafo'; // Importar la Estructura Lista Simple.\r\nvar grafo = new Grafo();\r\nvar getNodes = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar getNodes2 = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges2 = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar data2 = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar options = {\r\n\tnodes:{\r\n\t\tshape: \"box\",\r\n    \tmargin: 10,\r\n    \twidthConstraint: {\r\n    \t  maximum: 300,\r\n    \t},\r\n        borderWidth: 30,\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"UD\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n};\r\nvar options2 = {\r\n\tnodes:{\r\n\t\tshape: \"box\",\r\n    \tmargin: 10,\r\n    \twidthConstraint: {\r\n    \t  maximum: 300,\r\n    \t},\r\n        borderWidth: 30,\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"UD\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass GrafoProfundidad extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topcion: 'No Dirigido',\r\n\t\t\torigen: '',\r\n\t\t\tdonde: '',\r\n\t\t\tdistancia: '',\r\n\t\t\tinicio: '',\r\n\t\t\tfin: '',\r\n\t\t\tbuscar: '',\r\n\t\t\ttext: '',\r\n\t\t\tactualizar: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\t//this.tablahash;\r\n\t  \tthis.network = {};\r\n\t\tthis.network2 = {};\r\n\t  \tthis.appRef = createRef();\r\n\t  \tthis.appRef2 = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\tcomponentDidMount2() {\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleAgregarArista=()=>{\r\n\t\tgrafo.AgregarArista(this.state.origen,this.state.donde,this.state.distancia);\r\n\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleRecorrer=()=>{\r\n\r\n\t}\r\n\thandleBusqueda=()=>{\r\n\r\n\t}\r\n\r\n\thandleAdd = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(esentero==true){\r\n\t\t\tgrafo.Insertar(parseInt(this.state.text),[]);\r\n\t\t}else{\r\n\t\t\tgrafo.Insertar(this.state.text,[]);\r\n\t\t}\r\n\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleLista=()=>{\r\n\t\tgetNodes2 = new DataSet(grafo.getDataSetLista()[0]);\r\n\t\tgetEdges2 = new DataSet(grafo.getDataSetLista()[1]);\r\n\t\tdata2 = {\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\thandleMatriz=()=>{\r\n\t\tgetNodes2 = new DataSet(grafo.getDataSetMatriz()[0]);\r\n\t\tgetEdges2 = new DataSet(grafo.getDataSetMatriz()[1]);\r\n\t\tdata2 = {\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(esentero==true){\r\n\t\t\tgrafo.Eliminar(parseInt(this.state.text));\r\n\t\t}else{\r\n\t\t\tgrafo.Eliminar(this.state.text);\r\n\t\t}\r\n\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tgrafo.Actualizar(this.state.text,this.state.actualizar);\r\n\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet indice=grafo.Buscar(this.state.text);\r\n\t\tif(indice!=-1){\r\n\t\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(indice), to: parseInt(indice),color:{color:'#ff383f'}});\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\t\tlet paraarreglo=[]\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\t//let nombre = \"Estructura Compuesta\";\r\n\t\tif (dataJson.categoria == \"Estructura No Lineal\"){\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tlet aristas=[];\r\n\t\t\t\tif(dataJson.valores[i].aristas.length!=0){\r\n\t\t\t\t\tfor(let j=0; j<dataJson.valores[i].aristas.length; j++){\r\n\t\t\t\t\t\tconsole.log(\"Aqui1 \"+dataJson.valores[i].aristas[j].arista);\r\n\t\t\t\t\t\tconsole.log(\"Aqui2 \"+dataJson.valores[i].aristas[j].distancia);\r\n\t\t\t\t\t\tlet aux1=dataJson.valores[i].aristas[j].arista;\r\n\t\t\t\t\t\tlet aux2=dataJson.valores[i].aristas[j].distancia;\r\n\t\t\t\t\t\taristas.push([aux1,aux2]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tgrafo.Insertar(dataJson.valores[i].vertice,aristas);\r\n\t\t\t}\r\n\t\t\tif(dataJson.nombre==\"Grafo Dirigido\"){\r\n\t\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t\t}else{\r\n\t\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t\t}\r\n\t\t\tif(dataJson.almacenamiento==\"Matriz\"){\r\n\t\t\t\tgetNodes2 = new DataSet(grafo.getDataSetMatriz()[0]);\r\n\t\t\t\tgetEdges2 = new DataSet(grafo.getDataSetMatriz()[1]);\r\n\t\t\t}else{\r\n\t\t\t\tgetNodes2 = new DataSet(grafo.getDataSetLista()[0]);\r\n\t\t\t\tgetEdges2 = new DataSet(grafo.getDataSetLista()[1]);\r\n\t\t\t}\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tdata2 = {\r\n\t\t\t\tnodes: getNodes2,\r\n\t\t\t\tedges: getEdges2\r\n\t\t\t}\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA COMPUESTA O DE COLUMN MAJOR!! \")\r\n\t\t}\r\n\t}\r\n\r\n\thandleSaveFileMatriz = () => {\r\n\t\tconst element = document.createElement(\"a\");\r\n\t\tvar contenido = grafo.generateJSONMatriz(this.state.opcion);\r\n\t\tconst blob = new Blob([contenido]);                   \r\n\t\telement.href = URL.createObjectURL(blob);\r\n\t    element.download = \"Grafo.json\";\r\n\t    document.body.appendChild(element);\r\n\t    element.click();\r\n\t    alert(\"Documento Creado!\")\r\n\t}\r\n\thandleSaveFileLista = () => {\r\n\t\tconst element = document.createElement(\"a\");\r\n\t\tvar contenido = grafo.generateJSONFila(this.state.opcion);\r\n\t\tconst blob = new Blob([contenido]);                   \r\n\t\telement.href = URL.createObjectURL(blob);\r\n\t    element.download = \"Grafo.json\";\r\n\t    document.body.appendChild(element);\r\n\t    element.click();\r\n\t    alert(\"Documento Creado!\")\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"minimo\" name=\"origen\" className=\"form-control\" placeholder=\"Ingresar Origen\" id=\"InputFilas\" value={this.state.origen} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"maximo\" name=\"donde\" className=\"form-control\" placeholder=\"Ingresar Hacia Donde\" id=\"InputColumnas\" value={this.state.donde} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"maximo\" name=\"distancia\" className=\"form-control\" placeholder=\"Ingresar Distancia\" id=\"InputColumnas\" value={this.state.distancia} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAgregarArista()}>Agregar Arista</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleLista()}>Generar Lista</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"actualizar\" className=\"form-control\" placeholder=\"Ingresar Dato a Actualizar\" id=\"InputCola\" value={this.state.actualizar} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<select type=\"opcion\" name=\"opcion\" className=\"form-select\" onChange={this.handleInputChange}>\r\n        \t\t\t\t<option value=\"No Dirigido\">No Dirigido</option>\r\n        \t\t\t\t<option value=\"Dirigido\">Dirigido</option>\r\n      \t\t\t\t</select>\r\n      \t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleMatriz()}>Generar Matriz</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Vertice</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar Vertice</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Vertice</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleUpdate()} >Actualizar Vertice</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFileMatriz()}>Guardar Matriz</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFileLista()}>Guardar Lista</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleRecorrer()}>Recorrer</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"inicio\" className=\"form-control\" placeholder=\"Ingresar Inicio\" id=\"InputCola\" value={this.state.inicio} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"fin\" className=\"form-control\" placeholder=\"Ingresar Fin\" id=\"InputCola\" value={this.state.fin} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"buscar\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.buscar} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleBusqueda()}>Busqueda</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 30 + 'em'}} ref={this.appRef2} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default GrafoProfundidad;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport Grafo from './Modelo/NoLineal/Grafo'; // Importar la Estructura Lista Simple.\r\nvar grafo = new Grafo();\r\nvar getNodes = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar getNodes2 = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges2 = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar data2 = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar options = {\r\n\tnodes:{\r\n\t\tshape: \"box\",\r\n    \tmargin: 10,\r\n    \twidthConstraint: {\r\n    \t  maximum: 300,\r\n    \t},\r\n        borderWidth: 30,\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"UD\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n};\r\nvar options2 = {\r\n\tnodes:{\r\n\t\tshape: \"box\",\r\n    \tmargin: 10,\r\n    \twidthConstraint: {\r\n    \t  maximum: 300,\r\n    \t},\r\n        borderWidth: 30,\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"UD\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass GrafoAnchura extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topcion: 'No Dirigido',\r\n\t\t\torigen: '',\r\n\t\t\tdonde: '',\r\n\t\t\tdistancia: '',\r\n\t\t\tinicio: '',\r\n\t\t\tfin: '',\r\n\t\t\tbuscar: '',\r\n\t\t\ttext: '',\r\n\t\t\tactualizar: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\t//this.tablahash;\r\n\t  \tthis.network = {};\r\n\t\tthis.network2 = {};\r\n\t  \tthis.appRef = createRef();\r\n\t  \tthis.appRef2 = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\tcomponentDidMount2() {\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleAgregarArista=()=>{\r\n\t\tgrafo.AgregarArista(this.state.origen,this.state.donde,this.state.distancia);\r\n\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleRecorrer=()=>{\r\n\r\n\t}\r\n\thandleBusqueda=()=>{\r\n\r\n\t}\r\n\r\n\thandleAdd = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(esentero==true){\r\n\t\t\tgrafo.Insertar(parseInt(this.state.text),[]);\r\n\t\t}else{\r\n\t\t\tgrafo.Insertar(this.state.text,[]);\r\n\t\t}\r\n\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleLista=()=>{\r\n\t\tgetNodes2 = new DataSet(grafo.getDataSetLista()[0]);\r\n\t\tgetEdges2 = new DataSet(grafo.getDataSetLista()[1]);\r\n\t\tdata2 = {\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\thandleMatriz=()=>{\r\n\t\tgetNodes2 = new DataSet(grafo.getDataSetMatriz()[0]);\r\n\t\tgetEdges2 = new DataSet(grafo.getDataSetMatriz()[1]);\r\n\t\tdata2 = {\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(esentero==true){\r\n\t\t\tgrafo.Eliminar(parseInt(this.state.text));\r\n\t\t}else{\r\n\t\t\tgrafo.Eliminar(this.state.text);\r\n\t\t}\r\n\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tgrafo.Actualizar(this.state.text,this.state.actualizar);\r\n\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet indice=grafo.Buscar(this.state.text);\r\n\t\tif(indice!=-1){\r\n\t\t\tif(this.state.opcion==\"No Dirigido\"){\r\n\t\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t\t}else if(this.state.opcion==\"Dirigido\"){\r\n\t\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(indice), to: parseInt(indice),color:{color:'#ff383f'}});\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\t\tlet paraarreglo=[]\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\t//let nombre = \"Estructura Compuesta\";\r\n\t\tif (dataJson.categoria == \"Estructura No Lineal\"){\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tlet aristas=[];\r\n\t\t\t\tif(dataJson.valores[i].aristas.length!=0){\r\n\t\t\t\t\tfor(let j=0; j<dataJson.valores[i].aristas.length; j++){\r\n\t\t\t\t\t\tconsole.log(\"Aqui1 \"+dataJson.valores[i].aristas[j].arista);\r\n\t\t\t\t\t\tconsole.log(\"Aqui2 \"+dataJson.valores[i].aristas[j].distancia);\r\n\t\t\t\t\t\tlet aux1=dataJson.valores[i].aristas[j].arista;\r\n\t\t\t\t\t\tlet aux2=dataJson.valores[i].aristas[j].distancia;\r\n\t\t\t\t\t\taristas.push([aux1,aux2]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tgrafo.Insertar(dataJson.valores[i].vertice,aristas);\r\n\t\t\t}\r\n\t\t\tif(dataJson.nombre==\"Grafo Dirigido\"){\r\n\t\t\t\tgetNodes = new DataSet(grafo.getDataSetDirigido()[0]);\r\n\t\t\t\tgetEdges = new DataSet(grafo.getDataSetDirigido()[1]);\r\n\t\t\t}else{\r\n\t\t\t\tgetNodes = new DataSet(grafo.getDataSetNoDirigido()[0]);\r\n\t\t\t\tgetEdges = new DataSet(grafo.getDataSetNoDirigido()[1]);\r\n\t\t\t}\r\n\t\t\tif(dataJson.almacenamiento==\"Matriz\"){\r\n\t\t\t\tgetNodes2 = new DataSet(grafo.getDataSetMatriz()[0]);\r\n\t\t\t\tgetEdges2 = new DataSet(grafo.getDataSetMatriz()[1]);\r\n\t\t\t}else{\r\n\t\t\t\tgetNodes2 = new DataSet(grafo.getDataSetLista()[0]);\r\n\t\t\t\tgetEdges2 = new DataSet(grafo.getDataSetLista()[1]);\r\n\t\t\t}\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tdata2 = {\r\n\t\t\t\tnodes: getNodes2,\r\n\t\t\t\tedges: getEdges2\r\n\t\t\t}\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\t\tthis.network = new Network(this.appRef2.current, data2, options2);\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA COMPUESTA O DE COLUMN MAJOR!! \")\r\n\t\t}\r\n\t}\r\n\r\n\thandleSaveFileMatriz = () => {\r\n\t\tconst element = document.createElement(\"a\");\r\n\t\tvar contenido = grafo.generateJSONMatriz(this.state.opcion);\r\n\t\tconst blob = new Blob([contenido]);                   \r\n\t\telement.href = URL.createObjectURL(blob);\r\n\t    element.download = \"Grafo.json\";\r\n\t    document.body.appendChild(element);\r\n\t    element.click();\r\n\t    alert(\"Documento Creado!\")\r\n\t}\r\n\thandleSaveFileLista = () => {\r\n\t\tconst element = document.createElement(\"a\");\r\n\t\tvar contenido = grafo.generateJSONFila(this.state.opcion);\r\n\t\tconst blob = new Blob([contenido]);                   \r\n\t\telement.href = URL.createObjectURL(blob);\r\n\t    element.download = \"Grafo.json\";\r\n\t    document.body.appendChild(element);\r\n\t    element.click();\r\n\t    alert(\"Documento Creado!\")\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"minimo\" name=\"origen\" className=\"form-control\" placeholder=\"Ingresar Origen\" id=\"InputFilas\" value={this.state.origen} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"maximo\" name=\"donde\" className=\"form-control\" placeholder=\"Ingresar Hacia Donde\" id=\"InputColumnas\" value={this.state.donde} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"maximo\" name=\"distancia\" className=\"form-control\" placeholder=\"Ingresar Distancia\" id=\"InputColumnas\" value={this.state.distancia} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAgregarArista()}>Agregar Arista</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleLista()}>Generar Lista</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"actualizar\" className=\"form-control\" placeholder=\"Ingresar Dato a Actualizar\" id=\"InputCola\" value={this.state.actualizar} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<select type=\"opcion\" name=\"opcion\" className=\"form-select\" onChange={this.handleInputChange}>\r\n        \t\t\t\t<option value=\"No Dirigido\">No Dirigido</option>\r\n        \t\t\t\t<option value=\"Dirigido\">Dirigido</option>\r\n      \t\t\t\t</select>\r\n      \t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleMatriz()}>Generar Matriz</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Vertice</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar Vertice</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Vertice</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleUpdate()} >Actualizar Vertice</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFileMatriz()}>Guardar Matriz</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFileLista()}>Guardar Lista</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleRecorrer()}>Recorrer</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"inicio\" className=\"form-control\" placeholder=\"Ingresar Inicio\" id=\"InputCola\" value={this.state.inicio} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"fin\" className=\"form-control\" placeholder=\"Ingresar Fin\" id=\"InputCola\" value={this.state.fin} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"buscar\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.buscar} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleBusqueda()}>Busqueda</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 30 + 'em'}} ref={this.appRef2} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default GrafoAnchura;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport EncodeFeistel from './Modelo/Codificacion/Feistel/Feistel.js'; // Importar la Estructura Lista Simple.\r\nvar encodeFeistel = new EncodeFeistel(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(encodeFeistel.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(encodeFeistel.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 400,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n\t\tshape: \"box\",\r\n        borderWidth: 20,\r\n        shape: \"box\",\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#00e53f',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    },\r\n    layout:{\r\n\t\thierarchical: {\r\n\t\t  direction: \"UD\",\r\n\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass Feistel extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttext: '',\r\n\t\t\tciclo: '',\r\n\t\t\tkey: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst encodeText = this.state.fileContent;\r\n\t\tconsole.log(encodeText)\r\n\t\t\t\t\r\n\t\tencodeFeistel.encode(String(encodeText), String(this.state.key), parseInt(this.state.ciclo))\r\n\t\tgetNodes = new DataSet(encodeFeistel.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(encodeFeistel.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\r\n\t\r\n\t}\r\n\r\n\thandleEncode = () => {\r\n\t\tif(this.state.text!=\"\"){\r\n\t\t\tencodeFeistel.encode(String(this.state.text), String(this.state.key), parseInt(this.state.ciclo))\r\n\t\t\tgetNodes = new DataSet(encodeFeistel.setNodesDataSet());\r\n\t\t\t\tgetEdges = new DataSet(encodeFeistel.setEdgesDataSet());\r\n\t\t\t\tdata = {\r\n\t\t\t\t\tnodes: getNodes,\r\n\t\t\t\t\tedges: getEdges\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\t}else{\r\n\t\t\talert(\"Debes de ingresar un numero Binario.\")\r\n\t\t}\r\n\t\t\r\n\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\t\tconst element = document.createElement(\"a\");\r\n\t\tvar contenido = encodeFeistel.generateJSON()\r\n\t\tconst blob = new Blob([contenido]);                   \r\n\t\telement.href = URL.createObjectURL(blob);\r\n\t    element.download = \"Feistel.txt\";\r\n\t    document.body.appendChild(element);\r\n\t    element.click();\r\n\t    alert(\"Documento Creado!\")\r\n\t\t\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<input type=\"text\" name=\"key\" className=\"form-control\" placeholder=\"Key:\" id=\"InputCola\" value={this.state.key} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<input type=\"text\" name=\"ciclo\" className=\"form-control\" placeholder=\"Ciclo:\" id=\"InputCola\" value={this.state.ciclo} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Cadena/ASCII:\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleEncode()}>Codificar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default Feistel;","class Feistel{\r\n\r\n\tconstructor(){\r\n\t\tthis.tabla = []\r\n\t\tthis.binario = []\r\n\t\tthis.key = null;\r\n\t\tthis.nivel = 1;\r\n\t\tthis.ciclo = null;\r\n\t\tthis.resultado = [];\r\n\t}\r\n\r\n\r\n\tencode = (texto, key, ciclo) => { // ciclo indica cuantas veces hara el shift\r\n\t\tthis.key = key;\r\n\t\tthis.ciclo = ciclo\r\n\t\tvar size = texto.length\r\n\t\tvar i = 0;\r\n\t\t// -------------------\r\n\t\t// Convertir a Binario\r\n\t\t// -------------------\r\n\t\twhile(i<size){\r\n\t\t\tif(typeof(parseInt(texto.charAt(i))) == \"number\" && 0<=parseInt(texto.charAt(i))){\r\n\t\t\t\tvar binario = this.toBinario(parseInt(texto.charAt(i)))\r\n\t\t\t\t\r\n\t\t\t\tif( String(binario).length < 8){\r\n\t\t\t\t\tlet concatenar = ''\r\n\t\t\t\t\tlet temp = 8 - String(binario).length\r\n\t\t\t\t\tvar j = 0;\r\n\t\t\t\t\twhile(j<temp){\r\n\t\t\t\t\t\tconcatenar += \"0\"\r\n\t\t\t\t\t\tj++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.binario.push(String(concatenar) + binario) \r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.binario.push(binario)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}else if(typeof(texto.charAt(i)) == \"string\"){\r\n\t\t\t\tvar binario = this.toASCII(String(texto.charAt(i)))\r\n\t\t\t\t\r\n\t\t\t\tif(binario.length < 8){\r\n\t\t\t\t\tlet concatenar = ''\r\n\t\t\t\t\tlet temp = 8 - binario.length\r\n\t\t\t\t\tvar j = 0;\r\n\t\t\t\t\twhile(j<temp){\r\n\t\t\t\t\t\tconcatenar += \"0\"\r\n\t\t\t\t\t\tj++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.binario.push(String(concatenar) + binario) \r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.binario.push(binario)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\tconsole.log(this.binario)\r\n\t\ti = 0;\r\n\t\twhile(i<this.binario.length){\r\n\t\t\tif(this.binario[i+1]!=null){\r\n\t\t\t\tlet temp = this.key\r\n\t\t\t\tthis.shift(this.binario[i],this.binario[i+1], 1)\r\n\t\t\t\tthis.key = temp;\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\r\n\t\t\r\n\t\t\t\r\n\r\n\t}\r\n\r\n\tshift = (left,right, n) => {\r\n\t\tif(n<=this.ciclo){\r\n\t\t\t// console.log(\"W\"+String(n-1) + \" L: \" + left + \" R: \" + right)\r\n\t\t\tthis.tabla.push({dato:\"W\"+String(n-1), nivel:this.nivel})\r\n\t\t\tthis.tabla.push({dato:left, nivel:this.nivel})\r\n\t\t\tthis.tabla.push({dato:right, nivel:this.nivel})\r\n\t\t\tthis.nivel++;\r\n\r\n\t\t\tvar concatenar  = '';\r\n\t\t\tvar i = 0;\r\n\t\t\t// console.log(\"\\t\\t  \" + this.key + \"  K\" + String(n-1))\r\n\t\t\tthis.tabla.push({dato:\"K\"+String(n-1), nivel:this.nivel})\r\n\t\t\tthis.tabla.push({dato:this.key, nivel:this.nivel})\r\n\t\t\tthis.nivel ++;\r\n\r\n\t\t\twhile(i<8){\r\n\r\n\t\t\t\tlet r = right.charAt(i)\r\n\t\t\t\tlet k = this.key.charAt(i)\r\n\t\t\t\tlet value = 0;\r\n\t\t\t\t\r\n\t\t\t\tif(r == 1 && k == 1) value = 0;\r\n\t\t\t\tif(r == 1 && k == 0) value = 1;\r\n\t\t\t\tif(r == 0 && k == 1) value = 1;\r\n\t\t\t\tif(r == 0 && k == 0) value = 0;\r\n\t\t\t\t\r\n\t\t\t\tconcatenar += String(value)\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\r\n\t\t\t// console.log(\"\\t\\t  \" + concatenar + \"  F\" + String(n-1))\r\n\t\t\t// console.log(\"\\t\\t  \" + left + \"  L\" + String(n-1))\r\n\r\n\t\t\tthis.tabla.push({dato:\"F\"+String(n-1), nivel:this.nivel})\r\n\t\t\tthis.tabla.push({dato:concatenar, nivel:this.nivel})\r\n\t\t\tthis.nivel++;\r\n\t\t\tthis.tabla.push({dato:\"L\"+String(n-1), nivel:this.nivel})\r\n\t\t\tthis.tabla.push({dato:left, nivel:this.nivel})\r\n\t\t\tthis.nivel++;\r\n\t\t\t\r\n\t\t\tthis.shiftCircular()\r\n\t\t\tvar temp = '';\r\n\t\t\tvar i = 0;\r\n\t\t\t\r\n\t\t\twhile(i<8){\r\n\r\n\t\t\t\tlet c = concatenar.charAt(i)\r\n\t\t\t\tlet l = left.charAt(i)\r\n\t\t\t\tlet value = 0;\r\n\t\t\t\t\r\n\t\t\t\tif(c == 1 && l == 1) value = 0;\r\n\t\t\t\tif(c == 1 && l == 0) value = 1;\r\n\t\t\t\tif(c == 0 && l == 1) value = 1;\r\n\t\t\t\tif(c == 0 && l == 0) value = 0;\r\n\t\t\t\t\r\n\t\t\t\ttemp += String(value)\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// ------------------------------\r\n\t\t\t//  right = left && right = temp\r\n\t\t\t// ------------------------------\r\n\t\t\t\r\n\t\t\tthis.shift(right,temp,n+1)\r\n\r\n\t\t}else{\r\n\r\n\t\t\t// console.log(\"FIN: \"+ \"L: \" + left + \"R: \" + right);\r\n\t\t\tthis.tabla.push({dato:\"W\"+String(n-1), nivel:this.nivel});\r\n\t\t\tthis.tabla.push({dato:left, nivel:this.nivel});\r\n\t\t\tthis.tabla.push({dato:right, nivel:this.nivel});\r\n\t\t\tthis.resultado.push(left);\r\n\t\t\tthis.resultado.push(right);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tshiftCircular = () => {\r\n\t\tvar concatenar = ''\r\n\t\tvar i = 0;\r\n\t\twhile(i<8){\r\n\t\t\tif(i!=0){\r\n\t\t\t\tlet temp = this.key.charAt(i);\r\n\t\t\t\tconcatenar += String(temp);\t\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tconcatenar += String(this.key.charAt(0));\r\n\t\tthis.key = String(concatenar);\r\n\t}\r\n\r\n\ttoBinario = (entero) =>{\r\n\t\tlet binario = [];\r\n\t\twhile(entero>1){\r\n\t\t\tbinario.push(entero % 2)\r\n\t\t\tentero = Math.floor(entero/2)\r\n\t\t}\r\n\t\tbinario.push(entero)\r\n\t\treturn parseInt(binario.reverse().join(''))\r\n\t} \r\n\r\n\r\n\ttoASCII = (cadena) => {\r\n\t\tlet size = cadena.length;\r\n\t\tlet i = 0;\r\n\t\tlet concatenar = \"\"\r\n\t\twhile(i<size){\r\n\t\t\tlet binario = cadena.charCodeAt(i)\r\n\t\t\tconcatenar = concatenar + String(this.toBinario(binario))\r\n\t\t\ti++;\t\r\n\t\t}\r\n\treturn concatenar\r\n\t}\r\n\r\n\t// Grafica\r\n\tsetNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        var i = 0;\r\n        var nodoId = 0;\r\n        i=0\r\n        while(i<this.tabla.length){\r\n        \t\r\n        \tdot.push({id:nodoId, label:String(this.tabla[i].dato), level:this.tabla[i].nivel});\r\n\t        \r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n\r\n        i = 0;\r\n        while(i<this.resultado.length){\r\n\t\t\tdot.push({id:nodoId, label:String(this.resultado[i]), level:this.nivel+1});    \r\n        \ti++;\r\n        \tnodoId++;\r\n\r\n        }\r\n       \t\r\n        return dot;\r\n\r\n    }\r\n\r\n\r\n    setEdgesDataSet = () => {\r\n    \tvar i = 0\r\n    \tvar dot = [];\r\n    \tvar nodoId = 0;\r\n    \twhile(i<this.tabla.length){\r\n        \tif(this.tabla[i+1]!=null && this.tabla[i+1].nivel == this.tabla[i].nivel){\r\n        \t\tdot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n        \t}\r\n        \tif(this.tabla[i+1]!=null && this.tabla[i+1].nivel != this.tabla[i].nivel){\r\n        \t\t\r\n    \t\t\tif(this.tabla[i+1].dato.charAt(0) == \"K\" || this.tabla[i+1].dato.charAt(0) == \"F\" || this.tabla[i+1].dato.charAt(0) == \"L\"){\r\n\t\t       \t\t\tdot.push({from:parseInt(nodoId), to:parseInt(nodoId+2), arrows: \"to\"});\r\n    \t\t\t}else if(this.tabla[i+1].dato.charAt(0) == \"W\"){\r\n    \t\t\t\tdot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n    \t\t\t}\r\n        \t}\r\n        \ti++;\r\n        \tnodoId++;\r\n        }\r\n\r\n\r\n         i = 0;\r\n        while(i<this.resultado.length){\r\n        \tif(this.resultado[i+1]!=null){\r\n\t\t\t\tdot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n        \t}\r\n    \t\ti++;\r\n        \tnodoId++;\r\n\r\n        }\r\n        \r\n        return dot;\r\n\r\n    }\r\n\r\n    generateJSON = () => {\r\n\r\n    \tvar json =\"\";\r\n    \t\r\n    \tvar i = 0;\r\n    \twhile(i<this.resultado.length){\r\n    \t\tjson += String(this.resultado[i]) + \" \"\t\r\n    \t\ti++;\r\n    \t}\r\n    \tconsole.log(json)\r\n    \treturn json\r\n    }\r\n\r\n\t\r\n}\r\nexport default Feistel;\r\n// module.exports = Feistel;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport EncodeLZW from './Modelo/Codificacion/LZW/LZW.js'; // Importar la Estructura Lista Simple.\r\nvar encodeLZW = new EncodeLZW(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(encodeLZW.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(encodeLZW.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 400,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n\t\tshape: \"box\",\r\n        borderWidth: 20,\r\n        shape: \"box\",\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#00e53f',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    },\r\n    layout:{\r\n\t\thierarchical: {\r\n\t\t  direction: \"UD\",\r\n\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass LZW extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttext: '',\r\n\t\t\tciclo: '',\r\n\t\t\tkey: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst encodeText = this.state.fileContent;\r\n\t\tconsole.log(encodeText)\r\n\t\t\t\t\r\n\t\tencodeLZW.encode(String(encodeText), String(this.state.key))\r\n\t\tgetNodes = new DataSet(encodeLZW.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(encodeLZW.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\r\n\t\r\n\t}\r\n\r\n\thandleEncode = () => {\r\n\t\tif(this.state.text!=\"\"){\r\n\t\t\tencodeLZW.encode(String(this.state.text), String(this.state.key))\r\n\t\t\tgetNodes = new DataSet(encodeLZW.setNodesDataSet());\r\n\t\t\t\tgetEdges = new DataSet(encodeLZW.setEdgesDataSet());\r\n\t\t\t\tdata = {\r\n\t\t\t\t\tnodes: getNodes,\r\n\t\t\t\t\tedges: getEdges\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\t}else{\r\n\t\t\talert(\"Debes de ingresar un numero Binario.\")\r\n\t\t}\r\n\t\t\r\n\r\n\t}\r\n\r\n\thandleDecode = () => {\r\n\t\tencodeLZW.decode(String(this.state.key))\r\n\t\tgetNodes = new DataSet(encodeLZW.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(encodeLZW.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\t\tconst element = document.createElement(\"a\");\r\n\t\tvar contenido = encodeLZW.generateJSON()\r\n\t\tconst blob = new Blob([contenido]);                   \r\n\t\telement.href = URL.createObjectURL(blob);\r\n\t    element.download = \"LZW.txt\";\r\n\t    document.body.appendChild(element);\r\n\t    element.click();\r\n\t    alert(\"Documento Creado!\")\r\n\t\t\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<input type=\"text\" name=\"key\" className=\"form-control\" placeholder=\"Key:\" id=\"InputCola\" value={this.state.key} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Cadena/ASCII:\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleEncode()}>Codificar</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleDecode()}>Decodificar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default LZW;","class LZW {\r\n\r\n    constructor(){\r\n        this.kw = [];\r\n        this.tokens = [];\r\n        this.tk_id = 0;\r\n        this.tabla = []\r\n        this.nivel = 1;\r\n        this.resultado = '';\r\n        this.resultadoDecode = null;\r\n    }\r\n\r\n    encode = (cadena , key) => {\r\n\r\n        this.kw = [] ;\r\n        var dato = (cadena + \"\").split(\"\"); // k Se convierte en la cadena..\r\n        this.tokens = []\r\n        this.tk_id = 0;\r\n        var i = 0;\r\n        var ascii = key;\r\n        while(i<dato.length){\r\n            if(this.search(dato[i]) == false){\r\n                this.tokens.push({id:String(dato[i]), token:parseInt(this.tk_id)});\r\n                this.tk_id ++;\r\n            }\r\n            i++;\r\n        }\r\n        var salida = [];\r\n        var k = dato[0];\r\n        this.tabla.push({w:\" \", k:k, wK:String(k), dic:\" \", salida:\" \" ,nivel:this.nivel})\r\n        this.nivel ++; \r\n        var w = k;   // p\r\n        \r\n\r\n        for(var i=1;i<dato.length;i++){\r\n            k = dato[i] // A\r\n            \r\n            if(this.searchDic(String(w)+String(k))==false){ // AP\r\n                this.tabla.push({w:w, k:k, wK:String(w+k), dic:String(w+k)+\" \"+this.tk_id,salida:ascii,nivel:this.nivel})\r\n                this.nivel ++;\r\n\r\n                salida.push(w.length > 1 ? this.kw[w] : w.charCodeAt(0));\r\n                this.tokens.push({id:String(w)+String(k), token:parseInt(this.tk_id)})\r\n                this.kw[String(w)+String(k)] = ascii\r\n                this.kw.push({id:String(w)+String(k), token:this.tk_id, salida:ascii})\r\n                this.tk_id++;\r\n                w = k;\r\n                ascii++;\r\n            }else{\r\n                this.tabla.push({w:w, k:k, wK:String(w+k), dic:\" \", salida: \" \", nivel:this.nivel})\r\n                this.nivel ++;\r\n\r\n                w += k\r\n            }\r\n\r\n        }\r\n        this.tabla.push({w:w, k:\" \", wK:String(w), dic:\" \", salida: \" \", nivel:this.nivel})\r\n        this.nivel ++;\r\n        salida.push(w.length > 1 ? this.kw[w] : w.charCodeAt(0));\r\n        \r\n        for (var i=0; i<salida.length; i++) {\r\n            salida[i] = String.fromCharCode(salida[i]);\r\n            \r\n        }\r\n        this.resultado = salida.join(\"\")\r\n        return salida.join(\"\")\r\n\r\n\r\n    }\r\n\r\n    decode(key) {\r\n        var texto = this.resultado\r\n        var diccionario = {};\r\n        var dato = (texto + \"\").split(\"\");\r\n        var temp = dato[0];\r\n        var regresoFrase = temp;\r\n        var salida = [temp];\r\n        var ascii = key;\r\n        var palabbra;\r\n        for (var i=1; i<dato.length; i++) {\r\n            var aux = dato[i].charCodeAt(0);\r\n            if (aux < key) {\r\n                palabbra = dato[i];\r\n            }\r\n            else {\r\n               palabbra = diccionario[aux] ? diccionario[aux] : (regresoFrase + temp);\r\n            }\r\n            salida.push(palabbra);\r\n            temp = palabbra.charAt(0);\r\n            diccionario[ascii] = regresoFrase + temp;\r\n            ascii++;\r\n            regresoFrase = palabbra;\r\n        }\r\n        this.resultado = salida.join(\"\")\r\n        return this.resultado;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    search = (dato) => {\r\n        var i = 0;\r\n        while(i<this.tokens.length){\r\n            if(this.tokens[i].id == dato){\r\n                return true\r\n            }\r\n            i++;\r\n        }\r\n        return false\r\n    }\r\n\r\n    searchDic = (dato) => {\r\n    for(var i=0;i<this.kw.length;i++){\r\n        if(this.kw[i].id == dato){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n    }\r\n\r\n    // Grafica\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        var i = 0;\r\n        var nodoId = 0;\r\n        dot.push({id:nodoId, label:\"w\", level:0});\r\n        nodoId++;\r\n        dot.push({id:nodoId, label:\"k\", level:0});\r\n        nodoId++;\r\n        dot.push({id:nodoId, label:\"wK\", level:0});\r\n        nodoId++;\r\n        dot.push({id:nodoId, label:\"Agregar a Diccionario\", level:0});\r\n        nodoId++;\r\n        dot.push({id:nodoId, label:\"Salida\", level:0});\r\n        nodoId++;\r\n        while(i<this.tabla.length){\r\n            dot.push({id:nodoId, label:String(this.tabla[i].w), level:this.tabla[i].nivel});\r\n            nodoId++;\r\n            dot.push({id:nodoId, label:String(this.tabla[i].k), level:this.tabla[i].nivel});\r\n            nodoId++;\r\n            dot.push({id:nodoId, label:String(this.tabla[i].wK), level:this.tabla[i].nivel});\r\n            nodoId++;\r\n            dot.push({id:nodoId, label:String(this.tabla[i].dic), level:this.tabla[i].nivel});\r\n            nodoId++;\r\n            dot.push({id:nodoId, label:String(this.tabla[i].salida), level:this.tabla[i].nivel});\r\n            nodoId++;\r\n            i++;\r\n        }\r\n        dot.push({id:nodoId, label:this.resultado, level:this.nivel});\r\n        nodoId++;\r\n        if(this.resultadoDecode!=null){\r\n            dot.push({id:nodoId, label:this.resultadoDecode, level:parseInt(this.nivel+1)});    \r\n        }\r\n        \r\n        return dot;\r\n\r\n    }\r\n\r\n\r\n    setEdgesDataSet = () => {\r\n        var dot = [];\r\n        var i = 0;\r\n        var nodoId = 0;\r\n        dot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n        dot.push({from:parseInt(nodoId), to:parseInt(nodoId+5), arrows: \"to\"});\r\n        nodoId++;\r\n        dot.push({from:parseInt(nodoId), to:parseInt(nodoId+5), arrows: \"to\"});\r\n        dot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n        nodoId++;\r\n        dot.push({from:parseInt(nodoId), to:parseInt(nodoId+5), arrows: \"to\"});\r\n        dot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n        nodoId++;\r\n        dot.push({from:parseInt(nodoId), to:parseInt(nodoId+5), arrows: \"to\"});\r\n        dot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n        nodoId++;\r\n        dot.push({from:parseInt(nodoId), to:parseInt(nodoId+5), arrows: \"to\"});\r\n        nodoId++;\r\n        while(i<this.tabla.length){\r\n            \r\n            if(this.tabla[i+1]!=null){\r\n                dot.push({from:parseInt(nodoId), to:parseInt(nodoId+5), arrows: \"to\"});\r\n                dot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n                nodoId++;\r\n                dot.push({from:parseInt(nodoId), to:parseInt(nodoId+5), arrows: \"to\"});\r\n                dot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n                nodoId++;\r\n                dot.push({from:parseInt(nodoId), to:parseInt(nodoId+5), arrows: \"to\"});\r\n                dot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n                nodoId++;\r\n                dot.push({from:parseInt(nodoId), to:parseInt(nodoId+5), arrows: \"to\"});\r\n                dot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n                nodoId++;\r\n                dot.push({from:parseInt(nodoId), to:parseInt(nodoId+5), arrows: \"to\"});\r\n                nodoId++;\r\n\r\n            }else{\r\n                dot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n                nodoId++;\r\n                dot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n                nodoId++;\r\n                dot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n                nodoId++;\r\n                dot.push({from:parseInt(nodoId), to:parseInt(nodoId+1), arrows: \"to\"});\r\n                nodoId++;\r\n                dot.push({from:parseInt(nodoId), to:parseInt(nodoId+5), arrows: \"to\"});\r\n                nodoId++;\r\n            }\r\n            i++;\r\n        }\r\n        dot.push({from:parseInt(nodoId-1), to:parseInt(nodoId), arrows: \"to\"});\r\n        nodoId++;\r\n        if(this.resultadoDecode!=null){\r\n            dot.push({from:parseInt(nodoId-1), to:parseInt(nodoId), arrows: \"to\"});\r\n        }\r\n        \r\n        return dot;\r\n\r\n    }\r\n\r\n    generateJSON = () => {\r\n        return String(this.resultado)\r\n    }\r\n\r\n}\r\nexport default LZW;\r\n// module.exports = LZW;\r\n\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Navbar from './Componentes/Navbar';\r\nimport Home from './Componentes/Paginas/Home';\r\nimport ListaSE from './Componentes/Paginas/ListaSE';\r\nimport ListaDE from './Componentes/Paginas/ListaDE';\r\nimport ListaCSE from './Componentes/Paginas/ListaCSE';\r\nimport ListaCDE from './Componentes/Paginas/ListaCDE';\r\nimport Pila from './Componentes/Paginas/Pila';\r\nimport Cola from './Componentes/Paginas/Cola';\r\nimport ColaPrioridad from './Componentes/Paginas/ColaPrioridad';\r\nimport Burbuja from './Componentes/Paginas/Burbuja';\r\nimport Seleccion from './Componentes/Paginas/Seleccion';\r\nimport Insercion from './Componentes/Paginas/Insercion';\r\nimport Rapido from './Componentes/Paginas/Rapido';\r\nimport AVL from './Componentes/Paginas/AVL';\r\nimport ArbolB from './Componentes/Paginas/Arbolb';\r\nimport ArbolBPlus from './Componentes/Paginas/Arbolbplus';\r\nimport ArbolMerkle from './Componentes/Paginas/Arbolmerkle';\r\nimport MatrizColumnMajor from './Componentes/Paginas/ColumnMajor';\r\nimport MatrizRowMajor from './Componentes/Paginas/RowMajor';\r\nimport MatrizDispersa from './Componentes/Paginas/MatrizDispersa';\r\nimport TablaHashAbierta from './Componentes/Paginas/HashAbierta';\r\nimport TablaHashCerrada from './Componentes/Paginas/HashCerrada';\r\nimport Compuesta from './Componentes/Paginas/Compuesta'\r\nimport Hamming from './Componentes/Paginas/Hamming.js';\r\nimport GrafoProfundidad from './Componentes/Paginas/GrafoProfundidad';\r\nimport GrafoAnchura from './Componentes/Paginas/GrafoAnchura';\r\nimport Feistel from './Componentes/Paginas/Feistel.js';\r\nimport LZW from './Componentes/Paginas/LZW.js';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path='/GrafoAnchura' exact component={GrafoAnchura} />\r\n        <Route path='/GrafoProfundidad' exact component={GrafoProfundidad} />\r\n        <Route path='/' exact component={Home} />\r\n        <Route path='/HashAbierta' exact component={TablaHashAbierta} />\r\n        <Route path='/HashCerrada' exact component={TablaHashCerrada} />\r\n        <Route path='/ColumnMajor' exact component={MatrizColumnMajor} />\r\n        <Route path='/RowMajor' exact component={MatrizRowMajor} />\r\n        <Route path='/Listasimplementeenlazada' component={ListaSE} />\r\n        <Route path='/Listadoblementeenlazada' component={ListaDE} />\r\n        <Route path='/Listacircularsimplementeenlazada' component={ListaCSE} />\r\n        <Route path='/Listacirculardoblementeenlazada' component={ListaCDE} />\r\n        <Route path='/Pila' component={Pila} />\r\n        <Route path='/Cola' component={Cola} />\r\n        <Route path='/Colaprioridad' component={ColaPrioridad} />\r\n        <Route path='/Burbuja' component={Burbuja} />\r\n        <Route path='/Seleccion' component={Seleccion} />\r\n        <Route path='/Insercion' component={Insercion} />\r\n        <Route path='/Rapido' component={Rapido} />\r\n        <Route path='/AVL' component={AVL} />\r\n        <Route path='/Arbolb' component={ArbolB} />\r\n        <Route path='/Arbolbplus' component={ArbolBPlus} />\r\n        <Route path='/Arbolmerkle' component={ArbolMerkle} />\r\n        <Route path='/MatrizDispersa' component={MatrizDispersa} />\r\n        <Route path='/Compuesta' component={Compuesta} />\r\n        <Route path='/Hamming' component={Hamming} />\r\n        <Route path='/Feistel' component={Feistel} />\r\n        <Route path='/LZW' component={LZW} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}