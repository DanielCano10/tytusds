{"version":3,"sources":["Componentes/MenuItemsLineales.js","Componentes/MenuItemsOrdenamientos.js","Componentes/MenuItemsArboreas.js","Componentes/Navbar.js","Componentes/Paginas/Home.js","Componentes/Paginas/Modelo/Lineales/ListaSimple/Nodo.js","Componentes/Paginas/ListaSE.js","Componentes/Paginas/Modelo/Lineales/ListaSimple/ListaSimple.js","Componentes/Paginas/Modelo/Lineales/ListaDoble/Nodo.js","Componentes/Paginas/ListaDE.js","Componentes/Paginas/Modelo/Lineales/ListaDoble/ListaDoble.js","Componentes/Paginas/Modelo/Lineales/ListaCircular/Nodo.js","Componentes/Paginas/ListaCSE.js","Componentes/Paginas/Modelo/Lineales/ListaCircular/ListaCircular.js","Componentes/Paginas/Modelo/Lineales/ListaCircularDoble/Nodo.js","Componentes/Paginas/ListaCDE.js","Componentes/Paginas/Modelo/Lineales/ListaCircularDoble/ListaCDE.js","Componentes/Paginas/Modelo/Lineales/Pila/Nodo.js","Componentes/Paginas/Pila.js","Componentes/Paginas/Modelo/Lineales/Pila/Stack.js","Componentes/Paginas/Modelo/Lineales/Cola/Nodo.js","Componentes/Paginas/Cola.js","Componentes/Paginas/Modelo/Lineales/Cola/EstructuraCola.js","Componentes/Paginas/Modelo/Lineales/ColaPrioridad/Nodo.js","Componentes/Paginas/ColaPrioridad.js","Componentes/Paginas/Modelo/Lineales/ColaPrioridad/ColaPrioridad.js","Componentes/Paginas/Burbuja.js","Componentes/Paginas/Modelo/Ordenamientos/OrBurbuja.js","Componentes/Paginas/Seleccion.js","Componentes/Paginas/Modelo/Ordenamientos/OrSeleccion.js","Componentes/Paginas/Insercion.js","Componentes/Paginas/Modelo/Ordenamientos/OrInsercion.js","Componentes/Paginas/Rapido.js","Componentes/Paginas/AVL.js","Componentes/Paginas/Arbolb.js","Componentes/Paginas/Arbolbplus.js","Componentes/Paginas/Arbolmerkle.js","App.js","reportWebVitals.js","index.js"],"names":["MenuItemsLineales","title","path","cName","MenuItemsOrdenamientos","MenuItemsArboreas","Navbar","useState","setClick","className","href","id","data-bs-toggle","role","aria-haspopup","aria-expanded","map","item","index","to","onClick","Home","scope","Nodo","dato","this","siguiente","listaSimple","cabeza","insertar","nodo_nuevo","get_vacia","set_cabeza","set_ultimo","get_ultimo","set_siguiente","insertar_inicio","get_cabeza","insertar_ultimo","eliminar","console","log","nodo_actual","get_siguiente","anterior","get_dato","update","cambio","set_dato","search","i","mostrar","setNodesDataSet","dot","push","label","setEdgesDataSet","nodoUno","parseInt","nodoDos","from","arrows","generateJSON","dic","toString","valores","dictstring","JSON","stringify","fs","writeFile","err","result","ultimo","getNodes","DataSet","getEdges","data","nodes","edge","options","physics","stabilization","barnesHut","springLength","borderWidth","color","background","border","highlight","ListaSE","props","handleFileChange","e","file","target","files","reader","FileReader","readAsText","onload","setState","fileName","name","fileContent","handleAdd","state","text","edges","network","Network","appRef","current","handleDelete","handleUpdate","dato_actualizado","handleAddTop","handleAddLower","handleSearch","add","value","handleOpenFile","dataJson","parse","categoria","nombre","length","alert","handleSaveFile","createRef","handleInputChange","bind","style","marginLeft","type","placeholder","onChange","class","min","max","step","defaultValue","height","ref","Component","listaDoble","vacia","set_primero","set_anterior","get_primero","temp","get_anterior","print","primero","ListaDE","listaCircular","size","ListaCSE","listacde","Agregar","valor","AgregarFinal","AgregarInicio","Eliminar","aux","Imprimir","Actualizar","Buscar","GenerarNodosDOT","etiqueta","GenerarEdgesDOT","ListaCDE","pila","empty","pop","Pila","nuevonodo","estructuracola","Encolar","nodo","Desencolar","get_valor","set_valor","nodoactual","nodosiguiente","nodos","flechas","datos","Cola","AgregarDato","agregar","EliminarDato","ActualizarDato","BuscarDato","valoreliminar","valorbuscar","rango","prioridad","colaprioridad","set_prioridad","salir","get_prioridad","ColaPrioridad","burbuja","array","ordenamiento_burbuja","j","Burbuja","handleOrdenamiento","marginRight","seleccion","ordenamiento_seleccion","Seleccion","insercion","ordenamiento_insercion","Insercion","Rapido","setRango","AVL","ArbolB","ArbolBPlus","ArbolMerkle","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c828aec1.chunk.js","sourcesContent":["export const MenuItemsLineales = [\r\n\t{\r\n\t\ttitle:'Lista simplemente enlazada',\r\n\t\tpath:'/Listasimplementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Lista doblemente enlazada',\r\n\t\tpath:'/Listadoblementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Lista circular simplemente enlazada',\r\n\t\tpath:'/Listacircularsimplementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Lista circular doblemente enlazada',\r\n\t\tpath:'/Listacirculardoblementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Pila',\r\n\t\tpath:'/Pila',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Cola',\r\n\t\tpath:'/Cola',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Cola de Prioridad',\r\n\t\tpath:'/Colaprioridad',\r\n\t\tcName:'dropdown-item'\r\n\t}\r\n]","export const MenuItemsOrdenamientos = [\r\n\t{\r\n\t\ttitle:'Burbuja',\r\n\t\tpath:'/Burbuja',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Seleccion',\r\n\t\tpath:'/Seleccion',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Insercion',\r\n\t\tpath:'/Insercion',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Rapido',\r\n\t\tpath:'/Rapido',\r\n\t\tcName:'dropdown-item'\r\n\t}\r\n]","export const MenuItemsArboreas = [\r\n\t{\r\n\t\ttitle:'Arbol Binario de Busqueda',\r\n\t\tpath:'/ArbolBinario',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'AVL',\r\n\t\tpath:'/AVL',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Arbol B',\r\n\t\tpath:'/Arbolb',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Arbol B+',\r\n\t\tpath:'/Arbolbplus',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Arbol de Merkle',\r\n\t\tpath:'/Arbolmerkle',\r\n\t\tcName:'dropdown-item'\r\n\t}\r\n]","import React, { useState } from 'react';\r\nimport { MenuItemsLineales } from './MenuItemsLineales';\r\nimport { MenuItemsOrdenamientos } from './MenuItemsOrdenamientos';\r\nimport { MenuItemsArboreas } from './MenuItemsArboreas';\r\nimport { Link } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\n\r\nfunction Navbar(){\r\n\tconst [click, setClick] = useState(false);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      \t\t\t<div className=\"container-fluid\">\r\n      \t\t\t\t<a className=\"navbar-brand\" href=\"./\">ESTRUCTURA DE DATOS</a>\r\n      \t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n          \t\t\t<ul className=\"navbar-nav me-auto\">\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n              \t\t\t\t<a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Estructuras Lineales</a>\r\n              \t\t\t\t<div className=\"dropdown-menu\">\r\n                \t\t\t\t{MenuItemsLineales.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n              \t\t\t\t</div>\r\n           \t\t\t\t</li>\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Ordenamientos</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsOrdenamientos.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Estructura Arboreas</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsArboreas.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n          \t\t\t</ul>\r\n        \t\t\t</div>\t\r\n      \t\t\t</div>\r\n      \t\t</nav>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\n\r\nexport default function Home(){\r\n\treturn (\r\n\t\t<>\t\r\n\t\t\t<table className=\"table table-hover\">\r\n  \t\t\t\t<thead>\r\n  \t\t\t\t  <tr>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t    <th scope=\"col\">\r\n  \t\t\t\t    \t<div className=\"card border-light mb-3\">\r\n  \t\t\t\t\t\t\t<div className=\"card-body\"><div className=\"page-header\"><h1>Indice de Estructura de Datos</h1></div></div>\r\n  \t\t\t\t\t\t\t<div className=\"card-body\">\r\n  \t\t\t\t\t\t\t  <ul>\r\n        \t  \t\t\t\t\t<li><h4>Estuctura Lineales</h4></li>\r\n        \t  \t\t\t\t\t<ul>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listasimplementeenlazada\"><h5>Lista simplemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listadoblementeenlazada\"><h5>Lista doblemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listacircularsimplementeenlazada\"><h5>Lista circular simplemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listacirculardoblementeenlazada\"><h5>Lista circular doblemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Pila\"><h5>Pila</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Cola\"><h5>Cola</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Colaprioridad\"><h5>Cola de prioridad</h5></a></li>  \r\n        \t  \t\t\t\t\t</ul>\r\n        \t  \t\t\t\t\t<li><h4>Ordenamientos</h4></li>\r\n        \t  \t\t\t\t\t<ul>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Burbuja\"><h5>Burbuja</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Seleccion\"><h5>Selección</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Insercion\"><h5>Inserción</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Rapido\"><h5>Rápido</h5></a></li>  \r\n        \t  \t\t\t\t\t</ul>\r\n        \t  \t\t\t\t\t<li><h4>Estructuras Árboreas</h4></li>\r\n        \t  \t\t\t\t\t<ul>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolBinario\"><h5>Árbol binario de búsqueda</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./AVL\"><h5>AVL</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolB\"><h5>Árbol B</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolBPlus\"><h5>Árbol B+</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolMerkle\"><h5>Árbol de Merkle</h5></a></li>  \r\n        \t  \t\t\t\t\t</ul>\r\n        \t\t\t\t\t  </ul>\r\n  \t\t\t\t\t\t\t</div>\r\n        \t\t\t\t</div>\r\n  \t\t\t\t    </th>\r\n  \t\t\t\t    <th scope=\"col\"></th>\r\n  \t\t\t\t    <th scope=\"col\"></th>\r\n  \t\t\t\t    <th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  </tr>\r\n  \t\t\t\t</thead>\r\n\t\t\t</table>\r\n\t\t\t\r\n\t\t</>\r\n\t);\r\n}","var i = 0;\r\nclass Nodo{\r\n\r\n    constructor(dato) {\r\n        this.siguiente = null;\r\n        this.dato = dato;\r\n        i ++;\r\n        \r\n    }\r\n\r\n    get_siguiente(){\r\n\r\n        return this.siguiente;\r\n    }\r\n\r\n    set_siguiente(siguiente){\r\n        this.siguiente = siguiente;\r\n    }\r\n\r\n    get_dato(){\r\n        return this.dato;\r\n    }\r\n\r\n    set_dato(dato){\r\n        this.dato = dato;\r\n    }\r\n}\r\n\r\nexport default Nodo;\r\n// module.exports = Nodo;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ListaSimple from './Modelo/Lineales/ListaSimple/ListaSimple'; // Importar la Estructura Lista Simple.\r\nvar listaSimple = new ListaSimple(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(listaSimple.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listaSimple.setEdgesDataSet());\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass ListaSE extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\tlistaSimple.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlistaSimple.eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlistaSimple.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddTop = () => {\r\n\t\tlistaSimple.insertar_inicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddLower = () => {\r\n\t\tlistaSimple.insertar_ultimo(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet dato = listaSimple.search(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n\t\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tconsole.log(dato)\r\n\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistaSimple.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\r\n\t\tlistaSimple.generateJSON(listaSimple)\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default ListaSE;","import Nodo from './Nodo.js'\r\nimport fs from 'fs';\r\n// const Nodo = require('./Nodo.js');\r\n\r\nclass ListaSimple{\r\n\r\n    cabeza = null\r\n\r\n    constructor(){\r\n        this.cabeza = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n\r\n    insertar = (dato) =>{\r\n        let nodo_nuevo = new Nodo(dato);\r\n        if (this.get_vacia() == true){\r\n            this.set_cabeza(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n        }else{\r\n\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n\r\n        }\r\n\r\n    }\r\n    \r\n    insertar_inicio = (dato) =>{\r\n        let nodo_nuevo = new Nodo(dato)\r\n\r\n        nodo_nuevo.set_siguiente(this.get_cabeza())\r\n        this.set_cabeza(nodo_nuevo)\r\n    }\r\n\r\n    insertar_ultimo = (dato) =>{\r\n        let nodo_nuevo = new Nodo(dato)\r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        this.set_ultimo(nodo_nuevo)\r\n\r\n    }\r\n\r\n    eliminar = (dato) =>{\r\n\r\n        if (this.get_vacia() == false){\r\n            \r\n            let nodo_actual = this.get_cabeza().get_siguiente();\r\n            let anterior = this.get_cabeza();\r\n            if (this.get_cabeza().get_dato() == dato){\r\n                this.set_cabeza(this.get_cabeza().get_siguiente());\r\n                return console.log(\"Delete!\");\r\n            }else{\r\n                do {\r\n                    if (nodo_actual.get_dato() == dato){\r\n                        if (nodo_actual.get_dato() == this.get_ultimo().get_dato()){\r\n                            anterior.set_siguiente(null);\r\n                            this.set_ultimo(anterior);\r\n                            return console.log(\"Delete!\");\r\n                        }else {\r\n                            anterior.set_siguiente(nodo_actual.get_siguiente());\r\n                            return console.log(\"Delete!\");\r\n                        }\r\n                    }\r\n                    nodo_actual = nodo_actual.get_siguiente();\r\n                    anterior = anterior.get_siguiente();\r\n\r\n                } while (nodo_actual != null);\r\n            }\r\n\r\n        }else{ return console.log(\"Empty!\"); }\r\n\r\n        return console.log(\"Data not found!\");\r\n    }\r\n\r\n    update = (dato, cambio) =>{\r\n        let nodo_actual = this.get_cabeza();\r\n\r\n        if (this.get_vacia() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) =>{\r\n        let nodo_actual = this.get_cabeza()\r\n        \r\n        if (this.get_vacia() == false){\r\n            let i = 0;\r\n            do{\r\n\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato()+\"-> Posicion\"+i);\r\n                    return i;\r\n                }\r\n                i ++;\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n\r\n            }while(nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n    mostrar = () => {\r\n        let nodo_actual = this.get_cabeza();\r\n        if (this.get_vacia() == false){\r\n\r\n            do {\r\n                console.log(nodo_actual.get_dato());\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n            } while (nodo_actual != null);\r\n        }\r\n    }\r\n    \r\n    get_vacia = () => {\r\n        if (this.get_cabeza() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }  \r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_cabeza();\r\n        var dot = [];\r\n        if (this.get_vacia() == false){\r\n            let i = 0\r\n            do {\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_cabeza();\r\n        var dot = [];\r\n        if (this.get_vacia() == false){\r\n            let i = 0;\r\n            do {\r\n                if (nodo_actual.get_siguiente() != null){\r\n\r\n                    let nodoUno = parseInt(i)\r\n                    let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                    if (i==0){\r\n                        dot.push({from:0, to:1, arrows: \"to\"});\r\n                    }\r\n                    if ( nodoUno!= false && nodoDos != false){\r\n                        dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                    }\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            } while (nodo_actual != null);\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n    generateJSON = () => {\r\n\r\n        var dic = {};\r\n\r\n        dic.categoria = \"Estructura Lineal\"\r\n        dic.nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n        var dot = []\r\n        if (this.get_vacia() == false){\r\n            let nodo_actual = this.get_cabeza();\r\n            do{\r\n                if(typeof(parseInt(nodo_actual.get_dato())) == \"number\"  && 0 <= parseInt(nodo_actual.get_dato())){\r\n                    \r\n                    dot.push(parseInt(nodo_actual.get_dato()))\r\n                     \r\n                }else if (typeof(nodo_actual.get_dato()) == \"string\" ){\r\n\r\n                    dot.push(nodo_actual.get_dato().toString())\r\n\r\n                } \r\n\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n            }while(nodo_actual != null);\r\n        }\r\n        dic.valores = dot;\r\n        console.log(dic)\r\n        var dictstring = JSON.stringify(dic);\r\n        console.log(dictstring)\r\n        // var fs = require('fs')\r\n        fs.writeFile(\"thing.json\", dictstring, function(err, result) {\r\n            if(err) console.log('error', err);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    get_cabeza = () =>{ return this.cabeza; }\r\n    set_cabeza = (cabeza) =>{ this.cabeza = cabeza; }\r\n    get_ultimo = () => { return this.ultimo; }\r\n    set_ultimo = (ultimo) => { this.ultimo = ultimo; }\r\n}\r\n\r\nexport default ListaSimple;\r\n//module.exports = ListaSimple;\r\n\r\n","class Nodo{\r\n\r\n    constructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n        this.anterior = null;\r\n    }\r\n\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n    \r\n    get_anterior(){ return this.anterior; }\r\n    set_anterior(anterior){ this.anterior = anterior; }\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ListaDoble from './Modelo/Lineales/ListaDoble/ListaDoble'; // Importar la Estructura Lista Simple.\r\nvar listaDoble = new ListaDoble(); // Instancia de la ListaSimple.\r\n\r\nvar getNodes = new DataSet(listaDoble.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listaDoble.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t  springLength: 200,\r\n\t\t},\r\n\t},\r\n    nodes:{\r\n        borderWidth: 20,\r\n        color: {\r\n            background: '#00FE92',\r\n            border:  '#37F300',\r\n            highlight: {\r\n                border: '#2B7CE9',\r\n                background: '#0008FE'\r\n            }\r\n        }\r\n    }\r\n}\r\nclass ListaDE extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\tlistaDoble.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlistaDoble.eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlistaDoble.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddTop = () => {\r\n\t\tlistaDoble.insertar_inicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddLower = () => {\r\n\t\tlistaDoble.insertar_ultimo(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet dato = listaDoble.search(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n            getNodes = new DataSet(listaDoble.setNodesDataSet());\r\n            getEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistaDoble.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleSearch()}>Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar Dato Al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-5\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar Dato al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()} >Generar Datos del JSON</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar Datos</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default ListaDE; ","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js')\r\nclass ListaDoble{\r\n\r\n    constructor(){\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n    insertar = (dato) => {\r\n\r\n        let nodo_nuevo = new Nodo(dato);\r\n\r\n        if (this.vacia() == true){\r\n            this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n        }else{\r\n\r\n            this.get_ultimo().set_siguiente(nodo_nuevo)\r\n            nodo_nuevo.set_anterior(this.get_ultimo())\r\n            this.set_ultimo(nodo_nuevo)\r\n\r\n        }\r\n    }\r\n\r\n    insertar_inicio = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n\r\n        nodo_nuevo.set_siguiente(this.get_primero())\r\n        this.get_primero().set_anterior(nodo_nuevo)\r\n        this.set_primero(nodo_nuevo)\r\n    }\r\n\r\n    insertar_ultimo = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n        \r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        nodo_nuevo.set_anterior(this.get_ultimo())\r\n        this.set_ultimo(nodo_nuevo)\r\n\r\n    }\r\n\r\n    eliminar = (dato) => {\r\n\r\n        if (this.vacia() == false){\r\n            \r\n\r\n            if (this.get_primero().get_dato() == dato){ //Condicion cuando hay 2 nodos -> eliminando al primero\r\n\r\n                if (this.get_primero().get_siguiente() != null){\r\n\r\n                    let temp = this.get_primero().get_siguiente()\r\n                    this.get_primero().get_siguiente().set_anterior(null)\r\n                    this.get_primero().set_siguiente(null)\r\n                    this.set_primero(temp);\r\n\r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                }\r\n\r\n            }else if (this.get_ultimo().get_dato() == dato){  //Condicion cuando hay 2 nodos -> eliminando al ultimo\r\n\r\n                if (this.get_ultimo().get_anterior() != null){\r\n\r\n                    let temp = this.get_ultimo().get_anterior()\r\n                    this.get_ultimo().get_anterior().set_siguiente(null)\r\n                    this.get_ultimo().set_anterior(null)\r\n                    this.set_ultimo(temp);\r\n\r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    \r\n                    return console.log(\"Delete!\");\r\n                }\r\n\r\n\r\n            }else{ //Condicion cuando hay mas de 3 nodos -> eliminando al de en medio\r\n                let nodo_actual = this.get_primero().get_siguiente();\r\n                let anterior = this.get_primero();\r\n                do {\r\n\r\n                    if (nodo_actual.get_dato() == dato){\r\n                        \r\n                        let siguiente = nodo_actual.get_siguiente()\r\n\r\n                        nodo_actual.set_siguiente(null)\r\n                        nodo_actual.set_anterior(null)\r\n                        anterior.set_siguiente(siguiente)\r\n                        siguiente.set_anterior(anterior)\r\n\r\n                        return console.log(\"Delete!\");\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.get_siguiente();\r\n                    anterior = anterior.get_siguiente();\r\n\r\n                } while (nodo_actual != null);\r\n            }\r\n\r\n        }else{ return console.log(\"Empty!\"); }\r\n\r\n        return console.log(\"Data not found!\");\r\n    }\r\n\r\n    update = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n\r\n        if (this.vacia() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) => {\r\n        let nodo_actual = this.get_primero()\r\n        let i = 0;\r\n        if (this.vacia() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    return i;\r\n                }\r\n                i ++;\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n            }while(nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    print = () => {\r\n        console.log(\"-> ->\")\r\n        let nodo_actual = this.get_primero();\r\n        if (this.vacia() == false){\r\n            do{\r\n                console.log(nodo_actual.get_dato())\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n\r\n            console.log(\"<- <-\")\r\n            nodo_actual = this.get_ultimo();\r\n            do{\r\n                console.log(nodo_actual.get_dato())\r\n                nodo_actual = nodo_actual.get_anterior()\r\n            }while(nodo_actual != null);\r\n        }else{\r\n            console.log(\"Empty!\"); \r\n            \r\n        }\r\n    }\r\n\r\n    vacia = () => {\r\n        if (this.get_primero() == null){ \r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0\r\n            do {\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            do {\r\n                if (nodo_actual.get_siguiente() != null){\r\n\r\n                    let nodoUno = parseInt(i)\r\n                    let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                    if (i==0){\r\n                        dot.push({from:0, to:1, arrows: \"to\"});\r\n                        dot.push({from:1, to:0, arrows: \"to\"});\r\n                    }\r\n                    if ( nodoUno!= false && nodoDos != false){\r\n                        dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                        dot.push({from:parseInt(nodoDos), to:parseInt(nodoUno), arrows: \"to\"});\r\n                    }\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n\r\n    get_primero = () => { return this.primero; }\r\n    set_primero = (primero) =>{ this.primero = primero; }\r\n    get_ultimo = () => { return this.ultimo; }\r\n    set_ultimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n\r\n\r\n}\r\n\r\nexport default ListaDoble;\r\n//module.exports = ListaDoble;","class Nodo{\r\n\r\n    constructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n    }\r\n\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ListaCircular from './Modelo/Lineales/ListaCircular/ListaCircular'; // Importar la Estructura Lista Simple.\r\nvar listaCircular = new ListaCircular(); // Instancia de la ListaSimple.\r\n\r\nvar getNodes = new DataSet(listaCircular.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listaCircular.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t  springLength: 200,\r\n\t\t},\r\n\t},\r\n    nodes:{\r\n        borderWidth: 20,\r\n        color: {\r\n            background: '#FFFFFF',\r\n            border:  '#1EFFB1',\r\n            highlight: {\r\n                border: '#EEFF1E',\r\n                background: '#FFFFFF'\r\n            }\r\n        }\r\n    }\r\n}\r\nclass ListaCSE extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t}\r\n\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\tlistaCircular.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlistaCircular.eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlistaCircular.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddTop = () => {\r\n\t\tlistaCircular.insertar_inicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddLower = () => {\r\n\t\tlistaCircular.insertar_ultimo(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tvar dato = listaCircular.search(this.state.text);\r\n\t\t\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n            getNodes = new DataSet(listaCircular.setNodesDataSet());\r\n            getEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistaCircular.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleSearch()}>Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar Dato Al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-5\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar Dato Al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Generar Datos del JSON</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar Datos</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\r\n\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default ListaCSE;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js')\r\nclass ListaCircular{\r\n\r\n    constructor(){\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n        this.size = 0;\r\n    }\r\n\r\n\r\n    insertar = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato);\r\n        if (this.vacia() == true){\r\n            this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            nodo_nuevo.set_siguiente(this.get_primero());\r\n            this.set_ultimo(nodo_nuevo);\r\n\r\n        }\r\n        this.size ++;\r\n\r\n    }\r\n\r\n    insertar_inicio = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n\r\n        nodo_nuevo.set_siguiente(this.get_primero())\r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        this.set_primero(nodo_nuevo)\r\n        this.size ++;\r\n    }\r\n\r\n    insertar_ultimo = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n        \r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        nodo_nuevo.set_siguiente(this.get_primero())\r\n        this.set_ultimo(nodo_nuevo)\r\n        this.size++;\r\n    }\r\n\r\n\r\n    eliminar = (dato) => {\r\n        if(this.vacia() == false){\r\n\r\n             if (this.get_primero().get_dato() == dato){ //Condicion cuando hay 2 nodos -> eliminando al primero\r\n\r\n                if (this.get_primero().get_siguiente() != null){\r\n\r\n                    let temp = this.get_primero().get_siguiente()\r\n                    this.get_primero().set_siguiente(null)\r\n                    this.get_ultimo().set_siguiente(temp)\r\n                    this.set_primero(temp)\r\n                    this.size --;\r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero.set_siguiente(null)\r\n                    this.set_ultimo.set_siguiente(null)\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    this.size --;\r\n                    return console.log(\"Delete!\");\r\n                }\r\n\r\n            }else if (this.get_ultimo().get_dato() == dato){  //Condicion cuando hay 2 nodos -> eliminando al ultimo\r\n\r\n                if (this.get_primero().get_siguiente()!= null){\r\n                    let nodo_actual = this.get_primero().get_siguiente()\r\n                    let anterior = this.get_primero()\r\n\r\n                    let i = 0\r\n\r\n                    while (i < this.size){\r\n                        if(nodo_actual.get_dato()==dato){\r\n                            if ((i+1) == this.size){\r\n\r\n                                let temp = this.get_ultimo().get_siguiente()\r\n                                this.get_ultimo().set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }else{\r\n\r\n                                let temp = nodo_actual.get_siguiente()\r\n                                nodo_actual.set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }\r\n\r\n                        }\r\n                        nodo_actual = nodo_actual.get_siguiente()\r\n                        anterior = anterior.get_siguiente()\r\n\r\n                        i ++;\r\n                    }\r\n\r\n                    \r\n                    \r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero.set_siguiente(null)\r\n                    this.set_ultimo.set_siguiente(null)\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    this.size --;\r\n                    return console.log(\"Delete!\");\r\n                }\r\n\r\n\r\n            }else{ //Condicion cuando hay mas de 3 nodos -> eliminando al de en medio\r\n                if (this.get_primero().get_siguiente()!= null){\r\n                    let nodo_actual = this.get_primero().get_siguiente()\r\n                    let anterior = this.get_primero()\r\n\r\n                    let i = 0\r\n\r\n                    while (i < this.size){\r\n                        if(nodo_actual.get_dato()==dato){\r\n                            if ((i+1) == this.size){\r\n\r\n                                let temp = this.get_ultimo().get_siguiente()\r\n                                this.get_ultimo().set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }else{\r\n\r\n                                let temp = nodo_actual.get_siguiente()\r\n                                nodo_actual.set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }\r\n\r\n                        }\r\n                        nodo_actual = nodo_actual.get_siguiente()\r\n                        anterior = anterior.get_siguiente()\r\n\r\n                        i ++;\r\n                    }\r\n\r\n                    \r\n                    return console.log(\"Delete!\");\r\n                }\r\n            }\r\n\r\n        }else{ return console.log(\"Empty!\"); }\r\n\r\n        return console.log(\"Data not found!\");\r\n\r\n\r\n    }\r\n\r\n    \r\n    update = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n\r\n        if (this.vacia() == false){\r\n\r\n            let i = 0;\r\n            while(i<this.size){\r\n                \r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n                i++;\r\n            }\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) => {\r\n        let nodo_actual = this.get_primero()\r\n\r\n        if (this.vacia() == false){\r\n\r\n            let i = 0;\r\n            while(i<this.size){\r\n                \r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    return i\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            }\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n    print = () => {\r\n        \r\n        var i = 0;\r\n        let nodo_actual = this.get_primero();\r\n        while(i<this.size){\r\n            console.log(nodo_actual.get_dato());\r\n            nodo_actual = nodo_actual.get_siguiente();\r\n            i++;\r\n        }\r\n\r\n        console.log(\"Salio del While\");\r\n        console.log(nodo_actual.get_dato());\r\n        console.log(\"Este es el Primero ->\"+this.get_primero().get_dato())\r\n        console.log(nodo_actual.get_siguiente().get_dato());\r\n        console.log(\"ultimo\");\r\n        console.log(this.get_ultimo().get_dato());\r\n        console.log(this.get_ultimo().get_siguiente().get_dato());\r\n    }\r\n\r\n    vacia = () => {\r\n        if (this.get_primero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0\r\n            while(i<this.size){\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } \r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n            \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                if (i==0){\r\n                    dot.push({from:0, to:1, arrows: \"to\"});\r\n                }\r\n                if ( nodoUno!= false && nodoDos != false){\r\n                    dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                }\r\n                if ((i+1)==this.size){\r\n                    dot.push({from:i, to:0, arrows: \"to\"});\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n\r\n    get_primero = () => { return this.primero; }\r\n    set_primero = (primero) =>{ this.primero = primero; }\r\n    \r\n    get_ultimo = () => { return this.ultimo; }\r\n    set_ultimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n}\r\n\r\nexport default ListaCircular;\r\n//module.exports = ListaCircular;","class Nodo{\r\n\tconstructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n        this.anterior = null;\r\n    }\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n    \r\n    get_anterior(){ return this.anterior; }\r\n    set_anterior(anterior){ this.anterior = anterior; }\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport ListaCircularDE from './Modelo/Lineales/ListaCircularDoble/ListaCDE'; // Importar la Estructura Lista Circular Doble.\r\nvar listacde = new ListaCircularDE(); // Instancia de la ListaCDE.\r\nvar getNodes = new DataSet(listacde.GenerarNodosDOT());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listacde.GenerarEdgesDOT());\t// Se Crean las flechas.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#00F3B8',\r\n            border:  '#00F3B8',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#00F3B8'\r\n            }\r\n        }\r\n    }\r\n  };\r\nclass ListaCDE extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttext:'',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t}\r\n\t\tthis.network={};\r\n\t\tthis.appRef=createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n    this.network = new Network(this.appRef.current, data, options);\r\n  \t}\r\n  \thandleInputChange(e) {\r\n    \tconst {value, name} = e.target;\r\n    \tconsole.log(value, name);\r\n    \tthis.setState({\r\n    \t  [name]: value\r\n    \t});\r\n    }\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n    handleAdd = () => {\r\n    \tlistacde.Agregar(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.GenerarNodosDOT());\r\n\t\tgetEdges = new DataSet(listacde.GenerarEdgesDOT());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleDelete = () => {\r\n\t\tlistacde.Eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.GenerarNodosDOT());\r\n\t\tgetEdges = new DataSet(listacde.GenerarEdgesDOT());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleAddTop = () => {\r\n\t\tlistacde.AgregarInicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.GenerarNodosDOT());\r\n\t\tgetEdges = new DataSet(listacde.GenerarEdgesDOT());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleAddLower = () => {\r\n\t\tlistacde.AgregarFinal(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.GenerarNodosDOT());\r\n\t\tgetEdges = new DataSet(listacde.GenerarEdgesDOT());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleSearch = () => {\r\n\t\tlet dato = listacde.Buscar(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tgetNodes = new DataSet(listacde.GenerarNodosDOT());\r\n\t\t\tgetEdges = new DataSet(listacde.GenerarEdgesDOT());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleUpdate = () => {\r\n\t\tlistacde.Actualizar(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listacde.GenerarNodosDOT());\r\n\t\tgetEdges = new DataSet(listacde.GenerarEdgesDOT());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistacde.Agregar(dataJson.valores[i])\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listacde.GenerarNodosDOT());\r\n\t\t\tgetEdges = new DataSet(listacde.GenerarEdgesDOT());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!!\")\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n\r\n    render() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n\r\n  export default ListaCDE;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js');\r\n\r\nclass ListaCircularDE{\r\n\tprimero=null;\r\n\tultimo=null;\r\n\r\n\tconstructor(){\r\n\t\tthis.primero = null;\r\n        this.ultimo = null;\r\n        this.size = 0;\r\n\t}\r\n\r\n    set_primero=(primero)=>{this.primero=primero;}\r\n    get_primero=()=>{ return this.primero;}\r\n    set_ultimo=(ultimo)=>{this.ultimo=ultimo;}\r\n    get_ultimo=()=>{ return this.ultimo;}\r\n    vacia = () => {\r\n        if (this.get_primero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\tAgregar = (valor) =>{\r\n\t\tlet nodo_nuevo = new Nodo(valor);\r\n        if (this.vacia() == true){\r\n\t\t    this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            nodo_nuevo.set_anterior(this.get_ultimo());\r\n            nodo_nuevo.set_siguiente(this.get_primero());\r\n            this.set_ultimo(nodo_nuevo);\r\n        }\r\n        this.size ++;\r\n\t}\r\n\tAgregarFinal = (valor) => {\r\n\t\tlet nodo_nuevo = new Nodo(valor);\r\n        if (this.vacia() == true){\r\n\t\t    this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            nodo_nuevo.set_anterior(this.get_ultimo());\r\n            nodo_nuevo.set_siguiente(this.get_primero());\r\n            this.set_ultimo(nodo_nuevo);\r\n        }\r\n        this.size ++;\r\n\t}\r\n\tAgregarInicio = (valor) => {\r\n\t\tlet nodo_nuevo = new Nodo(valor);\r\n        if (this.vacia() == true){\r\n\t\t    this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n        \tnodo_nuevo.set_siguiente(this.get_primero());\r\n        \tnodo_nuevo.set_anterior(this.get_ultimo());\r\n        \tthis.get_ultimo().set_siguiente(nodo_nuevo)\r\n        \tthis.get_primero().set_anterior(nodo_nuevo)\r\n        \tthis.set_primero(nodo_nuevo)\r\n        }\r\n        this.size ++;\r\n\t}\r\n\tEliminar = (dato) =>{\r\n\t\tif (this.vacia() == false){\r\n            if (this.get_primero().get_dato() == dato){ //Eliminando al primero\r\n                if (this.get_primero().get_siguiente() != this.get_primero()){                   \r\n                    let aux = this.get_primero().get_siguiente()\r\n                    this.get_primero().get_siguiente().set_anterior(this.get_ultimo())\r\n                    this.get_ultimo().set_siguiente(aux)\r\n                    this.get_primero().set_siguiente(null)\r\n                    this.get_primero().set_anterior(null)\r\n                    this.set_primero(aux)\r\n                    this.size --;\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    this.size --;\r\n                }\r\n\r\n            }else if (this.get_ultimo().get_dato() == dato){  //Eliminando al ultimo\r\n\r\n                if (this.get_ultimo().get_anterior() != this.get_ultimo()){\r\n\r\n                    let aux = this.get_ultimo().get_anterior()\r\n                    this.get_ultimo().get_anterior().set_siguiente(this.get_primero())\r\n                    this.get_primero().set_anterior(aux)\r\n                    this.get_ultimo().set_anterior(null)\r\n                    this.get_ultimo().set_siguiente(null)\r\n                    this.set_ultimo(aux);\r\n                    this.size --;\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    \r\n                    this.size --;\r\n                }\r\n\r\n\r\n            }else{ //Eliminando En Medio\r\n                let nodo_actual = this.get_primero().get_siguiente();\r\n                let anterior = this.get_primero();\r\n                do {\r\n\r\n                    if (nodo_actual.get_dato() == dato){\r\n                        \r\n                        let siguiente = nodo_actual.get_siguiente()\r\n\r\n                        nodo_actual.set_siguiente(null)\r\n                        nodo_actual.set_anterior(null)\r\n                        anterior.set_siguiente(siguiente)\r\n                        siguiente.set_anterior(anterior)\r\n                        this.size --;\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.get_siguiente();\r\n                    anterior = anterior.get_siguiente();\r\n\r\n                } while (nodo_actual != null);\r\n            }\r\n\r\n        }\r\n\t}\r\n    Imprimir=()=>{\r\n        var i = 0;\r\n        let nodo_actual = this.get_primero();\r\n        while(i<this.size){\r\n            console.log(nodo_actual.get_dato());\r\n            nodo_actual = nodo_actual.get_siguiente();\r\n            i++;\r\n        }\r\n    }\r\n    Actualizar = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n    Buscar=(dato)=>{\r\n        let nodo_actual = this.get_primero()\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    console.log(i);\r\n                    return i\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            }\r\n        }else{ \r\n            return -1;\r\n        }\r\n        return -1;\r\n    }\r\n    GenerarNodosDOT = () => {\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0\r\n            while(i<this.size){\r\n                if(i==0){\r\n                    let etiqueta=nodo_actual.get_dato()+\"\\n Inicio\"\r\n                    dot.push({id:i, label: etiqueta});\r\n                }else if(i+1==this.size){\r\n                    let etiqueta=nodo_actual.get_dato()+\"\\n Final\"\r\n                    dot.push({id:i, label: etiqueta});\r\n                }else{\r\n                    dot.push({id:i, label: nodo_actual.get_dato()});  \r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } \r\n        }\r\n        return dot;\r\n    } \r\n    GenerarEdgesDOT = () => {\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        let idinicio=this.size+1;\r\n        let idfinal=this.size+2;\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                if (i==0){\r\n                    dot.push({from:0, to:1, arrows: \"to\"});\r\n                    dot.push({from:1, to:0, arrows: \"to\"});\r\n                }\r\n                if ( nodoUno!= false && nodoDos != false){\r\n                    dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                    dot.push({from:parseInt(nodoDos), to:parseInt(nodoUno), arrows: \"to\"});\r\n                }\r\n                if ((i+1)==this.size){\r\n                    dot.push({from:i, to:0, arrows: \"to\"});\r\n                    dot.push({from:0, to:i, arrows: \"to\"});\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            }\r\n        }\r\n        return dot;\r\n    }\r\n}\r\n\r\nexport default ListaCircularDE;\r\n//module.exports = ListaCircularDE;","class Nodo{\r\n\r\n    constructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n    }\r\n\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport Stack from './Modelo/Lineales/Pila/Stack'; // Importar la Estructura Lista Simple.\r\nvar pila = new Stack(); // Instancia de la ListaSimple.\r\n\r\nvar getNodes = new DataSet(pila.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(pila.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t  springLength: 300,\r\n\t\t},\r\n\t},\r\n    nodes:{\r\n        borderWidth: 20,\r\n        color: {\r\n            background: '#FFFFFF', \r\n            border:  '#D366FF',\r\n            highlight: { // cambia de color al qu selecciona\r\n                border: '#1EFFB1', \r\n                background: '#FFFFFF'\t\r\n            }\r\n        }\r\n    }\r\n}\r\nclass Pila extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t}\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleAdd = () => {\r\n\t\tpila.push(this.state.text);\r\n\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tpila.pop();\r\n\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tpila.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet dato = pila.search(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n            getNodes = new DataSet(pila.setNodesDataSet());\r\n            getEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Pila\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tpila.push(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL - PIla!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\trender() {\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Update\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleSearch()}>Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 0 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer JSON</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default Pila;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js')\r\nclass Stack{\r\n\r\n    constructor(){\r\n        this.primero = null\r\n    }\r\n\r\n    push = (dato) =>{ //Agrega un valor al final de la lista.\r\n        let  nodo_nuevo = new Nodo(dato)\r\n        if (this.empty() == false){\r\n            nodo_nuevo.set_siguiente(this.get_primero())\r\n            this.set_primero(nodo_nuevo)\r\n        }else{\r\n            this.set_primero(nodo_nuevo)\r\n        }   \r\n\r\n    }\r\n\r\n    pop = () => { // Saca el primero de la pila.\r\n\r\n        if(this.empty() == false){\r\n\r\n            if (this.get_primero().get_siguiente() != null){\r\n                \r\n                let temp = this.get_primero().get_siguiente()\r\n                this.get_primero().set_siguiente(null)\r\n                this.set_primero(temp)\r\n                \r\n                return console.log(\"Delete!\"); \r\n            }else {\r\n                this.set_primero(null)\r\n            }\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n    \r\n    update = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n\r\n        if (this.empty() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) => {\r\n        let nodo_actual = this.get_primero()\r\n\r\n        if (this.empty() == false){\r\n            let i = 0;\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    return i;\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            }while(nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n\r\n    print = () => {\r\n\r\n        if(this.empty() == false){\r\n            let nodo_actual = this.get_primero()\r\n            do {\r\n                console.log(nodo_actual.get_dato())\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            } while (nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n    }\r\n\r\n\r\n    empty = () => {\r\n        if (this.get_primero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    \r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.empty() == false){\r\n            let i = 0\r\n            do {\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.empty() == false){\r\n            let i = 0;\r\n            do {\r\n                if (nodo_actual.get_siguiente() != null){\r\n\r\n                    let nodoUno = parseInt(i)\r\n                    let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                    if (i==0){\r\n                        dot.push({from:0, to:1, arrows: \"to\"});\r\n                    }\r\n                    if ( nodoUno!= false && nodoDos != false){\r\n                        dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                    }\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            } while (nodo_actual != null);\r\n        }\r\n\r\n        return dot;\r\n\r\n    }\r\n\r\n\r\n    get_primero = () => { return this.primero; }\r\n    set_primero = (primero) => { this.primero = primero; }\r\n\r\n}\r\n\r\nexport default Stack;\r\n//module.exports = Stack;","class Nodo{\r\n\r\n\tconstructor(valor){\r\n\t\tthis.siguiente = null;\r\n\t\tthis.valor = valor;\r\n\t}\r\n\t\r\n\tget_siguiente(){ return this.siguiente;}\r\n\tset_siguiente(nuevonodo){ this.siguiente=nuevonodo;}\r\n\tget_valor(){ return this.valor;}\r\n\tset_valor(valor){ this.valor=valor;}\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import { DataSet, Network } from 'vis';\r\nimport React, { Component, createRef } from \"react\";\r\nimport { render } from 'react-dom';\r\nimport EstructuraCola from './Modelo/Lineales/Cola/EstructuraCola';\r\n\r\n\r\nvar estructuracola = new EstructuraCola();\r\nvar nodos = new DataSet(estructuracola.GenerarNodosDOT());\r\nvar flechas = new DataSet(estructuracola.GenerarEdgesDOT());\r\nvar datos = {nodes:nodos, edges:flechas,};\r\nvar options = {\r\n  physics: {\r\n    stabilization: false,\r\n    barnesHut: {\r\n      springLength: 200,\r\n    },\r\n  },\r\n  nodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FF5733',\r\n            border:  '#FF5733',\r\n            highlight: {\r\n                border: '#9E3D28',\r\n                background: '#9E3D28'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Cola extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      agregar: '',\r\n      dato_actualizado: '',\r\n      valoreliminar:'',\r\n      valorbuscar: '',\r\n      rango: '1',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n    }\r\n    this.network = {};\r\n    this.appRef = createRef();\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  handleInputChange(e) {\r\n    const {value, name} = e.target;\r\n    console.log(value, name);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    }\r\n  \r\n  handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      this.setState({fileName: file.name, fileContent: reader.result})\r\n    }\r\n  }\r\n\r\n\r\n  AgregarDato = () => { \r\n    estructuracola.Encolar(this.state.agregar);\r\n    nodos = new DataSet(estructuracola.GenerarNodosDOT());\r\n    flechas = new DataSet(estructuracola.GenerarEdgesDOT());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  EliminarDato = () =>{\r\n    estructuracola.Desencolar();\r\n    nodos = new DataSet(estructuracola.GenerarNodosDOT());\r\n    flechas = new DataSet(estructuracola.GenerarEdgesDOT());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  ActualizarDato = () => {\r\n    estructuracola.Actualizar(this.state.agregar, this.state.dato_actualizado);\r\n    nodos = new DataSet(estructuracola.GenerarNodosDOT());\r\n    flechas = new DataSet(estructuracola.GenerarEdgesDOT());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  BuscarDato = () => {\r\n    let dato = estructuracola.Buscar(this.state.agregar);\r\n    if (0 <= dato){\r\n      nodos = new DataSet(estructuracola.GenerarNodosDOT());\r\n      flechas = new DataSet(estructuracola.GenerarEdgesDOT());\r\n      datos = {\r\n        nodes: nodos,\r\n        edges: flechas,\r\n      }\r\n      flechas.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n    }\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n\r\n  handleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Cola\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\testructuracola.Encolar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tnodos = new DataSet(estructuracola.GenerarNodosDOT());\r\n      flechas = new DataSet(estructuracola.GenerarEdgesDOT());\r\n      datos = {\r\n        nodes: nodos,\r\n        edges: flechas,\r\n      }\r\n\t\t\t\r\n      this.network = new Network(this.appRef.current, datos, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL - Cola!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n          <input type=\"text\" name=\"agregar\" className=\"form-control\" placeholder=\"Dato\" id=\"InputCola\" value={this.state.agregar} onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.AgregarDato()}>Agregar</button>\r\n        </div>\r\n        <div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n          <input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Update\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-warning\" onClick={() => this.ActualizarDato()}>Actualizar Dato</button>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.EliminarDato()}>Eliminar</button>\r\n        </div>\r\n        <div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => this.BuscarDato()}>Buscar</button>\r\n        </div>\r\n        <div className=\"col-md-2\" style={{marginLeft: 0 + 'em'}}>\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\"  style={{marginLeft: 3 + 'em'}}>\r\n          <fieldset class=\"form-group\">\r\n            <legend>Repetidos</legend>\r\n            <div class=\"form-check\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"radio\" class=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios1\" value=\"option1\" ></input>\r\n                Si\r\n              </label>\r\n            </div>\r\n            <div class=\"form-check\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"radio\" class=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios2\" value=\"option2\"></input>\r\n                No\r\n              </label>\r\n            </div>\r\n          </fieldset>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n          <h5>Rango de Animacion</h5>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"rango\" onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n          <h5>Velocidad: x{this.state.rango}</h5>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"row\">\r\n\r\n      </div>\r\n      <div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cola;","import Nodo from './Nodo.js';\r\n\r\nclass EstructuraCola{\r\n\tprimero=null;\r\n\r\n\tConstructor(){\r\n\t\tthis.primero= null;\r\n\t\tthis.ultimo=null;\r\n\t}\r\n\tget_primero = () => {return this.primero;}\r\n\tset_primero = (primero) => {this.primero = primero;}\r\n\tget_ultimo = () => {return this.ultimo;}\r\n\tset_ultimo = (ultimo) => {this.ultimo = ultimo;}\r\n\tget_vacia = () => {\r\n\t\tif(this.get_primero()==null){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tEncolar = (valor) => {\r\n\t\tlet nodo = new Nodo(valor);\r\n\t\tif(this.get_vacia()==true){\r\n\t\t\tthis.set_primero(nodo);\r\n\t\t\tthis.set_ultimo(nodo);\r\n\t\t}else{\r\n\t\t\tthis.get_ultimo().set_siguiente(nodo);\r\n\t\t\tthis.set_ultimo(nodo);\r\n\t\t}\r\n\t}\r\n\tDesencolar = () => {\r\n\t\tlet nodo = this.primero;\r\n\t\tlet seguir = true;\r\n\t\tthis.set_primero(this.get_primero().get_siguiente());\r\n\t}\r\n\tBuscar = (dato) =>{\r\n\t\tlet nodo = this.get_primero();\r\n\t\tlet i=0;\r\n\t\tif(this.get_vacia() == false){\r\n\t\t\tdo{\r\n\t\t\t\tif(nodo.get_valor() == dato){\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t}while(nodo != null);\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tActualizar = (dato, cambio) =>{\r\n        let nodo_actual = this.get_primero();\r\n        if (this.get_vacia() == false){\r\n            do{\r\n                if (nodo_actual.get_valor() == dato){\r\n                    nodo_actual.set_valor(cambio);\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n\r\n    }\r\n\tImprimir = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tdo{\r\n\t\t\tconsole.log(nodo.get_valor());\r\n\t\t\tnodo=nodo.get_siguiente();\r\n\t\t}while(nodo!=null)\r\n\t}\r\n\tGenerarNodosDOT = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet id = 0;\r\n\t\t\tdo{\r\n\t\t\t\tdot.push({id: id, label: nodo.get_valor()});\r\n\t\t\t\tnodo=nodo.get_siguiente();\r\n\t\t\t\tid++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n\tGenerarEdgesDOT = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet i = 0;\r\n\t\t\tdo{\r\n\t\t\t\tif ( nodo.get_siguiente() != null) {\r\n\t\t\t\t\tlet nodoactual=parseInt(i)\r\n\t\t\t\t\tlet nodosiguiente = parseInt(nodoactual) + parseInt(1)\r\n\t\t\t\t\tif(i==0){\r\n\t\t\t\t\t\tdot.push({from:0, to:1, arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(nodoactual != false && nodosiguiente != false){\r\n\t\t\t\t\t\tdot.push({from:parseInt(nodoactual), to:parseInt(nodosiguiente), arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t\ti++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n}\r\n\r\nexport default EstructuraCola;\r\n//module.exports = EstructuraCola;","class Nodo{\r\n\r\n\tconstructor(valor){\r\n\t\tthis.siguiente = null;\r\n\t\tthis.valor = valor;\r\n\t\tthis.prioridad = 0;\r\n\t}\r\n\t\r\n\tget_siguiente(){ return this.siguiente;}\r\n\tset_siguiente(nuevonodo){ this.siguiente=nuevonodo;}\r\n\tget_valor(){ return this.valor;}\r\n\tset_valor(valor){ this.valor=valor;}\r\n\tget_prioridad(){return this.prioridad;}\r\n\tset_prioridad(valor){this.prioridad=valor;}\r\n}\r\n\r\nexport default Nodo;\r\n// module.exports = Nodo;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport Colaprioridad from './Modelo/Lineales/ColaPrioridad/ColaPrioridad'; // Importar la Estructura Lista Circular Doble.\r\nvar colaprioridad = new Colaprioridad(); // Instancia de la ListaCDE.\r\nvar nodos = new DataSet(colaprioridad.GenerarNodosDOT());  // Se Crean los Nodos.\r\nvar flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\t// Se Crean las flechas.\r\nvar filePath;\r\n\r\nvar datos = {\r\n\tnodes: nodos,\r\n\tedge: flechas,\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#00F3B8',\r\n            border:  '#00F3B8',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#00F3B8'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\nclass ColaPrioridad extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      agregar: '',\r\n      prioridad:'',\r\n      valorbuscar: '',\r\n      rango: '1',\r\n    }\r\n    this.network = {};\r\n    this.appRef = createRef();\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  handleInputChange(e) {\r\n    const {value, name} = e.target;\r\n    console.log(value, name);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    }\r\n  AgregarDato = () => { \r\n    colaprioridad.Encolar(this.state.agregar, this.state.prioridad);\r\n    nodos = new DataSet(colaprioridad.GenerarNodosDOT());\r\n    flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  EliminarDato = () =>{\r\n    colaprioridad.Desencolar();\r\n    nodos = new DataSet(colaprioridad.GenerarNodosDOT());\r\n    flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  BuscarDato = () => {\r\n    let dato = colaprioridad.Buscar(this.state.agregar);\r\n    if (0 <= dato){\r\n      nodos = new DataSet(colaprioridad.GenerarNodosDOT());\r\n      flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\r\n      datos = {\r\n        nodes: nodos,\r\n        edges: flechas,\r\n      }\r\n      flechas.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n    }\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n          <input type=\"text\" name=\"agregar\" className=\"form-control\" placeholder=\"Dato\" id=\"InputCola\" value={this.state.agregar} onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n          <input type=\"text\" name=\"prioridad\" className=\"form-control\" placeholder=\"Prioridad\" id=\"InputPrioridad\" value={this.state.prioridad} onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.AgregarDato()}>Agregar</button>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.EliminarDato()}>Eliminar</button>\r\n        </div>\r\n        <div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => this.BuscarDato()}>Buscar</button>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n          <h5>Rango de Animacion</h5>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"rango\" onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n          <h5>Velocidad: x{this.state.rango}</h5>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"row\">\r\n\r\n      </div>\r\n      <div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColaPrioridad;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js');\r\n\r\nclass ColaPrioridad{\r\n\tprimero=null;\r\n\r\n\tConstructor(){\r\n\t\tthis.primero= null;\r\n\t\tthis.ultimo=null;\r\n\t}\r\n\tget_primero = () => {return this.primero;}\r\n\tset_primero = (primero) => {this.primero = primero;}\r\n\tget_ultimo = () => {return this.ultimo;}\r\n\tset_ultimo = (ultimo) => {this.ultimo = ultimo;}\r\n\tget_vacia = () => {\r\n\t\tif(this.get_primero()==null){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tEncolar = (valor, prioridad) => {\r\n\t\tlet nuevonodo = new Nodo(valor);\r\n\t\tif(prioridad!=null && prioridad!=\"\"){\r\n\t\t\tconsole.log(\"Enrtp\");\r\n\t\t\tnuevonodo.set_prioridad(prioridad);\r\n\t\t}\r\n\t\tlet nodo = this.get_primero();\r\n\t\tlet salir= false;\r\n\t\tif(this.get_vacia()==true){\r\n\t\t\tthis.set_primero(nuevonodo);\r\n\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t}else{\r\n\t\t\tconsole.log(nodo.get_prioridad());\r\n\t\t\tconsole.log(prioridad);\r\n\t\t\tif(prioridad!=null && prioridad!=\"\"){\r\n\t\t\t\tdo{\r\n\t\t\t\t\tconsole.log(\"Entro al while\");\r\n\t\t\t\t\tif(nodo.get_siguiente()==null){\r\n\t\t\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.log(nodo.get_prioridad());\r\n\t\t\t\t\t\tconsole.log(prioridad);\r\n\t\t\t\t\t\tif( prioridad <= nodo.get_prioridad()){\r\n\t\t\t\t\t\t\tconsole.log(\"Entro al if\");\r\n\t\t\t\t\t\t\tnuevonodo.set_siguiente(nodo.get_siguiente());\r\n\t\t\t\t\t\t\tnodo.set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t\t}else if(prioridad>nodo.get_prioridad()){\r\n\t\t\t\t\t\t\tconsole.log(\"Entro al segundo\")\r\n\t\t\t\t\t\t\tif(nodo.get_siguiente().get_prioridad()==0){\r\n\t\t\t\t\t\t\t\tnuevonodo.set_siguiente(nodo.get_siguiente());\r\n\t\t\t\t\t\t\t\tnodo.set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t\t\t}else if(prioridad<=nodo.get_siguiente().get_prioridad()){\r\n\t\t\t\t\t\t\t\tnuevonodo.set_siguiente(nodo.get_siguiente());\r\n\t\t\t\t\t\t\t\tnodo.set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t\t}while(nodo != null || salir==true);\r\n\t\t\t}else{\r\n\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tDesencolar = () => {\r\n\t\tlet nodo = this.primero;\r\n\t\tlet seguir = true;\r\n\t\tthis.set_primero(this.get_primero().get_siguiente());\r\n\t}\r\n\tBuscar = (dato) =>{\r\n\t\tlet nodo = this.get_primero();\r\n\t\tlet i=0;\r\n\t\tif(this.get_vacia() == false){\r\n\t\t\tdo{\r\n\t\t\t\tif(nodo.get_valor() == dato){\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t}while(nodo != null);\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tImprimir = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tdo{\r\n\t\t\tconsole.log(nodo.get_valor());\r\n\t\t\tnodo=nodo.get_siguiente();\r\n\t\t}while(nodo!=null)\r\n\t}\r\n\tGenerarNodosDOT = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet id = 0;\r\n\t\t\tdo{\r\n\t\t\t\tdot.push({id: id, label: nodo.get_valor()});\r\n\t\t\t\tnodo=nodo.get_siguiente();\r\n\t\t\t\tid++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n\tGenerarEdgesDOT = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet i = 0;\r\n\t\t\tdo{\r\n\t\t\t\tif ( nodo.get_siguiente() != null) {\r\n\t\t\t\t\tlet nodoactual=parseInt(i)\r\n\t\t\t\t\tlet nodosiguiente = parseInt(nodoactual) + parseInt(1)\r\n\t\t\t\t\tif(i==0){\r\n\t\t\t\t\t\tdot.push({from:0, to:1, arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(nodoactual != false && nodosiguiente != false){\r\n\t\t\t\t\t\tdot.push({from:parseInt(nodoactual), to:parseInt(nodosiguiente), arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t\ti++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n}\r\n\r\nexport default ColaPrioridad;\r\n//module.exports = ColaPrioridad;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ordenamientoBurbuja from './Modelo/Ordenamientos/OrBurbuja'; // Importar la Estructura Lista Simple.\r\nvar burbuja = new ordenamientoBurbuja(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(burbuja.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(burbuja.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Burbuja extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Ordenamiento\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\t// console.log(dataJson.valores[i]);\r\n\t\t\t\tburbuja.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(burbuja.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(burbuja.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! -> Ordenamiento \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleOrdenamiento = () => {\r\n\r\n\t\tburbuja.ordenamiento_burbuja()\r\n\t\tgetNodes = new DataSet(burbuja.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(burbuja.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleOrdenamiento()}>Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default Burbuja;","class OrBurbuja{\r\n\r\n    constructor(){\r\n        this.array = [];\r\n    }\r\n\r\n    insertar = (dato) =>{\r\n        this.array.push(dato)\r\n        // console.log(this.array)\r\n    }\r\n    ordenamiento_burbuja = () => {\r\n\r\n        for (var i = (this.array.length - 1); i >= 0; i--) {\r\n            for (var j = 0; j < i; j++) {\r\n                if(this.array[j]> this.array[j+1]){\r\n                    var temp = this.array[j];\r\n                    this.array[j] = this.array[j+1]\r\n                    this.array[j+1] = temp;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n            console.log(this.array[i])\r\n            dot.push({id:i, label: this.array[i]});\r\n        }\r\n       \r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n\r\n            if (this.array[i+1] != null){\r\n                \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                dot.push({from:nodoUno, to:nodoDos, arrows: \"to\"});\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n}   \r\n\r\nexport default OrBurbuja;\r\n//module.exports = OrBurbuja;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport OrdenamientoSeleccion from './Modelo/Ordenamientos/OrSeleccion'; // Importar la Estructura Lista Simple.\r\nvar seleccion = new OrdenamientoSeleccion(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(seleccion.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(seleccion.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Seleccion extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Ordenamiento\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\t// console.log(dataJson.valores[i]);\r\n\t\t\t\tseleccion.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(seleccion.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(seleccion.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! -> Ordenamiento \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleOrdenamiento = () => {\r\n\r\n\t\tseleccion.ordenamiento_seleccion()\r\n\t\tgetNodes = new DataSet(seleccion.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(seleccion.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleOrdenamiento()}>Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\nexport default Seleccion;\r\n","class OrSeleccion{\r\n\r\n\tconstructor(){\r\n\t\tthis.array = []\r\n\t}\r\n\r\n\tinsertar = (dato) => {\r\n\t\tthis.array.push(dato)\r\n\t}\r\n\r\n\r\n    ordenamiento_seleccion = () =>{\r\n\r\n\t\tfor(var i = 1; i < this.array.length; i++){\r\n\t\t\tvar aux = this.array[i];\r\n\t\t\tvar temp = i - 1  ;\r\n\t\t\twhile(aux < this.array[temp] && temp >= 1){\r\n\t\t\t\tthis.array[temp+1] = this.array[temp];\r\n\t\t\t\ttemp = temp - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (this.array[temp] <= aux){\r\n\t\t\t\t\tthis.array[temp+1] = aux;\r\n\t\t\t}else{\r\n\t\t\t\tthis.array[temp+1] = this.array[temp]\r\n\t\t\t\tthis.array[temp] = aux\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n            console.log(this.array[i])\r\n            dot.push({id:i, label: this.array[i]});\r\n        }\r\n       \r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n\r\n            if (this.array[i+1] != null){\r\n                \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                dot.push({from:nodoUno, to:nodoDos, arrows: \"to\"});\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default OrSeleccion;\r\n//module.exports = OrSeleccion;\r\n\r\n\r\n\r\n","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport OrdenamientoInsercion from './Modelo/Ordenamientos/OrInsercion'; // Importar la Estructura Lista Simple.\r\nvar insercion = new OrdenamientoInsercion(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(insercion.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(insercion.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Insercion extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Ordenamiento\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\t// console.log(dataJson.valores[i]);\r\n\t\t\t\tinsercion.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(insercion.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(insercion.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! -> Ordenamiento \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleOrdenamiento = () => {\r\n\r\n\t\tinsercion.ordenamiento_insercion()\r\n\t\tgetNodes = new DataSet(insercion.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(insercion.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleOrdenamiento()}>Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\nexport default Insercion;\r\n","class OrInsercion{\r\n\r\n\tconstructor(){\r\n\t\tthis.array = []\r\n\t}\r\n\r\n\tinsertar = (dato) => {\r\n\t\tthis.array.push(dato)\r\n\t}\r\n\r\n\r\n\tordenamiento_insercion = () =>{\r\n\r\n\t\tvar size = this.array.length, temp, aux;\r\n   \r\n\t\tfor ( var i = 0; i < this.array.length; i++ ) { // outer loop     \r\n\t\taux = this.array[i];\r\n\t\t\tfor ( temp = i - 1; temp >= 0 && this.array[temp] > aux; temp-- ){ // inner loop\r\n\t\t\t\tthis.array[ temp + 1 ] = this.array[temp];\r\n\t\t\t}\r\n\t\tthis.array[ temp + 1 ] = aux;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n            console.log(this.array[i])\r\n            dot.push({id:i, label: this.array[i]});\r\n        }\r\n       \r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n\r\n            if (this.array[i+1] != null){\r\n                \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                dot.push({from:nodoUno, to:nodoDos, arrows: \"to\"});\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default OrInsercion;\r\n//module.exports = OrInsercion;","import React, {useState} from 'react';\r\n\r\nexport default function Rapido(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-6\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function AVL(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function ArbolB(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function ArbolBPlus(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function ArbolMerkle(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Navbar from './Componentes/Navbar';\r\nimport Home from './Componentes/Paginas/Home';\r\nimport ListaSE from './Componentes/Paginas/ListaSE';\r\nimport ListaDE from './Componentes/Paginas/ListaDE';\r\nimport ListaCSE from './Componentes/Paginas/ListaCSE';\r\nimport ListaCDE from './Componentes/Paginas/ListaCDE';\r\nimport Pila from './Componentes/Paginas/Pila';\r\nimport Cola from './Componentes/Paginas/Cola';\r\nimport ColaPrioridad from './Componentes/Paginas/ColaPrioridad';\r\nimport Burbuja from './Componentes/Paginas/Burbuja';\r\nimport Seleccion from './Componentes/Paginas/Seleccion';\r\nimport Insercion from './Componentes/Paginas/Insercion';\r\nimport Rapido from './Componentes/Paginas/Rapido';\r\nimport AVL from './Componentes/Paginas/AVL';\r\nimport ArbolB from './Componentes/Paginas/Arbolb';\r\nimport ArbolBPlus from './Componentes/Paginas/Arbolbplus';\r\nimport ArbolMerkle from './Componentes/Paginas/Arbolmerkle';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path='/' exact component={Home} />\r\n        <Route path='/Listasimplementeenlazada' component={ListaSE} />\r\n        <Route path='/Listadoblementeenlazada' component={ListaDE} />\r\n        <Route path='/Listacircularsimplementeenlazada' component={ListaCSE} />\r\n        <Route path='/Listacirculardoblementeenlazada' component={ListaCDE} />\r\n        <Route path='/Pila' component={Pila} />\r\n        <Route path='/Cola' component={Cola} />\r\n        <Route path='/Colaprioridad' component={ColaPrioridad} />\r\n        <Route path='/Burbuja' component={Burbuja} />\r\n        <Route path='/Seleccion' component={Seleccion} />\r\n        <Route path='/Insercion' component={Insercion} />\r\n        <Route path='/Rapido' component={Rapido} />\r\n        <Route path='/AVL' component={AVL} />\r\n        <Route path='/Arbolb' component={ArbolB} />\r\n        <Route path='/Arbolbplus' component={ArbolBPlus} />\r\n        <Route path='/Arbolmerkle' component={ArbolMerkle} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}