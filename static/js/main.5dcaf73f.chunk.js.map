{"version":3,"sources":["Componentes/MenuItemsLineales.js","Componentes/MenuItemsOrdenamientos.js","Componentes/MenuItemsArboreas.js","Componentes/MenuItemsCompuesta.js","Componentes/MenuItemsNoLineales.js","Componentes/MenuItemsCodificacion.js","Componentes/Navbar.js","Componentes/Paginas/Home.js","Componentes/Paginas/Modelo/Lineales/ListaSimple/Nodo.js","Componentes/Paginas/Modelo/Lineales/ListaSimple/ListaSimple.js","Componentes/Paginas/ListaSE.js","Componentes/Paginas/Modelo/Lineales/ListaDoble/Nodo.js","Componentes/Paginas/Modelo/Lineales/ListaDoble/ListaDoble.js","Componentes/Paginas/ListaDE.js","Componentes/Paginas/Modelo/Lineales/ListaCircular/Nodo.js","Componentes/Paginas/Modelo/Lineales/ListaCircular/ListaCircular.js","Componentes/Paginas/ListaCSE.js","Componentes/Paginas/Modelo/Lineales/ListaCircularDoble/Nodo.js","Componentes/Paginas/Modelo/Lineales/ListaCircularDoble/ListaCDE.js","Componentes/Paginas/ListaCDE.js","Componentes/Paginas/Modelo/Lineales/Pila/Nodo.js","Componentes/Paginas/Modelo/Lineales/Pila/Stack.js","Componentes/Paginas/Pila.js","Componentes/Paginas/Modelo/Lineales/Cola/Nodo.js","Componentes/Paginas/Modelo/Lineales/Cola/EstructuraCola.js","Componentes/Paginas/Cola.js","Componentes/Paginas/Modelo/Lineales/ColaPrioridad/Nodo.js","Componentes/Paginas/ColaPrioridad.js","Componentes/Paginas/Modelo/Lineales/ColaPrioridad/ColaPrioridad.js","Componentes/Paginas/Burbuja.js","Componentes/Paginas/Modelo/Ordenamientos/OrBurbuja.js","Componentes/Paginas/Seleccion.js","Componentes/Paginas/Modelo/Ordenamientos/OrSeleccion.js","Componentes/Paginas/Insercion.js","Componentes/Paginas/Modelo/Ordenamientos/OrInsercion.js","Componentes/Paginas/Rapido.js","Componentes/Paginas/AVL.js","Componentes/Paginas/Arbolb.js","Componentes/Paginas/Arbolbplus.js","Componentes/Paginas/Arbolmerkle.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/ListaCabeceraFilas.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/ListaCabeceraColumnas.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/ListaHorizontal.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/NodoCabeceraFila.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/ListaVertical.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/NodoCabeceraColumna.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/NodoOrtogonal.js","Componentes/Paginas/MatrizDispersa.js","Componentes/Paginas/Modelo/Compuesta/MatrizDispersa/MatrizOrtogonal.js","Componentes/Paginas/HashAbierta.js","Componentes/Paginas/Modelo/NoLineal/HashAbierta.js","Componentes/Paginas/Modelo/Compuesta/EstructuraCompuesta/Nodo.js","Componentes/Paginas/Compuesta.js","Componentes/Paginas/Modelo/Compuesta/EstructuraCompuesta/Compuesta.js","App.js","reportWebVitals.js","index.js"],"names":["MenuItemsLineales","title","path","cName","MenuItemsOrdenamientos","MenuItemsArboreas","MenuItemsCompuesta","MenuItemsNoLineales","MenuItemsCodificacion","Navbar","useState","setClick","className","href","id","data-bs-toggle","role","aria-haspopup","aria-expanded","map","item","index","to","onClick","Home","scope","Nodo","dato","this","siguiente","ListaSimple","cabeza","insertar","nodo_nuevo","get_vacia","set_cabeza","set_ultimo","get_ultimo","set_siguiente","insertar_inicio","get_cabeza","insertar_ultimo","eliminar","console","log","nodo_actual","get_siguiente","anterior","get_dato","update","cambio","set_dato","search","i","mostrar","setNodesDataSet","dot","push","label","setEdgesDataSet","nodoUno","parseInt","nodoDos","from","arrows","generateJSON","dic","toString","valores","dictstring","JSON","stringify","fs","writeFile","err","result","ultimo","listaSimple","getNodes","DataSet","getEdges","data","nodes","edge","options","physics","stabilization","barnesHut","springLength","borderWidth","color","background","border","highlight","ListaSE","props","handleFileChange","e","file","target","files","reader","FileReader","readAsText","onload","setState","fileName","name","fileContent","handleAdd","state","text","edges","network","Network","appRef","current","handleDelete","handleUpdate","dato_actualizado","handleAddTop","handleAddLower","handleSearch","add","value","handleOpenFile","dataJson","parse","categoria","nombre","length","alert","handleSaveFile","createRef","handleInputChange","bind","style","marginLeft","type","placeholder","onChange","class","min","max","step","defaultValue","height","ref","Component","ListaDoble","vacia","set_primero","set_anterior","get_primero","temp","get_anterior","print","primero","listaDoble","ListaDE","ListaCircular","size","listaCircular","ListaCSE","ListaCircularDE","valor","aux","Imprimir","etiqueta","listacde","ListaCDE","Stack","empty","pop","pila","Pila","nuevonodo","EstructuraCola","nodo","Desencolar","get_valor","set_valor","nodoactual","nodosiguiente","estructuracola","nodos","flechas","datos","Cola","AgregarDato","agregar","EliminarDato","ActualizarDato","BuscarDato","valoreliminar","valorbuscar","rango","prioridad","colaprioridad","Encolar","set_prioridad","salir","get_prioridad","Buscar","GenerarNodosDOT","GenerarEdgesDOT","ColaPrioridad","burbuja","array","ordenamiento_burbuja","j","Burbuja","handleOrdenamiento","marginRight","seleccion","ordenamiento_seleccion","Seleccion","insercion","ordenamiento_insercion","Insercion","Rapido","setRango","AVL","ArbolB","ArbolBPlus","ArbolMerkle","ListaCabeceraFilas","nodoNuevo","setPrimero","setUltimo","getY","getPrimero","insertarInicio","getUltimo","insertarFinal","insertarMedio","setAnterior","setSiguiente","tmp1","tmp2","getSiguiente","getAnterior","delete","y","tmp","busqueda","ListaCabeceraColumnas","getX","x","ListaHorizontal","setIzquierda","setDerecha","getDerecha","getIzquierda","getDato","NodoCabeceraFila","fila","antertior","ListaVertical","setArriba","setAbajo","getAbajo","getArriba","NodoCabeceraColumna","columna","NodoOrtogonal","setDato","arriba","abajo","izquierda","derecha","matrizDispersa","getColumna","getFila","nodo_cabecera","getData","contador","estado","String","getNodesDataSet","tempContador","auxNodoUno","auxNodoDos","desactivarEncabezado","columnas","setColumna","filas","setFila","MatrizDispersa","textX","textY","posicionX","posicionY","forEach","element","indices","posicion","handleCabecera","tablahash","m","insertados","arrreglo","ConvertirString","cadena","charCodeAt","ConvertirArreglo","arreglo","nuevoarreglo","InicializarArreglo","tamanio","get_m","Capacidad","raro","get_sizearreglo","set_m","set_min","get_min","set_max","get_max","get_numarreglo","indice","linea","FuncionDivision","k","FuncionSimple","reducido","retorno","Math","round","FuncionMultiplicacion","Rehashing","tipo","m_anterior","esono","InsertarDivision","InsertarMultiplicacion","InsertarSimple","valordivision","valorsimple","valormultiplicacion","EliminarSimple","auxarreglo","splice","EliminarDivision","EliminarMultiplicacion","BuscarSimple","segundoindice","BuscarDivision","BuscarMultiplicacion","Actualizar","nuevo","setDataSet","dotNode","dotEdges","level","shape","layout","hierarchical","direction","sortMethod","TablaHashAbierta","handleGenerate","minimo","maximo","esentero","entero","isNaN","opcion","esentero2","entero2","funcion","getPrincipal","principal","setPrincipal","getSecundaria","secundaria","setSecundaria","compuesta","primaria","dato1","dato2","getPrimaria","setPrimaria","creatorPrimaria","creatorSecundaria","getLista","nodo_principal","getEstructuraPrimaria","nodo_secundario","getEstructuraSecundaria","lista","valor1","valor2","nodo1","nodo2","update1","update2","estructuraPrimaria","ListaCircularDoble","estructuraSecundaria","setEstructuraPrimaria","setEstructuraSecundaria","Compuesta","estructura1","estructura2","data2","network2","appRef2","getEdges2","options2","secundario","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5dcaf73f.chunk.js","sourcesContent":["export const MenuItemsLineales = [\r\n\t{\r\n\t\ttitle:'Lista simplemente enlazada',\r\n\t\tpath:'/Listasimplementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Lista doblemente enlazada',\r\n\t\tpath:'/Listadoblementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Lista circular simplemente enlazada',\r\n\t\tpath:'/Listacircularsimplementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Lista circular doblemente enlazada',\r\n\t\tpath:'/Listacirculardoblementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Pila',\r\n\t\tpath:'/Pila',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Cola',\r\n\t\tpath:'/Cola',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Cola de Prioridad',\r\n\t\tpath:'/Colaprioridad',\r\n\t\tcName:'dropdown-item'\r\n\t}\r\n]","export const MenuItemsOrdenamientos = [\r\n\t{\r\n\t\ttitle:'Burbuja',\r\n\t\tpath:'/Burbuja',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Seleccion',\r\n\t\tpath:'/Seleccion',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Insercion',\r\n\t\tpath:'/Insercion',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Rapido',\r\n\t\tpath:'/Rapido',\r\n\t\tcName:'dropdown-item'\r\n\t}\r\n]","export const MenuItemsArboreas = [\r\n\t{\r\n\t\ttitle:'Arbol Binario de Busqueda',\r\n\t\tpath:'/ArbolBinario',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'AVL',\r\n\t\tpath:'/AVL',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Arbol B',\r\n\t\tpath:'/Arbolb',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Arbol B+',\r\n\t\tpath:'/Arbolbplus',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Arbol de Merkle',\r\n\t\tpath:'/Arbolmerkle',\r\n\t\tcName:'dropdown-item'\r\n\t}\r\n]","export const MenuItemsCompuesta = [\r\n\t{\r\n\t\ttitle:'Matriz Dispersa',\r\n\t\tpath:'/MatrizDispersa',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Row Major(3D a 2D)',\r\n\t\tpath:'/MatrizDispersa',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Col Major(3D a 2D)',\r\n\t\tpath:'/MatrizDispersa',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Estructuras Compuestas',\r\n\t\tpath:'/Compuesta',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n]","export const MenuItemsNoLineales = [\r\n\t{\r\n\t\ttitle:'Tabla Hash Abierta',\r\n\t\tpath:'/HashAbierta',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Tabla Hash Cerrada',\r\n\t\tpath:'/HashCerrada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Recorrido y busqueda por anchura de grafos',\r\n\t\tpath:'/',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Recorrido y busqueda por profundidad de grafos',\r\n\t\tpath:'/',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Algoritmo de Costo Uniforme',\r\n\t\tpath:'/',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Arbol de recubrimiento minimo',\r\n\t\tpath:'/',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t\r\n]","export const MenuItemsCodificacion = [\r\n\t{\r\n\t\ttitle:'Codigo Hamming',\r\n\t\tpath:'/',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Algoritmo de Huffman',\r\n\t\tpath:'/',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Algoritmo LZW',\r\n\t\tpath:'/',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Cifrado Feistel',\r\n\t\tpath:'/',\r\n\t\tcName:'dropdown-item'\r\n\t},\t\r\n]","import React, { useState } from 'react';\r\nimport { MenuItemsLineales } from './MenuItemsLineales';\r\nimport { MenuItemsOrdenamientos } from './MenuItemsOrdenamientos';\r\nimport { MenuItemsArboreas } from './MenuItemsArboreas';\r\nimport { MenuItemsCompuesta } from './MenuItemsCompuesta';\r\nimport { MenuItemsNoLineales } from './MenuItemsNoLineales';\r\nimport { MenuItemsCodificacion } from './MenuItemsCodificacion';\r\nimport { Link } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\n\r\nfunction Navbar(){\r\n\tconst [click, setClick] = useState(false);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      \t\t\t<div className=\"container-fluid\">\r\n      \t\t\t\t<a className=\"navbar-brand\" href=\"./\">ESTRUCTURA DE DATOS</a>\r\n      \t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n          \t\t\t<ul className=\"navbar-nav me-auto\">\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n              \t\t\t\t<a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Estructuras Lineales</a>\r\n              \t\t\t\t<div className=\"dropdown-menu\">\r\n                \t\t\t\t{MenuItemsLineales.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n              \t\t\t\t</div>\r\n           \t\t\t\t</li>\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Ordenamientos</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsOrdenamientos.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Estructura Arboreas</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsArboreas.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">No Lineales</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsNoLineales.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Codificacion</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsCodificacion.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Compuesta</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsCompuesta.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n          \t\t\t</ul>\r\n        \t\t\t</div>\t\r\n      \t\t\t</div>\r\n      \t\t</nav>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\n\r\nexport default function Home(){\r\n\treturn (\r\n\t\t<>\t\r\n\t\t\t<table className=\"table table-hover\">\r\n  \t\t\t\t<thead>\r\n  \t\t\t\t  <tr>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t    <th scope=\"col\">\r\n  \t\t\t\t    \t<div className=\"card border-light mb-3\">\r\n  \t\t\t\t\t\t\t<div className=\"card-body\"><div className=\"page-header\"><h1>Indice de Estructura de Datos</h1></div></div>\r\n  \t\t\t\t\t\t\t<div className=\"card-body\">\r\n  \t\t\t\t\t\t\t  <ul>\r\n        \t  \t\t\t\t\t<li><h4>Estuctura Lineales</h4></li>\r\n        \t  \t\t\t\t\t<ul>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listasimplementeenlazada\"><h5>Lista simplemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listadoblementeenlazada\"><h5>Lista doblemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listacircularsimplementeenlazada\"><h5>Lista circular simplemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listacirculardoblementeenlazada\"><h5>Lista circular doblemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Pila\"><h5>Pila</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Cola\"><h5>Cola</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Colaprioridad\"><h5>Cola de prioridad</h5></a></li>  \r\n        \t  \t\t\t\t\t</ul>\r\n        \t  \t\t\t\t\t<li><h4>Ordenamientos</h4></li>\r\n        \t  \t\t\t\t\t<ul>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Burbuja\"><h5>Burbuja</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Seleccion\"><h5>Selección</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Insercion\"><h5>Inserción</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Rapido\"><h5>Rápido</h5></a></li>  \r\n        \t  \t\t\t\t\t</ul>\r\n        \t  \t\t\t\t\t<li><h4>Estructuras Árboreas</h4></li>\r\n        \t  \t\t\t\t\t<ul>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolBinario\"><h5>Árbol binario de búsqueda</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./AVL\"><h5>AVL</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolB\"><h5>Árbol B</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolBPlus\"><h5>Árbol B+</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolMerkle\"><h5>Árbol de Merkle</h5></a></li>  \r\n        \t  \t\t\t\t\t</ul>\r\n        \t\t\t\t\t  </ul>\r\n  \t\t\t\t\t\t\t</div>\r\n        \t\t\t\t</div>\r\n  \t\t\t\t    </th>\r\n  \t\t\t\t    <th scope=\"col\"></th>\r\n  \t\t\t\t    <th scope=\"col\"></th>\r\n  \t\t\t\t    <th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  </tr>\r\n  \t\t\t\t</thead>\r\n\t\t\t</table>\r\n\t\t\t\r\n\t\t</>\r\n\t);\r\n}","var i = 0;\r\nclass Nodo{\r\n\r\n    constructor(dato) {\r\n        this.siguiente = null;\r\n        this.dato = dato;\r\n        i ++;\r\n        \r\n    }\r\n\r\n    get_siguiente(){\r\n\r\n        return this.siguiente;\r\n    }\r\n\r\n    set_siguiente(siguiente){\r\n        this.siguiente = siguiente;\r\n    }\r\n\r\n    get_dato(){\r\n        return this.dato;\r\n    }\r\n\r\n    set_dato(dato){\r\n        this.dato = dato;\r\n    }\r\n}\r\n\r\nexport default Nodo;\r\n// module.exports = Nodo;","import Nodo from './Nodo.js'\r\nimport fs from 'fs';\r\n// const Nodo = require('./Nodo.js');\r\n\r\nclass ListaSimple{\r\n\r\n    cabeza = null\r\n\r\n    constructor(){\r\n        this.cabeza = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n\r\n    insertar = (dato) =>{\r\n        let nodo_nuevo = new Nodo(dato);\r\n        if (this.get_vacia() == true){\r\n            this.set_cabeza(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n        }else{\r\n\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n\r\n        }\r\n\r\n    }\r\n    \r\n    insertar_inicio = (dato) =>{\r\n        let nodo_nuevo = new Nodo(dato)\r\n\r\n        nodo_nuevo.set_siguiente(this.get_cabeza())\r\n        this.set_cabeza(nodo_nuevo)\r\n    }\r\n\r\n    insertar_ultimo = (dato) =>{\r\n        let nodo_nuevo = new Nodo(dato)\r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        this.set_ultimo(nodo_nuevo)\r\n\r\n    }\r\n\r\n    eliminar = (dato) =>{\r\n\r\n        if (this.get_vacia() == false){\r\n            \r\n            let nodo_actual = this.get_cabeza().get_siguiente();\r\n            let anterior = this.get_cabeza();\r\n            if (this.get_cabeza().get_dato() == dato){\r\n                this.set_cabeza(this.get_cabeza().get_siguiente());\r\n                return console.log(\"Delete!\");\r\n            }else{\r\n                do {\r\n                    if (nodo_actual.get_dato() == dato){\r\n                        if (nodo_actual.get_dato() == this.get_ultimo().get_dato()){\r\n                            anterior.set_siguiente(null);\r\n                            this.set_ultimo(anterior);\r\n                            return console.log(\"Delete!\");\r\n                        }else {\r\n                            anterior.set_siguiente(nodo_actual.get_siguiente());\r\n                            return console.log(\"Delete!\");\r\n                        }\r\n                    }\r\n                    nodo_actual = nodo_actual.get_siguiente();\r\n                    anterior = anterior.get_siguiente();\r\n\r\n                } while (nodo_actual != null);\r\n            }\r\n\r\n        }else{ return console.log(\"Empty!\"); }\r\n\r\n        return console.log(\"Data not found!\");\r\n    }\r\n\r\n    update = (dato, cambio) =>{\r\n        let nodo_actual = this.get_cabeza();\r\n\r\n        if (this.get_vacia() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) =>{\r\n        let nodo_actual = this.get_cabeza()\r\n        \r\n        if (this.get_vacia() == false){\r\n            let i = 0;\r\n            do{\r\n\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato()+\"-> Posicion\"+i);\r\n                    return i;\r\n                }\r\n                i ++;\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n\r\n            }while(nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n    mostrar = () => {\r\n        let nodo_actual = this.get_cabeza();\r\n        if (this.get_vacia() == false){\r\n\r\n            do {\r\n                console.log(nodo_actual.get_dato());\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n            } while (nodo_actual != null);\r\n        }\r\n    }\r\n    \r\n    get_vacia = () => {\r\n        if (this.get_cabeza() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }  \r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_cabeza();\r\n        var dot = [];\r\n        if (this.get_vacia() == false){\r\n            let i = 0\r\n            do {\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_cabeza();\r\n        var dot = [];\r\n        if (this.get_vacia() == false){\r\n            let i = 0;\r\n            do {\r\n                if (nodo_actual.get_siguiente() != null){\r\n\r\n                    let nodoUno = parseInt(i)\r\n                    let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                    if (i==0){\r\n                        dot.push({from:0, to:1, arrows: \"to\"});\r\n                    }\r\n                    if ( nodoUno!= false && nodoDos != false){\r\n                        dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                    }\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            } while (nodo_actual != null);\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n    generateJSON = () => {\r\n\r\n        var dic = {};\r\n\r\n        dic.categoria = \"Estructura Lineal\"\r\n        dic.nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n        var dot = []\r\n        if (this.get_vacia() == false){\r\n            let nodo_actual = this.get_cabeza();\r\n            do{\r\n                if(typeof(parseInt(nodo_actual.get_dato())) == \"number\"  && 0 <= parseInt(nodo_actual.get_dato())){\r\n                    \r\n                    dot.push(parseInt(nodo_actual.get_dato()))\r\n                     \r\n                }else if (typeof(nodo_actual.get_dato()) == \"string\" ){\r\n\r\n                    dot.push(nodo_actual.get_dato().toString())\r\n\r\n                } \r\n\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n            }while(nodo_actual != null);\r\n        }\r\n        dic.valores = dot;\r\n        console.log(dic)\r\n        var dictstring = JSON.stringify(dic);\r\n        console.log(dictstring)\r\n        // var fs = require('fs')\r\n        fs.writeFile(\"thing.json\", dictstring, function(err, result) {\r\n            if(err) console.log('error', err);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    get_cabeza = () =>{ return this.cabeza; }\r\n    set_cabeza = (cabeza) =>{ this.cabeza = cabeza; }\r\n    get_ultimo = () => { return this.ultimo; }\r\n    set_ultimo = (ultimo) => { this.ultimo = ultimo; }\r\n}\r\n\r\nexport default ListaSimple;\r\n//module.exports = ListaSimple;\r\n\r\n","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ListaSimple from './Modelo/Lineales/ListaSimple/ListaSimple'; // Importar la Estructura Lista Simple.\r\nvar listaSimple = new ListaSimple(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(listaSimple.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listaSimple.setEdgesDataSet());\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass ListaSE extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\tlistaSimple.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlistaSimple.eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlistaSimple.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddTop = () => {\r\n\t\tlistaSimple.insertar_inicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddLower = () => {\r\n\t\tlistaSimple.insertar_ultimo(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet dato = listaSimple.search(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n\t\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tconsole.log(dato)\r\n\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistaSimple.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\r\n\t\tlistaSimple.generateJSON(listaSimple)\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default ListaSE;","class Nodo{\r\n\r\n    constructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n        this.anterior = null;\r\n    }\r\n\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n    \r\n    get_anterior(){ return this.anterior; }\r\n    set_anterior(anterior){ this.anterior = anterior; }\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js')\r\nclass ListaDoble{\r\n\r\n    constructor(){\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n    insertar = (dato) => {\r\n\r\n        let nodo_nuevo = new Nodo(dato);\r\n\r\n        if (this.vacia() == true){\r\n            this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n        }else{\r\n\r\n            this.get_ultimo().set_siguiente(nodo_nuevo)\r\n            nodo_nuevo.set_anterior(this.get_ultimo())\r\n            this.set_ultimo(nodo_nuevo)\r\n\r\n        }\r\n    }\r\n\r\n    insertar_inicio = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n\r\n        nodo_nuevo.set_siguiente(this.get_primero())\r\n        this.get_primero().set_anterior(nodo_nuevo)\r\n        this.set_primero(nodo_nuevo)\r\n    }\r\n\r\n    insertar_ultimo = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n        \r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        nodo_nuevo.set_anterior(this.get_ultimo())\r\n        this.set_ultimo(nodo_nuevo)\r\n\r\n    }\r\n\r\n    eliminar = (dato) => {\r\n\r\n        if (this.vacia() == false){\r\n            \r\n\r\n            if (this.get_primero().get_dato() == dato){ //Condicion cuando hay 2 nodos -> eliminando al primero\r\n\r\n                if (this.get_primero().get_siguiente() != null){\r\n\r\n                    let temp = this.get_primero().get_siguiente()\r\n                    this.get_primero().get_siguiente().set_anterior(null)\r\n                    this.get_primero().set_siguiente(null)\r\n                    this.set_primero(temp);\r\n\r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                }\r\n\r\n            }else if (this.get_ultimo().get_dato() == dato){  //Condicion cuando hay 2 nodos -> eliminando al ultimo\r\n\r\n                if (this.get_ultimo().get_anterior() != null){\r\n\r\n                    let temp = this.get_ultimo().get_anterior()\r\n                    this.get_ultimo().get_anterior().set_siguiente(null)\r\n                    this.get_ultimo().set_anterior(null)\r\n                    this.set_ultimo(temp);\r\n\r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    \r\n                    return console.log(\"Delete!\");\r\n                }\r\n\r\n\r\n            }else{ //Condicion cuando hay mas de 3 nodos -> eliminando al de en medio\r\n                let nodo_actual = this.get_primero().get_siguiente();\r\n                let anterior = this.get_primero();\r\n                do {\r\n\r\n                    if (nodo_actual.get_dato() == dato){\r\n                        \r\n                        let siguiente = nodo_actual.get_siguiente()\r\n\r\n                        nodo_actual.set_siguiente(null)\r\n                        nodo_actual.set_anterior(null)\r\n                        anterior.set_siguiente(siguiente)\r\n                        siguiente.set_anterior(anterior)\r\n\r\n                        return console.log(\"Delete!\");\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.get_siguiente();\r\n                    anterior = anterior.get_siguiente();\r\n\r\n                } while (nodo_actual != null);\r\n            }\r\n\r\n        }else{ return console.log(\"Empty!\"); }\r\n\r\n        return console.log(\"Data not found!\");\r\n    }\r\n\r\n    update = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n\r\n        if (this.vacia() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) => {\r\n        let nodo_actual = this.get_primero()\r\n        let i = 0;\r\n        if (this.vacia() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    return i;\r\n                }\r\n                i ++;\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n            }while(nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    print = () => {\r\n        console.log(\"-> ->\")\r\n        let nodo_actual = this.get_primero();\r\n        if (this.vacia() == false){\r\n            do{\r\n                console.log(nodo_actual.get_dato())\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n\r\n            console.log(\"<- <-\")\r\n            nodo_actual = this.get_ultimo();\r\n            do{\r\n                console.log(nodo_actual.get_dato())\r\n                nodo_actual = nodo_actual.get_anterior()\r\n            }while(nodo_actual != null);\r\n        }else{\r\n            console.log(\"Empty!\"); \r\n            \r\n        }\r\n    }\r\n\r\n    vacia = () => {\r\n        if (this.get_primero() == null){ \r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0\r\n            do {\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            do {\r\n                if (nodo_actual.get_siguiente() != null){\r\n\r\n                    let nodoUno = parseInt(i)\r\n                    let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                    if (i==0){\r\n                        dot.push({from:0, to:1, arrows: \"to\"});\r\n                        dot.push({from:1, to:0, arrows: \"to\"});\r\n                    }\r\n                    if ( nodoUno!= false && nodoDos != false){\r\n                        dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                        dot.push({from:parseInt(nodoDos), to:parseInt(nodoUno), arrows: \"to\"});\r\n                    }\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n\r\n    get_primero = () => { return this.primero; }\r\n    set_primero = (primero) =>{ this.primero = primero; }\r\n    get_ultimo = () => { return this.ultimo; }\r\n    set_ultimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n\r\n\r\n}\r\n\r\nexport default ListaDoble;\r\n//module.exports = ListaDoble;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ListaDoble from './Modelo/Lineales/ListaDoble/ListaDoble'; // Importar la Estructura Lista Simple.\r\nvar listaDoble = new ListaDoble(); // Instancia de la ListaSimple.\r\n\r\nvar getNodes = new DataSet(listaDoble.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listaDoble.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t  springLength: 200,\r\n\t\t},\r\n\t},\r\n    nodes:{\r\n        borderWidth: 20,\r\n        color: {\r\n            background: '#00FE92',\r\n            border:  '#37F300',\r\n            highlight: {\r\n                border: '#2B7CE9',\r\n                background: '#0008FE'\r\n            }\r\n        }\r\n    }\r\n}\r\nclass ListaDE extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\tlistaDoble.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlistaDoble.eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlistaDoble.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddTop = () => {\r\n\t\tlistaDoble.insertar_inicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddLower = () => {\r\n\t\tlistaDoble.insertar_ultimo(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet dato = listaDoble.search(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n            getNodes = new DataSet(listaDoble.setNodesDataSet());\r\n            getEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistaDoble.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleSearch()}>Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar Dato Al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-5\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar Dato al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()} >Generar Datos del JSON</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar Datos</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default ListaDE; ","class Nodo{\r\n\r\n    constructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n    }\r\n\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js')\r\nclass ListaCircular{\r\n\r\n    constructor(){\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n        this.size = 0;\r\n    }\r\n\r\n\r\n    insertar = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato);\r\n        if (this.vacia() == true){\r\n            this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            nodo_nuevo.set_siguiente(this.get_primero());\r\n            this.set_ultimo(nodo_nuevo);\r\n\r\n        }\r\n        this.size ++;\r\n\r\n    }\r\n\r\n    insertar_inicio = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n\r\n        nodo_nuevo.set_siguiente(this.get_primero())\r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        this.set_primero(nodo_nuevo)\r\n        this.size ++;\r\n    }\r\n\r\n    insertar_ultimo = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n        \r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        nodo_nuevo.set_siguiente(this.get_primero())\r\n        this.set_ultimo(nodo_nuevo)\r\n        this.size++;\r\n    }\r\n\r\n\r\n    eliminar = (dato) => {\r\n        if(this.vacia() == false){\r\n\r\n             if (this.get_primero().get_dato() == dato){ //Condicion cuando hay 2 nodos -> eliminando al primero\r\n\r\n                if (this.get_primero().get_siguiente() != null){\r\n\r\n                    let temp = this.get_primero().get_siguiente()\r\n                    this.get_primero().set_siguiente(null)\r\n                    this.get_ultimo().set_siguiente(temp)\r\n                    this.set_primero(temp)\r\n                    this.size --;\r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero.set_siguiente(null)\r\n                    this.set_ultimo.set_siguiente(null)\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    this.size --;\r\n                    return console.log(\"Delete!\");\r\n                }\r\n\r\n            }else if (this.get_ultimo().get_dato() == dato){  //Condicion cuando hay 2 nodos -> eliminando al ultimo\r\n\r\n                if (this.get_primero().get_siguiente()!= null){\r\n                    let nodo_actual = this.get_primero().get_siguiente()\r\n                    let anterior = this.get_primero()\r\n\r\n                    let i = 0\r\n\r\n                    while (i < this.size){\r\n                        if(nodo_actual.get_dato()==dato){\r\n                            if ((i+1) == this.size){\r\n\r\n                                let temp = this.get_ultimo().get_siguiente()\r\n                                this.get_ultimo().set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }else{\r\n\r\n                                let temp = nodo_actual.get_siguiente()\r\n                                nodo_actual.set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }\r\n\r\n                        }\r\n                        nodo_actual = nodo_actual.get_siguiente()\r\n                        anterior = anterior.get_siguiente()\r\n\r\n                        i ++;\r\n                    }\r\n\r\n                    \r\n                    \r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero.set_siguiente(null)\r\n                    this.set_ultimo.set_siguiente(null)\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    this.size --;\r\n                    return console.log(\"Delete!\");\r\n                }\r\n\r\n\r\n            }else{ //Condicion cuando hay mas de 3 nodos -> eliminando al de en medio\r\n                if (this.get_primero().get_siguiente()!= null){\r\n                    let nodo_actual = this.get_primero().get_siguiente()\r\n                    let anterior = this.get_primero()\r\n\r\n                    let i = 0\r\n\r\n                    while (i < this.size){\r\n                        if(nodo_actual.get_dato()==dato){\r\n                            if ((i+1) == this.size){\r\n\r\n                                let temp = this.get_ultimo().get_siguiente()\r\n                                this.get_ultimo().set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }else{\r\n\r\n                                let temp = nodo_actual.get_siguiente()\r\n                                nodo_actual.set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }\r\n\r\n                        }\r\n                        nodo_actual = nodo_actual.get_siguiente()\r\n                        anterior = anterior.get_siguiente()\r\n\r\n                        i ++;\r\n                    }\r\n\r\n                    \r\n                    return console.log(\"Delete!\");\r\n                }\r\n            }\r\n\r\n        }else{ return console.log(\"Empty!\"); }\r\n\r\n        return console.log(\"Data not found!\");\r\n\r\n\r\n    }\r\n\r\n    \r\n    update = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n\r\n        if (this.vacia() == false){\r\n\r\n            let i = 0;\r\n            while(i<this.size){\r\n                \r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n                i++;\r\n            }\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) => {\r\n        let nodo_actual = this.get_primero()\r\n\r\n        if (this.vacia() == false){\r\n\r\n            let i = 0;\r\n            while(i<this.size){\r\n                \r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    return i\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            }\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n    print = () => {\r\n        \r\n        var i = 0;\r\n        let nodo_actual = this.get_primero();\r\n        while(i<this.size){\r\n            console.log(nodo_actual.get_dato());\r\n            nodo_actual = nodo_actual.get_siguiente();\r\n            i++;\r\n        }\r\n\r\n        console.log(\"Salio del While\");\r\n        console.log(nodo_actual.get_dato());\r\n        console.log(\"Este es el Primero ->\"+this.get_primero().get_dato())\r\n        console.log(nodo_actual.get_siguiente().get_dato());\r\n        console.log(\"ultimo\");\r\n        console.log(this.get_ultimo().get_dato());\r\n        console.log(this.get_ultimo().get_siguiente().get_dato());\r\n    }\r\n\r\n    vacia = () => {\r\n        if (this.get_primero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0\r\n            while(i<this.size){\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } \r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n            \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                if (i==0){\r\n                    dot.push({from:0, to:1, arrows: \"to\"});\r\n                }\r\n                if ( nodoUno!= false && nodoDos != false){\r\n                    dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                }\r\n                if ((i+1)==this.size){\r\n                    dot.push({from:i, to:0, arrows: \"to\"});\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n\r\n    get_primero = () => { return this.primero; }\r\n    set_primero = (primero) =>{ this.primero = primero; }\r\n    \r\n    get_ultimo = () => { return this.ultimo; }\r\n    set_ultimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n}\r\n\r\nexport default ListaCircular;\r\n//module.exports = ListaCircular;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ListaCircular from './Modelo/Lineales/ListaCircular/ListaCircular'; // Importar la Estructura Lista Simple.\r\nvar listaCircular = new ListaCircular(); // Instancia de la ListaSimple.\r\n\r\nvar getNodes = new DataSet(listaCircular.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listaCircular.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t  springLength: 200,\r\n\t\t},\r\n\t},\r\n    nodes:{\r\n        borderWidth: 20,\r\n        color: {\r\n            background: '#FFFFFF',\r\n            border:  '#1EFFB1',\r\n            highlight: {\r\n                border: '#EEFF1E',\r\n                background: '#FFFFFF'\r\n            }\r\n        }\r\n    }\r\n}\r\nclass ListaCSE extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t}\r\n\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\tlistaCircular.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlistaCircular.eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlistaCircular.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddTop = () => {\r\n\t\tlistaCircular.insertar_inicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddLower = () => {\r\n\t\tlistaCircular.insertar_ultimo(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tvar dato = listaCircular.search(this.state.text);\r\n\t\t\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n            getNodes = new DataSet(listaCircular.setNodesDataSet());\r\n            getEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistaCircular.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleSearch()}>Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar Dato Al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-5\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar Dato Al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Generar Datos del JSON</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar Datos</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\r\n\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default ListaCSE;","class Nodo{\r\n\tconstructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n        this.anterior = null;\r\n    }\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n    \r\n    get_anterior(){ return this.anterior; }\r\n    set_anterior(anterior){ this.anterior = anterior; }\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js');\r\n\r\nclass ListaCircularDE{\r\n\tprimero=null;\r\n\tultimo=null;\r\n\r\n\tconstructor(){\r\n\t\tthis.primero = null;\r\n        this.ultimo = null;\r\n        this.size = 0;\r\n\t}\r\n\r\n    set_primero=(primero)=>{this.primero=primero;}\r\n    get_primero=()=>{ return this.primero;}\r\n    set_ultimo=(ultimo)=>{this.ultimo=ultimo;}\r\n    get_ultimo=()=>{ return this.ultimo;}\r\n    vacia = () => {\r\n        if (this.get_primero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\tinsertar = (valor) =>{\r\n\t\tlet nodo_nuevo = new Nodo(valor);\r\n        if (this.vacia() == true){\r\n\t\t    this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            nodo_nuevo.set_anterior(this.get_ultimo());\r\n            nodo_nuevo.set_siguiente(this.get_primero());\r\n            this.set_ultimo(nodo_nuevo);\r\n        }\r\n        this.size ++;\r\n\t}\r\n\tinsertar_ultimo = (valor) => {\r\n\t\tlet nodo_nuevo = new Nodo(valor);\r\n        if (this.vacia() == true){\r\n\t\t    this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            nodo_nuevo.set_anterior(this.get_ultimo());\r\n            nodo_nuevo.set_siguiente(this.get_primero());\r\n            this.set_ultimo(nodo_nuevo);\r\n        }\r\n        this.size ++;\r\n\t}\r\n\tinsertar_inicio = (valor) => {\r\n\t\tlet nodo_nuevo = new Nodo(valor);\r\n        if (this.vacia() == true){\r\n\t\t    this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n        \tnodo_nuevo.set_siguiente(this.get_primero());\r\n        \tnodo_nuevo.set_anterior(this.get_ultimo());\r\n        \tthis.get_ultimo().set_siguiente(nodo_nuevo)\r\n        \tthis.get_primero().set_anterior(nodo_nuevo)\r\n        \tthis.set_primero(nodo_nuevo)\r\n        }\r\n        this.size ++;\r\n\t}\r\n\teliminar = (dato) =>{\r\n\t\tif (this.vacia() == false){\r\n            if (this.get_primero().get_dato() == dato){ //Eliminando al primero\r\n                if (this.get_primero().get_siguiente() != this.get_primero()){                   \r\n                    let aux = this.get_primero().get_siguiente()\r\n                    this.get_primero().get_siguiente().set_anterior(this.get_ultimo())\r\n                    this.get_ultimo().set_siguiente(aux)\r\n                    this.get_primero().set_siguiente(null)\r\n                    this.get_primero().set_anterior(null)\r\n                    this.set_primero(aux)\r\n                    this.size --;\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    this.size --;\r\n                }\r\n\r\n            }else if (this.get_ultimo().get_dato() == dato){  //Eliminando al ultimo\r\n\r\n                if (this.get_ultimo().get_anterior() != this.get_ultimo()){\r\n\r\n                    let aux = this.get_ultimo().get_anterior()\r\n                    this.get_ultimo().get_anterior().set_siguiente(this.get_primero())\r\n                    this.get_primero().set_anterior(aux)\r\n                    this.get_ultimo().set_anterior(null)\r\n                    this.get_ultimo().set_siguiente(null)\r\n                    this.set_ultimo(aux);\r\n                    this.size --;\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    \r\n                    this.size --;\r\n                }\r\n\r\n\r\n            }else{ //Eliminando En Medio\r\n                let nodo_actual = this.get_primero().get_siguiente();\r\n                let anterior = this.get_primero();\r\n                do {\r\n\r\n                    if (nodo_actual.get_dato() == dato){\r\n                        \r\n                        let siguiente = nodo_actual.get_siguiente()\r\n\r\n                        nodo_actual.set_siguiente(null)\r\n                        nodo_actual.set_anterior(null)\r\n                        anterior.set_siguiente(siguiente)\r\n                        siguiente.set_anterior(anterior)\r\n                        this.size --;\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.get_siguiente();\r\n                    anterior = anterior.get_siguiente();\r\n\r\n                } while (nodo_actual != null);\r\n            }\r\n\r\n        }\r\n\t}\r\n    Imprimir=()=>{\r\n        var i = 0;\r\n        let nodo_actual = this.get_primero();\r\n        while(i<this.size){\r\n            console.log(nodo_actual.get_dato());\r\n            nodo_actual = nodo_actual.get_siguiente();\r\n            i++;\r\n        }\r\n    }\r\n    update = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n    search=(dato)=>{\r\n        let nodo_actual = this.get_primero()\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    console.log(i);\r\n                    return i\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            }\r\n        }else{ \r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n    setNodesDataSet = () => {\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0\r\n            while(i<this.size){\r\n                if(i==0){\r\n                    let etiqueta=nodo_actual.get_dato()+\"\\n Inicio\"\r\n                    dot.push({id:i, label: etiqueta});\r\n                }else if(i+1==this.size){\r\n                    let etiqueta=nodo_actual.get_dato()+\"\\n Final\"\r\n                    dot.push({id:i, label: etiqueta});\r\n                }else{\r\n                    dot.push({id:i, label: nodo_actual.get_dato()});  \r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } \r\n        }\r\n        return dot;\r\n    } \r\n    setEdgesDataSet = () => {\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        let idinicio=this.size+1;\r\n        let idfinal=this.size+2;\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                if (i==0){\r\n                    dot.push({from:0, to:1, arrows: \"to\"});\r\n                    dot.push({from:1, to:0, arrows: \"to\"});\r\n                }\r\n                if ( nodoUno!= false && nodoDos != false){\r\n                    dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                    dot.push({from:parseInt(nodoDos), to:parseInt(nodoUno), arrows: \"to\"});\r\n                }\r\n                if ((i+1)==this.size){\r\n                    dot.push({from:i, to:0, arrows: \"to\"});\r\n                    dot.push({from:0, to:i, arrows: \"to\"});\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            }\r\n        }\r\n        return dot;\r\n    }\r\n}\r\n\r\nexport default ListaCircularDE;\r\n//module.exports = ListaCircularDE;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport ListaCircularDE from './Modelo/Lineales/ListaCircularDoble/ListaCDE'; // Importar la Estructura Lista Circular Doble.\r\nvar listacde = new ListaCircularDE(); // Instancia de la ListaCDE.\r\nvar getNodes = new DataSet(listacde.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listacde.setEdgesDataSet());\t// Se Crean las flechas.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#00F3B8',\r\n            border:  '#00F3B8',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#00F3B8'\r\n            }\r\n        }\r\n    }\r\n  };\r\nclass ListaCDE extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttext:'',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t}\r\n\t\tthis.network={};\r\n\t\tthis.appRef=createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n    this.network = new Network(this.appRef.current, data, options);\r\n  \t}\r\n  \thandleInputChange(e) {\r\n    \tconst {value, name} = e.target;\r\n    \tconsole.log(value, name);\r\n    \tthis.setState({\r\n    \t  [name]: value\r\n    \t});\r\n    }\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n    handleAdd = () => {\r\n    \tlistacde.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleDelete = () => {\r\n\t\tlistacde.eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleAddTop = () => {\r\n\t\tlistacde.insertar_inicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleAddLower = () => {\r\n\t\tlistacde.insertar_ultimo(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleSearch = () => {\r\n\t\tlet dato = listacde.search(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleUpdate = () => {\r\n\t\tlistacde.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistacde.insertar(dataJson.valores[i])\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listacde.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listacde.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!!\")\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n\r\n    render() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n\r\n  export default ListaCDE;","class Nodo{\r\n\r\n    constructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n    }\r\n\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js')\r\nclass Stack{\r\n\r\n    constructor(){\r\n        this.primero = null\r\n    }\r\n\r\n    insertar = (dato) =>{ //Agrega un valor al final de la lista.\r\n        let  nodo_nuevo = new Nodo(dato)\r\n        if (this.empty() == false){\r\n            nodo_nuevo.set_siguiente(this.get_primero())\r\n            this.set_primero(nodo_nuevo)\r\n        }else{\r\n            this.set_primero(nodo_nuevo)\r\n        }   \r\n\r\n    }\r\n\r\n    pop = () => { // Saca el primero de la pila.\r\n\r\n        if(this.empty() == false){\r\n\r\n            if (this.get_primero().get_siguiente() != null){\r\n                \r\n                let temp = this.get_primero().get_siguiente()\r\n                this.get_primero().set_siguiente(null)\r\n                this.set_primero(temp)\r\n                \r\n                return console.log(\"Delete!\"); \r\n            }else {\r\n                this.set_primero(null)\r\n            }\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n    \r\n    update = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n\r\n        if (this.empty() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) => {\r\n        let nodo_actual = this.get_primero()\r\n\r\n        if (this.empty() == false){\r\n            let i = 0;\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    return i;\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            }while(nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n\r\n    print = () => {\r\n\r\n        if(this.empty() == false){\r\n            let nodo_actual = this.get_primero()\r\n            do {\r\n                console.log(nodo_actual.get_dato())\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            } while (nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n    }\r\n\r\n\r\n    empty = () => {\r\n        if (this.get_primero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    \r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.empty() == false){\r\n            let i = 0\r\n            do {\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.empty() == false){\r\n            let i = 0;\r\n            do {\r\n                if (nodo_actual.get_siguiente() != null){\r\n\r\n                    let nodoUno = parseInt(i)\r\n                    let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                    if (i==0){\r\n                        dot.push({from:0, to:1, arrows: \"to\"});\r\n                    }\r\n                    if ( nodoUno!= false && nodoDos != false){\r\n                        dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                    }\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            } while (nodo_actual != null);\r\n        }\r\n\r\n        return dot;\r\n\r\n    }\r\n\r\n\r\n    get_primero = () => { return this.primero; }\r\n    set_primero = (primero) => { this.primero = primero; }\r\n\r\n}\r\n\r\nexport default Stack;\r\n//module.exports = Stack;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport Stack from './Modelo/Lineales/Pila/Stack'; // Importar la Estructura Lista Simple.\r\nvar pila = new Stack(); // Instancia de la ListaSimple.\r\n\r\nvar getNodes = new DataSet(pila.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(pila.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t  springLength: 300,\r\n\t\t},\r\n\t},\r\n    nodes:{\r\n        borderWidth: 20,\r\n        color: {\r\n            background: '#FFFFFF', \r\n            border:  '#D366FF',\r\n            highlight: { // cambia de color al qu selecciona\r\n                border: '#1EFFB1', \r\n                background: '#FFFFFF'\t\r\n            }\r\n        }\r\n    }\r\n}\r\nclass Pila extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t}\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleAdd = () => {\r\n\t\tpila.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tpila.pop();\r\n\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tpila.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet dato = pila.search(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n            getNodes = new DataSet(pila.setNodesDataSet());\r\n            getEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Pila\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tpila.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL - PIla!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\trender() {\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Update\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleSearch()}>Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 0 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer JSON</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default Pila;","class Nodo{\r\n\r\n\tconstructor(valor){\r\n\t\tthis.siguiente = null;\r\n\t\tthis.valor = valor;\r\n\t}\r\n\t\r\n\tget_siguiente(){ return this.siguiente;}\r\n\tset_siguiente(nuevonodo){ this.siguiente=nuevonodo;}\r\n\tget_valor(){ return this.valor;}\r\n\tset_valor(valor){ this.valor=valor;}\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import Nodo from './Nodo.js';\r\n\r\nclass EstructuraCola{\r\n\tprimero=null;\r\n\r\n\tConstructor(){\r\n\t\tthis.primero= null;\r\n\t\tthis.ultimo=null;\r\n\t}\r\n\tget_primero = () => {return this.primero;}\r\n\tset_primero = (primero) => {this.primero = primero;}\r\n\tget_ultimo = () => {return this.ultimo;}\r\n\tset_ultimo = (ultimo) => {this.ultimo = ultimo;}\r\n\tget_vacia = () => {\r\n\t\tif(this.get_primero()==null){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tinsertar = (valor) => {\r\n\t\tlet nodo = new Nodo(valor);\r\n\t\tif(this.get_vacia()==true){\r\n\t\t\tthis.set_primero(nodo);\r\n\t\t\tthis.set_ultimo(nodo);\r\n\t\t}else{\r\n\t\t\tthis.get_ultimo().set_siguiente(nodo);\r\n\t\t\tthis.set_ultimo(nodo);\r\n\t\t}\r\n\t}\r\n\tDesencolar = () => {\r\n\t\tlet nodo = this.primero;\r\n\t\tlet seguir = true;\r\n\t\tthis.set_primero(this.get_primero().get_siguiente());\r\n\t}\r\n\tsearch = (dato) =>{\r\n\t\tlet nodo = this.get_primero();\r\n\t\tlet i=0;\r\n\t\tif(this.get_vacia() == false){\r\n\t\t\tdo{\r\n\t\t\t\tif(nodo.get_valor() == dato){\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t}while(nodo != null);\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tupdate = (dato, cambio) =>{\r\n        let nodo_actual = this.get_primero();\r\n        if (this.get_vacia() == false){\r\n            do{\r\n                if (nodo_actual.get_valor() == dato){\r\n                    nodo_actual.set_valor(cambio);\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n\r\n    }\r\n\tImprimir = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tdo{\r\n\t\t\tconsole.log(nodo.get_valor());\r\n\t\t\tnodo=nodo.get_siguiente();\r\n\t\t}while(nodo!=null)\r\n\t}\r\n\tsetNodesDataSet = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet id = 0;\r\n\t\t\tdo{\r\n\t\t\t\tdot.push({id: id, label: nodo.get_valor()});\r\n\t\t\t\tnodo=nodo.get_siguiente();\r\n\t\t\t\tid++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n\tsetEdgesDataSet = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet i = 0;\r\n\t\t\tdo{\r\n\t\t\t\tif ( nodo.get_siguiente() != null) {\r\n\t\t\t\t\tlet nodoactual=parseInt(i)\r\n\t\t\t\t\tlet nodosiguiente = parseInt(nodoactual) + parseInt(1)\r\n\t\t\t\t\tif(i==0){\r\n\t\t\t\t\t\tdot.push({from:0, to:1, arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(nodoactual != false && nodosiguiente != false){\r\n\t\t\t\t\t\tdot.push({from:parseInt(nodoactual), to:parseInt(nodosiguiente), arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t\ti++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n}\r\n\r\nexport default EstructuraCola;\r\n//module.exports = EstructuraCola;","import { DataSet, Network } from 'vis';\r\nimport React, { Component, createRef } from \"react\";\r\nimport { render } from 'react-dom';\r\nimport EstructuraCola from './Modelo/Lineales/Cola/EstructuraCola';\r\n\r\n\r\nvar estructuracola = new EstructuraCola();\r\nvar nodos = new DataSet(estructuracola.setNodesDataSet());\r\nvar flechas = new DataSet(estructuracola.setEdgesDataSet());\r\nvar datos = {nodes:nodos, edges:flechas,};\r\nvar options = {\r\n  physics: {\r\n    stabilization: false,\r\n    barnesHut: {\r\n      springLength: 200,\r\n    },\r\n  },\r\n  nodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FF5733',\r\n            border:  '#FF5733',\r\n            highlight: {\r\n                border: '#9E3D28',\r\n                background: '#9E3D28'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Cola extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      agregar: '',\r\n      dato_actualizado: '',\r\n      valoreliminar:'',\r\n      valorbuscar: '',\r\n      rango: '1',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n    }\r\n    this.network = {};\r\n    this.appRef = createRef();\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  handleInputChange(e) {\r\n    const {value, name} = e.target;\r\n    console.log(value, name);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    }\r\n  \r\n  handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      this.setState({fileName: file.name, fileContent: reader.result})\r\n    }\r\n  }\r\n\r\n\r\n  AgregarDato = () => { \r\n    estructuracola.insertar(this.state.agregar);\r\n    nodos = new DataSet(estructuracola.setNodesDataSet());\r\n    flechas = new DataSet(estructuracola.setEdgesDataSet());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  EliminarDato = () =>{\r\n    estructuracola.Desencolar();\r\n    nodos = new DataSet(estructuracola.setNodesDataSet());\r\n    flechas = new DataSet(estructuracola.setEdgesDataSet());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  ActualizarDato = () => {\r\n    estructuracola.update(this.state.agregar, this.state.dato_actualizado);\r\n    nodos = new DataSet(estructuracola.setNodesDataSet());\r\n    flechas = new DataSet(estructuracola.setEdgesDataSet());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  BuscarDato = () => {\r\n    let dato = estructuracola.search(this.state.agregar);\r\n    if (0 <= dato){\r\n      nodos = new DataSet(estructuracola.setNodesDataSet());\r\n      flechas = new DataSet(estructuracola.setEdgesDataSet());\r\n      datos = {\r\n        nodes: nodos,\r\n        edges: flechas,\r\n      }\r\n      flechas.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n    }\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n\r\n  handleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Cola\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\testructuracola.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tnodos = new DataSet(estructuracola.setNodesDataSet());\r\n      flechas = new DataSet(estructuracola.setEdgesDataSet());\r\n      datos = {\r\n        nodes: nodos,\r\n        edges: flechas,\r\n      }\r\n\t\t\t\r\n      this.network = new Network(this.appRef.current, datos, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL - Cola!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n          <input type=\"text\" name=\"agregar\" className=\"form-control\" placeholder=\"Dato\" id=\"InputCola\" value={this.state.agregar} onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.AgregarDato()}>Agregar</button>\r\n        </div>\r\n        <div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n          <input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Update\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-warning\" onClick={() => this.ActualizarDato()}>Actualizar Dato</button>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.EliminarDato()}>Eliminar</button>\r\n        </div>\r\n        <div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => this.BuscarDato()}>Buscar</button>\r\n        </div>\r\n        <div className=\"col-md-2\" style={{marginLeft: 0 + 'em'}}>\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\"  style={{marginLeft: 3 + 'em'}}>\r\n          <fieldset class=\"form-group\">\r\n            <legend>Repetidos</legend>\r\n            <div class=\"form-check\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"radio\" class=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios1\" value=\"option1\" ></input>\r\n                Si\r\n              </label>\r\n            </div>\r\n            <div class=\"form-check\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"radio\" class=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios2\" value=\"option2\"></input>\r\n                No\r\n              </label>\r\n            </div>\r\n          </fieldset>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n          <h5>Rango de Animacion</h5>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"rango\" onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n          <h5>Velocidad: x{this.state.rango}</h5>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"row\">\r\n\r\n      </div>\r\n      <div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cola;","class Nodo{\r\n\r\n\tconstructor(valor){\r\n\t\tthis.siguiente = null;\r\n\t\tthis.valor = valor;\r\n\t\tthis.prioridad = 0;\r\n\t}\r\n\t\r\n\tget_siguiente(){ return this.siguiente;}\r\n\tset_siguiente(nuevonodo){ this.siguiente=nuevonodo;}\r\n\tget_valor(){ return this.valor;}\r\n\tset_valor(valor){ this.valor=valor;}\r\n\tget_prioridad(){return this.prioridad;}\r\n\tset_prioridad(valor){this.prioridad=valor;}\r\n}\r\n\r\nexport default Nodo;\r\n// module.exports = Nodo;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport Colaprioridad from './Modelo/Lineales/ColaPrioridad/ColaPrioridad'; // Importar la Estructura Lista Circular Doble.\r\nvar colaprioridad = new Colaprioridad(); // Instancia de la ListaCDE.\r\nvar nodos = new DataSet(colaprioridad.GenerarNodosDOT());  // Se Crean los Nodos.\r\nvar flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\t// Se Crean las flechas.\r\nvar filePath;\r\n\r\nvar datos = {\r\n\tnodes: nodos,\r\n\tedge: flechas,\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#00F3B8',\r\n            border:  '#00F3B8',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#00F3B8'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\nclass ColaPrioridad extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      agregar: '',\r\n      prioridad:'',\r\n      valorbuscar: '',\r\n      rango: '1',\r\n    }\r\n    this.network = {};\r\n    this.appRef = createRef();\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  handleInputChange(e) {\r\n    const {value, name} = e.target;\r\n    console.log(value, name);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    }\r\n  AgregarDato = () => { \r\n    colaprioridad.Encolar(this.state.agregar, this.state.prioridad);\r\n    nodos = new DataSet(colaprioridad.GenerarNodosDOT());\r\n    flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  EliminarDato = () =>{\r\n    colaprioridad.Desencolar();\r\n    nodos = new DataSet(colaprioridad.GenerarNodosDOT());\r\n    flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  BuscarDato = () => {\r\n    let dato = colaprioridad.Buscar(this.state.agregar);\r\n    if (0 <= dato){\r\n      nodos = new DataSet(colaprioridad.GenerarNodosDOT());\r\n      flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\r\n      datos = {\r\n        nodes: nodos,\r\n        edges: flechas,\r\n      }\r\n      flechas.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n    }\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n          <input type=\"text\" name=\"agregar\" className=\"form-control\" placeholder=\"Dato\" id=\"InputCola\" value={this.state.agregar} onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n          <input type=\"text\" name=\"prioridad\" className=\"form-control\" placeholder=\"Prioridad\" id=\"InputPrioridad\" value={this.state.prioridad} onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.AgregarDato()}>Agregar</button>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.EliminarDato()}>Eliminar</button>\r\n        </div>\r\n        <div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => this.BuscarDato()}>Buscar</button>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n          <h5>Rango de Animacion</h5>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"rango\" onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n          <h5>Velocidad: x{this.state.rango}</h5>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"row\">\r\n\r\n      </div>\r\n      <div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColaPrioridad;","import Nodo from './Nodo.js'\r\n// const Nodo = require('./Nodo.js');\r\n\r\nclass ColaPrioridad{\r\n\tprimero=null;\r\n\r\n\tConstructor(){\r\n\t\tthis.primero= null;\r\n\t\tthis.ultimo=null;\r\n\t}\r\n\tget_primero = () => {return this.primero;}\r\n\tset_primero = (primero) => {this.primero = primero;}\r\n\tget_ultimo = () => {return this.ultimo;}\r\n\tset_ultimo = (ultimo) => {this.ultimo = ultimo;}\r\n\tget_vacia = () => {\r\n\t\tif(this.get_primero()==null){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tEncolar = (valor, prioridad) => {\r\n\t\tlet nuevonodo = new Nodo(valor);\r\n\t\tif(prioridad!=null && prioridad!=\"\"){\r\n\t\t\tconsole.log(\"Enrtp\");\r\n\t\t\tnuevonodo.set_prioridad(prioridad);\r\n\t\t}\r\n\t\tlet nodo = this.get_primero();\r\n\t\tlet salir= false;\r\n\t\tif(this.get_vacia()==true){\r\n\t\t\tthis.set_primero(nuevonodo);\r\n\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t}else{\r\n\t\t\tconsole.log(nodo.get_prioridad());\r\n\t\t\tconsole.log(prioridad);\r\n\t\t\tif(prioridad!=null && prioridad!=\"\"){\r\n\t\t\t\tdo{\r\n\t\t\t\t\tconsole.log(\"Entro al while\");\r\n\t\t\t\t\tif(nodo.get_siguiente()==null){\r\n\t\t\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.log(nodo.get_prioridad());\r\n\t\t\t\t\t\tconsole.log(prioridad);\r\n\t\t\t\t\t\tif( prioridad <= nodo.get_prioridad()){\r\n\t\t\t\t\t\t\tconsole.log(\"Entro al if\");\r\n\t\t\t\t\t\t\tnuevonodo.set_siguiente(nodo.get_siguiente());\r\n\t\t\t\t\t\t\tnodo.set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t\t}else if(prioridad>nodo.get_prioridad()){\r\n\t\t\t\t\t\t\tconsole.log(\"Entro al segundo\")\r\n\t\t\t\t\t\t\tif(nodo.get_siguiente().get_prioridad()==0){\r\n\t\t\t\t\t\t\t\tnuevonodo.set_siguiente(nodo.get_siguiente());\r\n\t\t\t\t\t\t\t\tnodo.set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t\t\t}else if(prioridad<=nodo.get_siguiente().get_prioridad()){\r\n\t\t\t\t\t\t\t\tnuevonodo.set_siguiente(nodo.get_siguiente());\r\n\t\t\t\t\t\t\t\tnodo.set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t\t}while(nodo != null || salir==true);\r\n\t\t\t}else{\r\n\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tDesencolar = () => {\r\n\t\tlet nodo = this.primero;\r\n\t\tlet seguir = true;\r\n\t\tthis.set_primero(this.get_primero().get_siguiente());\r\n\t}\r\n\tBuscar = (dato) =>{\r\n\t\tlet nodo = this.get_primero();\r\n\t\tlet i=0;\r\n\t\tif(this.get_vacia() == false){\r\n\t\t\tdo{\r\n\t\t\t\tif(nodo.get_valor() == dato){\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t}while(nodo != null);\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tImprimir = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tdo{\r\n\t\t\tconsole.log(nodo.get_valor());\r\n\t\t\tnodo=nodo.get_siguiente();\r\n\t\t}while(nodo!=null)\r\n\t}\r\n\tGenerarNodosDOT = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet id = 0;\r\n\t\t\tdo{\r\n\t\t\t\tdot.push({id: id, label: nodo.get_valor()});\r\n\t\t\t\tnodo=nodo.get_siguiente();\r\n\t\t\t\tid++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n\tGenerarEdgesDOT = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet i = 0;\r\n\t\t\tdo{\r\n\t\t\t\tif ( nodo.get_siguiente() != null) {\r\n\t\t\t\t\tlet nodoactual=parseInt(i)\r\n\t\t\t\t\tlet nodosiguiente = parseInt(nodoactual) + parseInt(1)\r\n\t\t\t\t\tif(i==0){\r\n\t\t\t\t\t\tdot.push({from:0, to:1, arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(nodoactual != false && nodosiguiente != false){\r\n\t\t\t\t\t\tdot.push({from:parseInt(nodoactual), to:parseInt(nodosiguiente), arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t\ti++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n}\r\n\r\nexport default ColaPrioridad;\r\n//module.exports = ColaPrioridad;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ordenamientoBurbuja from './Modelo/Ordenamientos/OrBurbuja'; // Importar la Estructura Lista Simple.\r\nvar burbuja = new ordenamientoBurbuja(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(burbuja.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(burbuja.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Burbuja extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Ordenamiento\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\t// console.log(dataJson.valores[i]);\r\n\t\t\t\tburbuja.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(burbuja.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(burbuja.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! -> Ordenamiento \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleOrdenamiento = () => {\r\n\r\n\t\tburbuja.ordenamiento_burbuja()\r\n\t\tgetNodes = new DataSet(burbuja.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(burbuja.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleOrdenamiento()}>Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default Burbuja;","class OrBurbuja{\r\n\r\n    constructor(){\r\n        this.array = [];\r\n    }\r\n\r\n    insertar = (dato) =>{\r\n        this.array.push(dato)\r\n        // console.log(this.array)\r\n    }\r\n    ordenamiento_burbuja = () => {\r\n\r\n        for (var i = (this.array.length - 1); i >= 0; i--) {\r\n            for (var j = 0; j < i; j++) {\r\n                if(this.array[j]> this.array[j+1]){\r\n                    var temp = this.array[j];\r\n                    this.array[j] = this.array[j+1]\r\n                    this.array[j+1] = temp;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n            console.log(this.array[i])\r\n            dot.push({id:i, label: this.array[i]});\r\n        }\r\n       \r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n\r\n            if (this.array[i+1] != null){\r\n                \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                dot.push({from:nodoUno, to:nodoDos, arrows: \"to\"});\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n}   \r\n\r\nexport default OrBurbuja;\r\n//module.exports = OrBurbuja;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport OrdenamientoSeleccion from './Modelo/Ordenamientos/OrSeleccion'; // Importar la Estructura Lista Simple.\r\nvar seleccion = new OrdenamientoSeleccion(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(seleccion.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(seleccion.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Seleccion extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Ordenamiento\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\t// console.log(dataJson.valores[i]);\r\n\t\t\t\tseleccion.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(seleccion.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(seleccion.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! -> Ordenamiento \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleOrdenamiento = () => {\r\n\r\n\t\tseleccion.ordenamiento_seleccion()\r\n\t\tgetNodes = new DataSet(seleccion.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(seleccion.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleOrdenamiento()}>Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\nexport default Seleccion;\r\n","class OrSeleccion{\r\n\r\n\tconstructor(){\r\n\t\tthis.array = []\r\n\t}\r\n\r\n\tinsertar = (dato) => {\r\n\t\tthis.array.push(dato)\r\n\t}\r\n\r\n\r\n    ordenamiento_seleccion = () =>{\r\n\r\n\t\tfor(var i = 1; i < this.array.length; i++){\r\n\t\t\tvar aux = this.array[i];\r\n\t\t\tvar temp = i - 1  ;\r\n\t\t\twhile(aux < this.array[temp] && temp >= 1){\r\n\t\t\t\tthis.array[temp+1] = this.array[temp];\r\n\t\t\t\ttemp = temp - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (this.array[temp] <= aux){\r\n\t\t\t\t\tthis.array[temp+1] = aux;\r\n\t\t\t}else{\r\n\t\t\t\tthis.array[temp+1] = this.array[temp]\r\n\t\t\t\tthis.array[temp] = aux\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n            console.log(this.array[i])\r\n            dot.push({id:i, label: this.array[i]});\r\n        }\r\n       \r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n\r\n            if (this.array[i+1] != null){\r\n                \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                dot.push({from:nodoUno, to:nodoDos, arrows: \"to\"});\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default OrSeleccion;\r\n//module.exports = OrSeleccion;\r\n\r\n\r\n\r\n","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport OrdenamientoInsercion from './Modelo/Ordenamientos/OrInsercion'; // Importar la Estructura Lista Simple.\r\nvar insercion = new OrdenamientoInsercion(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(insercion.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(insercion.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Insercion extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Ordenamiento\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\t// console.log(dataJson.valores[i]);\r\n\t\t\t\tinsercion.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(insercion.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(insercion.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! -> Ordenamiento \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleOrdenamiento = () => {\r\n\r\n\t\tinsercion.ordenamiento_insercion()\r\n\t\tgetNodes = new DataSet(insercion.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(insercion.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleOrdenamiento()}>Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\nexport default Insercion;\r\n","class OrInsercion{\r\n\r\n\tconstructor(){\r\n\t\tthis.array = []\r\n\t}\r\n\r\n\tinsertar = (dato) => {\r\n\t\tthis.array.push(dato)\r\n\t}\r\n\r\n\r\n\tordenamiento_insercion = () =>{\r\n\r\n\t\tvar size = this.array.length, temp, aux;\r\n   \r\n\t\tfor ( var i = 0; i < this.array.length; i++ ) { // outer loop     \r\n\t\taux = this.array[i];\r\n\t\t\tfor ( temp = i - 1; temp >= 0 && this.array[temp] > aux; temp-- ){ // inner loop\r\n\t\t\t\tthis.array[ temp + 1 ] = this.array[temp];\r\n\t\t\t}\r\n\t\tthis.array[ temp + 1 ] = aux;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n            console.log(this.array[i])\r\n            dot.push({id:i, label: this.array[i]});\r\n        }\r\n       \r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n\r\n            if (this.array[i+1] != null){\r\n                \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                dot.push({from:nodoUno, to:nodoDos, arrows: \"to\"});\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default OrInsercion;\r\n//module.exports = OrInsercion;","import React, {useState} from 'react';\r\n\r\nexport default function Rapido(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-6\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function AVL(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function ArbolB(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function ArbolBPlus(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function ArbolMerkle(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","class ListaCabeceraFilas {\r\n    \r\n    constructor() {\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n    insertar = (nodoNuevo) => {\r\n        if(this.vacia()==true){\r\n            this.setPrimero(nodoNuevo);\r\n            this.setUltimo(nodoNuevo);\r\n        }else{\r\n            if(nodoNuevo.getY() < this.getPrimero().getY()){ // Agregar Incicio\r\n                this.insertarInicio(nodoNuevo);\r\n            }else if (nodoNuevo.getY() > this.getUltimo().getY()){ //Agregar al final\r\n                this.insertarFinal(nodoNuevo);\r\n            }else{ // Agregar en medio\r\n                this.insertarMedio(nodoNuevo);\r\n            }\r\n        }\r\n    }\r\n\r\n    insertarInicio = (nodoNuevo) => {\r\n        this.getPrimero().setAnterior(nodoNuevo);\r\n        nodoNuevo.setSiguiente(this.getPrimero());\r\n        this.setPrimero(nodoNuevo);\r\n    }\r\n\r\n    insertarMedio = (nodoNuevo) => {\r\n        let tmp1 = null;\r\n        let tmp2 = null;\r\n        tmp1 = this.getPrimero();\r\n        while(tmp1.getY() < nodoNuevo.getY()){\r\n            tmp1 = tmp1.getSiguiente();\r\n        }\r\n\r\n        tmp2 = tmp1.getAnterior();\r\n        tmp2.setSiguiente(nodoNuevo);\r\n        nodoNuevo.setSiguiente(tmp1);\r\n        nodoNuevo.setAnterior(tmp2);\r\n        tmp1.setAnterior(nodoNuevo);\r\n    }\r\n\r\n    insertarFinal = (nodoNuevo) => {\r\n        this.getUltimo().setSiguiente(nodoNuevo);\r\n        nodoNuevo.setAnterior(this.getUltimo());\r\n        this.setUltimo(nodoNuevo);\r\n    }\r\n\r\n\r\n\r\n    delete = (y) => {\r\n\r\n        if(this.vacia()==true){\r\n            console.log(\"Empty!\")\r\n\r\n        }else{\r\n\r\n            if(this.getPrimero().getY() == y){ // Eliminar al Inicio\r\n                if(this.getPrimero().getSiguiente() != null){\r\n\r\n                    let temp = this.getPrimero().getSiguiente();\r\n                    this.getPrimero().setSiguiente(null);\r\n                    temp.setAnterior(null);\r\n                    this.setPrimero(temp);\r\n\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                }\r\n            }else if (this.getUltimo().getY() == y){ // Eliminar en Final\r\n\r\n                if(this.getUltimo().getAnterior() != null){\r\n\r\n                    let temp = this.getUltimo().getAnterior();\r\n                    this.getUltimo().setAnterior(null);\r\n                    temp.setSiguiente(null);\r\n                    this.setUltimo(temp);\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                }\r\n                \r\n            }else{  // Eliminar en Medio\r\n                \r\n                let nodo_actual = this.getPrimero()\r\n                do {\r\n                    console.log(this.getPrimero().getY())\r\n                    if (nodo_actual.getY() == y){\r\n                        \r\n                        let anterior = nodo_actual.getAnterior()\r\n                        let siguiente = nodo_actual.getSiguiente()\r\n                        \r\n                        nodo_actual.setSiguiente(null)\r\n                        nodo_actual.setAnterior(null)\r\n                        anterior.setSiguiente(siguiente)\r\n                        siguiente.setAnterior(anterior)\r\n\r\n                        return console.log(\"Delete!\");\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.getSiguiente();\r\n\r\n                } while (nodo_actual != null);\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    print = () => {\r\n        if(this.vacia() == false) {\r\n            let tmp = this.getPrimero();\r\n            while (tmp != null) {\r\n                console.log(\" Cabecera Y: \" + tmp.getY());\r\n                tmp = tmp.getSiguiente();\r\n            }\r\n        }else{\r\n            console.log(\"Empty\");\r\n        }\r\n    }\r\n\r\n    busqueda = (y) => {\r\n        if(this.vacia() == false){\r\n            let tmp = this.getPrimero();\r\n            while(tmp != null){\r\n                if(tmp.getY() == y){\r\n                    return tmp;\r\n                }\r\n                tmp = tmp.getSiguiente();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    vacia = () => {\r\n        if (this.getPrimero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    getPrimero = () => { return this.primero; }\r\n    setPrimero = (primero) => { this.primero = primero; }\r\n    getUltimo = () => { return this.ultimo; }\r\n    setUltimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n}\r\n\r\n\r\nexport default ListaCabeceraFilas;\r\n// module.exports = ListaCabeceraFilas;\r\n","class ListaCabeceraColumnas{\r\n\r\n    constructor() {\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n    insertar = (nodoNuevo) => {\r\n        if(this.vacia() == true){\r\n            this.setPrimero(nodoNuevo);\r\n            this.setUltimo(nodoNuevo);\r\n        }else{\r\n            if(nodoNuevo.getX() < this.getPrimero().getX()){ // Agregar al inicio\r\n                this.insertarInicio(nodoNuevo);\r\n            }else if (nodoNuevo.getX() > this.getUltimo().getX()){ // Agregar al final\r\n                this.insertarFinal(nodoNuevo);\r\n            }else{ // agregar medio\r\n                this.insertarMedio(nodoNuevo);\r\n            }\r\n        }\r\n    }\r\n\r\n    insertarInicio = (nodoNuevo) => {\r\n        this.getPrimero().setAnterior(nodoNuevo);\r\n        nodoNuevo.setSiguiente(this.getPrimero());\r\n        this.setPrimero(nodoNuevo);\r\n    }\r\n\r\n    insertarMedio = (nodoNuevo) => {\r\n        let tmp1 = null;\r\n        let tmp2 = null;\r\n        tmp1 = this.getPrimero();\r\n        while(tmp1.getX() < nodoNuevo.getX()){\r\n            tmp1 = tmp1.getSiguiente();\r\n        }\r\n\r\n        tmp2 = tmp1.getAnterior();\r\n        tmp2.setSiguiente(nodoNuevo);\r\n        nodoNuevo.setSiguiente(tmp1);\r\n        nodoNuevo.setAnterior(tmp2);\r\n        tmp1.setAnterior(nodoNuevo);\r\n    }\r\n\r\n    insertarFinal = (nodoNuevo) => {\r\n\r\n        this.getUltimo().setSiguiente(nodoNuevo);\r\n        nodoNuevo.setAnterior(this.getUltimo());\r\n        this.setUltimo(nodoNuevo);\r\n    }\r\n\r\n\r\n    delete = (x) => {\r\n\r\n        if(this.vacia()==true){\r\n            console.log(\"Empty!\")\r\n\r\n        }else{\r\n\r\n            if(this.getPrimero().getX() == x){ // Eliminar al Inicio\r\n                if(this.getPrimero().getSiguiente() != null){\r\n\r\n                    let temp = this.getPrimero().getSiguiente();\r\n                    this.getPrimero().setSiguiente(null);\r\n                    temp.setAnterior(null);\r\n                    this.setPrimero(temp);\r\n\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                }\r\n            }else if (this.getUltimo().getX() == x){ // Eliminar en Final\r\n\r\n                if(this.getUltimo().getAnterior() != null){\r\n\r\n                    let temp = this.getUltimo().getAnterior();\r\n                    this.getUltimo().setAnterior(null);\r\n                    temp.setSiguiente(null);\r\n                    this.setUltimo(temp);\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                }\r\n                \r\n            }else{  // Eliminar en Medio\r\n                \r\n                let nodo_actual = this.getPrimero()\r\n                do {\r\n                    console.log(this.getPrimero().getX())\r\n                    if (nodo_actual.getX() == x){\r\n                        \r\n                        let anterior = nodo_actual.getAnterior()\r\n                        let siguiente = nodo_actual.getSiguiente()\r\n                        \r\n                        nodo_actual.setSiguiente(null)\r\n                        nodo_actual.setAnterior(null)\r\n                        anterior.setSiguiente(siguiente)\r\n                        siguiente.setAnterior(anterior)\r\n\r\n                        return console.log(\"Delete!\");\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.getSiguiente();\r\n\r\n                } while (nodo_actual != null);\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    print = () => {\r\n        if(this.vacia()==false) {\r\n            let tmp = this.getPrimero();\r\n            while (tmp != null) {\r\n                console.log(\" Cabecera x: \" + tmp.getX());\r\n                tmp = tmp.getSiguiente();\r\n            }\r\n        }else{\r\n            console.log(\"Empty\");\r\n        }\r\n    }\r\n\r\n    busqueda = (x) => {\r\n        if(this.vacia()==false){\r\n            let tmp = this.getPrimero();\r\n            while(tmp != null){\r\n                if(tmp.getX() == x){\r\n                    return tmp;\r\n                }\r\n                tmp = tmp.getSiguiente();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    vacia = () => {\r\n        if (this.getPrimero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    getPrimero = () => { return this.primero; }\r\n    setPrimero = (primero) => { this.primero = primero; }\r\n    getUltimo = () => { return this.ultimo; }\r\n    setUltimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n}\r\n\r\n\r\nexport default ListaCabeceraColumnas;\r\n// module.exports = ListaCabeceraColumnas;\r\n","class ListaHorizontal {\r\n    constructor() {\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n    insertar = (nodoNuevo) => {\r\n        if(this.vacia()==true){\r\n            this.setPrimero(nodoNuevo);\r\n            this.setUltimo(nodoNuevo);\r\n        }else{\r\n            if(nodoNuevo.getX() < this.getPrimero().getX()){ // Agregar inicio\r\n                this.insertarInicio(nodoNuevo);\r\n            }else if (nodoNuevo.getX() > this.getUltimo().getX()){ // Agregar final\r\n                this.insertarFinal(nodoNuevo);\r\n            }else{  // Agregar medio\r\n                this.insertarMedio(nodoNuevo);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    insertarInicio = (nodoNuevo) => {\r\n        this.getPrimero().setIzquierda(nodoNuevo);\r\n        nodoNuevo.setDerecha(this.getPrimero());\r\n        this.setPrimero(nodoNuevo);\r\n    }\r\n\r\n    insertarMedio = (nodoNuevo) => {\r\n        let tmp1 = null;\r\n        let tmp2 = null;\r\n        tmp1 = this.getPrimero();\r\n        while(tmp1.getX() < nodoNuevo.getX()){\r\n            tmp1 = tmp1.getDerecha();\r\n        }\r\n\r\n        tmp2 = tmp1.getIzquierda();\r\n        tmp2.setDerecha(nodoNuevo);\r\n        nodoNuevo.setDerecha(tmp1);\r\n        nodoNuevo.setIzquierda(tmp2);\r\n        tmp1.setIzquierda(nodoNuevo);\r\n    }\r\n\r\n    insertarFinal = (nodoNuevo) => {\r\n        this.getUltimo().setDerecha(nodoNuevo);\r\n        nodoNuevo.setIzquierda(this.getUltimo());\r\n        this.setUltimo(nodoNuevo);\r\n    }\r\n\r\n    print = () => {         \r\n        if(this.vacia()==false) {\r\n            let tmp = this.getPrimero();\r\n            while (tmp != null) {\r\n                console.log(\"dato: \" + tmp.getDato() + \" posicion (x,y): \" + tmp.getX()  +  \",\" + tmp.getY());\r\n                tmp = tmp.getDerecha();\r\n            }\r\n        }else{\r\n            console.log(\"Empty\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    delete = (x) => {\r\n\r\n        if(this.vacia()==true){\r\n            console.log(\"Empty!\")\r\n\r\n        }else{\r\n\r\n            if(this.getPrimero().getX() == x){ // Eliminar al Inicio\r\n                if(this.getPrimero().getDerecha() != null){\r\n\r\n                    let temp = this.getPrimero().getDerecha();\r\n                    this.getPrimero().setDerecha(null);\r\n                    temp.setIzquierda(null);\r\n                    this.setPrimero(temp);\r\n\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                }\r\n            }else if (this.getUltimo().getX() == x){ // Eliminar en Final\r\n\r\n                if(this.getUltimo().getIzquierda() != null){\r\n\r\n                    let temp = this.getUltimo().getIzquierda();\r\n                    this.getUltimo().setIzquierda(null);\r\n                    temp.setDerecha(null);\r\n                    this.setUltimo(temp);\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                }\r\n                \r\n            }else{  // Eliminar en Medio\r\n                \r\n                let nodo_actual = this.getPrimero().getDerecha();\r\n                let anterior = this.getPrimero();\r\n                do {\r\n\r\n                    if (nodo_actual.getX() == x){\r\n                        \r\n                        let siguiente = nodo_actual.getDerecha();\r\n\r\n                        nodo_actual.setDerecha(null)\r\n                        nodo_actual.setIzquierda(null)\r\n                        anterior.setDerecha(siguiente)\r\n                        siguiente.setIzquierda(anterior)\r\n\r\n                        return console.log(\"Delete!\");\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.getDerecha();\r\n                    anterior = anterior.getDerecha();\r\n\r\n                } while (nodo_actual != null);\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    vacia = () => {\r\n        if (this.getPrimero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    getPrimero = () => { return this.primero; }\r\n    setPrimero = (primero) => { this.primero = primero; }\r\n    getUltimo = () => { return this.ultimo; }\r\n    setUltimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n}\r\n\r\nexport default ListaHorizontal;\r\n// module.exports = ListaHorizontal;\r\n","import ListaHorizontal from './ListaHorizontal.js';\r\n// const ListaHorizontal = require('./ListaHorizontal.js')\r\nclass NodoCabeceraFila {\r\n    \r\n    constructor(y) {\r\n        this.y = y;\r\n        this.siguiente = null;\r\n        this.anterior = null;\r\n        this.fila = new ListaHorizontal();\r\n    }\r\n\r\n    getSiguiente() { return this.siguiente; }\r\n\r\n    setSiguiente(siguiente) { this.siguiente = siguiente; }\r\n\r\n    getAnterior() { return this.anterior; }\r\n\r\n    setAnterior(antertior) { this.anterior = antertior; }\r\n\r\n    getFila() { return this.fila; }\r\n\r\n    setFila(fila) { this.fila = fila; }\r\n\r\n    getY() { return this.y; }\r\n\r\n    setY(y) { this.y = y; }\r\n}\r\n\r\n\r\nexport default NodoCabeceraFila;\r\n// module.exports = NodoCabeceraFila;\r\n","class ListaVertical {\r\n    \r\n    constructor() {\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n    insertar = (nodoNuevo) => {\r\n        if(this.vacia()==true){\r\n            this.setPrimero(nodoNuevo);\r\n            this.setUltimo(nodoNuevo);\r\n\r\n        }else{\r\n\r\n            if(nodoNuevo.getY() < this.getPrimero().getY()){ // Agrega al Inicio\r\n                this.insertarInicio(nodoNuevo);\r\n            }else if (nodoNuevo.getY() > this.getUltimo().getY()){ // Agrega en Final\r\n                this.insertarFinal(nodoNuevo);\r\n            }else{  // Agrega en Medio\r\n                this.insertarMedio(nodoNuevo);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    insertarInicio = (nodoNuevo) => {\r\n        this.getPrimero().setArriba(nodoNuevo)\r\n        nodoNuevo.setAbajo(this.getPrimero());\r\n        this.setPrimero(nodoNuevo)\r\n    }\r\n\r\n    insertarMedio = (nodoNuevo) => {\r\n\r\n        let tmp1 = null;\r\n        let tmp2 = null;\r\n        tmp1 = this.getPrimero();\r\n        while(tmp1.getY() < nodoNuevo.getY()){\r\n            tmp1 = tmp1.getAbajo();\r\n        }\r\n\r\n        tmp2 = tmp1.getArriba();\r\n        tmp2.setAbajo(nodoNuevo);\r\n        nodoNuevo.setAbajo(tmp1);\r\n        nodoNuevo.setArriba(tmp2);\r\n        tmp1.setArriba(nodoNuevo);\r\n    }\r\n\r\n    insertarFinal = (nodoNuevo) => {\r\n\r\n        this.getUltimo().setAbajo(nodoNuevo);\r\n        nodoNuevo.setArriba(this.getUltimo());\r\n        this.setUltimo(nodoNuevo);\r\n    }\r\n\r\n\r\n\r\n    delete = (y) => {\r\n\r\n        if(this.vacia()==true){\r\n            console.log(\"Empty!\")\r\n        }else{\r\n\r\n            if(this.getPrimero().getY() == y){ // Eliminar al Inicio\r\n                if(this.getPrimero().getAbajo() != null){\r\n\r\n                    let temp = this.getPrimero().getAbajo();\r\n                    this.getPrimero().setAbajo(null);\r\n                    temp.setArriba(null);\r\n                    this.setPrimero(temp);\r\n                    return true;\r\n\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                    return true;\r\n                }\r\n            }else if (this.getUltimo().getY() == y){ // Eliminar en Final\r\n\r\n                if(this.getUltimo().getArriba() != null){\r\n\r\n                    let temp = this.getUltimo().getArriba();\r\n                    this.getUltimo().setArriba(null);\r\n                    temp.setAbajo(null);\r\n                    this.setUltimo(temp);\r\n                    return true;\r\n                }else{\r\n\r\n                    this.setPrimero(null);\r\n                    this.setUltimo(null);\r\n                    return true;\r\n                }\r\n                \r\n            }else{  // Eliminar en Medio\r\n                \r\n                let nodo_actual = this.getPrimero().getAbajo();\r\n                let anterior = this.getPrimero();\r\n                do {\r\n                    console.log(nodo_actual)\r\n                    if (nodo_actual.getY() == y){\r\n                        \r\n                        let siguiente = nodo_actual.getAbajo();\r\n\r\n                        nodo_actual.setAbajo(null)\r\n                        nodo_actual.setArriba(null)\r\n                        anterior.setAbajo(siguiente)\r\n                        siguiente.setArriba(anterior)\r\n\r\n                        console.log(\"Delete!\");\r\n                        return true;\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.getAbajo();\r\n                    anterior = anterior.getAbajo();\r\n\r\n                } while (nodo_actual != null);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return null\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    print = () => {\r\n        if(this.vacia()==false) {\r\n            let tmp = this.getPrimero();\r\n            while (tmp != null) {\r\n                console.log(\"dato: \" + tmp.getDato() + \" posicion (x,y): \" + tmp.getX()  +  \",\" + tmp.getY());\r\n                tmp = tmp.getAbajo();\r\n            }\r\n        }else{\r\n            console.log(\"Empty\");\r\n        }\r\n    }\r\n\r\n    vacia = () => {\r\n            if (this.getPrimero() == null){\r\n                return true;\r\n            }else{\r\n                return false;\r\n            }\r\n    }\r\n\r\n\r\n    getPrimero = () => { return this.primero; }\r\n    setPrimero = (primero) => { this.primero = primero; }\r\n    getUltimo = () => { return this.ultimo; }\r\n    setUltimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n}\r\n\r\n\r\nexport default ListaVertical;\r\n// module.exports = ListaVertical;","import ListaVertical from './ListaVertical.js';\r\n// const ListaVertical = require('./ListaVertical.js')\r\nclass NodoCabeceraColumna {\r\n   \r\n    constructor(x) {\r\n        this.x = x;\r\n        this.siguiente = null;\r\n        this.anterior = null;\r\n        this.columna = new ListaVertical();\r\n    }\r\n\r\n    getSiguiente() { return this.siguiente; }\r\n\r\n    setSiguiente(siguiente) { this.siguiente = siguiente; }\r\n\r\n    getAnterior() { return this.anterior; }\r\n\r\n    setAnterior(anterior) { this.anterior = anterior; }\r\n\r\n    getColumna() { return this.columna; }\r\n\r\n    setColumna(columna) { this.columna = columna; }\r\n\r\n    getX() { return this.x; }\r\n\r\n    setX(x) { this.x = x; }\r\n}\r\n\r\n\r\nexport default NodoCabeceraColumna;\r\n// module.exports = NodoCabeceraColumna;\r\n","class NodoOrtogonal {\r\n \r\n    constructor(x, y, dato) {\r\n        this.dato = dato;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.arriba = null;\r\n        this.abajo = null;\r\n        this.izquierda = null;\r\n        this.derecha = null;\r\n    }\r\n\r\n    getDato = () => { return this.dato; }\r\n    setDato = (dato) =>{ this.dato = dato; }\r\n\r\n    getX = () => {return this.x; }\r\n\r\n    getY = () => {return this.y; }\r\n\r\n    getArriba = () => {return this.arriba; }\r\n\r\n    setArriba = (arriba) => {this.arriba = arriba; }\r\n\r\n    getAbajo = () => {return this.abajo; }\r\n\r\n    setAbajo = (abajo) => { this.abajo = abajo; }\r\n\r\n    getIzquierda = () => {return this.izquierda; }\r\n\r\n    setIzquierda = (izquierda) => {this.izquierda = izquierda; }\r\n\r\n    getDerecha = () => {return this.derecha; }\r\n\r\n    setDerecha = (derecha) => {this.derecha = derecha; }\r\n}\r\n\r\n\r\n\r\nexport default NodoOrtogonal;\r\n// module.exports = NodoOrtogonal;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport MatrizOrtogonal from './Modelo/Compuesta/MatrizDispersa/MatrizOrtogonal.js'; // Importar la Estructura Lista Simple.\r\nvar matrizDispersa = new MatrizOrtogonal(); // Instancia de la matrizDispersa.\r\nvar getNodes = new DataSet(matrizDispersa.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(matrizDispersa.setEdgesDataSet());\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 120,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 20,\r\n        color: {\r\n            background: '#F2FF9D',\r\n            border:  '#6CCECD',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass MatrizDispersa extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\ttextX: '',\r\n\t\t\ttextY: '',\r\n\t\t\testado: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\tlet dato = matrizDispersa.search(this.state.textX, this.state.textY, this.state.text);\r\n\t\tconsole.log(dato)\r\n\t\tif(dato==null){\r\n\r\n\t\t\tmatrizDispersa.insertar(this.state.textX, this.state.textY, this.state.text);\r\n\t\t\tgetNodes = new DataSet(matrizDispersa.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(matrizDispersa.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\t}else{\r\n\r\n\t\t\talert(\"YA EXISTE UN DATO EN ESA POSICION\")\r\n\t\t}\r\n\t\t\t\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tmatrizDispersa.delete(this.state.textX, this.state.textY, this.state.text);\r\n\t\tgetNodes = new DataSet(matrizDispersa.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(matrizDispersa.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tmatrizDispersa.update(this.state.textX, this.state.textY, this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(matrizDispersa.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(matrizDispersa.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet dato = matrizDispersa.getNodesDataSet(this.state.textX, this.state.textY, this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n\t\t\tgetNodes = new DataSet(matrizDispersa.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(matrizDispersa.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tconsole.log(dato)\r\n\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Compuesta\"){\r\n\r\n\t\t\t\r\n\t\t\t// for (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t// \tconsole.log(dataJson.valores[i]);\r\n\t\t\t// \t// matrizDispersa.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t// }\r\n\t\t\tvar posicionX  = null;\r\n\t\t\tvar posicionY = null; \r\n\t\t\tvar i = 0;\r\n\t\t\tdataJson.valores.forEach(function(element){\r\n\t\t\t\ti = 1\r\n\t\t\t\telement.indices.forEach(function(posicion){\r\n\t\t\t\t\tif(i==1){\r\n\t\t\t\t\t\tposicionX = posicion;\r\n\t\t\t\t\t}else if(i==2){\r\n\t\t\t\t\t\tposicionY = posicion;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(posicionX+\",\"+posicionY+\"->\"+element.valor);\r\n\t\t\t\tlet dato = matrizDispersa.getData(posicionX, posicionY);\r\n\t\t\t\tif(dato!=null){\r\n\t\t\t\t\tmatrizDispersa.update(posicionX, posicionY, dato, element.valor);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tmatrizDispersa.insertar(posicionX, posicionY, element.valor);\t\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\r\n\t\t\tgetNodes = new DataSet(matrizDispersa.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(matrizDispersa.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\t\t// matrizDispersa.generateJSON(matrizDispersa)\r\n\t\tconsole.log(\"Guardar :c\")\r\n\t}\r\n\r\n\thandleCabecera = () => {\r\n\t\tmatrizDispersa.desactivarEncabezado(this.state.estado)\r\n\t\tgetNodes = new DataSet(matrizDispersa.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(matrizDispersa.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"textX\" className=\"form-control\" placeholder=\"Posicion: X\" id=\"InputCola\" value={this.state.textX} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"textY\" className=\"form-control\" placeholder=\"Posicion: Y\" id=\"InputCola\" value={this.state.textY} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<input type=\"text\" name=\"estado\" className=\"form-control\" placeholder=\"True/False\" id=\"InputCola\" value={this.state.estado} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleCabecera()} >Cabecera</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default MatrizDispersa;","import ListaCabeceraFilas from './ListaCabeceraFilas.js';\r\n// const ListaCabeceraFilas = require('./ListaCabeceraFilas.js')\r\nimport ListaCabeceraColumnas from './ListaCabeceraColumnas.js';\r\n// const ListaCabeceraColumnas = require('./ListaCabeceraColumnas.js')\r\nimport NodoCabeceraFila from './NodoCabeceraFila.js';\r\n// const NodoCabeceraFila = require('./NodoCabeceraFila.js')\r\nimport NodoCabeceraColumna from './NodoCabeceraColumna.js';\r\n// const NodoCabeceraColumna = require('./NodoCabeceraColumna.js')\r\nimport NodoOrtogonal from './NodoOrtogonal.js';\r\n// const NodoOrtogonal = require('./NodoOrtogonal.js')\r\n\r\nclass MatrizOrtogonal {\r\n\r\n    constructor() {\r\n        this.filas = new ListaCabeceraFilas();\r\n        this.columnas = new ListaCabeceraColumnas();\r\n        this.estado = false;\r\n    }\r\n\r\n    insertar = (x, y, dato) =>{\r\n        \r\n        var nodoNuevo = new NodoOrtogonal(x, y, dato);\r\n        if(this.getColumna().busqueda(x) == null){ // VERIFICA QUE EXISTA LA CABECERA COLUMNAS.\r\n            this.getColumna().insertar(new NodoCabeceraColumna(x));\r\n        }\r\n        if(this.getFila().busqueda(y) == null){ // VERIFICA QUE EXISTA LA CABECERA FILAS.\r\n            this.getFila().insertar(new NodoCabeceraFila(y));\r\n        }\r\n\r\n        this.getColumna().busqueda(x).getColumna().insertar(nodoNuevo);\r\n        this.getFila().busqueda(y).getFila().insertar(nodoNuevo);\r\n\r\n    }\r\n\r\n    print = () => {\r\n\r\n        var nodo_cabecera = this.getFila().getPrimero();\r\n        var nodo_actual = null;\r\n        if(nodo_cabecera != null){\r\n            do{\r\n                console.log(nodo_cabecera.getY());\r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();\r\n                if(nodo_actual != null){\r\n                    do{\r\n                        console.log(\"dato: \" + nodo_actual.getDato() + \" posicion (x,y): \" + nodo_actual.getX()  +  \",\" + nodo_actual.getY());\r\n                        nodo_actual = nodo_actual.getDerecha();\r\n                    }while(nodo_actual != null);   \r\n                }   \r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n            \r\n\r\n        console.log(\"-\")\r\n        nodo_cabecera = this.getColumna().getPrimero();\r\n        nodo_actual = null;\r\n        if(nodo_cabecera != null){\r\n             do{\r\n                console.log(nodo_cabecera.getX());\r\n                let nodo_actual = nodo_cabecera.getColumna().getPrimero();\r\n                if(nodo_actual != null){\r\n                     do{\r\n                        console.log(\"dato: \" + nodo_actual.getDato() + \" posicion (x,y): \" + nodo_actual.getX()  +  \",\" + nodo_actual.getY());\r\n                        nodo_actual = nodo_actual.getAbajo();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n           \r\n    }\r\n\r\n    search = (x, y, dato) => {\r\n\r\n        var nodo_cabecera = this.getFila().getPrimero();\r\n        var nodo_actual = null;\r\n        if (nodo_cabecera != null){\r\n            do{\r\n               \r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();\r\n                if (nodo_actual != null){\r\n                    do{\r\n                    if (nodo_actual.getDato() == dato && nodo_actual.getX() == x && nodo_actual.getY() == y){\r\n                        console.log(\"dato: \" + nodo_actual.getDato() + \" posicion (x,y): \" + nodo_actual.getX()  +  \",\" + nodo_actual.getY());\r\n                        return nodo_actual    \r\n                    }\r\n                    nodo_actual = nodo_actual.getDerecha();\r\n                }while(nodo_actual != null);   \r\n                }\r\n                \r\n                \r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n                \r\n            }while(nodo_cabecera != null);\r\n        }\r\n        console.log(\"Data not Found\")\r\n        return null\r\n    }\r\n\r\n    getData = (x, y) => {\r\n\r\n        var nodo_cabecera = this.getFila().getPrimero();\r\n        var nodo_actual = null;\r\n        if (nodo_cabecera != null){\r\n            do{\r\n               \r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();\r\n                if (nodo_actual != null){\r\n                    do{\r\n                    if (nodo_actual.getX() == x && nodo_actual.getY() == y){\r\n                        console.log(\"dato: \" + nodo_actual.getDato() + \" posicion (x,y): \" + nodo_actual.getX()  +  \",\" + nodo_actual.getY());\r\n                        return nodo_actual.getDato()    \r\n                    }\r\n                    nodo_actual = nodo_actual.getDerecha();\r\n                }while(nodo_actual != null);   \r\n                }\r\n                \r\n                \r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n                \r\n            }while(nodo_cabecera != null);\r\n        }\r\n        console.log(\"Data not Found\")\r\n        return null\r\n    }\r\n\r\n\r\n    update = (x, y, dato, cambio) => {\r\n\r\n\r\n        var nodo_cabecera = this.getFila().getPrimero();\r\n        var nodo_actual = null;\r\n        if(nodo_cabecera != null){\r\n            do{\r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();\r\n                if (nodo_actual != null){\r\n                    do{\r\n                        if (nodo_actual.getDato() == dato && nodo_actual.getX() == x && nodo_actual.getY() == y){\r\n                            nodo_actual.setDato(cambio)\r\n                            console.log(\"UPDATE -> dato: \" + nodo_actual.getDato() + \" posicion (x,y): \" + nodo_actual.getX()  +  \",\" + nodo_actual.getY());\r\n                            return nodo_actual    \r\n                        }\r\n                        nodo_actual = nodo_actual.getDerecha();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n                \r\n            }while(nodo_cabecera != null);\r\n        }\r\n        console.log(\"Data not Found\")\r\n        return null\r\n\r\n\r\n    }\r\n\r\n    delete = (x, y, dato) => {\r\n\r\n        if(this.search(x, y, dato) != null){\r\n            this.getColumna().busqueda(x).getColumna().delete(y)\r\n            this.getFila().busqueda(y).getFila().delete(x);\r\n        }\r\n        if(this.getColumna().busqueda(x).getColumna().getPrimero() == null){ \r\n            this.getColumna().delete(x); \r\n        }\r\n        if (this.getFila().busqueda(y).getFila().getPrimero()==null){ \r\n            this.getFila().delete(y); \r\n        }\r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var nodo_cabecera = this.getColumna().getPrimero();\r\n        var nodo_actual = null;\r\n        var dot = [];\r\n        var contador = 1;\r\n\r\n        if(nodo_cabecera != null){\r\n            do{\r\n                if(this.estado == true){\r\n                    dot.push({id:parseInt(contador), label:\"Fila: \"+String(nodo_cabecera.getX()), x:0, y:nodo_cabecera.getX()});\r\n                }\r\n                contador++;\r\n                let nodo_actual = nodo_cabecera.getColumna().getPrimero();\r\n                if(nodo_actual != null){\r\n                    do{\r\n                        dot.push({id:parseInt(contador), label:\"(\"+String(nodo_actual.getX())+\",\"+String(nodo_actual.getY())+\")\"+String(nodo_actual.getDato()), x: parseInt(nodo_actual.getX()), y:parseInt(nodo_actual.getY())}); \r\n                        contador++;\r\n                        nodo_actual = nodo_actual.getAbajo();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n\r\n        nodo_cabecera = this.getFila().getPrimero();\r\n        nodo_actual = null;\r\n        if(nodo_cabecera != null){\r\n            \r\n            do{\r\n                if(this.estado==true){\r\n                dot.push({id:parseInt(contador), label: \"Columna: \"+String(nodo_cabecera.getY()), x:nodo_cabecera.getY(), y:0});\r\n                } \r\n                contador++;\r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();    \r\n                if (nodo_actual != null){\r\n                    do{\r\n                        contador++;\r\n                        nodo_actual = nodo_actual.getDerecha();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n\r\n        return dot;\r\n\r\n    }\r\n\r\n    getNodesDataSet = (x,y,dato) =>{\r\n        var nodo_cabecera = this.getColumna().getPrimero();\r\n        var nodo_actual = null;\r\n        var contador = 1;\r\n\r\n        if(nodo_cabecera != null){\r\n            do{\r\n                contador++;\r\n                let nodo_actual = nodo_cabecera.getColumna().getPrimero();\r\n                if(nodo_actual != null){\r\n                    do{ \r\n                        if (nodo_actual.getX()==x && nodo_actual.getY()==y && nodo_actual.getDato()==dato){\r\n                            // console.log(nodo_actual.getX()+\",\"+nodo_actual.getY()+\"->(\"+contador+\")\"+nodo_actual.getDato())\r\n                            return contador\r\n                        }\r\n                        contador++;\r\n                        nodo_actual = nodo_actual.getAbajo();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        var nodo_cabecera = this.getColumna().getPrimero();\r\n        var nodo_actual = null;\r\n        var dot = [];\r\n        var contador = 1;\r\n        var tempContador = 1;\r\n\r\n        if(nodo_cabecera != null){\r\n            do{\r\n                tempContador = contador\r\n                contador++;\r\n                let nodo_actual = nodo_cabecera.getColumna().getPrimero();\r\n                if(nodo_actual != null){\r\n                    let aux = this.getNodesDataSet(nodo_actual.getX(), nodo_actual.getY(), nodo_actual.getDato())\r\n                    if(aux!=null){\r\n                        dot.push({from:parseInt(tempContador), to:aux, arrows: \"to\"});\r\n                    }\r\n                    do{\r\n\r\n                        if(nodo_actual.getAbajo()!=null){\r\n                            dot.push({from:parseInt(contador), to:parseInt(contador+1), arrows: \"to\"});\r\n                            dot.push({from:parseInt(contador+1), to:parseInt(contador), arrows: \"to\"});\r\n                        } \r\n                        contador++;\r\n                        nodo_actual = nodo_actual.getAbajo();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n\r\n                if (nodo_cabecera.getSiguiente() != null){\r\n                        dot.push({from:parseInt(tempContador), to:parseInt(contador), arrows: \"to\"});\r\n                }\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n\r\n        nodo_cabecera = this.getFila().getPrimero();\r\n        nodo_actual = null;\r\n        if(nodo_cabecera != null){\r\n            \r\n            do{\r\n\r\n                tempContador = contador;\r\n                contador++;\r\n                nodo_actual = nodo_cabecera.getFila().getPrimero();    \r\n                if (nodo_actual != null){\r\n                    let aux = this.getNodesDataSet(nodo_actual.getX(), nodo_actual.getY(), nodo_actual.getDato())\r\n                    if(aux!=null){\r\n                        dot.push({from:parseInt(tempContador), to:aux, arrows: \"to\"});\r\n                    }\r\n                    do{\r\n                        if(nodo_actual.getDerecha()!=null){\r\n                            console.log(\"prro\")\r\n                            let auxNodoUno = this.getNodesDataSet(nodo_actual.getX(), nodo_actual.getY(), nodo_actual.getDato())\r\n                            let auxNodoDos = this.getNodesDataSet(nodo_actual.getDerecha().getX(), nodo_actual.getDerecha().getY(), nodo_actual.getDerecha().getDato())\r\n                            console.log(nodo_actual.getDato() +\" \"+auxNodoDos+\"-> \" + nodo_actual.getDerecha().getDato()+ \" \"+auxNodoUno)\r\n                            dot.push({from:parseInt(auxNodoDos), to:parseInt(auxNodoUno), arrows: \"to\"});\r\n                            dot.push({from:parseInt(auxNodoUno), to:parseInt(auxNodoDos), arrows: \"to\"});\r\n                        }\r\n                        contador++;\r\n                        nodo_actual = nodo_actual.getDerecha();\r\n                    }while(nodo_actual != null);   \r\n                }\r\n                if (nodo_cabecera.getSiguiente() != null){\r\n                        dot.push({from:parseInt(tempContador), to:parseInt(contador), arrows: \"to\"});\r\n                }\r\n\r\n                nodo_cabecera = nodo_cabecera.getSiguiente();\r\n            }while(nodo_cabecera != null);\r\n        }\r\n\r\n        return dot;\r\n    }\r\n\r\n    desactivarEncabezado = (state) => {\r\n        if(state==\"True\"){\r\n            this.estado = true;\r\n        }else if(state==\"False\"){\r\n            this.estado = false;\r\n        }\r\n    }\r\n\r\n    getColumna = () =>{ return this.columnas; }\r\n    setColumna = (columna) => { this.columnas = columna; }\r\n    getFila = () =>{ return this.filas; }\r\n    setFila = (fila) => { this.filas = fila; }\r\n\r\n}\r\n\r\nexport default MatrizOrtogonal;\r\n// module.exports = MatrizOrtogonal;\r\n","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport HashAbierta from './Modelo/NoLineal/HashAbierta'; // Importar la Estructura Lista Simple.\r\nvar tablahash = new HashAbierta(5,30,80);\r\nvar getNodes = new DataSet([]);  // Se Crean los Nodos.\r\nvar getEdges = new DataSet([]);\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        shape: \"box\",\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    },\r\n    layout:{\r\n    \t\t\thierarchical: {\r\n    \t\t\t  direction: \"DU\",\r\n    \t\t\t  sortMethod: \"directed\",\r\n    \t\t\t},\r\n  \t},\r\n  };\r\n\r\n\r\nclass TablaHashAbierta extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topcion: 'Simple',\r\n\t\t\ttamanio: '',\r\n\t\t\tminimo: '',\r\n\t\t\tmaximo: '',\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t\t//this.tablahash;\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleGenerate = () => {\r\n\t\ttablahash.set_m(parseInt(this.state.tamanio));\r\n\t\ttablahash.set_min(parseInt(this.state.minimo));\r\n\t\ttablahash.set_max(parseInt(this.state.maximo));\r\n\t\ttablahash.InicializarArreglo();\r\n\t\tlet numero = 2\r\n\t\tconsole.log(typeof numero);\r\n\t\tconsole.log(\"Generado\");\r\n\t}\r\n\r\n\thandleAdd = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.InsertarSimple(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.InsertarSimple(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.InsertarDivision(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.InsertarDivision(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Div\");\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.InsertarMultiplicacion(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.InsertarMultiplicacion(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Mult\");\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.EliminarSimple(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.EliminarSimple(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.EliminarDivision(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.EliminarDivision(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Div\");\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.EliminarMultiplicacion(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.EliminarMultiplicacion(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tconsole.log(\"Mult\");\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tlet esentero2 = true;\r\n\t\tlet entero2 = parseInt(this.state.dato_actualizado); \r\n\t\tif(isNaN(entero2)){\r\n\t\t\tesentero2=false;\r\n\t\t}\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),parseInt(this.state.dato_actualizado),\"Simple\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),this.state.dato_actualizado,\"Simple\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,parseInt(this.state.dato_actualizado),\"Simple\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,\"Simple\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,\"Simple\");\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),parseInt(this.state.dato_actualizado),\"Division\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tconsole.log(\"DIVIVIIVIVIVI\");\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),this.state.dato_actualizado,\"Division\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,parseInt(this.state.dato_actualizado),\"Division\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,\"Division\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),parseInt(this.state.dato_actualizado),\"Multiplicacion\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(parseInt(this.state.text),this.state.dato_actualizado,\"Multiplicacion\");\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(esentero2==true){\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,parseInt(this.state.dato_actualizado),\"Multiplicacion\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\ttablahash.Actualizar(this.state.text,this.state.dato_actualizado,\"Multiplicacion\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet esentero = true;\r\n\t\tlet entero = parseInt(this.state.text); \r\n\t\tif(isNaN(entero)){\r\n\t\t\tesentero=false;\r\n\t\t}\r\n\t\tif(this.state.opcion==\"Simple\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.BuscarSimple(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.BuscarSimple(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Division\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.BuscarDivision(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.BuscarDivision(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}else if(this.state.opcion==\"Multiplicacion\"){\r\n\t\t\tif(esentero==true){\r\n\t\t\t\ttablahash.BuscarMultiplicacion(parseInt(this.state.text));\r\n\t\t\t}else{\r\n\t\t\t\ttablahash.BuscarMultiplicacion(this.state.text);\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t}\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\tconsole.log(getNodes);\r\n\t\tconsole.log(getEdges);\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\t\tlet paraarreglo=[]\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\t//let nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura No Lineal\"){\r\n\r\n\t\t\ttablahash.set_m(parseInt(dataJson.m));\r\n\t\t\ttablahash.set_min(parseInt(dataJson.minimo));\r\n\t\t\ttablahash.set_max(parseInt(dataJson.maximo));\r\n\t\t\ttablahash.InicializarArreglo();\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tif(dataJson.funcion==\"Simple\"){\r\n\t\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\t\ttablahash.InsertarSimple(dataJson.valores[i].toString())\r\n\t\t\t\t}else if(dataJson.funcion==\"Division\"){\r\n\t\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\t\ttablahash.InsertarDivision(dataJson.valores[i].toString())\r\n\t\t\t\t}else if(dataJson.funcion==\"Multiplicacion\"){\r\n\t\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\t\ttablahash.InsertarMultiplicacion(dataJson.valores[i].toString())\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(tablahash.setDataSet()[0]);\r\n\t\t\tgetEdges = new DataSet(tablahash.setDataSet()[1]);\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA NO LINEAL!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\r\n\t\t//listaSimple.generateJSON(listaSimple)\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"tamanio\" name=\"tamanio\" className=\"form-control\" placeholder=\"Ingresar Tamaño Tabla\" id=\"InputTamanio\" value={this.state.tamanio} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"minimo\" name=\"minimo\" className=\"form-control\" placeholder=\"Ingresar Minimo\" id=\"InputMinimo\" value={this.state.minimo} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"maximo\" name=\"maximo\" className=\"form-control\" placeholder=\"Ingresar Maximo\" id=\"InputMaximo\" value={this.state.maximo} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleGenerate()}>Generar Tabla</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<select type=\"opcion\" name=\"opcion\" className=\"form-select\" onChange={this.handleInputChange}>\r\n        \t\t\t\t<option value=\"Simple\">Simple</option>\r\n        \t\t\t\t<option value=\"Division\">Division</option>\r\n        \t\t\t\t<option value=\"Multiplicacion\">Multiplicacion</option>\r\n      \t\t\t\t</select>\r\n      \t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default TablaHashAbierta;","class HashAbierta{\r\n\tinsertados=0;\r\n\tarrreglo=[];\r\n\tconstructor(m, min, max){\r\n\t\tthis.m = m;\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\t\tthis.InicializarArreglo();\r\n\t}\r\n\tConvertirString=(cadena)=>{\r\n\t\tlet result=0;\r\n\t\tfor(let i=0;i<cadena.length;i++){\r\n\t\t\tresult+=cadena.charCodeAt(i);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tConvertirArreglo=(arreglo)=>{\r\n\t\tlet nuevoarreglo=[]\r\n\t\tfor(let i=0;i<arreglo.length;i++){\r\n\t\t\tlet result=0;\r\n\t\t\tfor(let j=0;j<arreglo[i].length;j++){\r\n\t\t\t\tresult+=arreglo[i].charCodeAt(j);\r\n\t\t\t}\r\n\t\t\tnuevoarreglo.push(result);\r\n\t\t}\r\n\t\treturn nuevoarreglo;\r\n\t}\r\n\tInicializarArreglo=()=>{\r\n\t\tthis.insertados=0;\r\n\t\tthis.arrreglo=[];\r\n\t\tlet tamanio = this.get_m();\r\n\t\tfor(let i=0;i<tamanio;i++){\r\n\t\t\tthis.arrreglo.push([-1]);\r\n\t\t}\r\n\t}\r\n\tCapacidad=()=>{\r\n\t\tlet raro=0;\r\n\t\tfor(let i=0; i<this.get_sizearreglo() ;i++){\r\n\t\t\tlet aux = [ -1 ];\r\n\t\t\tif(this.arrreglo[i]==-1){\r\n\t\t\t\traro= raro + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet ocupado= this.get_sizearreglo()-raro;\r\n\t\treturn ocupado;\r\n\t}\r\n\tget_sizearreglo=()=>{\r\n\t\treturn this.arrreglo.length;\r\n\t}\r\n\tset_m=(m)=>{this.m=m;}\r\n\tget_m=()=>{return this.m;}\r\n\tset_min=(min)=>{this.min=min}\r\n\tget_min=()=>{return this.min;}\r\n\tset_max=(max)=>{this.max=max;}\r\n\tget_max=()=>{return this.max;}\r\n\tget_numarreglo=(indice)=>{\r\n\t\treturn this.arrreglo[indice];\r\n\t}\r\n\tImprimir=()=>{\r\n\t\tlet linea=\"[\";\r\n\t\tfor(let i=0; i<this.get_m();i++){\r\n\t\t\tlinea += \" \"+this.arrreglo[i];\r\n\t\t}\r\n\t\tlet porcetaje = (this.Capacidad()*100/this.get_m())+ \"%\";\r\n\t\tlinea+=\" ]\"+porcetaje;\r\n\t\tconsole.log(linea);\r\n\t}\r\n\tFuncionDivision = (k) =>{\r\n\t\treturn ( k % this.get_m() );\r\n\t}\r\n\tFuncionSimple = (k)=>{\r\n\t\tlet reducido = parseInt(k);\r\n\t\tlet retorno=0;\r\n\t\twhile(reducido>=1){\r\n\t\t\treducido = reducido/2;\r\n\t\t}\r\n\t\tretorno= Math.round( reducido * parseInt(this.m));\r\n\t\tif(parseInt(retorno)==this.get_m()){\r\n\t\t\tretorno=parseInt(retorno)-1;\r\n\t\t}\r\n\t\treturn (parseInt(retorno));\r\n\t}\r\n\tFuncionMultiplicacion=(k)=>{\r\n\t\tlet a = 0.1625277911;\r\n\t\treturn (Math.round(this.get_m()*((a*k)%1)));\r\n\t}\r\n\tRehashing=(tipo)=>{\r\n\t\tif(((this.Capacidad()*100)/this.get_m())>=this.get_max()){\r\n\t\t\tlet aux = this.arrreglo;\r\n\t\t\tthis.Imprimir();\r\n\t\t\tlet m_anterior = this.get_m();\r\n\t\t\tthis.set_m(this.Capacidad()*100/this.get_min());\r\n\t\t\tthis.InicializarArreglo();\r\n\t\t\tfor(let i=0; i<m_anterior; i++){\r\n\t\t\t\tconsole.log(aux[i]);\r\n\t\t\t\tif(aux[i]!=-1){\r\n\t\t\t\t\tif(tipo==\"Division\"){\r\n\t\t\t\t\t\tconsole.log(\"Division reh\"+aux[i]);\r\n\t\t\t\t\t\tfor(let j=0;j<aux[i].length;j++){\r\n\t\t\t\t\t\t\tlet esono = typeof aux[i][j];\r\n\t\t\t\t\t\t\tif(esono==\"string\"){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+aux[i][j];\r\n\t\t\t\t\t\t\t\tthis.InsertarDivision(aux[i][j]);\r\n\t\t\t\t\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\t\t\t\t\tthis.InsertarDivision(parseInt(aux[i][j]));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(tipo==\"Multiplicacion\"){\r\n\t\t\t\t\t\tfor(let j=0;j<aux[i].length;j++){\r\n\t\t\t\t\t\t\tlet esono = typeof aux[i][j];\r\n\t\t\t\t\t\t\tif(esono==\"string\"){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+aux[i][j];\r\n\t\t\t\t\t\t\t\tthis.InsertarMultiplicacion(aux[i][j]);\r\n\t\t\t\t\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\t\t\t\t\tthis.InsertarMultiplicacion(parseInt(aux[i][j]));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(tipo==\"Simple\"){\r\n\t\t\t\t\t\tfor(let j=0;j<aux[i].length;j++){\r\n\t\t\t\t\t\t\tlet esono = typeof aux[i][j];\r\n\t\t\t\t\t\t\tif(esono==\"string\"){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+aux[i][j];\r\n\t\t\t\t\t\t\t\tthis.InsertarSimple(aux[i][j]);\r\n\t\t\t\t\t\t\t}else if(esono==\"number\"){\r\n\t\t\t\t\t\t\t\tthis.InsertarSimple(parseInt(aux[i][j]));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.Imprimir();\r\n\t\t}\r\n\t}\r\n\tInsertarDivision=(k)=>{\r\n\t\tconsole.log(\"Aqui\");\r\n\t\tlet esono = typeof k;\r\n\t\tconsole.log(typeof k);\r\n\t\tlet valordivision=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalordivision = parseInt(this.FuncionDivision(this.ConvertirString(k)));\r\n\t\t}else if(esono==\"number\"){\r\n\t\t\tvalordivision = this.FuncionDivision(parseInt(k));\r\n\t\t}\r\n\t\tconsole.log(\"Convertido: \"+valordivision);\r\n\t\tif(this.arrreglo[valordivision]!=-1){\r\n\t\t\tthis.arrreglo[valordivision].push(k);\r\n\t\t\t//this.arrreglo[valordivision] = valordearreglo.push(k);\r\n\t\t\tthis.insertados++;\r\n\t\t}else{\r\n\t\t\tthis.arrreglo[valordivision]=[k];\r\n\t\t\tthis.insertados++;\r\n\t\t}\r\n\t\tthis.Rehashing(\"Division\");\r\n\t}\r\n\tInsertarSimple=(k)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valorsimple=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t}else if(esono==\"number\"){\r\n\t\t\tvalorsimple = this.FuncionSimple(parseInt(k));\r\n\t\t}\r\n\t\tif(this.arrreglo[valorsimple]!=-1){\r\n\t\t\tthis.arrreglo[valorsimple].push(k);\r\n\t\t\t//let valordearreglo = this.arrreglo[valorsimple];\r\n\t\t\t//this.arrreglo[valorsimple] = valordearreglo.push(k);\r\n\t\t\tthis.insertados++;\r\n\t\t}else{\r\n\t\t\tthis.arrreglo[valorsimple]=[k];\r\n\t\t\tthis.insertados++;\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\");\r\n\t}\r\n\tInsertarMultiplicacion=(k)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valormultiplicacion=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalormultiplicacion = parseInt(this.FuncionMultiplicacion(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valormultiplicacion]!=-1){\r\n\t\t\tthis.arrreglo[valormultiplicacion].push(k);\r\n\t\t\t//this.arrreglo[valormultiplicacion] = valordearreglo.push(k);\r\n\t\t\tthis.insertados++;\r\n\t\t}else{\r\n\t\t\tthis.arrreglo[valormultiplicacion]=[k];\r\n\t\t\tthis.insertados++;\r\n\t\t}\r\n\t\tthis.Rehashing(\"Multiplicacion\");\r\n\t}\r\n\r\n\tEliminarSimple=(k)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valorsimple=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalorsimple = this.FuncionSimple(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valorsimple]!=-1){\r\n\t\t\tif(this.arrreglo[valorsimple].length>1){\r\n\t\t\t\tfor(let i=0;i<this.arrreglo[valorsimple].length;i++){\r\n\t\t\t\t\tif(this.arrreglo[valorsimple][i]==k){\r\n\t\t\t\t\t\tlet auxarreglo = this.arrreglo[valorsimple];\r\n\t\t\t\t\t\tauxarreglo.splice(i,1);\r\n\t\t\t\t\t\tthis.arrreglo[valorsimple] = auxarreglo;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.arrreglo[valorsimple]=[-1];\r\n\t\t\t\tthis.insertados--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\");\r\n\t}\r\n\tEliminarDivision=(k)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valordivision=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalordivision = parseInt(this.FuncionDivision(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalordivision = this.FuncionDivision(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valordivision]!=-1){\r\n\t\t\tif(this.arrreglo[valordivision].length>1){\r\n\t\t\t\tfor(let i=0;i<this.arrreglo[valordivision].length;i++){\r\n\t\t\t\t\tif(this.arrreglo[valordivision][i]==k){\r\n\t\t\t\t\t\tlet auxarreglo = this.arrreglo[valordivision];\r\n\t\t\t\t\t\tauxarreglo.splice(i,1);\r\n\t\t\t\t\t\tthis.arrreglo[valordivision] = auxarreglo;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.arrreglo[valordivision]=[-1];\r\n\t\t\t\tthis.insertados--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Division\");\r\n\t}\r\n\tEliminarMultiplicacion=(k)=>{\r\n\t\tlet esono = typeof k;\r\n\t\tlet valormultiplicacion=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalormultiplicacion = parseInt(this.FuncionMultiplicacion(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valormultiplicacion]!=-1){\r\n\t\t\tif(this.arrreglo[valormultiplicacion].length>1){\r\n\t\t\t\tfor(let i=0;i<this.arrreglo[valormultiplicacion].length;i++){\r\n\t\t\t\t\tif(this.arrreglo[valormultiplicacion][i]==k){\r\n\t\t\t\t\t\tlet auxarreglo = this.arrreglo[valormultiplicacion];\r\n\t\t\t\t\t\tauxarreglo.splice(i,1);\r\n\t\t\t\t\t\tthis.arrreglo[valormultiplicacion] = auxarreglo;\r\n\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.arrreglo[valormultiplicacion]=[-1];\r\n\t\t\t\tthis.insertados--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Multiplicacion\");\r\n\t}\r\n\r\n\tBuscarSimple=(k)=>{\r\n\t\tlet indice=-1;\r\n\t\tlet segundoindice=0;\r\n\t\tlet esono = typeof k;\r\n\t\tlet valorsimple=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalorsimple = this.FuncionSimple(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valorsimple]!=-1){\r\n\t\t\tif(this.arrreglo[valorsimple].length>1){\r\n\t\t\t\tfor(let i=0;i<this.arrreglo[valorsimple].length;i++){\r\n\t\t\t\t\tif(this.arrreglo[valorsimple][i]==k){\r\n\t\t\t\t\t\tindice=valorsimple;\r\n\t\t\t\t\t\tsegundoindice=i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tindice=valorsimple;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Simple\");\r\n\t\treturn [indice,segundoindice];\r\n\t}\r\n\tBuscarDivision=(k)=>{\r\n\t\tlet indice=-1;\r\n\t\tlet segundoindice=0;\r\n\t\tlet esono = typeof k;\r\n\t\tlet valordivision=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalordivision = parseInt(this.FuncionDivision(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalordivision = this.FuncionDivision(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valordivision]!=-1){\r\n\t\t\tif(this.arrreglo[valordivision].length>1){\r\n\t\t\t\tfor(let i=0;i<this.arrreglo[valordivision].length;i++){\r\n\t\t\t\t\tif(this.arrreglo[valordivision][i]==k){\r\n\t\t\t\t\t\tindice=valordivision;\r\n\t\t\t\t\t\tsegundoindice=i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tindice=valordivision;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Division\");\r\n\t\treturn [indice,segundoindice];\r\n\t}\r\n\tBuscarMultiplicacion=(k)=>{\r\n\t\tlet indice=-1;\r\n\t\tlet segundoindice=0;\r\n\t\tlet esono = typeof k;\r\n\t\tlet valormultiplicacion=0;\r\n\t\tif(esono==\"string\"){\r\n\t\t\tvalormultiplicacion = parseInt(this.FuncionMultiplicacion(this.ConvertirString(k)));\r\n\t\t}else{\r\n\t\t\tvalormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t}\r\n\t\tif(this.arrreglo[valormultiplicacion]!=-1){\r\n\t\t\tif(this.arrreglo[valormultiplicacion].length>1){\r\n\t\t\t\tfor(let i=0;i<this.arrreglo[valormultiplicacion].length;i++){\r\n\t\t\t\t\tif(this.arrreglo[valormultiplicacion][i]==k){\r\n\t\t\t\t\t\tindice=valormultiplicacion;\r\n\t\t\t\t\t\tsegundoindice=i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tindice=valormultiplicacion;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.Rehashing(\"Multiplicacion\");\r\n\t\treturn [indice,segundoindice];\r\n\t}\r\n\r\n\tActualizar=(k,nuevo,tipo)=>{\r\n\t\tif(tipo==\"Simple\"){\r\n\t\t\tlet esono = typeof k;\r\n\t\t\tlet valorsimple=0;\r\n\t\t\tif(esono==\"string\"){\r\n\t\t\t\tvalorsimple = parseInt(this.FuncionSimple(this.ConvertirString(k)));\r\n\t\t\t}else{\r\n\t\t\t\tvalorsimple = this.FuncionSimple(k);\r\n\t\t\t}\r\n\t\t\tif(this.arrreglo[valorsimple]!=-1){\r\n\t\t\t\tif(this.arrreglo[valorsimple].length>1){\r\n\t\t\t\t\tfor(let i=0;i<this.arrreglo[valorsimple].length;i++){\r\n\t\t\t\t\t\tif(this.arrreglo[valorsimple][i]==k){\r\n\t\t\t\t\t\t\tlet auxarreglo = this.arrreglo[valorsimple];\r\n\t\t\t\t\t\t\tauxarreglo.splice(i,1);\r\n\t\t\t\t\t\t\tthis.arrreglo[valorsimple] = auxarreglo;\r\n\t\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\t\tthis.InsertarSimple(nuevo);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.arrreglo[valorsimple]=[-1];\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\tthis.InsertarSimple(nuevo);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.Rehashing(\"Simple\");\r\n\t\t}else if(tipo==\"Division\"){\r\n\t\t\tlet esono = typeof k;\r\n\t\t\tlet valordivision=0;\r\n\t\t\tif(esono==\"string\"){\r\n\t\t\t\tvalordivision = parseInt(this.FuncionDivision(this.ConvertirString(k)));\r\n\t\t\t}else{\r\n\t\t\t\tvalordivision = this.FuncionDivision(k);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.arrreglo[valordivision]!=-1){\r\n\t\t\t\tif(this.arrreglo[valordivision].length>1){\r\n\t\t\t\t\tfor(let i=0;i<this.arrreglo[valordivision].length;i++){\r\n\t\t\t\t\t\tif(this.arrreglo[valordivision][i]==k){\r\n\t\t\t\t\t\t\tlet auxarreglo = this.arrreglo[valordivision];\r\n\t\t\t\t\t\t\tauxarreglo.splice(i,1);\r\n\t\t\t\t\t\t\tthis.arrreglo[valordivision] = auxarreglo;\r\n\t\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\t\tthis.InsertarDivision(nuevo);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.arrreglo[valordivision]=[-1];\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\tthis.InsertarDivision(nuevo);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.Rehashing(\"Division\");\r\n\t\t}else if(tipo==\"Multiplicacion\"){\r\n\t\t\tlet esono = typeof k;\r\n\t\t\tlet valormultiplicacion=0;\r\n\t\t\tif(esono==\"string\"){\r\n\t\t\t\tvalormultiplicacion = parseInt(this.FuncionMultiplicacion(this.ConvertirString(k)));\r\n\t\t\t}else{\r\n\t\t\t\tvalormultiplicacion = this.FuncionMultiplicacion(k);\r\n\t\t\t}\r\n\t\t\tif(this.arrreglo[valormultiplicacion]!=-1){\r\n\t\t\t\tif(this.arrreglo[valormultiplicacion].length>1){\r\n\t\t\t\t\tfor(let i=0;i<this.arrreglo[valormultiplicacion].length;i++){\r\n\t\t\t\t\t\tif(this.arrreglo[valormultiplicacion][i]==k){\r\n\t\t\t\t\t\t\tlet auxarreglo = this.arrreglo[valormultiplicacion];\r\n\t\t\t\t\t\t\tauxarreglo.splice(i,1);\r\n\t\t\t\t\t\t\tthis.arrreglo[valormultiplicacion] = auxarreglo;\r\n\t\t\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\t\t\tthis.InsertarMultiplicacion(nuevo);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.arrreglo[valormultiplicacion]=[-1];\r\n\t\t\t\t\tthis.insertados--;\r\n\t\t\t\t\tthis.InsertarMultiplicacion(nuevo);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.Rehashing(\"Multiplicacion\");\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tsetDataSet = () => { // Esto Genera los nodos de Vis.\r\n\t\tvar dotNode = [];\r\n\t\tvar dotEdges = [];\r\n\t\tlet contador = 0\r\n\t\tfor(let i=0;i<this.get_sizearreglo();i++){\r\n\t\t\tdotNode.push({id:i, label: \"/\", level:0});\r\n\t\t\tif(i+1<this.arrreglo.length){\r\n\t\t\t\tdotEdges.push({from:i, to:i+1, arrows: \"to\"});\r\n\t\t\t}\r\n\t\t\tcontador++;\r\n\t\t}\r\n\t\tconsole.log(contador);\r\n\t\tfor(let i=0;i<this.get_sizearreglo();i++){\r\n\t\t\tif(this.arrreglo[i]!=-1){\r\n\t\t\t\tif(this.arrreglo[i].length>1){\r\n\t\t\t\t\tfor(let j=0;j<this.arrreglo[i].length;j++){\r\n\t\t\t\t\t\tif(j==0){\r\n\t\t\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][j];\r\n\t\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:j+1});\r\n\t\t\t\t\t\t\tdotEdges.push({from:i, to:contador, arrows: \"to\"});\r\n\t\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t\t\tif((j+1)<=this.arrreglo[i].length){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][j+1];\r\n\t\t\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:j+2});\r\n\t\t\t\t\t\t\t\tdotEdges.push({from:contador-1, to:contador, arrows: \"to\"});\r\n\t\t\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif((j+1)<this.arrreglo[i].length){\r\n\t\t\t\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][j+1];\r\n\t\t\t\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:j+2});\r\n\t\t\t\t\t\t\t\tdotEdges.push({from:contador-1, to:contador, arrows: \"to\"});\r\n\t\t\t\t\t\t\t\tcontador++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//contador++;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tlet etiqueta=\"\"+this.arrreglo[i][0];\r\n\t\t\t\t\tdotNode.push({id:contador, label: etiqueta, level:1});\r\n\t\t\t\t\tdotEdges.push({from:i, to:contador, arrows: \"to\"});\r\n\t\t\t\t\tcontador++\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n        return [dotNode,dotEdges];\r\n\r\n    } \r\n\r\n}\r\nexport default HashAbierta;","class Nodo{\r\n\r\n\tconstructor(){\r\n\t\tthis.principal = null; // Hace Referencia a la primero Estructura.\r\n\t\tthis.secundaria = null; // Hace Referencia a la segunda Estructura.\r\n\t}\r\n\r\n\tgetPrincipal = () => { return this.principal; }\r\n\tsetPrincipal = (principal) => { this.principal = principal; }\r\n\tgetSecundaria = () => { return this.secundaria; }\r\n\tsetSecundaria = (secundaria) => { this.secundaria = secundaria}\r\n}\r\nexport default Nodo;\r\n// module.exports = Nodo;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport EstructuraCompuesta from './Modelo/Compuesta/EstructuraCompuesta/Compuesta.js'; // Importar la Estructura Lista Simple.\r\nvar filePath;\r\nvar compuesta = new EstructuraCompuesta(); // Instancia de la compuesta.\r\nvar data, data2;\r\nvar options, options2;\r\nclass Compuesta extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\tdato1: '',\r\n\t\t\tdato2: '',\r\n\t\t\testructura1: '',\r\n\t\t\testructura2: '',\r\n\t\t\tupdate1: '',\r\n\t\t\tupdate2: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t\tthis.network2 = {};\r\n\t  \tthis.appRef = createRef();\r\n\t  \tthis.appRef2 = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\tcomponentDidMount2() {\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\t\r\n\t\tcompuesta.insertar(this.state.estructura1, this.state.estructura2, this.state.dato1, this.state.dato2);\r\n\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar data ={\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\r\n\t\tvar options = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#F2FF9D',\r\n\t\t            border:  '#df77e7',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\tvar data2 ={\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\r\n\t\tvar options2 = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#ffffff',\r\n\t\t            border:  '#ffef50',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t\r\n\t\t\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tcompuesta.eliminar(this.state.estructura1, this.state.estructura2, this.state.dato1, this.state.dato2);\r\n\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar data ={\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\r\n\t\tvar options = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#F2FF9D',\r\n\t\t            border:  '#df77e7',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\tvar data2 ={\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\r\n\t\tvar options2 = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#ffffff',\r\n\t\t            border:  '#ffef50',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tcompuesta.update(this.state.estructura1, this.state.estructura2, this.state.dato1, this.state.dato2, this.state.update1, this.state.update2);\r\n\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar data ={\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\r\n\t\tvar options = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#F2FF9D',\r\n\t\t            border:  '#df77e7',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\tvar data2 ={\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\r\n\t\tvar options2 = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#ffffff',\r\n\t\t            border:  '#ffef50',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tvar {nodo1, nodo2} = compuesta.search(this.state.estructura1, this.state.estructura2, this.state.dato1, this.state.dato2)\r\n\t\tconsole.log(\"pero bueno\")\r\n\t\tconsole.log(String(nodo1)+\"->\"+String(nodo2))\r\n\t\tif (0 <= parseInt(nodo1) || 0 <= parseInt(nodo2)){\r\n\t\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\t\tvar data ={\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\r\n\t\t\tvar options = {\r\n\t\t\t\tphysics: {\r\n\t\t\t\t\tstabilization: false,\r\n\t\t\t\t\tbarnesHut: {\r\n\t\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tnodes:{\r\n\t\t\t        borderWidth: 20,\r\n\t\t\t        color: {\r\n\t\t\t            background: '#F2FF9D',\r\n\t\t\t            border:  '#df77e7',\r\n\t\t\t            highlight: {\r\n\t\t\t                border: '#00F3B8',\r\n\t\t\t                background: '#FF1F00'\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\r\n\t\t\tvar data2 ={\r\n\t\t\t\tnodes: getNodes2,\r\n\t\t\t\tedges: getEdges2\r\n\t\t\t}\r\n\r\n\t\t\tvar options2 = {\r\n\t\t\t\tphysics: {\r\n\t\t\t\t\tstabilization: false,\r\n\t\t\t\t\tbarnesHut: {\r\n\t\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tnodes:{\r\n\t\t\t        borderWidth: 20,\r\n\t\t\t        color: {\r\n\t\t\t            background: '#ffffff',\r\n\t\t\t            border:  '#ffef50',\r\n\t\t\t            highlight: {\r\n\t\t\t                border: '#00F3B8',\r\n\t\t\t                background: '#FF1F00'\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tgetEdges.add({from: parseInt(nodo1), to: parseInt(nodo1), value:parseInt(nodo1),color:{color:'#ff383f'}});\r\n\t\t\tgetEdges2.add({from: parseInt(nodo2), to: parseInt(nodo2), value:parseInt(nodo2),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\t\tvar data ={\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\r\n\t\t\tvar options = {\r\n\t\t\t\tphysics: {\r\n\t\t\t\t\tstabilization: false,\r\n\t\t\t\t\tbarnesHut: {\r\n\t\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tnodes:{\r\n\t\t\t        borderWidth: 20,\r\n\t\t\t        color: {\r\n\t\t\t            background: '#F2FF9D',\r\n\t\t\t            border:  '#df77e7',\r\n\t\t\t            highlight: {\r\n\t\t\t                border: '#00F3B8',\r\n\t\t\t                background: '#FF1F00'\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\r\n\t\t\tvar data2 ={\r\n\t\t\t\tnodes: getNodes2,\r\n\t\t\t\tedges: getEdges2\r\n\t\t\t}\r\n\r\n\t\t\tvar options2 = {\r\n\t\t\t\tphysics: {\r\n\t\t\t\t\tstabilization: false,\r\n\t\t\t\t\tbarnesHut: {\r\n\t\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tnodes:{\r\n\t\t\t        borderWidth: 20,\r\n\t\t\t        color: {\r\n\t\t\t            background: '#ffffff',\r\n\t\t\t            border:  '#ffef50',\r\n\t\t\t            highlight: {\r\n\t\t\t                border: '#00F3B8',\r\n\t\t\t                background: '#FF1F00'\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\t\r\n\r\n\r\n\t\t}\r\n\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\r\n\thandleAddTop = () => {\r\n\t\tcompuesta.insertar_inicio(this.state.estructura1, this.state.estructura2, this.state.dato1, this.state.dato2);\r\n\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar data ={\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\r\n\t\tvar options = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#F2FF9D',\r\n\t\t            border:  '#df77e7',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\tvar data2 ={\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\r\n\t\tvar options2 = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#ffffff',\r\n\t\t            border:  '#ffef50',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t\t\r\n\t}\r\n\thandleAddLower = () => {\r\n\t\tcompuesta.insertar_ultimo(this.state.estructura1, this.state.estructura2, this.state.dato1, this.state.dato2);\r\n\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\tvar data ={\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\r\n\t\tvar options = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#F2FF9D',\r\n\t\t            border:  '#df77e7',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\tvar data2 ={\r\n\t\t\tnodes: getNodes2,\r\n\t\t\tedges: getEdges2\r\n\t\t}\r\n\r\n\t\tvar options2 = {\r\n\t\t\tphysics: {\r\n\t\t\t\tstabilization: false,\r\n\t\t\t\tbarnesHut: {\r\n\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tnodes:{\r\n\t\t        borderWidth: 20,\r\n\t\t        color: {\r\n\t\t            background: '#ffffff',\r\n\t\t            border:  '#ffef50',\r\n\t\t            highlight: {\r\n\t\t                border: '#00F3B8',\r\n\t\t                background: '#FF1F00'\r\n\t\t            }\r\n\t\t        }\r\n\t\t    }\r\n\t\t};\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Compuesta\"){\r\n\t\t\tdataJson.valores.forEach(element =>{\t\t\r\n\t\t\t\tconsole.log(element.principal + \"->\"+element.secundario)\r\n\t\t\t\tcompuesta.insertar(this.state.estructura1, this.state.estructura2, String(element.principal), String(element.secundario));\r\n\t\t\t});\r\n\r\n\r\n\t\t\tvar getNodes = new DataSet(compuesta.getEstructuraPrimaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\t\tvar getEdges = new DataSet(compuesta.getEstructuraPrimaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\t\tvar getNodes2 = new DataSet(compuesta.getEstructuraSecundaria().setNodesDataSet());  // Se Crean los Nodos.\r\n\t\t\tvar getEdges2 = new DataSet(compuesta.getEstructuraSecundaria().setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\t\t\tvar data ={\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\r\n\t\t\tvar options = {\r\n\t\t\t\tphysics: {\r\n\t\t\t\t\tstabilization: false,\r\n\t\t\t\t\tbarnesHut: {\r\n\t\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tnodes:{\r\n\t\t\t        borderWidth: 20,\r\n\t\t\t        color: {\r\n\t\t\t            background: '#F2FF9D',\r\n\t\t\t            border:  '#df77e7',\r\n\t\t\t            highlight: {\r\n\t\t\t                border: '#00F3B8',\r\n\t\t\t                background: '#FF1F00'\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\r\n\t\t\tvar data2 ={\r\n\t\t\t\tnodes: getNodes2,\r\n\t\t\t\tedges: getEdges2\r\n\t\t\t}\r\n\r\n\t\t\tvar options2 = {\r\n\t\t\t\tphysics: {\r\n\t\t\t\t\tstabilization: false,\r\n\t\t\t\t\tbarnesHut: {\r\n\t\t\t\t\t\tspringLength: 120,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tnodes:{\r\n\t\t\t        borderWidth: 20,\r\n\t\t\t        color: {\r\n\t\t\t            background: '#ffffff',\r\n\t\t\t            border:  '#ffef50',\r\n\t\t\t            highlight: {\r\n\t\t\t                border: '#00F3B8',\r\n\t\t\t                background: '#FF1F00'\r\n\t\t\t            }\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t\t\tthis.network2 = new Network(this.appRef2.current, data2, options2);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\t\t// compuesta.generateJSON(compuesta)\r\n\t\tconsole.log(\"Guardar :c\")\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"estructura1\" className=\"form-control\" placeholder=\"Estructura 1\" id=\"InputCola\" value={this.state.estructura1} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato1\" className=\"form-control\" placeholder=\"Dato 1\" id=\"InputCola\" value={this.state.dato1} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<input type=\"text\" name=\"update1\" className=\"form-control\" placeholder=\"Update 1\" id=\"InputCola\" value={this.state.update1} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"estructura2\" className=\"form-control\" placeholder=\"Estructura 2\" id=\"InputCola\" value={this.state.estructura2} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato2\" className=\"form-control\" placeholder=\"Dato 2\" id=\"InputCola\" value={this.state.dato2} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<input type=\"text\" name=\"update2\" className=\"form-control\" placeholder=\"Update 2\" id=\"InputCola\" value={this.state.update2} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<div style={{height: 20 + 'em'}} ref={this.appRef} />\r\n\t\t\t<div style={{height: 20 + 'em'}} ref={this.appRef2} />\r\n\t\t\t{/*<tr>\r\n\t\t\t\t<td><div style={{height: 30 + 'em'}} ref={this.appRef} /></td>\r\n\t\t\t\t<td><div style={{height: 30 + 'em'}} ref={this.appRef2} /></td>\r\n\t\t\t</tr>*/}\r\n\t\t\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default Compuesta;","import ListaSimple from '../../Lineales/ListaSimple/ListaSimple'; \r\nimport ListaDoble from '../../Lineales/ListaDoble/ListaDoble';\r\nimport ListaCircular from '../../Lineales/ListaCircular/ListaCircular';\r\nimport ListaCircularDoble from '../../Lineales/ListaCircularDoble/ListaCDE';\r\nimport Pila from '../../Lineales/Pila/Stack';\r\nimport Cola from '../../Lineales/Cola/EstructuraCola';\r\nimport Nodo from './Nodo.js';\r\n\r\n\r\nclass Compuesta{\r\n\tconstructor(){\r\n\t\tthis.estructuraPrimaria = null;\r\n\t\tthis.estructuraSecundaria = null;\r\n\t\tthis.primaria = null;\r\n\t\tthis.secundaria = null;\r\n\t\tthis.lista = [];\r\n\t}\r\n\r\n\r\n\tinsertar = (primaria, secundaria, dato1, dato2) => {\r\n\t\tif (this.getPrimaria() == null && this.getSecundaria() == null){ // Aca crea una instancia de la estructura\r\n\t\t\tthis.setPrimaria(primaria);\r\n\t\t\tthis.setSecundaria(secundaria);\r\n\t\t\tthis.creatorPrimaria();\r\n\t\t\tthis.creatorSecundaria();\r\n\t\t}\r\n\t\tif(this.getPrimaria()!=null && this.getPrimaria()!= primaria){\r\n\t\t\tthis.setPrimaria(primaria);\r\n\t\t\tthis.creatorPrimaria();\r\n\t\t\tthis.getLista().forEach(element => {\r\n\t\t\t\tif (element.getPrincipal()!=null){\r\n\t\t\t\t\telement.setPrincipal(null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(this.getSecundaria()!=null && this.getSecundaria()!= secundaria){\r\n\t\t\tthis.setSecundaria(secundaria);\r\n\t\t\tthis.creatorSecundaria();\r\n\t\t\tthis.getLista().forEach(element => {\r\n\t\t\t\tif (element.getSecundaria()!=null){\r\n\t\t\t\t\telement.setSecundaria(null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t\tlet nodo_principal = this.getEstructuraPrimaria().search(dato1); // Busca el dato1\r\n\t\tlet nodo_secundario = this.getEstructuraPrimaria().search(dato2); // Buscael dato2\r\n\r\n\t\tlet nodo_nuevo = new Nodo(); // Se crea un nuevo Nodo.\r\n\r\n\t\tif(nodo_principal != false){ // Si es diferente de null es por que existe un dato\r\n\t\t\tnodo_nuevo.setPrincipal(dato1);\r\n\t\t\tthis.getLista().forEach(element => { //Busca en la lista si existe el dato.\r\n\t\t\t\tif(dato1 == element.getPrincipal()){\r\n\t\t\t\t\tif(nodo_secundario != false){\r\n\t\t\t\t\tnodo_nuevo.setSecundaria(dato2);\r\n\t\t\t\t\tthis.getEstructuraSecundaria().insertar(dato2);\r\n\t\t\t\t\tthis.lista.push(nodo_nuevo)\r\n\t\t\t\t\tconsole.log(\"Dato 1: \"+dato1+\" - Ya Existe.\\nDato 2: \"+dato2+\" - No Existe\")\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.log('Datos ya agregados')\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}) \r\n\t\t}else{\r\n\r\n\t\t\tif(nodo_secundario != false){\r\n\t\t\t\tthis.getLista().forEach(element => {\r\n\t\t\t\tnodo_nuevo.setSecundaria(dato2);\r\n\t\t\t\tif(dato2 == element.getSecundaria()){\r\n\t\t\t\t\tif(nodo_secundario != false){\r\n\t\t\t\t\tnodo_nuevo.setPrincipal(dato1);\r\n\t\t\t\t\tthis.getEstructuraPrimaria().insertar(dato1);\r\n\t\t\t\t\tthis.lista.push(nodo_nuevo)\r\n\t\t\t\t\tconsole.log(\"Dato 1: \"+dato1+\" - No Existe.\\nDato 2: \"+dato2+\" - Ya Existe\")\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.log(\"Datos ya agregados\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}); \r\n\t\t\t}else{\r\n\r\n\t\t\tthis.getEstructuraPrimaria().insertar(dato1);\r\n\t\t\tthis.getEstructuraSecundaria().insertar(dato2);\r\n\r\n\t\t\tnodo_nuevo.setPrincipal(dato1);\r\n\t\t\tnodo_nuevo.setSecundaria(dato2);\r\n\t\t\tthis.lista.push(nodo_nuevo);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\teliminar = (primaria, secundaria, dato1, dato2) => {\r\n\r\n\t\tif (this.getPrimaria() == null && this.getSecundaria() == null){\r\n\t\t\talert(\"INGRESA AMBAS ESTRUCTURAS\");\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\tif(this.getPrimaria() == \"Pila\"){\r\n\t\tthis.getEstructuraPrimaria().pop();\r\n\t\t}else if(this.getPrimaria() == \"Cola\"){\r\n\t\tthis.getEstructuraPrimaria().Desencolar();\r\n\t\t}else{\r\n\t\tthis.getEstructuraPrimaria().eliminar(dato1);\r\n\t\t}\r\n\r\n\t\tif(this.getSecundaria() == \"Pila\"){\r\n\t\t\tthis.getEstructuraSecundaria().pop();\r\n\t\t}else if(this.getSecundaria() == \"Cola\"){\r\n\t\t\tthis.getEstructuraSecundaria().Desencolar();\r\n\t\t}else{\r\n\t\tthis.getEstructuraSecundaria().eliminar(dato2);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tsearch = (primaria, secundaria, dato1, dato2) => {\r\n\r\n\t\tif (this.getPrimaria() == null && this.getSecundaria() == null){\r\n\t\t\talert(\"INGRESA AMBAS ESTRUCTURAS\");\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\tlet valor1 = this.getEstructuraPrimaria().search(dato1)\r\n\t\tlet valor2 = this.getEstructuraSecundaria().search(dato2)\r\n\r\n\t\tconsole.log('search')\r\n\t\tconsole.log(String(valor1)+\"-\"+String(valor2))\r\n\t\treturn {\r\n\t\t\tnodo1: valor1,\r\n\t\t\tnodo2: valor2\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate = (primaria, secundaria, dato1, dato2, update1, update2) =>{\r\n\r\n\r\n\t\tif (this.getPrimaria() == null && this.getSecundaria() == null){\r\n\t\t\talert(\"INGRESA AMBAS ESTRUCTURAS\");\r\n\t\t\treturn null\r\n\t\t}\r\n\t\tlet valor1 = this.getEstructuraPrimaria().search(dato1);\r\n\t\tlet valor2 = this.getEstructuraSecundaria().search(dato2);\r\n\r\n\t\tif (valor1!=null){ this.getEstructuraPrimaria().update(dato1, update1); }\r\n\r\n\t\tif(valor2!=null){ this.getEstructuraSecundaria().update(dato2, update2); }\r\n\r\n\t}\r\n\r\n\tinsertar_inicio = (primaria, secundaria, dato1, dato2) => {\r\n\t\tif (this.getPrimaria() == null && this.getSecundaria() == null){\r\n\t\t\talert(\"INGRESA AMBAS ESTRUCTURAS\");\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\t\r\n\t\t\r\n\t\tif (this.getPrimaria() != \"Pila\" && this.getPrimaria() != \"Cola\"){\r\n\t\t\tlet valor1 = this.getEstructuraPrimaria().search(dato1);\r\n\t\t\tif (valor1==false){\r\n\t\t\t\tthis.getEstructuraPrimaria().insertar_inicio(dato1)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.getSecundaria() != \"Pila\" && this.getSecundaria() != \"Cola\"){\r\n\t\t\tlet valor2 = this.getEstructuraSecundaria().search(dato2);\r\n\t\t\tif (valor2==false){\r\n\t\t\t\tthis.getEstructuraSecundaria().insertar_inicio(dato2)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tinsertar_ultimo = (primaria, secundaria, dato1, dato2) => {\r\n\r\n\t\tif (this.getPrimaria() == null && this.getSecundaria() == null){\r\n\t\t\talert(\"INGRESA AMBAS ESTRUCTURAS\");\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\r\n\t\tif (this.getPrimaria() != \"Pila\" && this.getPrimaria() != \"Cola\"){\r\n\t\tlet valor1 = this.getEstructuraPrimaria().search(dato1);\r\n\t\t\tif (valor1==false){\r\n\t\t\t\tthis.getEstructuraPrimaria().insertar_ultimo(dato1)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.getSecundaria() != \"Pila\" && this.getSecundaria() != \"Cola\"){\r\n\t\tlet valor2 = this.getEstructuraSecundaria().search(dato2);\r\n\t\t\tif (valor2==false){\r\n\t\t\t\tthis.getEstructuraSecundaria().insertar_ultimo(dato2)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcreatorPrimaria = () => {\r\n\t\tif(this.primaria == \"Lista Simple\"){ \r\n\t\t\tthis.estructuraPrimaria = new ListaSimple(); \r\n\t\t}else if(this.primaria == \"Lista Doble\"){ \r\n\t\t\t\tthis.estructuraPrimaria = new ListaDoble(); \r\n\t\t}else if(this.primaria == \"Lista Circular\"){ \r\n\t\t\t\tthis.estructuraPrimaria = new ListaCircular(); \r\n\t\t}else if(this.primaria == \"Lista Circular Doble\"){ \r\n\t\t\t\tthis.estructuraPrimaria = new ListaCircularDoble(); \r\n\t\t}else if(this.primaria == \"Pila\"){ \r\n\t\t\t\tthis.estructuraPrimaria = new Pila(); \r\n\t\t}else if(this.primaria == \"Cola\"){ \r\n\t\t\t\tthis.estructuraPrimaria = new Cola(); \r\n\t\t}\r\n\t}\r\n\tcreatorSecundaria = () =>{\r\n\t\tif(this.secundaria == \"Lista Simple\"){ \r\n\t\t\tthis.estructuraSecundaria = new ListaSimple(); \r\n\t\t}else if(this.secundaria == \"Lista Doble\"){ \r\n\t\t\tthis.estructuraSecundaria = new ListaDoble(); \r\n\t\t}else if(this.secundaria == \"Lista Circular\"){ \r\n\t\t\tthis.estructuraSecundaria = new ListaCircular(); \r\n\t\t}else if(this.secundaria == \"Lista Circular Doble\"){ \r\n\t\t\tthis.estructuraSecundaria = new ListaCircularDoble(); \r\n\t\t}else if(this.secundaria == \"Pila\"){ \r\n\t\t\tthis.estructuraSecundaria = new Pila(); \r\n\t\t}else if(this.secundaria == \"Cola\"){ \r\n\t\t\tthis.estructuraSecundaria = new Cola(); \r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\r\n\r\n\tgetEstructuraPrimaria = () => { return this.estructuraPrimaria; }\r\n\tsetEstructuraPrimaria = (primaria) => { this.estructuraPrimaria = primaria; }\r\n\t\r\n\tgetEstructuraSecundaria = () => { return this.estructuraSecundaria; }\r\n\tsetEstructuraSecundaria = (secundaria) => { this.estructuraSecundaria = secundaria }\r\n\r\n\tgetLista = () => { return this.lista; }\r\n\r\n\tgetPrimaria = () => { return this.primaria; }\r\n\tsetPrimaria = (primaria) => { this.primaria = primaria}  \r\n\tgetSecundaria = () => { return this.secundaria; }\r\n\tsetSecundaria = (secundaria) => { this.secundaria = secundaria; }\r\n}\r\n\r\n\r\nexport default Compuesta;\r\n// module.exports = Compuesta;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Navbar from './Componentes/Navbar';\r\nimport Home from './Componentes/Paginas/Home';\r\nimport ListaSE from './Componentes/Paginas/ListaSE';\r\nimport ListaDE from './Componentes/Paginas/ListaDE';\r\nimport ListaCSE from './Componentes/Paginas/ListaCSE';\r\nimport ListaCDE from './Componentes/Paginas/ListaCDE';\r\nimport Pila from './Componentes/Paginas/Pila';\r\nimport Cola from './Componentes/Paginas/Cola';\r\nimport ColaPrioridad from './Componentes/Paginas/ColaPrioridad';\r\nimport Burbuja from './Componentes/Paginas/Burbuja';\r\nimport Seleccion from './Componentes/Paginas/Seleccion';\r\nimport Insercion from './Componentes/Paginas/Insercion';\r\nimport Rapido from './Componentes/Paginas/Rapido';\r\nimport AVL from './Componentes/Paginas/AVL';\r\nimport ArbolB from './Componentes/Paginas/Arbolb';\r\nimport ArbolBPlus from './Componentes/Paginas/Arbolbplus';\r\nimport ArbolMerkle from './Componentes/Paginas/Arbolmerkle';\r\nimport MatrizDispersa from './Componentes/Paginas/MatrizDispersa';\r\nimport TablaHashAbierta from './Componentes/Paginas/HashAbierta';\r\nimport Compuesta from './Componentes/Paginas/Compuesta'\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path='/' exact component={Home} />\r\n        <Route path='/HashAbierta' exact component={TablaHashAbierta} />\r\n        <Route path='/Listasimplementeenlazada' component={ListaSE} />\r\n        <Route path='/Listadoblementeenlazada' component={ListaDE} />\r\n        <Route path='/Listacircularsimplementeenlazada' component={ListaCSE} />\r\n        <Route path='/Listacirculardoblementeenlazada' component={ListaCDE} />\r\n        <Route path='/Pila' component={Pila} />\r\n        <Route path='/Cola' component={Cola} />\r\n        <Route path='/Colaprioridad' component={ColaPrioridad} />\r\n        <Route path='/Burbuja' component={Burbuja} />\r\n        <Route path='/Seleccion' component={Seleccion} />\r\n        <Route path='/Insercion' component={Insercion} />\r\n        <Route path='/Rapido' component={Rapido} />\r\n        <Route path='/AVL' component={AVL} />\r\n        <Route path='/Arbolb' component={ArbolB} />\r\n        <Route path='/Arbolbplus' component={ArbolBPlus} />\r\n        <Route path='/Arbolmerkle' component={ArbolMerkle} />\r\n        <Route path='/MatrizDispersa' component={MatrizDispersa} />\r\n        <Route path='/Compuesta' component={Compuesta} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}