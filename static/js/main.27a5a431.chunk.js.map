{"version":3,"sources":["Componentes/Paginas/Modelo/Lineales/ListaSimple/Nodo.js","Componentes/Paginas/Modelo/Lineales/ListaDoble/Nodo.js","Componentes/Paginas/Modelo/Lineales/ListaCircular/Nodo.js","Componentes/Paginas/Modelo/Lineales/ListaCircularDoble/Nodo.js","Componentes/Paginas/Modelo/Lineales/Pila/Nodo.js","Componentes/Paginas/Modelo/Lineales/Cola/Nodo.js","Componentes/Paginas/Modelo/Lineales/ColaPrioridad/Nodo.js","Componentes/MenuItemsLineales.js","Componentes/MenuItemsOrdenamientos.js","Componentes/MenuItemsArboreas.js","Componentes/Navbar.js","Componentes/Paginas/Home.js","Componentes/Paginas/Modelo/Lineales/ListaSimple/ListaSimple.js","Componentes/Paginas/ListaSE.js","Componentes/Paginas/Modelo/Lineales/ListaDoble/ListaDoble.js","Componentes/Paginas/ListaDE.js","Componentes/Paginas/Modelo/Lineales/ListaCircular/ListaCircular.js","Componentes/Paginas/ListaCSE.js","Componentes/Paginas/Modelo/Lineales/ListaCircularDoble/ListaCDE.js","Componentes/Paginas/ListaCDE.js","Componentes/Paginas/Modelo/Lineales/Pila/Stack.js","Componentes/Paginas/Pila.js","Componentes/Paginas/Modelo/Lineales/Cola/EstructuraCola.js","Componentes/Paginas/Cola.js","Componentes/Paginas/Modelo/Lineales/ColaPrioridad/ColaPrioridad.js","Componentes/Paginas/ColaPrioridad.js","Componentes/Paginas/Burbuja.js","Componentes/Paginas/Modelo/Ordenamientos/OrBurbuja.js","Componentes/Paginas/Seleccion.js","Componentes/Paginas/Modelo/Ordenamientos/OrSeleccion.js","Componentes/Paginas/Insercion.js","Componentes/Paginas/Modelo/Ordenamientos/OrInsercion.js","Componentes/Paginas/Rapido.js","Componentes/Paginas/AVL.js","Componentes/Paginas/Arbolb.js","Componentes/Paginas/Arbolbplus.js","Componentes/Paginas/Arbolmerkle.js","App.js","reportWebVitals.js","index.js"],"names":["Nodo","dato","this","siguiente","module","exports","anterior","valor","nuevonodo","prioridad","MenuItemsLineales","title","path","cName","MenuItemsOrdenamientos","MenuItemsArboreas","Navbar","useState","setClick","className","href","id","data-bs-toggle","role","aria-haspopup","aria-expanded","map","item","index","to","onClick","Home","scope","require","listaSimple","cabeza","insertar","nodo_nuevo","get_vacia","set_cabeza","set_ultimo","get_ultimo","set_siguiente","insertar_inicio","get_cabeza","insertar_ultimo","eliminar","console","log","nodo_actual","get_siguiente","get_dato","update","cambio","set_dato","search","i","mostrar","setNodesDataSet","dot","push","label","setEdgesDataSet","nodoUno","parseInt","nodoDos","from","arrows","generateJSON","dic","toString","valores","dictstring","JSON","stringify","writeFile","err","result","ultimo","getNodes","DataSet","getEdges","data","nodes","edge","options","physics","stabilization","barnesHut","springLength","borderWidth","color","background","border","highlight","ListaSE","props","handleFileChange","e","file","target","files","reader","FileReader","readAsText","onload","setState","fileName","name","fileContent","handleAdd","state","text","edges","network","Network","appRef","current","handleDelete","handleUpdate","dato_actualizado","handleAddTop","handleAddLower","handleSearch","add","value","handleOpenFile","dataJson","parse","categoria","nombre","length","alert","handleSaveFile","createRef","handleInputChange","bind","style","marginLeft","type","placeholder","onChange","class","min","max","step","defaultValue","height","ref","Component","listaDoble","vacia","set_primero","set_anterior","get_primero","temp","get_anterior","print","primero","ListaDE","listaCircular","size","ListaCSE","listacde","Agregar","AgregarFinal","AgregarInicio","Eliminar","aux","Imprimir","Actualizar","Buscar","GenerarNodosDOT","etiqueta","GenerarEdgesDOT","ListaCDE","pila","empty","pop","Pila","estructuracola","Encolar","nodo","Desencolar","get_valor","set_valor","nodoactual","nodosiguiente","nodos","flechas","datos","Cola","AgregarDato","agregar","EliminarDato","ActualizarDato","BuscarDato","valoreliminar","valorbuscar","rango","colaprioridad","set_prioridad","salir","get_prioridad","ColaPrioridad","burbuja","array","ordenamiento_burbuja","j","Burbuja","handleOrdenamiento","marginRight","seleccion","ordenamiento_seleccion","Seleccion","insercion","ordenamiento_insercion","Insercion","Rapido","setRango","AVL","ArbolB","ArbolBPlus","ArbolMerkle","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27a5a431.chunk.js","sourcesContent":["var i = 0;\r\nclass Nodo{\r\n\r\n    constructor(dato) {\r\n        this.siguiente = null;\r\n        this.dato = dato;\r\n        i ++;\r\n        \r\n    }\r\n\r\n    get_siguiente(){\r\n\r\n        return this.siguiente;\r\n    }\r\n\r\n    set_siguiente(siguiente){\r\n        this.siguiente = siguiente;\r\n    }\r\n\r\n    get_dato(){\r\n        return this.dato;\r\n    }\r\n\r\n    set_dato(dato){\r\n        this.dato = dato;\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = Nodo;","class Nodo{\r\n\r\n    constructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n        this.anterior = null;\r\n    }\r\n\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n    \r\n    get_anterior(){ return this.anterior; }\r\n    set_anterior(anterior){ this.anterior = anterior; }\r\n}\r\n\r\nmodule.exports = Nodo;","class Nodo{\r\n\r\n    constructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n    }\r\n\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n}\r\n\r\nmodule.exports = Nodo;","class Nodo{\r\n\tconstructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n        this.anterior = null;\r\n    }\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n    \r\n    get_anterior(){ return this.anterior; }\r\n    set_anterior(anterior){ this.anterior = anterior; }\r\n}\r\n\r\nmodule.exports = Nodo;","class Nodo{\r\n\r\n    constructor(dato){\r\n        this.dato = dato;\r\n        this.siguiente = null;\r\n    }\r\n\r\n    get_dato(){ return this.dato; }\r\n    set_dato(dato){ this.dato = dato; }\r\n\r\n    get_siguiente(){ return this.siguiente; }\r\n    set_siguiente(siguiente){ this.siguiente = siguiente; }\r\n}\r\n\r\nmodule.exports = Nodo;","class Nodo{\r\n\r\n\tconstructor(valor){\r\n\t\tthis.siguiente = null;\r\n\t\tthis.valor = valor;\r\n\t}\r\n\t\r\n\tget_siguiente(){ return this.siguiente;}\r\n\tset_siguiente(nuevonodo){ this.siguiente=nuevonodo;}\r\n\tget_valor(){ return this.valor;}\r\n\tset_valor(valor){ this.valor=valor;}\r\n}\r\n\r\nmodule.exports = Nodo;","class Nodo{\r\n\r\n\tconstructor(valor){\r\n\t\tthis.siguiente = null;\r\n\t\tthis.valor = valor;\r\n\t\tthis.prioridad = 0;\r\n\t}\r\n\t\r\n\tget_siguiente(){ return this.siguiente;}\r\n\tset_siguiente(nuevonodo){ this.siguiente=nuevonodo;}\r\n\tget_valor(){ return this.valor;}\r\n\tset_valor(valor){ this.valor=valor;}\r\n\tget_prioridad(){return this.prioridad;}\r\n\tset_prioridad(valor){this.prioridad=valor;}\r\n}\r\n\r\nmodule.exports = Nodo;","export const MenuItemsLineales = [\r\n\t{\r\n\t\ttitle:'Lista simplemente enlazada',\r\n\t\tpath:'/Listasimplementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Lista doblemente enlazada',\r\n\t\tpath:'/Listadoblementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Lista circular simplemente enlazada',\r\n\t\tpath:'/Listacircularsimplementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Lista circular doblemente enlazada',\r\n\t\tpath:'/Listacirculardoblementeenlazada',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Pila',\r\n\t\tpath:'/Pila',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Cola',\r\n\t\tpath:'/Cola',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Cola de Prioridad',\r\n\t\tpath:'/Colaprioridad',\r\n\t\tcName:'dropdown-item'\r\n\t}\r\n]","export const MenuItemsOrdenamientos = [\r\n\t{\r\n\t\ttitle:'Burbuja',\r\n\t\tpath:'/Burbuja',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Seleccion',\r\n\t\tpath:'/Seleccion',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Insercion',\r\n\t\tpath:'/Insercion',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Rapido',\r\n\t\tpath:'/Rapido',\r\n\t\tcName:'dropdown-item'\r\n\t}\r\n]","export const MenuItemsArboreas = [\r\n\t{\r\n\t\ttitle:'Arbol Binario de Busqueda',\r\n\t\tpath:'/ArbolBinario',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'AVL',\r\n\t\tpath:'/AVL',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Arbol B',\r\n\t\tpath:'/Arbolb',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Arbol B+',\r\n\t\tpath:'/Arbolbplus',\r\n\t\tcName:'dropdown-item'\r\n\t},\r\n\t{\r\n\t\ttitle:'Arbol de Merkle',\r\n\t\tpath:'/Arbolmerkle',\r\n\t\tcName:'dropdown-item'\r\n\t}\r\n]","import React, { useState } from 'react';\r\nimport { MenuItemsLineales } from './MenuItemsLineales';\r\nimport { MenuItemsOrdenamientos } from './MenuItemsOrdenamientos';\r\nimport { MenuItemsArboreas } from './MenuItemsArboreas';\r\nimport { Link } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\n\r\nfunction Navbar(){\r\n\tconst [click, setClick] = useState(false);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      \t\t\t<div className=\"container-fluid\">\r\n      \t\t\t\t<a className=\"navbar-brand\" href=\"./\">ESTRUCTURA DE DATOS</a>\r\n      \t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n          \t\t\t<ul className=\"navbar-nav me-auto\">\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n              \t\t\t\t<a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Estructuras Lineales</a>\r\n              \t\t\t\t<div className=\"dropdown-menu\">\r\n                \t\t\t\t{MenuItemsLineales.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n              \t\t\t\t</div>\r\n           \t\t\t\t</li>\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Ordenamientos</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsOrdenamientos.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n            \t\t\t<li className=\"nav-item dropdown\">\r\n            \t\t\t  <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Estructura Arboreas</a>\r\n            \t\t\t  <div className=\"dropdown-menu\">\r\n            \t\t\t    {MenuItemsArboreas.map((item, index) =>{\r\n                \t\t\t\t\treturn(\r\n                \t\t\t\t\t\t<li key={index}>\r\n                \t\t\t\t\t\t\t<Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\r\n                \t\t\t\t\t\t\t\t{item.title}\r\n                \t\t\t\t\t\t\t</Link>\r\n                \t\t\t\t\t\t</li>\r\n                \t\t\t\t\t)\r\n                \t\t\t\t})}\r\n            \t\t\t  </div>\r\n            \t\t\t</li>\r\n          \t\t\t</ul>\r\n        \t\t\t</div>\t\r\n      \t\t\t</div>\r\n      \t\t</nav>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\n\r\nexport default function Home(){\r\n\treturn (\r\n\t\t<>\t\r\n\t\t\t<table className=\"table table-hover\">\r\n  \t\t\t\t<thead>\r\n  \t\t\t\t  <tr>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t    <th scope=\"col\">\r\n  \t\t\t\t    \t<div className=\"card border-light mb-3\">\r\n  \t\t\t\t\t\t\t<div className=\"card-body\"><div className=\"page-header\"><h1>Indice de Estructura de Datos</h1></div></div>\r\n  \t\t\t\t\t\t\t<div className=\"card-body\">\r\n  \t\t\t\t\t\t\t  <ul>\r\n        \t  \t\t\t\t\t<li><h4>Estuctura Lineales</h4></li>\r\n        \t  \t\t\t\t\t<ul>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listasimplementeenlazada\"><h5>Lista simplemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listadoblementeenlazada\"><h5>Lista doblemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listacircularsimplementeenlazada\"><h5>Lista circular simplemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Listacirculardoblementeenlazada\"><h5>Lista circular doblemente enlazada</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Pila\"><h5>Pila</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Cola\"><h5>Cola</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Colaprioridad\"><h5>Cola de prioridad</h5></a></li>  \r\n        \t  \t\t\t\t\t</ul>\r\n        \t  \t\t\t\t\t<li><h4>Ordenamientos</h4></li>\r\n        \t  \t\t\t\t\t<ul>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Burbuja\"><h5>Burbuja</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Seleccion\"><h5>Selección</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Insercion\"><h5>Inserción</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./Rapido\"><h5>Rápido</h5></a></li>  \r\n        \t  \t\t\t\t\t</ul>\r\n        \t  \t\t\t\t\t<li><h4>Estructuras Árboreas</h4></li>\r\n        \t  \t\t\t\t\t<ul>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolBinario\"><h5>Árbol binario de búsqueda</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./AVL\"><h5>AVL</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolB\"><h5>Árbol B</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolBPlus\"><h5>Árbol B+</h5></a></li>\r\n        \t  \t\t\t\t\t  <li><a href=\"./ArbolMerkle\"><h5>Árbol de Merkle</h5></a></li>  \r\n        \t  \t\t\t\t\t</ul>\r\n        \t\t\t\t\t  </ul>\r\n  \t\t\t\t\t\t\t</div>\r\n        \t\t\t\t</div>\r\n  \t\t\t\t    </th>\r\n  \t\t\t\t    <th scope=\"col\"></th>\r\n  \t\t\t\t    <th scope=\"col\"></th>\r\n  \t\t\t\t    <th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  \t<th scope=\"col\"></th>\r\n  \t\t\t\t  </tr>\r\n  \t\t\t\t</thead>\r\n\t\t\t</table>\r\n\t\t\t\r\n\t\t</>\r\n\t);\r\n}","const Nodo = require('./Nodo.js');\r\n\r\nclass ListaSimple{\r\n\r\n    cabeza = null\r\n\r\n    constructor(){\r\n        this.cabeza = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n\r\n    insertar = (dato) =>{\r\n        let nodo_nuevo = new Nodo(dato);\r\n        if (this.get_vacia() == true){\r\n            this.set_cabeza(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n        }else{\r\n\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n\r\n        }\r\n\r\n    }\r\n    \r\n    insertar_inicio = (dato) =>{\r\n        let nodo_nuevo = new Nodo(dato)\r\n\r\n        nodo_nuevo.set_siguiente(this.get_cabeza())\r\n        this.set_cabeza(nodo_nuevo)\r\n    }\r\n\r\n    insertar_ultimo = (dato) =>{\r\n        let nodo_nuevo = new Nodo(dato)\r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        this.set_ultimo(nodo_nuevo)\r\n\r\n    }\r\n\r\n    eliminar = (dato) =>{\r\n\r\n        if (this.get_vacia() == false){\r\n            \r\n            let nodo_actual = this.get_cabeza().get_siguiente();\r\n            let anterior = this.get_cabeza();\r\n            if (this.get_cabeza().get_dato() == dato){\r\n                this.set_cabeza(this.get_cabeza().get_siguiente());\r\n                return console.log(\"Delete!\");\r\n            }else{\r\n                do {\r\n                    if (nodo_actual.get_dato() == dato){\r\n                        if (nodo_actual.get_dato() == this.get_ultimo().get_dato()){\r\n                            anterior.set_siguiente(null);\r\n                            this.set_ultimo(anterior);\r\n                            return console.log(\"Delete!\");\r\n                        }else {\r\n                            anterior.set_siguiente(nodo_actual.get_siguiente());\r\n                            return console.log(\"Delete!\");\r\n                        }\r\n                    }\r\n                    nodo_actual = nodo_actual.get_siguiente();\r\n                    anterior = anterior.get_siguiente();\r\n\r\n                } while (nodo_actual != null);\r\n            }\r\n\r\n        }else{ return console.log(\"Empty!\"); }\r\n\r\n        return console.log(\"Data not found!\");\r\n    }\r\n\r\n    update = (dato, cambio) =>{\r\n        let nodo_actual = this.get_cabeza();\r\n\r\n        if (this.get_vacia() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) =>{\r\n        let nodo_actual = this.get_cabeza()\r\n        \r\n        if (this.get_vacia() == false){\r\n            let i = 0;\r\n            do{\r\n\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato()+\"-> Posicion\"+i);\r\n                    return i;\r\n                }\r\n                i ++;\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n\r\n            }while(nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n    mostrar = () => {\r\n        let nodo_actual = this.get_cabeza();\r\n        if (this.get_vacia() == false){\r\n\r\n            do {\r\n                console.log(nodo_actual.get_dato());\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n            } while (nodo_actual != null);\r\n        }\r\n    }\r\n    \r\n    get_vacia = () => {\r\n        if (this.get_cabeza() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }  \r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_cabeza();\r\n        var dot = [];\r\n        if (this.get_vacia() == false){\r\n            let i = 0\r\n            do {\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_cabeza();\r\n        var dot = [];\r\n        if (this.get_vacia() == false){\r\n            let i = 0;\r\n            do {\r\n                if (nodo_actual.get_siguiente() != null){\r\n\r\n                    let nodoUno = parseInt(i)\r\n                    let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                    if (i==0){\r\n                        dot.push({from:0, to:1, arrows: \"to\"});\r\n                    }\r\n                    if ( nodoUno!= false && nodoDos != false){\r\n                        dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                    }\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            } while (nodo_actual != null);\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n    generateJSON = () => {\r\n\r\n        var dic = {};\r\n\r\n        dic.categoria = \"Estructura Lineal\"\r\n        dic.nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n        var dot = []\r\n        if (this.get_vacia() == false){\r\n            let nodo_actual = this.get_cabeza();\r\n            do{\r\n                if(typeof(parseInt(nodo_actual.get_dato())) == \"number\"  && 0 <= parseInt(nodo_actual.get_dato())){\r\n                    \r\n                    dot.push(parseInt(nodo_actual.get_dato()))\r\n                     \r\n                }else if (typeof(nodo_actual.get_dato()) == \"string\" ){\r\n\r\n                    dot.push(nodo_actual.get_dato().toString())\r\n\r\n                } \r\n\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n            }while(nodo_actual != null);\r\n        }\r\n        dic.valores = dot;\r\n        console.log(dic)\r\n        var dictstring = JSON.stringify(dic);\r\n        console.log(dictstring)\r\n        var fs = require('fs')\r\n        fs.writeFile(\"thing.json\", dictstring, function(err, result) {\r\n            if(err) console.log('error', err);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    get_cabeza = () =>{ return this.cabeza; }\r\n    set_cabeza = (cabeza) =>{ this.cabeza = cabeza; }\r\n    get_ultimo = () => { return this.ultimo; }\r\n    set_ultimo = (ultimo) => { this.ultimo = ultimo; }\r\n}\r\n\r\nexport default ListaSimple;\r\n//module.exports = ListaSimple;\r\n\r\n","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ListaSimple from './Modelo/Lineales/ListaSimple/ListaSimple'; // Importar la Estructura Lista Simple.\r\nvar listaSimple = new ListaSimple(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(listaSimple.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listaSimple.setEdgesDataSet());\t// Se Crean los apuntadores.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass ListaSE extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\tlistaSimple.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlistaSimple.eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlistaSimple.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddTop = () => {\r\n\t\tlistaSimple.insertar_inicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddLower = () => {\r\n\t\tlistaSimple.insertar_ultimo(this.state.text);\r\n\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet dato = listaSimple.search(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n\t\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tconsole.log(dato)\r\n\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistaSimple.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listaSimple.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaSimple.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleSaveFile = () => {\r\n\r\n\t\tlistaSimple.generateJSON(listaSimple)\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" onClick={() => this.handleSaveFile()}>Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default ListaSE;","const Nodo = require('./Nodo.js')\r\nclass ListaDoble{\r\n\r\n    constructor(){\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n    }\r\n\r\n    insertar = (dato) => {\r\n\r\n        let nodo_nuevo = new Nodo(dato);\r\n\r\n        if (this.vacia() == true){\r\n            this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n        }else{\r\n\r\n            this.get_ultimo().set_siguiente(nodo_nuevo)\r\n            nodo_nuevo.set_anterior(this.get_ultimo())\r\n            this.set_ultimo(nodo_nuevo)\r\n\r\n        }\r\n    }\r\n\r\n    insertar_inicio = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n\r\n        nodo_nuevo.set_siguiente(this.get_primero())\r\n        this.get_primero().set_anterior(nodo_nuevo)\r\n        this.set_primero(nodo_nuevo)\r\n    }\r\n\r\n    insertar_ultimo = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n        \r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        nodo_nuevo.set_anterior(this.get_ultimo())\r\n        this.set_ultimo(nodo_nuevo)\r\n\r\n    }\r\n\r\n    eliminar = (dato) => {\r\n\r\n        if (this.vacia() == false){\r\n            \r\n\r\n            if (this.get_primero().get_dato() == dato){ //Condicion cuando hay 2 nodos -> eliminando al primero\r\n\r\n                if (this.get_primero().get_siguiente() != null){\r\n\r\n                    let temp = this.get_primero().get_siguiente()\r\n                    this.get_primero().get_siguiente().set_anterior(null)\r\n                    this.get_primero().set_siguiente(null)\r\n                    this.set_primero(temp);\r\n\r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                }\r\n\r\n            }else if (this.get_ultimo().get_dato() == dato){  //Condicion cuando hay 2 nodos -> eliminando al ultimo\r\n\r\n                if (this.get_ultimo().get_anterior() != null){\r\n\r\n                    let temp = this.get_ultimo().get_anterior()\r\n                    this.get_ultimo().get_anterior().set_siguiente(null)\r\n                    this.get_ultimo().set_anterior(null)\r\n                    this.set_ultimo(temp);\r\n\r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    \r\n                    return console.log(\"Delete!\");\r\n                }\r\n\r\n\r\n            }else{ //Condicion cuando hay mas de 3 nodos -> eliminando al de en medio\r\n                let nodo_actual = this.get_primero().get_siguiente();\r\n                let anterior = this.get_primero();\r\n                do {\r\n\r\n                    if (nodo_actual.get_dato() == dato){\r\n                        \r\n                        let siguiente = nodo_actual.get_siguiente()\r\n\r\n                        nodo_actual.set_siguiente(null)\r\n                        nodo_actual.set_anterior(null)\r\n                        anterior.set_siguiente(siguiente)\r\n                        siguiente.set_anterior(anterior)\r\n\r\n                        return console.log(\"Delete!\");\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.get_siguiente();\r\n                    anterior = anterior.get_siguiente();\r\n\r\n                } while (nodo_actual != null);\r\n            }\r\n\r\n        }else{ return console.log(\"Empty!\"); }\r\n\r\n        return console.log(\"Data not found!\");\r\n    }\r\n\r\n    update = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n\r\n        if (this.vacia() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) => {\r\n        let nodo_actual = this.get_primero()\r\n        let i = 0;\r\n        if (this.vacia() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    return i;\r\n                }\r\n                i ++;\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n            }while(nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    print = () => {\r\n        console.log(\"-> ->\")\r\n        let nodo_actual = this.get_primero();\r\n        if (this.vacia() == false){\r\n            do{\r\n                console.log(nodo_actual.get_dato())\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n\r\n            console.log(\"<- <-\")\r\n            nodo_actual = this.get_ultimo();\r\n            do{\r\n                console.log(nodo_actual.get_dato())\r\n                nodo_actual = nodo_actual.get_anterior()\r\n            }while(nodo_actual != null);\r\n        }else{\r\n            console.log(\"Empty!\"); \r\n            \r\n        }\r\n    }\r\n\r\n    vacia = () => {\r\n        if (this.get_primero() == null){ \r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0\r\n            do {\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            do {\r\n                if (nodo_actual.get_siguiente() != null){\r\n\r\n                    let nodoUno = parseInt(i)\r\n                    let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                    if (i==0){\r\n                        dot.push({from:0, to:1, arrows: \"to\"});\r\n                        dot.push({from:1, to:0, arrows: \"to\"});\r\n                    }\r\n                    if ( nodoUno!= false && nodoDos != false){\r\n                        dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                        dot.push({from:parseInt(nodoDos), to:parseInt(nodoUno), arrows: \"to\"});\r\n                    }\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n\r\n    get_primero = () => { return this.primero; }\r\n    set_primero = (primero) =>{ this.primero = primero; }\r\n    get_ultimo = () => { return this.ultimo; }\r\n    set_ultimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n\r\n\r\n}\r\n\r\nexport default ListaDoble;\r\n//module.exports = ListaDoble;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ListaDoble from './Modelo/Lineales/ListaDoble/ListaDoble'; // Importar la Estructura Lista Simple.\r\nvar listaDoble = new ListaDoble(); // Instancia de la ListaSimple.\r\n\r\nvar getNodes = new DataSet(listaDoble.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listaDoble.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t  springLength: 200,\r\n\t\t},\r\n\t},\r\n    nodes:{\r\n        borderWidth: 20,\r\n        color: {\r\n            background: '#00FE92',\r\n            border:  '#37F300',\r\n            highlight: {\r\n                border: '#2B7CE9',\r\n                background: '#0008FE'\r\n            }\r\n        }\r\n    }\r\n}\r\nclass ListaDE extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\tlistaDoble.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlistaDoble.eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlistaDoble.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddTop = () => {\r\n\t\tlistaDoble.insertar_inicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddLower = () => {\r\n\t\tlistaDoble.insertar_ultimo(this.state.text);\r\n\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet dato = listaDoble.search(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n            getNodes = new DataSet(listaDoble.setNodesDataSet());\r\n            getEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistaDoble.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listaDoble.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaDoble.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleSearch()}>Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar Dato Al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-5\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar Dato al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()} >Generar Datos del JSON</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar Datos</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default ListaDE; ","const Nodo = require('./Nodo.js')\r\nclass ListaCircular{\r\n\r\n    constructor(){\r\n        this.primero = null;\r\n        this.ultimo = null;\r\n        this.size = 0;\r\n    }\r\n\r\n\r\n    insertar = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato);\r\n        if (this.vacia() == true){\r\n            this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            nodo_nuevo.set_siguiente(this.get_primero());\r\n            this.set_ultimo(nodo_nuevo);\r\n\r\n        }\r\n        this.size ++;\r\n\r\n    }\r\n\r\n    insertar_inicio = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n\r\n        nodo_nuevo.set_siguiente(this.get_primero())\r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        this.set_primero(nodo_nuevo)\r\n        this.size ++;\r\n    }\r\n\r\n    insertar_ultimo = (dato) => {\r\n        let nodo_nuevo = new Nodo(dato)\r\n        \r\n        this.get_ultimo().set_siguiente(nodo_nuevo)\r\n        nodo_nuevo.set_siguiente(this.get_primero())\r\n        this.set_ultimo(nodo_nuevo)\r\n        this.size++;\r\n    }\r\n\r\n\r\n    eliminar = (dato) => {\r\n        if(this.vacia() == false){\r\n\r\n             if (this.get_primero().get_dato() == dato){ //Condicion cuando hay 2 nodos -> eliminando al primero\r\n\r\n                if (this.get_primero().get_siguiente() != null){\r\n\r\n                    let temp = this.get_primero().get_siguiente()\r\n                    this.get_primero().set_siguiente(null)\r\n                    this.get_ultimo().set_siguiente(temp)\r\n                    this.set_primero(temp)\r\n                    this.size --;\r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero.set_siguiente(null)\r\n                    this.set_ultimo.set_siguiente(null)\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    this.size --;\r\n                    return console.log(\"Delete!\");\r\n                }\r\n\r\n            }else if (this.get_ultimo().get_dato() == dato){  //Condicion cuando hay 2 nodos -> eliminando al ultimo\r\n\r\n                if (this.get_primero().get_siguiente()!= null){\r\n                    let nodo_actual = this.get_primero().get_siguiente()\r\n                    let anterior = this.get_primero()\r\n\r\n                    let i = 0\r\n\r\n                    while (i < this.size){\r\n                        if(nodo_actual.get_dato()==dato){\r\n                            if ((i+1) == this.size){\r\n\r\n                                let temp = this.get_ultimo().get_siguiente()\r\n                                this.get_ultimo().set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }else{\r\n\r\n                                let temp = nodo_actual.get_siguiente()\r\n                                nodo_actual.set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }\r\n\r\n                        }\r\n                        nodo_actual = nodo_actual.get_siguiente()\r\n                        anterior = anterior.get_siguiente()\r\n\r\n                        i ++;\r\n                    }\r\n\r\n                    \r\n                    \r\n                    return console.log(\"Delete!\");\r\n                }else{\r\n                    this.set_primero.set_siguiente(null)\r\n                    this.set_ultimo.set_siguiente(null)\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    this.size --;\r\n                    return console.log(\"Delete!\");\r\n                }\r\n\r\n\r\n            }else{ //Condicion cuando hay mas de 3 nodos -> eliminando al de en medio\r\n                if (this.get_primero().get_siguiente()!= null){\r\n                    let nodo_actual = this.get_primero().get_siguiente()\r\n                    let anterior = this.get_primero()\r\n\r\n                    let i = 0\r\n\r\n                    while (i < this.size){\r\n                        if(nodo_actual.get_dato()==dato){\r\n                            if ((i+1) == this.size){\r\n\r\n                                let temp = this.get_ultimo().get_siguiente()\r\n                                this.get_ultimo().set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }else{\r\n\r\n                                let temp = nodo_actual.get_siguiente()\r\n                                nodo_actual.set_siguiente(null)\r\n                                anterior.set_siguiente(temp)\r\n                                this.set_ultimo(anterior)\r\n                                this.size --;\r\n                                return console.log(\"Delete!\");\r\n\r\n                            }\r\n\r\n                        }\r\n                        nodo_actual = nodo_actual.get_siguiente()\r\n                        anterior = anterior.get_siguiente()\r\n\r\n                        i ++;\r\n                    }\r\n\r\n                    \r\n                    return console.log(\"Delete!\");\r\n                }\r\n            }\r\n\r\n        }else{ return console.log(\"Empty!\"); }\r\n\r\n        return console.log(\"Data not found!\");\r\n\r\n\r\n    }\r\n\r\n    \r\n    update = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n\r\n        if (this.vacia() == false){\r\n\r\n            let i = 0;\r\n            while(i<this.size){\r\n                \r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n                i++;\r\n            }\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) => {\r\n        let nodo_actual = this.get_primero()\r\n\r\n        if (this.vacia() == false){\r\n\r\n            let i = 0;\r\n            while(i<this.size){\r\n                \r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    return i\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            }\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n    print = () => {\r\n        \r\n        var i = 0;\r\n        let nodo_actual = this.get_primero();\r\n        while(i<this.size){\r\n            console.log(nodo_actual.get_dato());\r\n            nodo_actual = nodo_actual.get_siguiente();\r\n            i++;\r\n        }\r\n\r\n        console.log(\"Salio del While\");\r\n        console.log(nodo_actual.get_dato());\r\n        console.log(\"Este es el Primero ->\"+this.get_primero().get_dato())\r\n        console.log(nodo_actual.get_siguiente().get_dato());\r\n        console.log(\"ultimo\");\r\n        console.log(this.get_ultimo().get_dato());\r\n        console.log(this.get_ultimo().get_siguiente().get_dato());\r\n    }\r\n\r\n    vacia = () => {\r\n        if (this.get_primero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0\r\n            while(i<this.size){\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } \r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n            \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                if (i==0){\r\n                    dot.push({from:0, to:1, arrows: \"to\"});\r\n                }\r\n                if ( nodoUno!= false && nodoDos != false){\r\n                    dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                }\r\n                if ((i+1)==this.size){\r\n                    dot.push({from:i, to:0, arrows: \"to\"});\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n\r\n    get_primero = () => { return this.primero; }\r\n    set_primero = (primero) =>{ this.primero = primero; }\r\n    \r\n    get_ultimo = () => { return this.ultimo; }\r\n    set_ultimo = (ultimo) => { this.ultimo = ultimo; }\r\n\r\n}\r\n\r\nexport default ListaCircular;\r\n//module.exports = ListaCircular;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ListaCircular from './Modelo/Lineales/ListaCircular/ListaCircular'; // Importar la Estructura Lista Simple.\r\nvar listaCircular = new ListaCircular(); // Instancia de la ListaSimple.\r\n\r\nvar getNodes = new DataSet(listaCircular.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listaCircular.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t  springLength: 200,\r\n\t\t},\r\n\t},\r\n    nodes:{\r\n        borderWidth: 20,\r\n        color: {\r\n            background: '#FFFFFF',\r\n            border:  '#1EFFB1',\r\n            highlight: {\r\n                border: '#EEFF1E',\r\n                background: '#FFFFFF'\r\n            }\r\n        }\r\n    }\r\n}\r\nclass ListaCSE extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t}\r\n\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\thandleAdd = () => {\r\n\t\tlistaCircular.insertar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tlistaCircular.eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tlistaCircular.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddTop = () => {\r\n\t\tlistaCircular.insertar_inicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleAddLower = () => {\r\n\t\tlistaCircular.insertar_ultimo(this.state.text);\r\n\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tvar dato = listaCircular.search(this.state.text);\r\n\t\t\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n            getNodes = new DataSet(listaCircular.setNodesDataSet());\r\n            getEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistaCircular.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listaCircular.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(listaCircular.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! \")\r\n\t\t}\r\n\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleSearch()}>Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar Dato Al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-5\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar Dato Al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Generar Datos del JSON</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar Datos</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\r\n\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default ListaCSE;","const Nodo = require('./Nodo.js');\r\n\r\nclass ListaCircularDE{\r\n\tprimero=null;\r\n\tultimo=null;\r\n\r\n\tconstructor(){\r\n\t\tthis.primero = null;\r\n        this.ultimo = null;\r\n        this.size = 0;\r\n\t}\r\n\r\n    set_primero=(primero)=>{this.primero=primero;}\r\n    get_primero=()=>{ return this.primero;}\r\n    set_ultimo=(ultimo)=>{this.ultimo=ultimo;}\r\n    get_ultimo=()=>{ return this.ultimo;}\r\n    vacia = () => {\r\n        if (this.get_primero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\tAgregar = (valor) =>{\r\n\t\tlet nodo_nuevo = new Nodo(valor);\r\n        if (this.vacia() == true){\r\n\t\t    this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            nodo_nuevo.set_anterior(this.get_ultimo());\r\n            nodo_nuevo.set_siguiente(this.get_primero());\r\n            this.set_ultimo(nodo_nuevo);\r\n        }\r\n        this.size ++;\r\n\t}\r\n\tAgregarFinal = (valor) => {\r\n\t\tlet nodo_nuevo = new Nodo(valor);\r\n        if (this.vacia() == true){\r\n\t\t    this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n            this.get_ultimo().set_siguiente(nodo_nuevo);\r\n            nodo_nuevo.set_anterior(this.get_ultimo());\r\n            nodo_nuevo.set_siguiente(this.get_primero());\r\n            this.set_ultimo(nodo_nuevo);\r\n        }\r\n        this.size ++;\r\n\t}\r\n\tAgregarInicio = (valor) => {\r\n\t\tlet nodo_nuevo = new Nodo(valor);\r\n        if (this.vacia() == true){\r\n\t\t    this.set_primero(nodo_nuevo);\r\n            this.set_ultimo(nodo_nuevo);\r\n            this.get_primero().set_siguiente(this.get_ultimo());\r\n            this.get_ultimo().set_siguiente(this.get_primero());\r\n        }else{\r\n        \tnodo_nuevo.set_siguiente(this.get_primero());\r\n        \tnodo_nuevo.set_anterior(this.get_ultimo());\r\n        \tthis.get_ultimo().set_siguiente(nodo_nuevo)\r\n        \tthis.get_primero().set_anterior(nodo_nuevo)\r\n        \tthis.set_primero(nodo_nuevo)\r\n        }\r\n        this.size ++;\r\n\t}\r\n\tEliminar = (dato) =>{\r\n\t\tif (this.vacia() == false){\r\n            if (this.get_primero().get_dato() == dato){ //Eliminando al primero\r\n                if (this.get_primero().get_siguiente() != this.get_primero()){                   \r\n                    let aux = this.get_primero().get_siguiente()\r\n                    this.get_primero().get_siguiente().set_anterior(this.get_ultimo())\r\n                    this.get_ultimo().set_siguiente(aux)\r\n                    this.get_primero().set_siguiente(null)\r\n                    this.get_primero().set_anterior(null)\r\n                    this.set_primero(aux)\r\n                    this.size --;\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    this.size --;\r\n                }\r\n\r\n            }else if (this.get_ultimo().get_dato() == dato){  //Eliminando al ultimo\r\n\r\n                if (this.get_ultimo().get_anterior() != this.get_ultimo()){\r\n\r\n                    let aux = this.get_ultimo().get_anterior()\r\n                    this.get_ultimo().get_anterior().set_siguiente(this.get_primero())\r\n                    this.get_primero().set_anterior(aux)\r\n                    this.get_ultimo().set_anterior(null)\r\n                    this.get_ultimo().set_siguiente(null)\r\n                    this.set_ultimo(aux);\r\n                    this.size --;\r\n                }else{\r\n                    this.set_primero(null)\r\n                    this.set_ultimo(null)\r\n                    \r\n                    this.size --;\r\n                }\r\n\r\n\r\n            }else{ //Eliminando En Medio\r\n                let nodo_actual = this.get_primero().get_siguiente();\r\n                let anterior = this.get_primero();\r\n                do {\r\n\r\n                    if (nodo_actual.get_dato() == dato){\r\n                        \r\n                        let siguiente = nodo_actual.get_siguiente()\r\n\r\n                        nodo_actual.set_siguiente(null)\r\n                        nodo_actual.set_anterior(null)\r\n                        anterior.set_siguiente(siguiente)\r\n                        siguiente.set_anterior(anterior)\r\n                        this.size --;\r\n                     \r\n                    }\r\n                    nodo_actual = nodo_actual.get_siguiente();\r\n                    anterior = anterior.get_siguiente();\r\n\r\n                } while (nodo_actual != null);\r\n            }\r\n\r\n        }\r\n\t}\r\n    Imprimir=()=>{\r\n        var i = 0;\r\n        let nodo_actual = this.get_primero();\r\n        while(i<this.size){\r\n            console.log(nodo_actual.get_dato());\r\n            nodo_actual = nodo_actual.get_siguiente();\r\n            i++;\r\n        }\r\n    }\r\n    Actualizar = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n    Buscar=(dato)=>{\r\n        let nodo_actual = this.get_primero()\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    console.log(i);\r\n                    return i\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            }\r\n        }else{ \r\n            return -1;\r\n        }\r\n        return -1;\r\n    }\r\n    GenerarNodosDOT = () => {\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.vacia() == false){\r\n            let i = 0\r\n            while(i<this.size){\r\n                if(i==0){\r\n                    let etiqueta=nodo_actual.get_dato()+\"\\n Inicio\"\r\n                    dot.push({id:i, label: etiqueta});\r\n                }else if(i+1==this.size){\r\n                    let etiqueta=nodo_actual.get_dato()+\"\\n Final\"\r\n                    dot.push({id:i, label: etiqueta});\r\n                }else{\r\n                    dot.push({id:i, label: nodo_actual.get_dato()});  \r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } \r\n        }\r\n        return dot;\r\n    } \r\n    GenerarEdgesDOT = () => {\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        let idinicio=this.size+1;\r\n        let idfinal=this.size+2;\r\n        if (this.vacia() == false){\r\n            let i = 0;\r\n            while(i<this.size){\r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                if (i==0){\r\n                    dot.push({from:0, to:1, arrows: \"to\"});\r\n                    dot.push({from:1, to:0, arrows: \"to\"});\r\n                }\r\n                if ( nodoUno!= false && nodoDos != false){\r\n                    dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                    dot.push({from:parseInt(nodoDos), to:parseInt(nodoUno), arrows: \"to\"});\r\n                }\r\n                if ((i+1)==this.size){\r\n                    dot.push({from:i, to:0, arrows: \"to\"});\r\n                    dot.push({from:0, to:i, arrows: \"to\"});\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            }\r\n        }\r\n        return dot;\r\n    }\r\n}\r\n\r\nexport default ListaCircularDE;\r\n//module.exports = ListaCircularDE;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport ListaCircularDE from './Modelo/Lineales/ListaCircularDoble/ListaCDE'; // Importar la Estructura Lista Circular Doble.\r\nvar listacde = new ListaCircularDE(); // Instancia de la ListaCDE.\r\nvar getNodes = new DataSet(listacde.GenerarNodosDOT());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(listacde.GenerarEdgesDOT());\t// Se Crean las flechas.\r\nvar filePath;\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#00F3B8',\r\n            border:  '#00F3B8',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#00F3B8'\r\n            }\r\n        }\r\n    }\r\n  };\r\nclass ListaCDE extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttext:'',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t}\r\n\t\tthis.network={};\r\n\t\tthis.appRef=createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n    this.network = new Network(this.appRef.current, data, options);\r\n  \t}\r\n  \thandleInputChange(e) {\r\n    \tconst {value, name} = e.target;\r\n    \tconsole.log(value, name);\r\n    \tthis.setState({\r\n    \t  [name]: value\r\n    \t});\r\n    }\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n    handleAdd = () => {\r\n    \tlistacde.Agregar(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.GenerarNodosDOT());\r\n\t\tgetEdges = new DataSet(listacde.GenerarEdgesDOT());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleDelete = () => {\r\n\t\tlistacde.Eliminar(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.GenerarNodosDOT());\r\n\t\tgetEdges = new DataSet(listacde.GenerarEdgesDOT());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleAddTop = () => {\r\n\t\tlistacde.AgregarInicio(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.GenerarNodosDOT());\r\n\t\tgetEdges = new DataSet(listacde.GenerarEdgesDOT());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleAddLower = () => {\r\n\t\tlistacde.AgregarFinal(this.state.text);\r\n\t\tgetNodes = new DataSet(listacde.GenerarNodosDOT());\r\n\t\tgetEdges = new DataSet(listacde.GenerarEdgesDOT());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleSearch = () => {\r\n\t\tlet dato = listacde.Buscar(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tgetNodes = new DataSet(listacde.GenerarNodosDOT());\r\n\t\t\tgetEdges = new DataSet(listacde.GenerarEdgesDOT());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleUpdate = () => {\r\n\t\tlistacde.Actualizar(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(listacde.GenerarNodosDOT());\r\n\t\tgetEdges = new DataSet(listacde.GenerarEdgesDOT());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tlet nombre = \"Lista Simplemente/doblemente/circular simplemente/circular doblemente Enlazada\"\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == nombre){\r\n\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tlistacde.Agregar(dataJson.valores[i])\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(listacde.GenerarNodosDOT());\r\n\t\t\tgetEdges = new DataSet(listacde.GenerarEdgesDOT());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!!\")\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n\r\n    render() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Ingresar Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Dato a Actualizar\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar Dato</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddTop()}>Agregar al Inicio</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAddLower()}>Agregar al Final</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleSearch()}>Buscar Dato</button>\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n\r\n  export default ListaCDE;","const Nodo = require('./Nodo.js')\r\nclass Stack{\r\n\r\n    constructor(){\r\n        this.primero = null\r\n    }\r\n\r\n    push = (dato) =>{ //Agrega un valor al final de la lista.\r\n        let  nodo_nuevo = new Nodo(dato)\r\n        if (this.empty() == false){\r\n            nodo_nuevo.set_siguiente(this.get_primero())\r\n            this.set_primero(nodo_nuevo)\r\n        }else{\r\n            this.set_primero(nodo_nuevo)\r\n        }   \r\n\r\n    }\r\n\r\n    pop = () => { // Saca el primero de la pila.\r\n\r\n        if(this.empty() == false){\r\n\r\n            if (this.get_primero().get_siguiente() != null){\r\n                \r\n                let temp = this.get_primero().get_siguiente()\r\n                this.get_primero().set_siguiente(null)\r\n                this.set_primero(temp)\r\n                \r\n                return console.log(\"Delete!\"); \r\n            }else {\r\n                this.set_primero(null)\r\n            }\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n    \r\n    update = (dato, cambio) => {\r\n        let nodo_actual = this.get_primero();\r\n\r\n        if (this.empty() == false){\r\n\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    nodo_actual.set_dato(cambio);\r\n                    return console.log(\"Data Update!\");\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n        return console.log(\"Data not found!\");\r\n\r\n    }\r\n\r\n    search = (dato) => {\r\n        let nodo_actual = this.get_primero()\r\n\r\n        if (this.empty() == false){\r\n            let i = 0;\r\n            do{\r\n                if (nodo_actual.get_dato() == dato){\r\n                    console.log(\"Data found! \" + nodo_actual.get_dato());\r\n                    return i;\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            }while(nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n        console.log(\"Data not found!\");\r\n        return false;\r\n    }\r\n\r\n\r\n    print = () => {\r\n\r\n        if(this.empty() == false){\r\n            let nodo_actual = this.get_primero()\r\n            do {\r\n                console.log(nodo_actual.get_dato())\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            } while (nodo_actual != null);\r\n\r\n        }else{ \r\n            console.log(\"Empty!\"); \r\n            return false;\r\n    \r\n        }\r\n\r\n    }\r\n\r\n\r\n    empty = () => {\r\n        if (this.get_primero() == null){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    \r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.empty() == false){\r\n            let i = 0\r\n            do {\r\n\t\t\t\tdot.push({id:i, label: nodo_actual.get_dato()});\t\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i++;\r\n            } while (nodo_actual != null);\r\n\r\n        }\r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        let nodo_actual = this.get_primero();\r\n        var dot = [];\r\n        if (this.empty() == false){\r\n            let i = 0;\r\n            do {\r\n                if (nodo_actual.get_siguiente() != null){\r\n\r\n                    let nodoUno = parseInt(i)\r\n                    let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                    if (i==0){\r\n                        dot.push({from:0, to:1, arrows: \"to\"});\r\n                    }\r\n                    if ( nodoUno!= false && nodoDos != false){\r\n                        dot.push({from:parseInt(nodoUno), to:parseInt(nodoDos), arrows: \"to\"});\r\n                    }\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente();\r\n                i ++;\r\n            } while (nodo_actual != null);\r\n        }\r\n\r\n        return dot;\r\n\r\n    }\r\n\r\n\r\n    get_primero = () => { return this.primero; }\r\n    set_primero = (primero) => { this.primero = primero; }\r\n\r\n}\r\n\r\nexport default Stack;\r\n//module.exports = Stack;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport Stack from './Modelo/Lineales/Pila/Stack'; // Importar la Estructura Lista Simple.\r\nvar pila = new Stack(); // Instancia de la ListaSimple.\r\n\r\nvar getNodes = new DataSet(pila.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(pila.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t  springLength: 300,\r\n\t\t},\r\n\t},\r\n    nodes:{\r\n        borderWidth: 20,\r\n        color: {\r\n            background: '#FFFFFF', \r\n            border:  '#D366FF',\r\n            highlight: { // cambia de color al qu selecciona\r\n                border: '#1EFFB1', \r\n                background: '#FFFFFF'\t\r\n            }\r\n        }\r\n    }\r\n}\r\nclass Pila extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t\ttext: '',\r\n\t\t\tdato_actualizado: '',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t}\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleAdd = () => {\r\n\t\tpila.push(this.state.text);\r\n\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleDelete = () => {\r\n\t\tpila.pop();\r\n\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleUpdate = () => {\r\n\t\tpila.update(this.state.text, this.state.dato_actualizado);\r\n\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\thandleSearch = () => {\r\n\t\tlet dato = pila.search(this.state.text);\r\n\t\tif (0 <= parseInt(dato)){\r\n\t\t\tconsole.log(dato+\" ENCONTRADO\")\r\n            getNodes = new DataSet(pila.setNodesDataSet());\r\n            getEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\tgetEdges.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t}\r\n\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Pila\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\tpila.push(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(pila.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(pila.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL - PIla!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\trender() {\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"text\" className=\"form-control\" placeholder=\"Dato\" id=\"InputCola\" value={this.state.text} onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleAdd()}>Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={() => this.handleDelete()} >Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Update\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\" onClick={() => this.handleUpdate()}>Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleSearch()}>Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 0 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer JSON</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default Pila;","const Nodo = require('./Nodo.js');\r\n\r\nclass EstructuraCola{\r\n\tprimero=null;\r\n\r\n\tConstructor(){\r\n\t\tthis.primero= null;\r\n\t\tthis.ultimo=null;\r\n\t}\r\n\tget_primero = () => {return this.primero;}\r\n\tset_primero = (primero) => {this.primero = primero;}\r\n\tget_ultimo = () => {return this.ultimo;}\r\n\tset_ultimo = (ultimo) => {this.ultimo = ultimo;}\r\n\tget_vacia = () => {\r\n\t\tif(this.get_primero()==null){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tEncolar = (valor) => {\r\n\t\tlet nodo = new Nodo(valor);\r\n\t\tif(this.get_vacia()==true){\r\n\t\t\tthis.set_primero(nodo);\r\n\t\t\tthis.set_ultimo(nodo);\r\n\t\t}else{\r\n\t\t\tthis.get_ultimo().set_siguiente(nodo);\r\n\t\t\tthis.set_ultimo(nodo);\r\n\t\t}\r\n\t}\r\n\tDesencolar = () => {\r\n\t\tlet nodo = this.primero;\r\n\t\tlet seguir = true;\r\n\t\tthis.set_primero(this.get_primero().get_siguiente());\r\n\t}\r\n\tBuscar = (dato) =>{\r\n\t\tlet nodo = this.get_primero();\r\n\t\tlet i=0;\r\n\t\tif(this.get_vacia() == false){\r\n\t\t\tdo{\r\n\t\t\t\tif(nodo.get_valor() == dato){\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t}while(nodo != null);\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tActualizar = (dato, cambio) =>{\r\n        let nodo_actual = this.get_primero();\r\n        if (this.get_vacia() == false){\r\n            do{\r\n                if (nodo_actual.get_valor() == dato){\r\n                    nodo_actual.set_valor(cambio);\r\n                }\r\n                nodo_actual = nodo_actual.get_siguiente()\r\n            }while(nodo_actual != null);\r\n        }\r\n\r\n    }\r\n\tImprimir = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tdo{\r\n\t\t\tconsole.log(nodo.get_valor());\r\n\t\t\tnodo=nodo.get_siguiente();\r\n\t\t}while(nodo!=null)\r\n\t}\r\n\tGenerarNodosDOT = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet id = 0;\r\n\t\t\tdo{\r\n\t\t\t\tdot.push({id: id, label: nodo.get_valor()});\r\n\t\t\t\tnodo=nodo.get_siguiente();\r\n\t\t\t\tid++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n\tGenerarEdgesDOT = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet i = 0;\r\n\t\t\tdo{\r\n\t\t\t\tif ( nodo.get_siguiente() != null) {\r\n\t\t\t\t\tlet nodoactual=parseInt(i)\r\n\t\t\t\t\tlet nodosiguiente = parseInt(nodoactual) + parseInt(1)\r\n\t\t\t\t\tif(i==0){\r\n\t\t\t\t\t\tdot.push({from:0, to:1, arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(nodoactual != false && nodosiguiente != false){\r\n\t\t\t\t\t\tdot.push({from:parseInt(nodoactual), to:parseInt(nodosiguiente), arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t\ti++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n}\r\n\r\nexport default EstructuraCola;\r\n//module.exports = EstructuraCola;","import { DataSet, Network } from 'vis';\r\nimport React, { Component, createRef } from \"react\";\r\nimport { render } from 'react-dom';\r\nimport EstructuraCola from './Modelo/Lineales/Cola/EstructuraCola';\r\n\r\n\r\nvar estructuracola = new EstructuraCola();\r\nvar nodos = new DataSet(estructuracola.GenerarNodosDOT());\r\nvar flechas = new DataSet(estructuracola.GenerarEdgesDOT());\r\nvar datos = {nodes:nodos, edges:flechas,};\r\nvar options = {\r\n  physics: {\r\n    stabilization: false,\r\n    barnesHut: {\r\n      springLength: 200,\r\n    },\r\n  },\r\n  nodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FF5733',\r\n            border:  '#FF5733',\r\n            highlight: {\r\n                border: '#9E3D28',\r\n                background: '#9E3D28'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Cola extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      agregar: '',\r\n      dato_actualizado: '',\r\n      valoreliminar:'',\r\n      valorbuscar: '',\r\n      rango: '1',\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n    }\r\n    this.network = {};\r\n    this.appRef = createRef();\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  handleInputChange(e) {\r\n    const {value, name} = e.target;\r\n    console.log(value, name);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    }\r\n  \r\n  handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      this.setState({fileName: file.name, fileContent: reader.result})\r\n    }\r\n  }\r\n\r\n\r\n  AgregarDato = () => { \r\n    estructuracola.Encolar(this.state.agregar);\r\n    nodos = new DataSet(estructuracola.GenerarNodosDOT());\r\n    flechas = new DataSet(estructuracola.GenerarEdgesDOT());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  EliminarDato = () =>{\r\n    estructuracola.Desencolar();\r\n    nodos = new DataSet(estructuracola.GenerarNodosDOT());\r\n    flechas = new DataSet(estructuracola.GenerarEdgesDOT());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  ActualizarDato = () => {\r\n    estructuracola.Actualizar(this.state.agregar, this.state.dato_actualizado);\r\n    nodos = new DataSet(estructuracola.GenerarNodosDOT());\r\n    flechas = new DataSet(estructuracola.GenerarEdgesDOT());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  BuscarDato = () => {\r\n    let dato = estructuracola.Buscar(this.state.agregar);\r\n    if (0 <= dato){\r\n      nodos = new DataSet(estructuracola.GenerarNodosDOT());\r\n      flechas = new DataSet(estructuracola.GenerarEdgesDOT());\r\n      datos = {\r\n        nodes: nodos,\r\n        edges: flechas,\r\n      }\r\n      flechas.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n    }\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n\r\n  handleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Cola\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\tconsole.log(dataJson.valores[i]);\r\n\t\t\t\testructuracola.Encolar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tnodos = new DataSet(estructuracola.GenerarNodosDOT());\r\n      flechas = new DataSet(estructuracola.GenerarEdgesDOT());\r\n      datos = {\r\n        nodes: nodos,\r\n        edges: flechas,\r\n      }\r\n\t\t\t\r\n      this.network = new Network(this.appRef.current, datos, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL - Cola!! \")\r\n\t\t}\r\n\t\r\n\t}\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n          <input type=\"text\" name=\"agregar\" className=\"form-control\" placeholder=\"Dato\" id=\"InputCola\" value={this.state.agregar} onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.AgregarDato()}>Agregar</button>\r\n        </div>\r\n        <div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n          <input type=\"text\" name=\"dato_actualizado\" className=\"form-control\" placeholder=\"Update\" id=\"InputCola\" value={this.state.dato_actualizado} onChange={this.handleInputChange} ></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-warning\" onClick={() => this.ActualizarDato()}>Actualizar Dato</button>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.EliminarDato()}>Eliminar</button>\r\n        </div>\r\n        <div className=\"col-md-1\" style={{marginLeft: 0 + 'em'}}>\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => this.BuscarDato()}>Buscar</button>\r\n        </div>\r\n        <div className=\"col-md-2\" style={{marginLeft: 0 + 'em'}}>\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={this.handleFileChange}></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\"  style={{marginLeft: 3 + 'em'}}>\r\n          <fieldset class=\"form-group\">\r\n            <legend>Repetidos</legend>\r\n            <div class=\"form-check\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"radio\" class=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios1\" value=\"option1\" ></input>\r\n                Si\r\n              </label>\r\n            </div>\r\n            <div class=\"form-check\">\r\n              <label class=\"form-check-label\">\r\n                <input type=\"radio\" class=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios2\" value=\"option2\"></input>\r\n                No\r\n              </label>\r\n            </div>\r\n          </fieldset>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n          <h5>Rango de Animacion</h5>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"rango\" onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n          <h5>Velocidad: x{this.state.rango}</h5>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"row\">\r\n\r\n      </div>\r\n      <div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cola;","const Nodo = require('./Nodo.js');\r\n\r\nclass ColaPrioridad{\r\n\tprimero=null;\r\n\r\n\tConstructor(){\r\n\t\tthis.primero= null;\r\n\t\tthis.ultimo=null;\r\n\t}\r\n\tget_primero = () => {return this.primero;}\r\n\tset_primero = (primero) => {this.primero = primero;}\r\n\tget_ultimo = () => {return this.ultimo;}\r\n\tset_ultimo = (ultimo) => {this.ultimo = ultimo;}\r\n\tget_vacia = () => {\r\n\t\tif(this.get_primero()==null){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tEncolar = (valor, prioridad) => {\r\n\t\tlet nuevonodo = new Nodo(valor);\r\n\t\tif(prioridad!=null && prioridad!=\"\"){\r\n\t\t\tconsole.log(\"Enrtp\");\r\n\t\t\tnuevonodo.set_prioridad(prioridad);\r\n\t\t}\r\n\t\tlet nodo = this.get_primero();\r\n\t\tlet salir= false;\r\n\t\tif(this.get_vacia()==true){\r\n\t\t\tthis.set_primero(nuevonodo);\r\n\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t}else{\r\n\t\t\tconsole.log(nodo.get_prioridad());\r\n\t\t\tconsole.log(prioridad);\r\n\t\t\tif(prioridad!=null && prioridad!=\"\"){\r\n\t\t\t\tdo{\r\n\t\t\t\t\tconsole.log(\"Entro al while\");\r\n\t\t\t\t\tif(nodo.get_siguiente()==null){\r\n\t\t\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tconsole.log(nodo.get_prioridad());\r\n\t\t\t\t\t\tconsole.log(prioridad);\r\n\t\t\t\t\t\tif( prioridad <= nodo.get_prioridad()){\r\n\t\t\t\t\t\t\tconsole.log(\"Entro al if\");\r\n\t\t\t\t\t\t\tnuevonodo.set_siguiente(nodo.get_siguiente());\r\n\t\t\t\t\t\t\tnodo.set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t\t}else if(prioridad>nodo.get_prioridad()){\r\n\t\t\t\t\t\t\tconsole.log(\"Entro al segundo\")\r\n\t\t\t\t\t\t\tif(nodo.get_siguiente().get_prioridad()==0){\r\n\t\t\t\t\t\t\t\tnuevonodo.set_siguiente(nodo.get_siguiente());\r\n\t\t\t\t\t\t\t\tnodo.set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t\t\t}else if(prioridad<=nodo.get_siguiente().get_prioridad()){\r\n\t\t\t\t\t\t\t\tnuevonodo.set_siguiente(nodo.get_siguiente());\r\n\t\t\t\t\t\t\t\tnodo.set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\t\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t\t\t\t\t\tsalir=true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t\t}while(nodo != null || salir==true);\r\n\t\t\t}else{\r\n\t\t\t\tthis.get_ultimo().set_siguiente(nuevonodo);\r\n\t\t\t\tthis.set_ultimo(nuevonodo);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tDesencolar = () => {\r\n\t\tlet nodo = this.primero;\r\n\t\tlet seguir = true;\r\n\t\tthis.set_primero(this.get_primero().get_siguiente());\r\n\t}\r\n\tBuscar = (dato) =>{\r\n\t\tlet nodo = this.get_primero();\r\n\t\tlet i=0;\r\n\t\tif(this.get_vacia() == false){\r\n\t\t\tdo{\r\n\t\t\t\tif(nodo.get_valor() == dato){\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t}while(nodo != null);\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tImprimir = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tdo{\r\n\t\t\tconsole.log(nodo.get_valor());\r\n\t\t\tnodo=nodo.get_siguiente();\r\n\t\t}while(nodo!=null)\r\n\t}\r\n\tGenerarNodosDOT = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet id = 0;\r\n\t\t\tdo{\r\n\t\t\t\tdot.push({id: id, label: nodo.get_valor()});\r\n\t\t\t\tnodo=nodo.get_siguiente();\r\n\t\t\t\tid++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n\tGenerarEdgesDOT = () => {\r\n\t\tlet nodo = this.get_primero();\r\n\t\tvar dot = [];\r\n\t\tif(this.get_vacia()==false){\r\n\t\t\tlet i = 0;\r\n\t\t\tdo{\r\n\t\t\t\tif ( nodo.get_siguiente() != null) {\r\n\t\t\t\t\tlet nodoactual=parseInt(i)\r\n\t\t\t\t\tlet nodosiguiente = parseInt(nodoactual) + parseInt(1)\r\n\t\t\t\t\tif(i==0){\r\n\t\t\t\t\t\tdot.push({from:0, to:1, arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(nodoactual != false && nodosiguiente != false){\r\n\t\t\t\t\t\tdot.push({from:parseInt(nodoactual), to:parseInt(nodosiguiente), arrows: \"to\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnodo = nodo.get_siguiente();\r\n\t\t\t\ti++;\r\n\t\t\t}while(nodo != null);\r\n\t\t}\r\n\t\treturn dot;\r\n\t}\r\n}\r\n\r\nexport default ColaPrioridad;\r\n//module.exports = ColaPrioridad;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\nimport Colaprioridad from './Modelo/Lineales/ColaPrioridad/ColaPrioridad'; // Importar la Estructura Lista Circular Doble.\r\nvar colaprioridad = new Colaprioridad(); // Instancia de la ListaCDE.\r\nvar nodos = new DataSet(colaprioridad.GenerarNodosDOT());  // Se Crean los Nodos.\r\nvar flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\t// Se Crean las flechas.\r\nvar filePath;\r\n\r\nvar datos = {\r\n\tnodes: nodos,\r\n\tedge: flechas,\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#00F3B8',\r\n            border:  '#00F3B8',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#00F3B8'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\nclass ColaPrioridad extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      agregar: '',\r\n      prioridad:'',\r\n      valorbuscar: '',\r\n      rango: '1',\r\n    }\r\n    this.network = {};\r\n    this.appRef = createRef();\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  handleInputChange(e) {\r\n    const {value, name} = e.target;\r\n    console.log(value, name);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    }\r\n  AgregarDato = () => { \r\n    colaprioridad.Encolar(this.state.agregar, this.state.prioridad);\r\n    nodos = new DataSet(colaprioridad.GenerarNodosDOT());\r\n    flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  EliminarDato = () =>{\r\n    colaprioridad.Desencolar();\r\n    nodos = new DataSet(colaprioridad.GenerarNodosDOT());\r\n    flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\r\n    datos = {nodes:nodos, edges:flechas,};\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n  BuscarDato = () => {\r\n    let dato = colaprioridad.Buscar(this.state.agregar);\r\n    if (0 <= dato){\r\n      nodos = new DataSet(colaprioridad.GenerarNodosDOT());\r\n      flechas = new DataSet(colaprioridad.GenerarEdgesDOT());\r\n      datos = {\r\n        nodes: nodos,\r\n        edges: flechas,\r\n      }\r\n      flechas.add({from: parseInt(dato), to: parseInt(dato), value:parseInt(dato),color:{color:'#ff383f'}});\r\n    }\r\n    this.network = new Network(this.appRef.current, datos, options);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n          <input type=\"text\" name=\"agregar\" className=\"form-control\" placeholder=\"Dato\" id=\"InputCola\" value={this.state.agregar} onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n          <input type=\"text\" name=\"prioridad\" className=\"form-control\" placeholder=\"Prioridad\" id=\"InputPrioridad\" value={this.state.prioridad} onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.AgregarDato()}>Agregar</button>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.EliminarDato()}>Eliminar</button>\r\n        </div>\r\n        <div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={() => this.BuscarDato()}>Buscar</button>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <table className=\"table table-hover\"></table>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n          <h5>Rango de Animacion</h5>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"rango\" onChange={this.handleInputChange}></input>\r\n        </div>\r\n        <div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n          <h5>Velocidad: x{this.state.rango}</h5>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"row\">\r\n\r\n      </div>\r\n      <div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColaPrioridad;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport ordenamientoBurbuja from './Modelo/Ordenamientos/OrBurbuja'; // Importar la Estructura Lista Simple.\r\nvar burbuja = new ordenamientoBurbuja(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(burbuja.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(burbuja.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Burbuja extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Ordenamiento\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\t// console.log(dataJson.valores[i]);\r\n\t\t\t\tburbuja.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(burbuja.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(burbuja.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! -> Ordenamiento \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleOrdenamiento = () => {\r\n\r\n\t\tburbuja.ordenamiento_burbuja()\r\n\t\tgetNodes = new DataSet(burbuja.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(burbuja.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleOrdenamiento()}>Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default Burbuja;","class OrBurbuja{\r\n\r\n    constructor(){\r\n        this.array = [];\r\n    }\r\n\r\n    insertar = (dato) =>{\r\n        this.array.push(dato)\r\n        // console.log(this.array)\r\n    }\r\n    ordenamiento_burbuja = () => {\r\n\r\n        for (var i = (this.array.length - 1); i >= 0; i--) {\r\n            for (var j = 0; j < i; j++) {\r\n                if(this.array[j]> this.array[j+1]){\r\n                    var temp = this.array[j];\r\n                    this.array[j] = this.array[j+1]\r\n                    this.array[j+1] = temp;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n            console.log(this.array[i])\r\n            dot.push({id:i, label: this.array[i]});\r\n        }\r\n       \r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n\r\n            if (this.array[i+1] != null){\r\n                \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                dot.push({from:nodoUno, to:nodoDos, arrows: \"to\"});\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n\r\n}   \r\n\r\nexport default OrBurbuja;\r\n//module.exports = OrBurbuja;","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport OrdenamientoSeleccion from './Modelo/Ordenamientos/OrSeleccion'; // Importar la Estructura Lista Simple.\r\nvar seleccion = new OrdenamientoSeleccion(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(seleccion.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(seleccion.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Seleccion extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Ordenamiento\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\t// console.log(dataJson.valores[i]);\r\n\t\t\t\tseleccion.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(seleccion.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(seleccion.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! -> Ordenamiento \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleOrdenamiento = () => {\r\n\r\n\t\tseleccion.ordenamiento_seleccion()\r\n\t\tgetNodes = new DataSet(seleccion.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(seleccion.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleOrdenamiento()}>Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\nexport default Seleccion;\r\n","class OrSeleccion{\r\n\r\n\tconstructor(){\r\n\t\tthis.array = []\r\n\t}\r\n\r\n\tinsertar = (dato) => {\r\n\t\tthis.array.push(dato)\r\n\t}\r\n\r\n\r\n    ordenamiento_seleccion = () =>{\r\n\r\n\t\tfor(var i = 1; i < this.array.length; i++){\r\n\t\t\tvar aux = this.array[i];\r\n\t\t\tvar temp = i - 1  ;\r\n\t\t\twhile(aux < this.array[temp] && temp >= 1){\r\n\t\t\t\tthis.array[temp+1] = this.array[temp];\r\n\t\t\t\ttemp = temp - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (this.array[temp] <= aux){\r\n\t\t\t\t\tthis.array[temp+1] = aux;\r\n\t\t\t}else{\r\n\t\t\t\tthis.array[temp+1] = this.array[temp]\r\n\t\t\t\tthis.array[temp] = aux\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n            console.log(this.array[i])\r\n            dot.push({id:i, label: this.array[i]});\r\n        }\r\n       \r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n\r\n            if (this.array[i+1] != null){\r\n                \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                dot.push({from:nodoUno, to:nodoDos, arrows: \"to\"});\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default OrSeleccion;\r\n//module.exports = OrSeleccion;\r\n\r\n\r\n\r\n","import React, {Component, createRef} from 'react';\r\nimport { DataSet, Network } from 'vis';\r\n\r\nimport OrdenamientoInsercion from './Modelo/Ordenamientos/OrInsercion'; // Importar la Estructura Lista Simple.\r\nvar insercion = new OrdenamientoInsercion(); // Instancia de la ListaSimple.\r\nvar getNodes = new DataSet(insercion.setNodesDataSet());  // Se Crean los Nodos.\r\nvar getEdges = new DataSet(insercion.setEdgesDataSet());\t// Se Crean los apuntadores.\r\n\r\n\r\nvar data = {\r\n\tnodes: getNodes,\r\n\tedge: getEdges\r\n}\r\n\r\nvar options = {\r\n\tphysics: {\r\n\t\tstabilization: false,\r\n\t\tbarnesHut: {\r\n\t\t\tspringLength: 200,\r\n\t\t},\r\n\t},\r\n\tnodes:{\r\n        borderWidth: 30,\r\n        color: {\r\n            background: '#FEFEFE',\r\n            border:  '#FFF300',\r\n            highlight: {\r\n                border: '#00F3B8',\r\n                background: '#FF1F00'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n\r\nclass Insercion extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfileName: '',\r\n\t\t\tfileContent: '',\r\n\t\t};\r\n\t\tthis.network = {};\r\n\t  \tthis.appRef = createRef();\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\t  }\r\n\r\n\thandleInputChange(e) {\r\n\t\tconst {value, name} = e.target;\r\n\t\tconsole.log(value, name);\r\n\t\tthis.setState({\r\n\t\t  [name]: value\r\n\t\t});\r\n\t  }\r\n\t\r\n\thandleFileChange = (e) => {\r\n\t\tconst file = e.target.files[0];\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsText(file);\r\n\t\treader.onload = () => {\r\n\t\t\tthis.setState({fileName: file.name, fileContent: reader.result})\r\n\t\t}\r\n\t}\r\n\r\n\thandleOpenFile = () => {\r\n\r\n\t\tconst dataJson = JSON.parse(this.state.fileContent);\r\n\t\tif (dataJson.categoria == \"Estructura Lineal\" && dataJson.nombre == \"Ordenamiento\"){\r\n\r\n\t\t\t\r\n\t\t\tfor (var i=0; i < dataJson.valores.length; i++) {\r\n\t\t\t\t// console.log(dataJson.valores[i]);\r\n\t\t\t\tinsercion.insertar(dataJson.valores[i].toString());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tgetNodes = new DataSet(insercion.setNodesDataSet());\r\n\t\t\tgetEdges = new DataSet(insercion.setEdgesDataSet());\r\n\t\t\tdata = {\r\n\t\t\t\tnodes: getNodes,\r\n\t\t\t\tedges: getEdges\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\r\n\t\t}else {\r\n\r\n\t\t\talert(\"No es un Archivo de ESTRUCTURA LINEAL!! -> Ordenamiento \")\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\thandleOrdenamiento = () => {\r\n\r\n\t\tinsercion.ordenamiento_insercion()\r\n\t\tgetNodes = new DataSet(insercion.setNodesDataSet());\r\n\t\tgetEdges = new DataSet(insercion.setEdgesDataSet());\r\n\t\tdata = {\r\n\t\t\tnodes: getNodes,\r\n\t\t\tedges: getEdges\r\n\t\t}\r\n\t\t\r\n\t\tthis.network = new Network(this.appRef.current, data, options);\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t\r\n\t\t\r\n\t  return (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-4\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" onChange={this.handleFileChange} ></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onClick={() => this.handleOpenFile()}>Leer Json</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleOrdenamiento()}>Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 1 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 4 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t\t<div style={{height: 28 + 'em'}} ref={this.appRef} />\r\n\t\t</>\r\n\r\n\t  );\r\n\t}\r\n  }\r\n  \r\nexport default Insercion;\r\n","class OrInsercion{\r\n\r\n\tconstructor(){\r\n\t\tthis.array = []\r\n\t}\r\n\r\n\tinsertar = (dato) => {\r\n\t\tthis.array.push(dato)\r\n\t}\r\n\r\n\r\n\tordenamiento_insercion = () =>{\r\n\r\n\t\tvar size = this.array.length, temp, aux;\r\n   \r\n\t\tfor ( var i = 0; i < this.array.length; i++ ) { // outer loop     \r\n\t\taux = this.array[i];\r\n\t\t\tfor ( temp = i - 1; temp >= 0 && this.array[temp] > aux; temp-- ){ // inner loop\r\n\t\t\t\tthis.array[ temp + 1 ] = this.array[temp];\r\n\t\t\t}\r\n\t\tthis.array[ temp + 1 ] = aux;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t\r\n    setNodesDataSet = () => { // Esto Genera los nodos de Vis.\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n            console.log(this.array[i])\r\n            dot.push({id:i, label: this.array[i]});\r\n        }\r\n       \r\n        return dot;\r\n\r\n    } \r\n\r\n    setEdgesDataSet = () => {\r\n\r\n        var dot = [];\r\n        for (var i = 0; i<this.array.length;i++){\r\n\r\n            if (this.array[i+1] != null){\r\n                \r\n                let nodoUno = parseInt(i)\r\n                let nodoDos = parseInt(nodoUno) + parseInt(1)\r\n                dot.push({from:nodoUno, to:nodoDos, arrows: \"to\"});\r\n            }\r\n        }\r\n\r\n        return dot;\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default OrInsercion;\r\n//module.exports = OrInsercion;","import React, {useState} from 'react';\r\n\r\nexport default function Rapido(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-6\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Ordenar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginRight: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function AVL(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function ArbolB(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function ArbolBPlus(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function ArbolMerkle(){\r\n\tconst [valor,setValor] = useState(\"\");\r\n\tconst [rango,setRango] = useState(\"1\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Ingrese Dato\" id=\"InputCola\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">Agregar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\">Eliminar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning\">Actualizar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-dark\">Buscar</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\">\r\n\t\t\t\t\t<input className=\"form-control\" type=\"file\" id=\"formFile\"></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\">Guardar</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t<table className=\"table table-hover\"></table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2\" style={{marginLeft: 2 + 'em'}}>\r\n\t\t\t\t\t<h5>Rango de Animacion</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<input type=\"range\" className=\"form-range\" min=\"1\" max=\"10\" step=\"1\" defaultValue=\"1\" name=\"RangoCola\" onChange={(e) => setRango(e.target.value)}></input>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3\" style={{marginLeft: 1 + 'em'}}>\r\n\t\t\t\t\t<h5>Velocidad: x{rango}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Navbar from './Componentes/Navbar';\r\nimport Home from './Componentes/Paginas/Home';\r\nimport ListaSE from './Componentes/Paginas/ListaSE';\r\nimport ListaDE from './Componentes/Paginas/ListaDE';\r\nimport ListaCSE from './Componentes/Paginas/ListaCSE';\r\nimport ListaCDE from './Componentes/Paginas/ListaCDE';\r\nimport Pila from './Componentes/Paginas/Pila';\r\nimport Cola from './Componentes/Paginas/Cola';\r\nimport ColaPrioridad from './Componentes/Paginas/ColaPrioridad';\r\nimport Burbuja from './Componentes/Paginas/Burbuja';\r\nimport Seleccion from './Componentes/Paginas/Seleccion';\r\nimport Insercion from './Componentes/Paginas/Insercion';\r\nimport Rapido from './Componentes/Paginas/Rapido';\r\nimport AVL from './Componentes/Paginas/AVL';\r\nimport ArbolB from './Componentes/Paginas/Arbolb';\r\nimport ArbolBPlus from './Componentes/Paginas/Arbolbplus';\r\nimport ArbolMerkle from './Componentes/Paginas/Arbolmerkle';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path='/' exact component={Home} />\r\n        <Route path='/Listasimplementeenlazada' component={ListaSE} />\r\n        <Route path='/Listadoblementeenlazada' component={ListaDE} />\r\n        <Route path='/Listacircularsimplementeenlazada' component={ListaCSE} />\r\n        <Route path='/Listacirculardoblementeenlazada' component={ListaCDE} />\r\n        <Route path='/Pila' component={Pila} />\r\n        <Route path='/Cola' component={Cola} />\r\n        <Route path='/Colaprioridad' component={ColaPrioridad} />\r\n        <Route path='/Burbuja' component={Burbuja} />\r\n        <Route path='/Seleccion' component={Seleccion} />\r\n        <Route path='/Insercion' component={Insercion} />\r\n        <Route path='/Rapido' component={Rapido} />\r\n        <Route path='/AVL' component={AVL} />\r\n        <Route path='/Arbolb' component={ArbolB} />\r\n        <Route path='/Arbolbplus' component={ArbolBPlus} />\r\n        <Route path='/Arbolmerkle' component={ArbolMerkle} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}